# Copyright 2021 4Paradigm
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

db: test_zw
debugs:
cases:
  - id: 0
    desc: string为partition by
    inputs:
      - columns: [ "c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date" ]
        indexs: [ "index1:c1:c7" ]
        rows:
          - [ "aa",20,30,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ "aa",21,31,1.2,2.2,1590738991000,"2020-05-02" ]
          - [ "aa",22,32,1.3,2.3,1590738992000,"2020-05-03" ]
          - [ "aa",23,33,1.4,2.4,1590738993000,"2020-05-04" ]
          - [ "bb",24,34,1.5,2.5,1590738994000,"2020-05-05" ]
    sql: |
      SELECT c1, c3, sum(c4) OVER w1 as w1_c4_sum FROM {0} WINDOW w1 AS (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW);
    expect:
      order: c3
      columns: [ "c1 string","c3 int","w1_c4_sum bigint" ]
      rows:
        - [ "aa",20,30 ]
        - [ "aa",21,61 ]
        - [ "aa",22,93 ]
        - [ "aa",23,96 ]
        - [ "bb",24,34 ]
  - id: 1
    desc: int为partition by
    inputs:
      - columns: [ "id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date" ]
        indexs: [ "index1:c3:c7" ]
        rows:
          - [ 1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 2,"bb",20,31,1.2,2.2,1590738991000,"2020-05-02" ]
          - [ 3,"cc",20,32,1.3,2.3,1590738992000,"2020-05-03" ]
          - [ 4,"dd",20,33,1.4,2.4,1590738993000,"2020-05-04" ]
          - [ 5,"ee",21,34,1.5,2.5,1590738994000,"2020-05-05" ]
    sql: |
      SELECT id, c1, c3, sum(c4) OVER w1 as w1_c4_sum FROM {0} WINDOW w1 AS (PARTITION BY {0}.c3 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: [ "id int","c1 string","c3 int","w1_c4_sum bigint" ]
      rows:
        - [ 1,"aa",20,30 ]
        - [ 2,"bb",20,61 ]
        - [ 3,"cc",20,93 ]
        - [ 4,"dd",20,96 ]
        - [ 5,"ee",21,34 ]
  - id: 2
    desc: float为partition by - 未命中索引
    mode: rtidb-unsupport
    inputs:
      - columns: [ "id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date" ]
        indexs: [ "index1:c1:c7" ]
        rows:
          - [ 1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 2,"bb",20,31,1.1,2.2,1590738991000,"2020-05-02" ]
          - [ 3,"cc",20,32,1.1,2.3,1590738992000,"2020-05-03" ]
          - [ 4,"dd",20,33,1.1,2.4,1590738993000,"2020-05-04" ]
          - [ 5,"ee",21,34,1.2,2.5,1590738994000,"2020-05-05" ]
    sql: |
      SELECT id, c1, c5, sum(c4) OVER w1 as w1_c4_sum FROM {0} WINDOW w1 AS (PARTITION BY {0}.c5 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: [ "id int","c1 string","c5 float","w1_c4_sum bigint" ]
      rows:
        - [ 1,"aa",1.1,30 ]
        - [ 2,"bb",1.1,61 ]
        - [ 3,"cc",1.1,93 ]
        - [ 4,"dd",1.1,96 ]
        - [ 5,"ee",1.2,34 ]
  - id: 3
    desc: double为partition by - 未命中索引
    mode: rtidb-unsupport
    inputs:
      - columns: [ "id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date" ]
        indexs: [ "index1:c1:c7" ]
        rows:
          - [ 1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 2,"bb",20,31,1.1,2.1,1590738991000,"2020-05-02" ]
          - [ 3,"cc",20,32,1.1,2.1,1590738992000,"2020-05-03" ]
          - [ 4,"dd",20,33,1.1,2.1,1590738993000,"2020-05-04" ]
          - [ 5,"ee",21,34,1.2,2.2,1590738994000,"2020-05-05" ]
    sql: |
      SELECT id, c1, c6, sum(c4) OVER w1 as w1_c4_sum FROM {0} WINDOW w1 AS (PARTITION BY {0}.c6 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: [ "id int","c1 string","c6 double","w1_c4_sum bigint" ]
      rows:
        - [ 1,"aa",2.1,30 ]
        - [ 2,"bb",2.1,61 ]
        - [ 3,"cc",2.1,93 ]
        - [ 4,"dd",2.1,96 ]
        - [ 5,"ee",2.2,34 ]
  - id: 4
    desc: date为partition by
    inputs:
      - columns: [ "id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date" ]
        indexs: [ "index1:c8:c7" ]
        rows:
          - [ 1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 2,"bb",20,31,1.1,2.1,1590738991000,"2020-05-01" ]
          - [ 3,"cc",20,32,1.1,2.1,1590738992000,"2020-05-01" ]
          - [ 4,"dd",20,33,1.1,2.1,1590738993000,"2020-05-01" ]
          - [ 5,"ee",21,34,1.2,2.2,1590738994000,"2020-05-02" ]
    sql: |
      SELECT id, c1, c8, sum(c4) OVER w1 as w1_c4_sum FROM {0} WINDOW w1 AS (PARTITION BY {0}.c8 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: [ "id int","c1 string","c8 date","w1_c4_sum bigint" ]
      rows:
        - [ 1,"aa","2020-05-01",30 ]
        - [ 2,"bb","2020-05-01",61 ]
        - [ 3,"cc","2020-05-01",93 ]
        - [ 4,"dd","2020-05-01",96 ]
        - [ 5,"ee","2020-05-02",34 ]
  - id: 5
    desc: timestamp为partition by
    inputs:
      - columns: [ "id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date","c9 timestamp" ]
        indexs: [ "index1:c7:c9" ]
        rows:
          - [ 1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01",1590738990000 ]
          - [ 2,"bb",20,31,1.1,2.1,1590738990000,"2020-05-01",1590738991000 ]
          - [ 3,"cc",20,32,1.1,2.1,1590738990000,"2020-05-01",1590738992000 ]
          - [ 4,"dd",20,33,1.1,2.1,1590738990000,"2020-05-01",1590738993000 ]
          - [ 5,"ee",21,34,1.2,2.2,1590738991000,"2020-05-02",1590738994000 ]
    sql: |
      SELECT id, c1, c7, sum(c4) OVER w1 as w1_c4_sum FROM {0} WINDOW w1 AS (PARTITION BY {0}.c7 ORDER BY {0}.c9 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: [ "id int","c1 string","c7 timestamp","w1_c4_sum bigint" ]
      rows:
        - [ 1,"aa",1590738990000,30 ]
        - [ 2,"bb",1590738990000,61 ]
        - [ 3,"cc",1590738990000,93 ]
        - [ 4,"dd",1590738990000,96 ]
        - [ 5,"ee",1590738991000,34 ]
  - id: 6
    desc: bigint为partition by
    inputs:
      - columns: [ "id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date" ]
        indexs: [ "index1:c4:c7" ]
        rows:
          - [ 1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 2,"bb",20,30,1.1,2.1,1590738991000,"2020-05-01" ]
          - [ 3,"cc",20,30,1.1,2.1,1590738992000,"2020-05-01" ]
          - [ 4,"dd",20,30,1.1,2.1,1590738993000,"2020-05-01" ]
          - [ 5,"ee",21,31,1.2,2.2,1590738994000,"2020-05-02" ]
    sql: |
      SELECT id, c1, c4, count(c4) OVER w1 as w1_c4_count FROM {0} WINDOW w1 AS (PARTITION BY {0}.c4 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: [ "id int","c1 string","c4 bigint","w1_c4_count bigint" ]
      rows:
        - [ 1,"aa",30,1 ]
        - [ 2,"bb",30,2 ]
        - [ 3,"cc",30,3 ]
        - [ 4,"dd",30,3 ]
        - [ 5,"ee",31,1 ]
  - id: 7
    desc: string为order by
    inputs:
      - columns: [ "id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date" ]
        indexs: [ "index1:c1:c7" ]
        rows:
          - [ 1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 2,"bb",20,30,1.1,2.1,1590738991000,"2020-05-01" ]
          - [ 3,"cc",20,30,1.1,2.1,1590738992000,"2020-05-01" ]
          - [ 4,"dd",20,30,1.1,2.1,1590738993000,"2020-05-01" ]
          - [ 5,"ee",21,31,1.2,2.2,1590738994000,"2020-05-02" ]
    sql: |
      SELECT id, c1, c4, count(c4) OVER w1 as w1_c4_count FROM {0} WINDOW w1 AS (PARTITION BY {0}.c3 ORDER BY {0}.c1 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW);
    expect:
      success: false

  -
    id: 8
    desc: bigint为order by-不加单位-bigint
    inputs:
      - columns: [ "id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date" ]
        indexs: [ "index1:c3:c4" ]
        rows:
          - [ 1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 2,"bb",20,31,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 3,"cc",20,32,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 4,"dd",20,33,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 5,"ee",21,34,1.2,2.2,1590738991000,"2020-05-02" ]
    sql: |
      SELECT id, c1, c4, count(c4) OVER w1 as w1_c4_count FROM {0} WINDOW w1 AS (PARTITION BY {0}.c3 ORDER BY {0}.c4 ROWS_RANGE BETWEEN 2 PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: [ "id int","c1 string","c4 bigint","w1_c4_count bigint" ]
      rows:
        - [ 1,"aa",30,1 ]
        - [ 2,"bb",31,2 ]
        - [ 3,"cc",32,3 ]
        - [ 4,"dd",33,3 ]
        - [ 5,"ee",34,1 ]
  - id: 8-2
    desc: int为order by-未命中TS
    mode: rtidb-unsupport
    inputs:
      - columns: [ "id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date" ]
        indexs: [ "index1:c8:c7" ]
        rows:
          - [ 1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 2,"bb",21,31,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 3,"cc",22,32,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 4,"dd",23,33,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 5,"ee",24,34,1.2,2.2,1590738991000,"2020-05-02" ]
    sql: |
      SELECT id, c1, c4, count(c4) OVER w1 as w1_c4_count FROM {0} WINDOW w1 AS (PARTITION BY {0}.c8 ORDER BY {0}.c3 ROWS_RANGE BETWEEN 2 PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: [ "id int","c1 string","c4 bigint","w1_c4_count bigint" ]
      rows:
        - [ 1,"aa",30,1 ]
        - [ 2,"bb",31,2 ]
        - [ 3,"cc",32,3 ]
        - [ 4,"dd",33,3 ]
        - [ 5,"ee",34,1 ]
  - id: 8-3
    desc: bigint为order by-加单位
    inputs:
      - columns: [ "id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date" ]
        indexs: [ "index1:c3:c4" ]
        rows:
          - [ 1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 2,"bb",20,31,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 3,"cc",20,32,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 4,"dd",20,33,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 5,"ee",21,34,1.2,2.2,1590738991000,"2020-05-02" ]
    sql: |
      SELECT id, c1, c4, count(c4) OVER w1 as w1_c4_count FROM {0} WINDOW w1 AS (PARTITION BY {0}.c3 ORDER BY {0}.c4 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: [ "id int","c1 string","c4 bigint","w1_c4_count bigint" ]
      rows:
        - [ 1,"aa",30,1 ]
        - [ 2,"bb",31,2 ]
        - [ 3,"cc",32,3 ]
        - [ 4,"dd",33,4 ]
        - [ 5,"ee",34,1 ]
  - id: 8-4
    desc: int为order by-加单位-未命中索引
    mode: rtidb-unsupport
    inputs:
      - columns: [ "id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date" ]
        indexs: [ "index1:c1:c7" ]
        rows:
          - [ 1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 2,"bb",21,31,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 3,"cc",22,32,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 4,"dd",23,33,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 5,"ee",24,34,1.2,2.2,1590738991000,"2020-05-02" ]
    sql: |
      SELECT id, c1, c4, count(c4) OVER w1 as w1_c4_count FROM {0} WINDOW w1 AS (PARTITION BY {0}.c8 ORDER BY {0}.c3 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: [ "id int","c1 string","c4 bigint","w1_c4_count bigint" ]
      rows:
        - [ 1,"aa",30,1 ]
        - [ 2,"bb",31,2 ]
        - [ 3,"cc",32,3 ]
        - [ 4,"dd",33,4 ]
        - [ 5,"ee",34,1 ]
  - id: 9
    desc: float为order by
    mode: rtidb-unsupport
    inputs:
      - columns: [ "id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date" ]
        indexs: [ "index1:c8:c7" ]
        rows:
          - [ 1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 2,"bb",20,31,1.2,2.1,1590738990000,"2020-05-01" ]
          - [ 3,"cc",20,32,1.3,2.1,1590738990000,"2020-05-01" ]
          - [ 4,"dd",20,33,1.4,2.1,1590738990000,"2020-05-01" ]
          - [ 5,"ee",21,34,1.5,2.2,1590738991000,"2020-05-02" ]
    sql: |
      SELECT id, c1, c5, count(c4) OVER w1 as w1_c4_count FROM {0} WINDOW w1 AS (PARTITION BY {0}.c8 ORDER BY {0}.c5 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW);
    expect:
      success: false
  - id: 10
    desc: double为order by
    inputs:
      - columns: [ "id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date" ]
        indexs: [ "index1:c1:c7" ]
        rows:
          - [ 1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 2,"bb",20,31,1.2,2.2,1590738990000,"2020-05-01" ]
          - [ 3,"cc",20,32,1.3,2.3,1590738990000,"2020-05-01" ]
          - [ 4,"dd",20,33,1.4,2.4,1590738990000,"2020-05-01" ]
          - [ 5,"ee",21,34,1.5,2.5,1590738991000,"2020-05-02" ]
    sql: |
      SELECT id, c1, c6, count(c4) OVER w1 as w1_c4_count FROM {0} WINDOW w1 AS (PARTITION BY {0}.c8 ORDER BY {0}.c6 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW);
    expect:
      success: false
  - id: 11
    desc: date为order by-未命中索引
    mode: offline-unsupport
    inputs:
      - columns: [ "id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date" ]
        indexs: [ "index1:c1:c7" ]
        rows:
          - [ 1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 2,"bb",20,31,1.2,2.2,1590738990000,"2020-05-02" ]
          - [ 3,"cc",20,32,1.3,2.3,1590738990000,"2020-05-03" ]
          - [ 4,"dd",20,33,1.4,2.4,1590738990000,"2020-05-04" ]
          - [ 5,"ee",21,34,1.5,2.5,1590738991000,"2020-05-05" ]
    sql: |
      SELECT id, c1, c8, count(c4) OVER w1 as w1_c4_count FROM {0} WINDOW w1 AS (PARTITION BY {0}.c1 ORDER BY {0}.c8 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW);
    expect:
      success: false
  - id: 12
    desc: 多个pk
    inputs:
      - columns: [ "id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date" ]
        indexs: [ "index1:c1|c3:c7" ]
        rows:
          - [ 1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 2,"aa",20,31,1.2,2.2,1590738991000,"2020-05-02" ]
          - [ 3,"aa",20,32,1.3,2.3,1590738992000,"2020-05-03" ]
          - [ 4,"aa",20,33,1.4,2.4,1590738993000,"2020-05-04" ]
          - [ 5,"aa",24,34,1.5,2.5,1590738994000,"2020-05-05" ]
          - [ 6,"bb",24,35,1.5,2.5,1590738995000,"2020-05-06" ]
    sql: |
      SELECT id, c1, c3, sum(c4) OVER w1 as w1_c4_sum FROM {0} WINDOW w1 AS (PARTITION BY {0}.c1,{0}.c3 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: [ "id int","c1 string","c3 int","w1_c4_sum bigint" ]
      rows:
        - [ 1,"aa",20,30 ]
        - [ 2,"aa",20,61 ]
        - [ 3,"aa",20,93 ]
        - [ 4,"aa",20,96 ]
        - [ 5,"aa",24,34 ]
        - [ 6,"bb",24,35 ]
  - id: 13
    desc: 两个pk都使用了索引
    inputs:
      - columns: [ "id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date" ]
        indexs: [ "index1:c1|c3:c7","index2:c3:c7" ]
        rows:
          - [ 1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 2,"aa",20,31,1.2,2.2,1590738991000,"2020-05-02" ]
          - [ 3,"aa",20,32,1.3,2.3,1590738992000,"2020-05-03" ]
          - [ 4,"aa",20,33,1.4,2.4,1590738993000,"2020-05-04" ]
          - [ 5,"aa",24,34,1.5,2.5,1590738994000,"2020-05-05" ]
          - [ 6,"bb",24,35,1.5,2.5,1590738995000,"2020-05-06" ]
    sql: |
      SELECT id, c1, c3, sum(c4) OVER w1 as w1_c4_sum FROM {0} WINDOW
      w1 AS (PARTITION BY {0}.c1,{0}.c3 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: [ "id int","c1 string","c3 int","w1_c4_sum bigint" ]
      rows:
        - [ 1,"aa",20,30 ]
        - [ 2,"aa",20,61 ]
        - [ 3,"aa",20,93 ]
        - [ 4,"aa",20,96 ]
        - [ 5,"aa",24,34 ]
        - [ 6,"bb",24,35 ]
  - id: 14
    desc: 多个window指定相同的pk
    inputs:
      - columns: [ "id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date" ]
        indexs: [ "index1:c3:c7" ]
        rows:
          - [ 1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 2,"bb",20,31,1.2,2.2,1590738991000,"2020-05-02" ]
          - [ 3,"cc",20,32,1.3,2.3,1590738992000,"2020-05-03" ]
          - [ 4,"dd",20,33,1.4,2.4,1590738993000,"2020-05-04" ]
          - [ 5,"ee",21,34,1.5,2.5,1590738994000,"2020-05-05" ]
    sql: |
      SELECT id, c1, c3, sum(c4) OVER w1 as w1_c4_sum, count(c4) OVER w2 as w2_c4_count FROM {0} WINDOW
      w1 AS (PARTITION BY {0}.c3 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW),
      w2 AS (PARTITION BY {0}.c3 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: [ "id int","c1 string","c3 int","w1_c4_sum bigint","w2_c4_count bigint" ]
      rows:
        - [ 1,"aa",20,30,1 ]
        - [ 2,"bb",20,61,2 ]
        - [ 3,"cc",20,93,3 ]
        - [ 4,"dd",20,96,3 ]
        - [ 5,"ee",21,34,1 ]
  - id: 15
    desc: 多个window指定相不同的pk
    mode: rtidb-batch-unsupport
    inputs:
      - columns: [ "id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date" ]
        indexs: [ "index1:c1:c7", "index2:c3:c7" ]
        rows:
          - [ 1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 2,"aa",20,31,1.2,2.2,1590738991000,"2020-05-02" ]
          - [ 3,"cc",20,32,1.3,2.3,1590738992000,"2020-05-03" ]
          - [ 4,"cc",20,33,1.4,2.4,1590738993000,"2020-05-04" ]
          - [ 5,"ee",21,34,1.5,2.5,1590738994000,"2020-05-05" ]
    sql: |
      SELECT id, c1, c3, sum(c4) OVER w1 as w1_c4_sum, count(c4) OVER w2 as w2_c4_count FROM {0} WINDOW
      w1 AS (PARTITION BY {0}.c3 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW),
      w2 AS (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: [ "id int","c1 string","c3 int","w1_c4_sum bigint","w2_c4_count bigint" ]
      rows:
        - [ 1,"aa",20,30,1 ]
        - [ 2,"aa",20,61,2 ]
        - [ 3,"cc",20,93,1 ]
        - [ 4,"cc",20,96,2 ]
        - [ 5,"ee",21,34,1 ]
  - id: 16-1
    desc: 多个window指定不同的ts, 数据时间乱序插入，batch模式预期
    mode: request-unsupport, rtidb-batch-unsupport
    inputs:
      - columns: [ "id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date" ]
        indexs: [ "index1:c3:c7", "index2:c3:c4" ]
        rows:
          - [ 1,"aa",20,33,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 2,"bb",20,31,1.2,2.2,1590738991000,"2020-05-02" ]
          - [ 3,"cc",20,30,1.3,2.3,1590738992000,"2020-05-03" ]
          - [ 4,"dd",20,32,1.4,2.4,1590738993000,"2020-05-04" ]
          - [ 5,"ee",21,34,1.5,2.5,1590738994000,"2020-05-05" ]
    sql: |
      SELECT id, c1, c3, sum(c4) OVER w1 as w1_c4_sum, count(c4) OVER w2 as w2_c4_count FROM {0} WINDOW
      w1 AS (PARTITION BY {0}.c3 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW),
      w2 AS (PARTITION BY {0}.c3 ORDER BY {0}.c4 ROWS_RANGE BETWEEN 2 PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: [ "id int","c1 string","c3 int","w1_c4_sum bigint","w2_c4_count bigint" ]
      rows:
        - [ 1,"aa",20,33,3 ]
        - [ 2,"bb",20,64,2 ]
        - [ 3,"cc",20,94,1 ]
        - [ 4,"dd",20,93,3 ]
        - [ 5,"ee",21,34,1 ]

  - id: 16-2
    desc: 多个window指定不同的ts, 数据时间乱序插入，request模式预期
    mode: batch-unsupport
    inputs:
      - columns: [ "id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date" ]
        indexs: [ "index1:c3:c7", "index2:c3:c4" ]
        rows:
          - [ 1,"aa",20,33,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 2,"bb",20,31,1.2,2.2,1590738991000,"2020-05-02" ]
          - [ 3,"cc",20,30,1.3,2.3,1590738992000,"2020-05-03" ]
          - [ 4,"dd",20,32,1.4,2.4,1590738993000,"2020-05-04" ]
          - [ 5,"ee",21,34,1.5,2.5,1590738994000,"2020-05-05" ]
    sql: |
      SELECT id, c1, c3, sum(c4) OVER w1 as w1_c4_sum, count(c4) OVER w2 as w2_c4_count FROM {0} WINDOW
      w1 AS (PARTITION BY {0}.c3 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW),
      w2 AS (PARTITION BY {0}.c3 ORDER BY {0}.c4 ROWS_RANGE BETWEEN 2 PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: [ "id int","c1 string","c3 int","w1_c4_sum bigint","w2_c4_count bigint" ]
      rows:
        - [ 1,"aa",20,33,1 ]
        - [ 2,"bb",20,64,1 ]
        - [ 3,"cc",20,94,1 ]
        - [ 4,"dd",20,93,3 ]
        - [ 5,"ee",21,34,1 ]
  - id: 16-3
    desc: 多个window指定不同的ts, 数据时间按序插入
    mode: rtidb-batch-unsupport
    inputs:
      - columns: [ "id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date" ]
        indexs: [ "index1:c3:c7", "index2:c3:c4" ]
        rows:
          - [ 1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 2,"bb",20,31,1.2,2.2,1590738991000,"2020-05-02" ]
          - [ 3,"cc",20,32,1.3,2.3,1590738992000,"2020-05-03" ]
          - [ 4,"dd",20,33,1.4,2.4,1590738993000,"2020-05-04" ]
          - [ 5,"ee",21,34,1.5,2.5,1590738994000,"2020-05-05" ]
    sql: |
      SELECT id, c1, c3, sum(c4) OVER w1 as w1_c4_sum, count(c4) OVER w2 as w2_c4_count FROM {0} WINDOW
      w1 AS (PARTITION BY {0}.c3 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW),
      w2 AS (PARTITION BY {0}.c3 ORDER BY {0}.c4 ROWS_RANGE BETWEEN 2 PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: [ "id int","c1 string","c3 int","w1_c4_sum bigint","w2_c4_count bigint" ]
      rows:
        - [ 1,"aa",20,30,1 ]
        - [ 2,"bb",20,61,2 ]
        - [ 3,"cc",20,93,3 ]
        - [ 4,"dd",20,96,3 ]
        - [ 5,"ee",21,34,1 ]
  - id: 17
    desc: 两个window其中两个pk为索引列
    mode: rtidb-batch-unsupport
    inputs:
      - columns: [ "id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date" ]
        indexs: [ "index1:c1:c7","index2:c3:c7" ]
        rows:
          - [ 1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 2,"aa",20,31,1.2,2.2,1590738991000,"2020-05-02" ]
          - [ 3,"cc",20,32,1.3,2.3,1590738992000,"2020-05-03" ]
          - [ 4,"cc",20,33,1.4,2.4,1590738993000,"2020-05-04" ]
          - [ 5,"ee",21,34,1.5,2.5,1590738994000,"2020-05-05" ]
    sql: |
      SELECT id, c1, c3, sum(c4) OVER w1 as w1_c4_sum, count(c4) OVER w2 as w2_c4_count FROM {0} WINDOW
      w1 AS (PARTITION BY {0}.c3 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW),
      w2 AS (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: [ "id int","c1 string","c3 int","w1_c4_sum bigint","w2_c4_count bigint" ]
      rows:
        - [ 1,"aa",20,30,1 ]
        - [ 2,"aa",20,61,2 ]
        - [ 3,"cc",20,93,1 ]
        - [ 4,"cc",20,96,2 ]
        - [ 5,"ee",21,34,1 ]
  - id: 18
    desc: 两个window其中一个pk和两个pk
    mode: rtidb-batch-unsupport
    inputs:
      - columns: [ "id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date" ]
        indexs: [ "index1:c1:c7","index2:c3:c7" ]
        rows:
          - [ 1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 2,"aa",20,31,1.2,2.2,1590738991000,"2020-05-02" ]
          - [ 3,"cc",20,32,1.3,2.3,1590738992000,"2020-05-03" ]
          - [ 4,"cc",20,33,1.4,2.4,1590738993000,"2020-05-04" ]
          - [ 5,"cc",21,34,1.5,2.5,1590738994000,"2020-05-05" ]
    sql: |
      SELECT id, c1, c3, sum(c4) OVER w1 as w1_c4_sum, count(c4) OVER w2 as w2_c4_count FROM {0} WINDOW
      w1 AS (PARTITION BY {0}.c3 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW),
      w2 AS (PARTITION BY {0}.c1,{0}.c3 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: [ "id int","c1 string","c3 int","w1_c4_sum bigint","w2_c4_count bigint" ]
      rows:
        - [ 1,"aa",20,30,1 ]
        - [ 2,"aa",20,61,2 ]
        - [ 3,"cc",20,93,1 ]
        - [ 4,"cc",20,96,2 ]
        - [ 5,"cc",21,34,1 ]
  - id: 19
    desc: 全部window
    inputs:
      - columns: [ "id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date" ]
        indexs: [ "index1:c3:c7" ]
        rows:
          - [ 1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 2,"bb",20,31,1.2,2.2,1590738991000,"2020-05-02" ]
          - [ 3,"cc",20,32,1.3,2.3,1590738992000,"2020-05-03" ]
          - [ 4,"dd",20,33,1.4,2.4,1590738993000,"2020-05-04" ]
          - [ 5,"ee",21,34,1.5,2.5,1590738994000,"2020-05-05" ]
    sql: |
      SELECT id, count(c3) OVER w1 as w1_c3_count, sum(c4) OVER w1 as w1_c4_sum FROM {0} WINDOW
      w1 AS (PARTITION BY {0}.c3 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW);
    expect:
      columns: [ "id int", "w1_c3_count bigint","w1_c4_sum bigint" ]
      order: id
      rows:
        - [ 1, 1,30 ]
        - [ 2, 2,61 ]
        - [ 3, 3,93 ]
        - [ 4, 3,96 ]
        - [ 5, 1,34 ]
  - id: 20
    tags: [ "TODO", "@zhaowei暂时不要引入LIMIT的case,LIMIT的case需要spark,rtidb分别预期结果" ]
    desc: 结合limit
    inputs:
      - columns: [ "id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date" ]
        indexs: [ "index1:c1:c7" ]
        rows:
          - [ 1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 2,"bb",20,31,1.2,2.2,1590738991000,"2020-05-02" ]
          - [ 3,"cc",20,32,1.3,2.3,1590738992000,"2020-05-03" ]
          - [ 4,"dd",20,33,1.4,2.4,1590738993000,"2020-05-04" ]
          - [ 5,"ee",21,34,1.5,2.5,1590738994000,"2020-05-05" ]
    sql: |
      SELECT id, c1, c3, sum(c4) OVER w1 as w1_c4_sum FROM {0} WINDOW w1 AS (PARTITION BY {0}.c3 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW) limit 2;
    expect:
      order: id
      columns: [ "id int","c1 string","c3 int","w1_c4_sum bigint" ]
      rows:
        - [ 1,"aa",20,30 ]
        - [ 5,"ee",21,34 ]
  - id: 22
    desc: window的计算结果不使用别名
    inputs:
      - columns: [ "id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date" ]
        indexs: [ "index1:c3:c7" ]
        rows:
          - [ 1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01" ]
          - [ 2,"bb",20,31,1.2,2.2,1590738991000,"2020-05-02" ]
          - [ 3,"cc",20,32,1.3,2.3,1590738992000,"2020-05-03" ]
          - [ 4,"dd",20,33,1.4,2.4,1590738993000,"2020-05-04" ]
          - [ 5,"ee",21,34,1.5,2.5,1590738994000,"2020-05-05" ]
    sql: |
      SELECT id, c1, c3, sum(c4) OVER w1 FROM {0} WINDOW w1 AS (PARTITION BY {0}.c3 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: [ "id int","c1 string","c3 int","sum(c4)over w1 bigint" ]
      rows:
        - [ 1,"aa",20,30 ]
        - [ 2,"bb",20,61 ]
        - [ 3,"cc",20,93 ]
        - [ 4,"dd",20,96 ]
        - [ 5,"ee",21,34 ]
  - id: 23-1
    desc: ROWS_RANGE Window with MaxSize
    inputs:
      - columns: [ "c1 string","c3 int","c4 double","c7 timestamp" ]
        indexs: [ "index1:c1:c7" ]
        rows:
          - [ "aa",1, 1.0, 1590738990000 ]
          - [ "aa",2, 1.0, 1590738991000 ]
          - [ "aa",3, 1.0, 1590738992000 ]
          - [ "aa",4, 1.0, 1590738993000 ]
          - [ "aa",5, 1.0, 1590738994000 ]
          - [ "aa",6, 1.0, 1590738995000 ]
          - [ "aa",7, 1.0, 1590738999000 ]
          - [ "aa",8, 1.0, 1590739001000 ]
          - [ "aa",9, 1.0, 1590739002000 ]
    sql: |
      SELECT c1, c3, c7,
      sum(c4) OVER w1 as w1_c4_sum
      FROM {0} WINDOW
      w1 AS (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 3s PRECEDING AND CURRENT ROW MAXSIZE 2);
    expect:
      order: c3
      columns: [ "c1 string", "c3 int", "c7 timestamp", "w1_c4_sum double" ]
      rows:
        - [ "aa", 1, 1590738990000, 1.0 ]
        - [ "aa", 2, 1590738991000, 2.0 ]
        - [ "aa", 3, 1590738992000, 2.0 ]
        - [ "aa", 4, 1590738993000, 2.0 ]
        - [ "aa", 5, 1590738994000, 2.0 ]
        - [ "aa", 6, 1590738995000, 2.0 ]
        - [ "aa", 7, 1590738999000, 1.0 ]
        - [ "aa", 8, 1590739001000, 2.0 ]
        - [ "aa", 9, 1590739002000, 2.0 ]
  - id: 23-2
    desc: ROWS_RANGE Current History Window with MaxSize 2
    inputs:
      - columns: [ "c1 string","c3 int","c4 double","c7 timestamp" ]
        indexs: [ "index1:c1:c7" ]
        rows:
          - [ "aa",1, 1.0, 1590738990000 ]
          - [ "aa",2, 1.0, 1590738991000 ]
          - [ "aa",3, 1.0, 1590738992000 ]
          - [ "aa",4, 1.0, 1590738993000 ]
          - [ "aa",5, 1.0, 1590738994000 ]
          - [ "aa",6, 1.0, 1590738995000 ]
          - [ "aa",7, 1.0, 1590738999000 ]
          - [ "aa",8, 1.0, 1590739001000 ]
          - [ "aa",9, 1.0, 1590739002000 ]
    sql: |
      SELECT c1, c3, c7,
      sum(c4) OVER w1 as w1_c4_sum
      FROM {0} WINDOW
      w1 AS (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 3s PRECEDING AND CURRENT ROW MAXSIZE 10);
    expect:
      order: c3
      columns: [ "c1 string", "c3 int", "c7 timestamp", "w1_c4_sum double" ]
      rows:
        - [ "aa", 1, 1590738990000, 1.0 ]
        - [ "aa", 2, 1590738991000, 2.0 ]
        - [ "aa", 3, 1590738992000, 3.0 ]
        - [ "aa", 4, 1590738993000, 4.0 ]
        - [ "aa", 5, 1590738994000, 4.0 ]
        - [ "aa", 6, 1590738995000, 4.0 ]
        - [ "aa", 7, 1590738999000, 1.0 ]
        - [ "aa", 8, 1590739001000, 2.0 ]
        - [ "aa", 9, 1590739002000, 3.0 ]
  - id: 24-1
    desc: ROWS_RANGE Pure History Window
    inputs:
      - columns: [ "c1 string","c3 int","c4 double","c7 timestamp" ]
        indexs: [ "index1:c1:c7" ]
        rows:
          - [ "aa",1, 1.0, 1590738990000 ]
          - [ "aa",2, 1.0, 1590738991000 ]
          - [ "aa",3, 1.0, 1590738992000 ]
          - [ "aa",4, 1.0, 1590738993000 ]
          - [ "aa",5, 1.0, 1590738994000 ]
          - [ "aa",6, 1.0, 1590738995000 ]
          - [ "aa",7, 1.0, 1590738999000 ]
          - [ "aa",8, 1.0, 1590739001000 ]
          - [ "aa",9, 1.0, 1590739002000 ]
    sql: |
      SELECT c1, c3, c7,
      sum(c4) OVER w1 as w1_c4_sum
      FROM {0} WINDOW
      w1 AS (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 3s PRECEDING AND 1s PRECEDING);
    expect:
      order: c3
      columns: [ "c1 string", "c3 int", "c7 timestamp",  "w1_c4_sum double" ]
      rows:
        - [ "aa", 1, 1590738990000, 0.0 ]
        - [ "aa", 2, 1590738991000, 1.0 ]
        - [ "aa", 3, 1590738992000, 2.0 ]
        - [ "aa", 4, 1590738993000, 3.0 ]
        - [ "aa", 5, 1590738994000, 3.0 ]
        - [ "aa", 6, 1590738995000, 3.0 ]
        - [ "aa", 7, 1590738999000, 0.0 ]
        - [ "aa", 8, 1590739001000, 1.0 ]
        - [ "aa", 9, 1590739002000, 2.0 ]
  - id: 24-2
    desc: ROWS_RANGE Pure History Window With MaxSize
    inputs:
      - columns: [ "c1 string","c3 int","c4 double","c7 timestamp" ]
        indexs: [ "index1:c1:c7" ]
        rows:
          - [ "aa",1, 1.0, 1590738990000 ]
          - [ "aa",2, 1.0, 1590738991000 ]
          - [ "aa",3, 1.0, 1590738992000 ]
          - [ "aa",4, 1.0, 1590738993000 ]
          - [ "aa",5, 1.0, 1590738994000 ]
          - [ "aa",6, 1.0, 1590738995000 ]
          - [ "aa",7, 1.0, 1590738999000 ]
          - [ "aa",8, 1.0, 1590739001000 ]
          - [ "aa",9, 1.0, 1590739002000 ]
    request_plan: |
      PROJECT(type=Aggregation)
        REQUEST_UNION(partition_keys=(), orders=() ASC, range=(auto_t0.c7, -3000, -1000, maxsize=2), index_keys=(auto_t0.c1))
          DATA_PROVIDER(request=auto_t0)
          DATA_PROVIDER(type=Partition, table=auto_t0, index=index1)

    batch_plan: |
      PROJECT(type=WindowAggregation)
        +-WINDOW(partition_keys=(), orders=() ASC, range=(auto_t0.c7, -3000, -1000, maxsize=2))
        DATA_PROVIDER(type=Partition, table=auto_t0, index=index1)
    sql: |
      SELECT c1, c3, c7,
      sum(c4) OVER w1 as w1_c4_sum
      FROM {0} WINDOW
      w1 AS (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 3s PRECEDING AND 1s PRECEDING MAXSIZE 2);
    expect:
      order: c3
      columns: [ "c1 string", "c3 int", "c7 timestamp",  "w1_c4_sum double" ]
      rows:
        - [ "aa", 1, 1590738990000, 0.0 ]
        - [ "aa", 2, 1590738991000, 1.0 ]
        - [ "aa", 3, 1590738992000, 2.0 ]
        - [ "aa", 4, 1590738993000, 2.0 ]
        - [ "aa", 5, 1590738994000, 2.0 ]
        - [ "aa", 6, 1590738995000, 2.0 ]
        - [ "aa", 7, 1590738999000, 0.0 ]
        - [ "aa", 8, 1590739001000, 1.0 ]
        - [ "aa", 9, 1590739002000, 2.0 ]
  - id: 25
    desc: ROWS_RANGE Current History Window with MaxSize Merge
    inputs:
      - columns: [ "c1 string","c3 int","c4 double","c7 timestamp" ]
        indexs: [ "index1:c1:c7" ]
        rows:
          - [ "aa",1, 1.0, 1590738990000 ]
          - [ "aa",2, 1.0, 1590738991000 ]
          - [ "aa",3, 1.0, 1590738992000 ]
          - [ "aa",4, 1.0, 1590738993000 ]
          - [ "aa",5, 1.0, 1590738994000 ]
          - [ "aa",6, 1.0, 1590738995000 ]
          - [ "aa",7, 1.0, 1590738999000 ]
          - [ "aa",8, 1.0, 1590739001000 ]
          - [ "aa",9, 1.0, 1590739002000 ]
    sql: |
      SELECT c1, c3, c7,
      sum(c4) OVER w1 as w1_c4_sum,
      sum(c4) OVER w2 as w2_c4_sum
      FROM {0} WINDOW
      w1 AS (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 3s PRECEDING AND CURRENT ROW MAXSIZE 4),
      w2 AS (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW MAXSIZE 4);
    request_plan: |
      PROJECT(type=Aggregation)
        REQUEST_UNION(partition_keys=(), orders=() ASC, range=(auto_t0.c7, -3000, 0, maxsize=4), index_keys=(auto_t0.c1))
          DATA_PROVIDER(request=auto_t0)
          DATA_PROVIDER(type=Partition, table=auto_t0, index=index1)
    batch_plan: |
      PROJECT(type=WindowAggregation)
        +-WINDOW(partition_keys=(), orders=() ASC, range=(auto_t0.c7, -3000, 0, maxsize=4))
        DATA_PROVIDER(type=Partition, table=auto_t0, index=index1)
    expect:
      order: c3
      columns: [ "c1 string", "c3 int", "c7 timestamp",  "w1_c4_sum double", "w2_c4_sum double" ]
      rows:
        - [ "aa", 1, 1590738990000, 1.0, 1.0 ]
        - [ "aa", 2, 1590738991000, 2.0, 2.0 ]
        - [ "aa", 3, 1590738992000, 3.0, 3.0 ]
        - [ "aa", 4, 1590738993000, 4.0, 3.0 ]
        - [ "aa", 5, 1590738994000, 4.0, 3.0 ]
        - [ "aa", 6, 1590738995000, 4.0, 3.0 ]
        - [ "aa", 7, 1590738999000, 1.0, 1.0 ]
        - [ "aa", 8, 1590739001000, 2.0, 2.0 ]
        - [ "aa", 9, 1590739002000, 3.0, 2.0 ]
  - id: 26
    desc: ROWS_RANGE Window with MaxSize Not Merge
    mode: rtidb-batch-unsupport
    inputs:
      - columns: [ "c1 string","c3 int","c4 double","c7 timestamp" ]
        indexs: [ "index1:c1:c7" ]
        rows:
          - [ "aa",1, 1.0, 1590738990000 ]
          - [ "aa",2, 1.0, 1590738991000 ]
          - [ "aa",3, 1.0, 1590738992000 ]
          - [ "aa",4, 1.0, 1590738993000 ]
          - [ "aa",5, 1.0, 1590738994000 ]
          - [ "aa",6, 1.0, 1590738995000 ]
          - [ "aa",7, 1.0, 1590738999000 ]
          - [ "aa",8, 1.0, 1590739001000 ]
          - [ "aa",9, 1.0, 1590739002000 ]
    sql: |
      SELECT c1, c3, c7,
      sum(c4) OVER w1 as w1_c4_sum,
      sum(c4) OVER w2 as w2_c4_sum
      FROM {0} WINDOW
      w1 AS (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 3s PRECEDING AND CURRENT ROW),
      w2 AS (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 3s PRECEDING AND CURRENT ROW MAXSIZE 2);
    request_plan: |
      SIMPLE_PROJECT(sources=(c1, c3, c7, w1_c4_sum, w2_c4_sum))
        REQUEST_JOIN(type=kJoinTypeConcat)
          PROJECT(type=Aggregation)
            REQUEST_UNION(partition_keys=(), orders=() ASC, range=(auto_t0.c7, -3000, 0), index_keys=(auto_t0.c1))
              DATA_PROVIDER(request=auto_t0)
              DATA_PROVIDER(type=Partition, table=auto_t0, index=index1)
          PROJECT(type=Aggregation)
            REQUEST_UNION(partition_keys=(), orders=() ASC, range=(auto_t0.c7, -3000, 0, maxsize=2), index_keys=(auto_t0.c1))
              DATA_PROVIDER(request=auto_t0)
              DATA_PROVIDER(type=Partition, table=auto_t0, index=index1)

    expect:
      order: c3
      columns: [ "c1 string", "c3 int", "c7 timestamp",  "w1_c4_sum double", "w2_c4_sum double" ]
      rows:
        - [ "aa", 1, 1590738990000, 1.0, 1.0 ]
        - [ "aa", 2, 1590738991000, 2.0, 2.0 ]
        - [ "aa", 3, 1590738992000, 3.0, 2.0 ]
        - [ "aa", 4, 1590738993000, 4.0, 2.0 ]
        - [ "aa", 5, 1590738994000, 4.0, 2.0 ]
        - [ "aa", 6, 1590738995000, 4.0, 2.0 ]
        - [ "aa", 7, 1590738999000, 1.0, 1.0 ]
        - [ "aa", 8, 1590739001000, 2.0, 2.0 ]
        - [ "aa", 9, 1590739002000, 3.0, 2.0 ]

  - id: 27-1
    desc: ROWS and ROWS_RANGE Current History Window with MaxSize Merge
    inputs:
      - columns: [ "c1 string","c3 int","c4 double","c7 timestamp" ]
        indexs: [ "index1:c1:c7" ]
        rows:
          - [ "aa",1, 1.0, 1590738990000 ]
          - [ "aa",2, 1.0, 1590738991000 ]
          - [ "aa",3, 1.0, 1590738992000 ]
          - [ "aa",4, 1.0, 1590738993000 ]
          - [ "aa",5, 1.0, 1590738994000 ]
          - [ "aa",6, 1.0, 1590738995000 ]
          - [ "aa",7, 1.0, 1590738999000 ]
          - [ "aa",8, 1.0, 1590739001000 ]
          - [ "aa",9, 1.0, 1590739002000 ]
    sql: |
      SELECT c1, c3, c7,
      sum(c4) OVER w1 as w1_c4_sum,
      sum(c4) OVER w2 as w2_c4_sum
      FROM {0} WINDOW
      w1 AS (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS BETWEEN 3 PRECEDING AND CURRENT ROW),
      w2 AS (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 6s PRECEDING AND CURRENT ROW MAXSIZE 5);
    request_plan: |
      PROJECT(type=Aggregation)
        REQUEST_UNION(partition_keys=(), orders=() ASC, range=(auto_t0.c7, -6000, 0, maxsize=5), rows=(auto_t0.c7, -3, 0), index_keys=(auto_t0.c1))
          DATA_PROVIDER(request=auto_t0)
          DATA_PROVIDER(type=Partition, table=auto_t0, index=index1)
    batch_plan: |
      PROJECT(type=WindowAggregation)
        +-WINDOW(partition_keys=(), orders=() ASC, range=(auto_t0.c7, -6000, 0, maxsize=5), rows=(auto_t0.c7, -3, 0))
        DATA_PROVIDER(type=Partition, table=auto_t0, index=index1)
    expect:
      order: c3
      columns: [ "c1 string", "c3 int", "c7 timestamp",  "w1_c4_sum double", "w2_c4_sum double" ]
      rows:
        - [ "aa", 1, 1590738990000, 1.0, 1.0 ]
        - [ "aa", 2, 1590738991000, 2.0, 2.0 ]
        - [ "aa", 3, 1590738992000, 3.0, 3.0 ]
        - [ "aa", 4, 1590738993000, 4.0, 4.0 ]
        - [ "aa", 5, 1590738994000, 4.0, 5.0 ]
        - [ "aa", 6, 1590738995000, 4.0, 5.0 ]
        - [ "aa", 7, 1590738999000, 4.0, 4.0 ]
        - [ "aa", 8, 1590739001000, 4.0, 3.0 ]
        - [ "aa", 9, 1590739002000, 4.0, 3.0 ]
  - id: 27-2
    desc: ROWS and ROWS_RANGE Current History Window with MaxSize, MaxSize < ROWS Preceding, Can't Merge Frame
    mode: rtidb-batch-unsupport
    inputs:
      - columns: [ "c1 string","c3 int","c4 double","c7 timestamp" ]
        indexs: [ "index1:c1:c7" ]
        rows:
          - [ "aa",1, 1.0, 1590738990000 ]
          - [ "aa",2, 1.0, 1590738991000 ]
          - [ "aa",3, 1.0, 1590738992000 ]
          - [ "aa",4, 1.0, 1590738993000 ]
          - [ "aa",5, 1.0, 1590738994000 ]
          - [ "aa",6, 1.0, 1590738995000 ]
          - [ "aa",7, 1.0, 1590738999000 ]
          - [ "aa",8, 1.0, 1590739001000 ]
          - [ "aa",9, 1.0, 1590739002000 ]
    sql: |
      SELECT c1, c3, c7,
      sum(c4) OVER w1 as w1_c4_sum,
      sum(c4) OVER w2 as w2_c4_sum
      FROM {0} WINDOW
      w1 AS (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS BETWEEN 7 PRECEDING AND CURRENT ROW),
      w2 AS (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 6s PRECEDING AND CURRENT ROW MAXSIZE 5);
    request_plan: |
      SIMPLE_PROJECT(sources=(c1, c3, c7, w1_c4_sum, w2_c4_sum))
        REQUEST_JOIN(type=kJoinTypeConcat)
          PROJECT(type=Aggregation)
            REQUEST_UNION(partition_keys=(), orders=() ASC, rows=(auto_t0.c7, -7, 0), index_keys=(auto_t0.c1))
              DATA_PROVIDER(request=auto_t0)
              DATA_PROVIDER(type=Partition, table=auto_t0, index=index1)
          PROJECT(type=Aggregation)
            REQUEST_UNION(partition_keys=(), orders=() ASC, range=(auto_t0.c7, -6000, 0, maxsize=5), index_keys=(auto_t0.c1))
              DATA_PROVIDER(request=auto_t0)
              DATA_PROVIDER(type=Partition, table=auto_t0, index=index1)
    expect:
      order: c3
      columns: [ "c1 string", "c3 int", "c7 timestamp",  "w1_c4_sum double", "w2_c4_sum double" ]
      rows:
        - [ "aa", 1, 1590738990000, 1.0, 1.0 ]
        - [ "aa", 2, 1590738991000, 2.0, 2.0 ]
        - [ "aa", 3, 1590738992000, 3.0, 3.0 ]
        - [ "aa", 4, 1590738993000, 4.0, 4.0 ]
        - [ "aa", 5, 1590738994000, 5.0, 5.0 ]
        - [ "aa", 6, 1590738995000, 6.0, 5.0 ]
        - [ "aa", 7, 1590738999000, 7.0, 4.0 ]
        - [ "aa", 8, 1590739001000, 8.0, 3.0 ]
        - [ "aa", 9, 1590739002000, 8.0, 3.0 ]

  - id: 27-3
    desc: ROWS and ROWS_RANGE Pure History Window Cant' Be Merge
    mode: rtidb-batch-unsupport
    inputs:
      - columns: [ "c1 string","c3 int","c4 double","c7 timestamp" ]
        indexs: [ "index1:c1:c7" ]
        rows:
          - [ "aa",1, 1.0, 1590738990000 ]
          - [ "aa",2, 1.0, 1590738991000 ]
          - [ "aa",3, 1.0, 1590738992000 ]
          - [ "aa",4, 1.0, 1590738993000 ]
          - [ "aa",5, 1.0, 1590738994000 ]
          - [ "aa",6, 1.0, 1590738995000 ]
          - [ "aa",7, 1.0, 1590738999000 ]
          - [ "aa",8, 1.0, 1590739001000 ]
          - [ "aa",9, 1.0, 1590739002000 ]
    sql: |
      SELECT c1, c3, c7,
      sum(c4) OVER w1 as w1_c4_sum,
      sum(c4) OVER w2 as w2_c4_sum
      FROM {0} WINDOW
      w1 AS (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS BETWEEN 3 PRECEDING AND CURRENT ROW),
      w2 AS (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 6s PRECEDING AND 2s PRECEDING);
    request_plan: |
      SIMPLE_PROJECT(sources=(c1, c3, c7, w1_c4_sum, w2_c4_sum))
        REQUEST_JOIN(type=kJoinTypeConcat)
          PROJECT(type=Aggregation)
            REQUEST_UNION(partition_keys=(), orders=() ASC, rows=(auto_t0.c7, -3, 0), index_keys=(auto_t0.c1))
              DATA_PROVIDER(request=auto_t0)
              DATA_PROVIDER(type=Partition, table=auto_t0, index=index1)
          PROJECT(type=Aggregation)
            REQUEST_UNION(partition_keys=(), orders=() ASC, range=(auto_t0.c7, -6000, -2000), index_keys=(auto_t0.c1))
              DATA_PROVIDER(request=auto_t0)
              DATA_PROVIDER(type=Partition, table=auto_t0, index=index1)

    expect:
      order: c3
      columns: [ "c1 string", "c3 int", "c7 timestamp",  "w1_c4_sum double", "w2_c4_sum double" ]
      rows:
        - [ "aa", 1, 1590738990000, 1.0, 0.0 ]
        - [ "aa", 2, 1590738991000, 2.0, 0.0 ]
        - [ "aa", 3, 1590738992000, 3.0, 1.0 ]
        - [ "aa", 4, 1590738993000, 4.0, 2.0 ]
        - [ "aa", 5, 1590738994000, 4.0, 3.0 ]
        - [ "aa", 6, 1590738995000, 4.0, 4.0 ]
        - [ "aa", 7, 1590738999000, 4.0, 3.0 ]
        - [ "aa", 8, 1590739001000, 4.0, 2.0 ]
        - [ "aa", 9, 1590739002000, 4.0, 1.0 ]
  -
    id: 28
    desc: 匿名窗口
    inputs:
      -
        columns: ["c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c1:c7"]
        rows:
          - ["aa",20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - ["aa",21,31,1.2,2.2,1590738991000,"2020-05-02"]
          - ["aa",22,32,1.3,2.3,1590738992000,"2020-05-03"]
          - ["aa",23,33,1.4,2.4,1590738993000,"2020-05-04"]
          - ["bb",24,34,1.5,2.5,1590738994000,"2020-05-05"]
    sql: |
      SELECT c1, c3, sum(c4) OVER (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as w1_c4_sum FROM {0};
    expect:
      order: c3
      columns: ["c1 string","c3 int","w1_c4_sum bigint"]
      rows:
        - ["aa",20,30]
        - ["aa",21,61]
        - ["aa",22,93]
        - ["aa",23,96]
        - ["bb",24,34]
  -
    id: 29
    desc: 匿名窗口-没有小括号
    inputs:
      -
        columns: ["c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c1:c7"]
        rows:
          - ["aa",20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - ["aa",21,31,1.2,2.2,1590738991000,"2020-05-02"]
          - ["aa",22,32,1.3,2.3,1590738992000,"2020-05-03"]
          - ["aa",23,33,1.4,2.4,1590738993000,"2020-05-04"]
          - ["bb",24,34,1.5,2.5,1590738994000,"2020-05-05"]
    sql: |
      SELECT c1, c3, sum(c4) OVER PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW as w1_c4_sum FROM {0};
    expect:
      success: false
  -
    id: 30
    desc: smallint为partition by
    inputs:
      -
        columns : ["id int","c1 string","c3 smallint","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c3:c7"]
        rows:
          - [1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - [2,"bb",20,31,1.2,2.2,1590738991000,"2020-05-02"]
          - [3,"cc",20,32,1.3,2.3,1590738992000,"2020-05-03"]
          - [4,"dd",20,33,1.4,2.4,1590738993000,"2020-05-04"]
          - [5,"ee",21,34,1.5,2.5,1590738994000,"2020-05-05"]
    sql: |
      SELECT id, c1, c3, sum(c4) OVER w1 as w1_c4_sum FROM {0} WINDOW w1 AS (PARTITION BY {0}.c3 ORDER BY {0}.c7 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: ["id int","c1 string","c3 smallint","w1_c4_sum bigint"]
      rows:
        - [1,"aa",20,30]
        - [2,"bb",20,61]
        - [3,"cc",20,93]
        - [4,"dd",20,96]
        - [5,"ee",21,34]
  -
    id: 31
    desc: bool为partition by
    tags: ["TODO", "bug"]
    inputs:
      -
        columns : ["id int","c1 string","c2 bool","c3 smallint","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c2:c7"]
        rows:
          - [1,"aa",true,20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - [2,"bb",true,20,31,1.2,2.2,1590738991000,"2020-05-02"]
          - [3,"cc",true,20,32,1.3,2.3,1590738992000,"2020-05-03"]
          - [4,"dd",true,20,33,1.4,2.4,1590738993000,"2020-05-04"]
          - [5,"ee",false,21,34,1.5,2.5,1590738994000,"2020-05-05"]
    sql: |
      SELECT id, c1, c2, sum(c4) OVER w1 as w1_c4_sum FROM {0} WINDOW w1 AS (PARTITION BY {0}.c2 ORDER BY {0}.c7 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: ["id int","c1 string","c2 bool","w1_c4_sum bigint"]
      rows:
        - [1,"aa",true,30]
        - [2,"bb",true,61]
        - [3,"cc",true,93]
        - [4,"dd",true,96]
        - [5,"ee",false,34]
  -
    id: 32
    desc: no partition by
    tags: ["TODO"]
    inputs:
      -
        columns : ["id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c3:c7"]
        rows:
          - [1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - [2,"bb",20,31,1.2,2.2,1590738991000,"2020-05-02"]
          - [3,"cc",20,32,1.3,2.3,1590738992000,"2020-05-03"]
          - [4,"dd",20,33,1.4,2.4,1590738993000,"2020-05-04"]
          - [5,"ee",21,34,1.5,2.5,1590738994000,"2020-05-05"]
    sql: |
      SELECT id, c1, c3, sum(c4) OVER w1 as w1_c4_sum FROM {0} WINDOW w1 AS (ORDER BY {0}.c7 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW);
    expect:
      success: false
  -
    id: 33
    desc: int为order by
    tags: ["TODO"]
    inputs:
      -
        columns : ["id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c1:c7"]
        rows:
          - [1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - [2,"bb",20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - [3,"cc",20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - [4,"dd",20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - [5,"ee",21,31,1.2,2.2,1590738991000,"2020-05-02"]
    sql: |
      SELECT id, c1, c4, count(c4) OVER w1 as w1_c4_count FROM {0} WINDOW w1 AS (PARTITION BY {0}.c7 ORDER BY {0}.c3 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW);
    expect:
      success: false
  -
    id: 34
    desc: smallint为order by
    tags: ["TODO"]
    inputs:
      -
        columns : ["id int","c1 string","c3 smallint","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c1:c7"]
        rows:
          - [1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - [2,"bb",20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - [3,"cc",20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - [4,"dd",20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - [5,"ee",21,31,1.2,2.2,1590738991000,"2020-05-02"]
    sql: |
      SELECT id, c1, c4, count(c4) OVER w1 as w1_c4_count FROM {0} WINDOW w1 AS (PARTITION BY {0}.c7 ORDER BY {0}.c3 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW);
    expect:
      success: false
  -
    id: 35
    desc: bool为order by
    inputs:
      -
        columns : ["id int","c1 string","c2 bool","c3 smallint","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c1:c7"]
        rows:
          - [1,"aa",true,20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - [2,"bb",true,20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - [3,"cc",true,20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - [4,"dd",true,20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - [5,"ee",false,21,31,1.2,2.2,1590738991000,"2020-05-02"]
    sql: |
      SELECT id, c1, c4, count(c4) OVER w1 as w1_c4_count FROM {0} WINDOW w1 AS (PARTITION BY {0}.c7 ORDER BY {0}.c2 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW);
    expect:
      success: false

  -
    id: 36
    desc: no order by
    tags: ["TODO","bug待修复"]
    inputs:
      -
        columns : ["id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c8:c4"]
    sql: |
      SELECT id, c1, c4, count(c4) OVER w1 as w1_c4_count FROM {0} WINDOW w1 AS (PARTITION BY {0}.c8 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW);
    expect:
      success: false
  -
    id: 37
    desc: no frame
    inputs:
      -
        columns: ["c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c1:c7"]
        rows:
          - ["aa",20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - ["aa",21,31,1.2,2.2,1590738991000,"2020-05-02"]
          - ["aa",22,32,1.3,2.3,1590738992000,"2020-05-03"]
          - ["aa",23,33,1.4,2.4,1590738993000,"2020-05-04"]
          - ["bb",24,34,1.5,2.5,1590738994000,"2020-05-05"]
    sql: |
      SELECT c1, c3, sum(c4) OVER w1 as w1_c4_sum FROM {0} WINDOW w1 AS (PARTITION BY {0}.c1 ORDER BY {0}.c7);
    expect:
      success: false
  -
    id: 38
    desc: bigint为order by-加单位
    inputs:
      -
        columns : ["id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c3:c4"]
        rows:
          - [1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - [2,"bb",20,31,1.1,2.1,1590738990000,"2020-05-01"]
          - [3,"cc",20,32,1.1,2.1,1590738990000,"2020-05-01"]
          - [4,"dd",20,33,1.1,2.1,1590738990000,"2020-05-01"]
          - [5,"ee",21,34,1.2,2.2,1590738991000,"2020-05-02"]
    sql: |
      SELECT id, c1, c4, count(c4) OVER w1 as w1_c4_count FROM {0} WINDOW w1 AS (PARTITION BY {0}.c3 ORDER BY {0}.c4 ROWS_RANGE BETWEEN 2s PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: ["id int","c1 string","c4 bigint","w1_c4_count bigint"]
      rows:
        - [1,"aa",30,1]
        - [2,"bb",31,2]
        - [3,"cc",32,3]
        - [4,"dd",33,4]
        - [5,"ee",34,1]
  -
    id: 39
    desc: timestamp为order by-不加单位
    inputs:
      -
        columns : ["id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c3:c7"]
        rows:
          - [1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - [2,"bb",20,31,1.1,2.1,1590738990001,"2020-05-01"]
          - [3,"cc",20,32,1.1,2.1,1590738990002,"2020-05-01"]
          - [4,"dd",20,33,1.1,2.1,1590738990003,"2020-05-01"]
          - [5,"ee",21,34,1.2,2.2,1590738991000,"2020-05-02"]
    sql: |
      SELECT id, c1, c4, count(c4) OVER w1 as w1_c4_count FROM {0} WINDOW w1 AS (PARTITION BY {0}.c3 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2 PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: ["id int","c1 string","c4 bigint","w1_c4_count bigint"]
      rows:
        - [1,"aa",30,1]
        - [2,"bb",31,2]
        - [3,"cc",32,3]
        - [4,"dd",33,3]
        - [5,"ee",34,1]
  -
    id: 40
    desc: timestamp为order by-加单位-m
    inputs:
      -
        columns : ["id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c3:c7"]
        rows:
          - [1,"aa",20,30,1.1,2.1,1606755660000,"2020-05-01"]
          - [2,"bb",20,31,1.1,2.1,1606755720000,"2020-05-01"]
          - [3,"cc",20,32,1.1,2.1,1606755780000,"2020-05-01"]
          - [4,"dd",20,33,1.1,2.1,1606755840000,"2020-05-01"]
          - [5,"ee",21,34,1.2,2.2,1606755660000,"2020-05-02"]
    sql: |
      SELECT id, c1, c4, count(c4) OVER w1 as w1_c4_count FROM {0} WINDOW w1 AS (PARTITION BY {0}.c3 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2m PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: ["id int","c1 string","c4 bigint","w1_c4_count bigint"]
      rows:
        - [1,"aa",30,1]
        - [2,"bb",31,2]
        - [3,"cc",32,3]
        - [4,"dd",33,3]
        - [5,"ee",34,1]
  -
    id: 41
    desc: timestamp为order by-加单位-h
    inputs:
      -
        columns : ["id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c3:c7"]
        rows:
          - [1,"aa",20,30,1.1,2.1,1606755600000,"2020-05-01"]
          - [2,"bb",20,31,1.1,2.1,1606759200000,"2020-05-01"]
          - [3,"cc",20,32,1.1,2.1,1606762800000,"2020-05-01"]
          - [4,"dd",20,33,1.1,2.1,1606766400000,"2020-05-01"]
          - [5,"ee",21,34,1.2,2.2,1606766400000,"2020-05-02"]
    sql: |
      SELECT id, c1, c4, count(c4) OVER w1 as w1_c4_count FROM {0} WINDOW w1 AS (PARTITION BY {0}.c3 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2h PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: ["id int","c1 string","c4 bigint","w1_c4_count bigint"]
      rows:
        - [1,"aa",30,1]
        - [2,"bb",31,2]
        - [3,"cc",32,3]
        - [4,"dd",33,3]
        - [5,"ee",34,1]
  -
    id: 42
    desc: timestamp为order by-加单位-d
    inputs:
      -
        columns : ["id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c3:c7"]
        rows:
          - [1,"aa",20,30,1.1,2.1,1606752000000,"2020-05-01"]
          - [2,"bb",20,31,1.1,2.1,1606838400000,"2020-05-01"]
          - [3,"cc",20,32,1.1,2.1,1606924800000,"2020-05-01"]
          - [4,"dd",20,33,1.1,2.1,1607011200000,"2020-05-01"]
          - [5,"ee",21,34,1.2,2.2,1606752000000,"2020-05-02"]
    sql: |
      SELECT id, c1, c4, count(c4) OVER w1 as w1_c4_count FROM {0} WINDOW w1 AS (PARTITION BY {0}.c3 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2d PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: ["id int","c1 string","c4 bigint","w1_c4_count bigint"]
      rows:
        - [1,"aa",30,1]
        - [2,"bb",31,2]
        - [3,"cc",32,3]
        - [4,"dd",33,3]
        - [5,"ee",34,1]
  -
    id: 43
    desc: bigint为order by-前后都不加单位，1-2
    inputs:
      -
        columns : ["id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c3:c4"]
        rows:
          - [1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - [2,"bb",20,31,1.1,2.1,1590738990000,"2020-05-01"]
          - [3,"cc",20,32,1.1,2.1,1590738990000,"2020-05-01"]
          - [4,"dd",20,33,1.1,2.1,1590738990000,"2020-05-01"]
          - [5,"ee",21,34,1.2,2.2,1590738991000,"2020-05-02"]
    sql: |
      SELECT id, c1, c4, count(c4) OVER w1 as w1_c4_count FROM {0} WINDOW w1 AS (PARTITION BY {0}.c3 ORDER BY {0}.c4 ROWS_RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING);
    expect:
      order: id
      columns: ["id int","c1 string","c4 bigint","w1_c4_count bigint"]
      rows:
        - [1,"aa",30,0]
        - [2,"bb",31,1]
        - [3,"cc",32,2]
        - [4,"dd",33,2]
        - [5,"ee",34,0]
  -
    id: 44
    desc: bigint为order by-前后都不加单位，0-2
    inputs:
      -
        columns : ["id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c3:c4"]
        rows:
          - [1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - [2,"bb",20,31,1.1,2.1,1590738990000,"2020-05-01"]
          - [3,"cc",20,32,1.1,2.1,1590738990000,"2020-05-01"]
          - [4,"dd",20,33,1.1,2.1,1590738990000,"2020-05-01"]
          - [5,"ee",21,34,1.2,2.2,1590738991000,"2020-05-02"]
    sql: |
      SELECT id, c1, c4, count(c4) OVER w1 as w1_c4_count FROM {0} WINDOW w1 AS (PARTITION BY {0}.c3 ORDER BY {0}.c4 ROWS_RANGE BETWEEN 2 PRECEDING AND 0 PRECEDING);
    expect:
      order: id
      columns: ["id int","c1 string","c4 bigint","w1_c4_count bigint"]
      rows:
        - [1,"aa",30,1]
        - [2,"bb",31,2]
        - [3,"cc",32,3]
        - [4,"dd",33,3]
        - [5,"ee",34,1]
  -
    id: 45
    desc: bigint为order by-前后都不加单位，-1-2
    inputs:
      -
        columns : ["id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c3:c4"]
        rows:
          - [1,"aa",20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - [2,"bb",20,31,1.1,2.1,1590738990000,"2020-05-01"]
          - [3,"cc",20,32,1.1,2.1,1590738990000,"2020-05-01"]
          - [4,"dd",20,33,1.1,2.1,1590738990000,"2020-05-01"]
          - [5,"ee",21,34,1.2,2.2,1590738991000,"2020-05-02"]
    sql: |
      SELECT id, c1, c4, count(c4) OVER w1 as w1_c4_count FROM {0} WINDOW w1 AS (PARTITION BY {0}.c3 ORDER BY {0}.c4 ROWS_RANGE BETWEEN 2 PRECEDING AND -1 PRECEDING);
    expect:
      order: id
      columns: ["id int","c1 string","c4 bigint","w1_c4_count bigint"]
      rows:
        - [1,"aa",30,1]
        - [2,"bb",31,2]
        - [3,"cc",32,3]
        - [4,"dd",33,3]
        - [5,"ee",34,1]
  -
    id: 46
    desc: timestamp为order by-2s-1s
    inputs:
      -
        columns : ["c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c1:c7"]
        rows:
          - ["aa",20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - ["aa",21,31,1.2,2.2,1590738991000,"2020-05-02"]
          - ["aa",22,32,1.3,2.3,1590738992000,"2020-05-03"]
          - ["aa",23,33,1.4,2.4,1590738993000,"2020-05-04"]
          - ["bb",24,34,1.5,2.5,1590738994000,"2020-05-05"]
    sql: |
      SELECT c1, c3, sum(c4) OVER w1 as w1_c4_sum FROM {0} WINDOW w1 AS (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND 1s PRECEDING);
    expect:
      order: c3
      columns: ["c1 string","c3 int","w1_c4_sum bigint"]
      rows:
        - ["aa",20,0]
        - ["aa",21,30]
        - ["aa",22,61]
        - ["aa",23,63]
        - ["bb",24,0]
  -
    id: 47
    desc: timestamp为order by-2s-0s
    inputs:
      -
        columns : ["c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c1:c7"]
        rows:
          - ["aa",20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - ["aa",21,31,1.2,2.2,1590738991000,"2020-05-02"]
          - ["aa",22,32,1.3,2.3,1590738992000,"2020-05-03"]
          - ["aa",23,33,1.4,2.4,1590738993000,"2020-05-04"]
          - ["bb",24,34,1.5,2.5,1590738994000,"2020-05-05"]
    sql: |
      SELECT c1, c3, sum(c4) OVER w1 as w1_c4_sum FROM {0} WINDOW w1 AS (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND 0s PRECEDING);
    expect:
      order: c3
      columns: ["c1 string","c3 int","w1_c4_sum bigint"]
      rows:
        - ["aa",20,30]
        - ["aa",21,61]
        - ["aa",22,93]
        - ["aa",23,96]
        - ["bb",24,34]
  -
    id: 48
    desc: timestamp为order by-2s-0
    inputs:
      -
        columns : ["c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c1:c7"]
        rows:
          - ["aa",20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - ["aa",21,31,1.2,2.2,1590738991000,"2020-05-02"]
          - ["aa",22,32,1.3,2.3,1590738992000,"2020-05-03"]
          - ["aa",23,33,1.4,2.4,1590738993000,"2020-05-04"]
          - ["bb",24,34,1.5,2.5,1590738994000,"2020-05-05"]
    sql: |
      SELECT c1, c3, sum(c4) OVER w1 as w1_c4_sum FROM {0} WINDOW w1 AS (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND 0 PRECEDING);
    expect:
      order: c3
      columns: ["c1 string","c3 int","w1_c4_sum bigint"]
      rows:
        - ["aa",20,30]
        - ["aa",21,61]
        - ["aa",22,93]
        - ["aa",23,96]
        - ["bb",24,34]
  -
    id: 49
    desc: timestamp为order by-2s-1
    inputs:
      -
        columns : ["c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c1:c7"]
        rows:
          - ["aa",20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - ["aa",21,31,1.2,2.2,1590738990001,"2020-05-02"]
          - ["aa",22,32,1.3,2.3,1590738990002,"2020-05-03"]
          - ["aa",23,33,1.4,2.4,1590738990003,"2020-05-04"]
          - ["bb",24,34,1.5,2.5,1590738990004,"2020-05-05"]
    sql: |
      SELECT c1, c3, sum(c4) OVER w1 as w1_c4_sum FROM {0} WINDOW w1 AS (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2s PRECEDING AND 1 PRECEDING);
    expect:
      order: c3
      columns: ["c1 string","c3 int","w1_c4_sum bigint"]
      rows:
        - ["aa",20,0]
        - ["aa",21,30]
        - ["aa",22,61]
        - ["aa",23,93]
        - ["bb",24,0]
  -
    id: 50
    desc: timestamp为order by-前后单位不一样
    inputs:
      -
        columns : ["c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c1:c7"]
        rows:
          - ["aa",20,30,1.1,2.1,1590738990000,"2020-05-01"]
          - ["aa",21,31,1.2,2.2,1590738991000,"2020-05-02"]
          - ["aa",22,32,1.3,2.3,1590738992000,"2020-05-03"]
          - ["aa",23,33,1.4,2.4,1590738993000,"2020-05-04"]
          - ["bb",24,34,1.5,2.5,1590738994000,"2020-05-05"]
    sql: |
      SELECT c1, c3, sum(c4) OVER w1 as w1_c4_sum FROM {0} WINDOW w1 AS (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 2m PRECEDING AND 1s PRECEDING);
    expect:
      order: c3
      columns: ["c1 string","c3 int","w1_c4_sum bigint"]
      rows:
        - ["aa",20,0]
        - ["aa",21,30]
        - ["aa",22,61]
        - ["aa",23,93]
        - ["bb",24,0]
