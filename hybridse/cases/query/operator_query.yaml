# Copyright 2021 4Paradigm
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

db: test_zw
debugs:
cases:
  - id: 0
    desc: 逻辑运算AND
    mode: request
    db: db1
    sql: select col1, col2, col1 >2 AND col2 > 2 as flag from t1;
    inputs:
      - name: t1
        schema: col1:int32, col2:int64
        index: index1:col1:col2
        data: |
          1, 2
          2, 3
          3, 4
          4, 5
    expect:
      schema: col1:int32, col2:int64, flag:bool
      order: col1
      data: |
        1, 2, false
        2, 3, false
        3, 4, true
        4, 5, true
  - id: 1
    desc: 逻辑运算&&
    tags: ["TODO", "zetasql-unsupport"]
    mode: request
    db: db1
    sql: select col1, col2, (col1 >2) && (col2 > 2) as flag from t1;
    inputs:
      - name: t1
        schema: col1:int32, col2:int64
        index: index1:col1:col2
        data: |
          1, 2
          2, 3
          3, 4
          4, 5
    expect:
      schema: col1:int32, col2:int64, flag:bool
      order: col1
      data: |
        1, 2, false
        2, 3, false
        3, 4, true
        4, 5, true
  - id: 2
    desc: 逻辑运算OR
    mode: request
    db: db1
    sql: select col1, col2, (col1 >2) OR (col2 > 2) as flag from t1;
    inputs:
      - name: t1
        schema: col1:int32, col2:int64
        index: index1:col1:col2
        data: |
          1, 2
          2, 3
          3, 4
          4, 5
    expect:
      schema: col1:int32, col2:int64, flag:bool
      order: col1
      data: |
        1, 2, false
        2, 3, true
        3, 4, true
        4, 5, true
  - id: 3
    desc: 逻辑运算||
    tags: ["TODO", "zetasql-unsupport"]
    mode: request
    db: db1
    sql: select col1, col2, (col1 >2) || (col2 > 2) as flag from t1;
    inputs:
      - name: t1
        schema: col1:int32, col2:int64
        index: index1:col1:col2
        data: |
          1, 2
          2, 3
          3, 4
          4, 5
    expect:
      schema: col1:int32, col2:int64, flag:bool
      order: col1
      data: |
        1, 2, false
        2, 3, true
        3, 4, true
        4, 5, true
  - id: 4
    desc: 逻辑运算NOT
    mode: request
    db: db1
    sql: select col1, col2, NOT ((col1 >2) OR (col2 > 2)) as flag from t1;
    inputs:
      - name: t1
        schema: col1:int32, col2:int64
        index: index1:col1:col2
        data: |
          1, 2
          2, 3
          3, 4
          4, 5
    expect:
      schema: col1:int32, col2:int64, flag:bool
      order: col1
      data: |
        1, 2, true
        2, 3, false
        3, 4, false
        4, 5, false
  - id: 5
    desc: 逻辑运算!
    mode: request
    db: db1
    sql: select col1, col2, !((col1 >2) OR (col2 > 2)) as flag from t1;
    inputs:
      - name: t1
        schema: col1:int32, col2:int64
        index: index1:col1:col2
        data: |
          1, 2
          2, 3
          3, 4
          4, 5
    expect:
      schema: col1:int32, col2:int64, flag:bool
      order: col1
      data: |
        1, 2, true
        2, 3, false
        3, 4, false
        4, 5, false
  - id: 6
    desc: 逻辑运算XOR
    mode: request
    db: db1
    sql: select col1, col2, (col1 > 2) XOR (col2 > 2) as flag from t1;
    inputs:
      - name: t1
        schema: col1:int32, col2:int64
        index: index1:col1:col2
        data: |
          1, 2
          2, 3
          3, 4
          4, 5
    expect:
      schema: col1:int32, col2:int64, flag:bool
      order: col1
      data: |
        1, 2, false
        2, 3, true
        3, 4, false
        4, 5, false

  - id: 7
    desc: 比较运算<>
    mode: request
    db: db1
    sql: select col1, col2, col1 <> 2 as flag from t1;
    inputs:
      - name: t1
        schema: col1:int32, col2:int64
        index: index1:col1:col2
        data: |
          1, 2
          2, 3
          3, 4
          4, 5
    expect:
      schema: col1:int32, col2:int64, flag:bool
      order: col1
      data: |
        1, 2, true
        2, 3, false
        3, 4, true
        4, 5, true

  - id: 8
    desc: 算术运算DIV
    mode: request
    db: db1
    sql: select col1, col2, col2 DIV col1 as div21 from t1;
    inputs:
      - name: t1
        schema: col1:int32, col2:int64
        index: index1:col1:col2
        data: |
          1, 2
          2, 3
          3, 7
          4, 13
    expect:
      schema: col1:int32, col2:int64, div21:int64
      order: col1
      data: |
        1, 2, 2
        2, 3, 1
        3, 7, 2
        4, 13, 3
  - id: 9
    desc: 算术运算MOD
    mode: request
    db: db1
    sql: select col1, col2, col2 MOD col1 as mod21 from t1;
    inputs:
      - name: t1
        schema: col1:int32, col2:int64
        index: index1:col1:col2
        data: |
          1, 2
          2, 3
          3, 7
          4, 14
    expect:
      schema: col1:int32, col2:int64, mod21:int64
      order: col1
      data: |
        1, 2, 0
        2, 3, 1
        3, 7, 1
        4, 14, 2
