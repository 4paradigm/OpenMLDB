/*
 * Copyright 2021 4Paradigm
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto2";
package hybridse.common;
option cc_generic_services = false;
option java_package = "com._4paradigm.hybridse.common";
option java_outer_classname = "Common";

enum StatusCode {
    kOk = 0;
    kRunning = 1;
    // General error
    kRunError = 2;
    // type error, invalid type, unsupported type. etc
    kTypeError = 3;

    // Null pointer error
    kNullPointer = 10;
    // Null pointer error: input parameter is null
    kNullInputPointer = 11;
    // Null pointer error: output parameter is null
    kNullOutputPointer = 12;

    // Support error
    kUnSupport = 100;
    kUnsupportSql = 101;
    kUnsupportPlan = 102;
    // UnSupport under performance sensitive environment like Online env.
    kUnsupportPerformanceSensitive = 103;
    // UnSupport under distributed environment
    kUnsupportDistribution = 104;
    // The SQL Cmd isn't supported
    kUnSupportCommand = 105;

    kPlanError = 1000;
    // sql syntax error
    kSyntaxError = 1001;
    // sql syntax is correct but fail to parse it into a ast tree
    kSqlAstError = 1002;
    // fail to generate logical plan
    kLogicalPlanError = 1003;
    // fail to generate physical plan
    kPhysicalPlanError = 1004;
    // fail to generate execution plan
    kExecutionPlanError = 1005;
    // incorrect engine mode
    kEngineModeError = 1006;
    // something goes wrong with cache
    kEngineCacheError = 1007;
    // invalid common indices config for batch request mode query
    kCommonIndexError = 1008;

    // error triggered by code gen module
    kCodegenError = 1100;
    // error when generate code to load a value
    kCodegenLoadValueError = 1101;
    // error when generate code to store a value
    kCodegenStoreValueError = 1102;
    // error when generate code for a expression
    kCodegenExpressionError = 1103;
    // error when generate code for a function call
    kCodegenCallFunctionError = 1104;
    // error when generate code for a user-define function
    kCodegenUdfError = 1105;
    // error when generate code for a user-define aggregation function
    kCodegenUdafError = 1106;
    // error when generate code to get a field from a row
    kCodegenGetFieldError = 1107;
    // error when generate code to encode a row
    kCodegenEncodeError = 1108;
    // error when generate code to decode a row
    kCodegenDecodeError = 1109;
    // error when register external udf function
    kExternalUDFError = 1110;

    // error with catalog
    kCatalogError = 1200;
    // error with catalog, database not exist in the catalog
    kNoDatabase = 1201;
    // error with catalog, table not exist in the catalog
    kTableNotFound = 1202;
    // error with catalog, procedure not exist in the catalog
    kProcedureNotFound = 1203;
    // error with catalog, column not exist in the given table
    kColumnNotFound = 1204;
    // error with catalog, index not exist in the given table
    kIndexNotFound=1205;
    // error with catalog, database already exist in the catalog
    kDatabaseExists = 1206;
    // error with catalog, table already exist in the catalog
    kTableExists = 1207;
    // error with catalog, column already exist in the given table
    kColumnExists = 1208;
    // error with column resolve with ambiguous columns
    kColumnAmbiguous= 1209;

    kCodecError = 1300;
    kSchemaCodecError = 1301;

    kRuntimeError = 1400;
    kJitError = 1401;
    kCoreAPIRuntimeError = 1402;
    // error with run session
    kRunSessionError = 1403;

    // error with rpc(all other errors)
    kRpcError = 1500;
    // error with rpc, fail to connect with peer
    kConnError = 1501;
    // error with rpc, invalid rpc request
    kRequestError = 1502;
    // error with rpc, invalid rpc response
    kResponseError = 1503;
    // error with rpc, time out -- unused
    kTimeoutError = 1504;
    // error with rpc, fail to invoke remote call
    kCallRpcMethodError = 1505;

    // storage error
    kStorageError = 1600;
    // fail to put a row into the given tablet
    kTablePutFailed = 1601;

    kExternalError = 1700;
    kFileIOError = 1701;

    kTestError = 1800;
    kTestEngineError = 1801;
    kSqlCaseError = 1802;
    kTestRunSessionError = 1803;

    kCmdError = 2000;
    // error is set by server, use code openmldb::base::ReturnCode
    kServerError = 2001;
}

message Status {
    optional StatusCode code = 1;
    optional string msg = 2;
    optional string trace = 3;
}
