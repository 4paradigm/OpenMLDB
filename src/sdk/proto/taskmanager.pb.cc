// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: taskmanager.proto

#include "taskmanager.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ExternalFun;
}  // namespace protobuf_common_2eproto
namespace protobuf_taskmanager_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_taskmanager_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ExportOfflineDataRequest_ConfEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_taskmanager_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ImportOfflineDataRequest_ConfEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_taskmanager_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ImportOnlineDataRequest_ConfEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_taskmanager_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_JobInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_taskmanager_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RunBatchAndShowRequest_ConfEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_taskmanager_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RunBatchSqlRequest_ConfEntry_DoNotUse;
}  // namespace protobuf_taskmanager_2eproto
namespace openmldb {
namespace taskmanager {
class JobInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JobInfo>
      _instance;
} _JobInfo_default_instance_;
class ShowJobsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShowJobsRequest>
      _instance;
} _ShowJobsRequest_default_instance_;
class ShowJobsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShowJobsResponse>
      _instance;
} _ShowJobsResponse_default_instance_;
class ShowJobRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShowJobRequest>
      _instance;
} _ShowJobRequest_default_instance_;
class ShowJobResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShowJobResponse>
      _instance;
} _ShowJobResponse_default_instance_;
class StopJobRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StopJobRequest>
      _instance;
} _StopJobRequest_default_instance_;
class StopJobResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StopJobResponse>
      _instance;
} _StopJobResponse_default_instance_;
class DeleteJobRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteJobRequest>
      _instance;
} _DeleteJobRequest_default_instance_;
class DeleteJobResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteJobResponse>
      _instance;
} _DeleteJobResponse_default_instance_;
class ShowBatchVersionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShowBatchVersionRequest>
      _instance;
} _ShowBatchVersionRequest_default_instance_;
class RunBatchSqlRequest_ConfEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunBatchSqlRequest_ConfEntry_DoNotUse>
      _instance;
} _RunBatchSqlRequest_ConfEntry_DoNotUse_default_instance_;
class RunBatchSqlRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunBatchSqlRequest>
      _instance;
} _RunBatchSqlRequest_default_instance_;
class RunBatchSqlResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunBatchSqlResponse>
      _instance;
} _RunBatchSqlResponse_default_instance_;
class RunBatchAndShowRequest_ConfEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunBatchAndShowRequest_ConfEntry_DoNotUse>
      _instance;
} _RunBatchAndShowRequest_ConfEntry_DoNotUse_default_instance_;
class RunBatchAndShowRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunBatchAndShowRequest>
      _instance;
} _RunBatchAndShowRequest_default_instance_;
class ImportOnlineDataRequest_ConfEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImportOnlineDataRequest_ConfEntry_DoNotUse>
      _instance;
} _ImportOnlineDataRequest_ConfEntry_DoNotUse_default_instance_;
class ImportOnlineDataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImportOnlineDataRequest>
      _instance;
} _ImportOnlineDataRequest_default_instance_;
class ImportOfflineDataRequest_ConfEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImportOfflineDataRequest_ConfEntry_DoNotUse>
      _instance;
} _ImportOfflineDataRequest_ConfEntry_DoNotUse_default_instance_;
class ImportOfflineDataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImportOfflineDataRequest>
      _instance;
} _ImportOfflineDataRequest_default_instance_;
class ExportOfflineDataRequest_ConfEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExportOfflineDataRequest_ConfEntry_DoNotUse>
      _instance;
} _ExportOfflineDataRequest_ConfEntry_DoNotUse_default_instance_;
class ExportOfflineDataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExportOfflineDataRequest>
      _instance;
} _ExportOfflineDataRequest_default_instance_;
class DropOfflineTableRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DropOfflineTableRequest>
      _instance;
} _DropOfflineTableRequest_default_instance_;
class DropOfflineTableResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DropOfflineTableResponse>
      _instance;
} _DropOfflineTableResponse_default_instance_;
class GetJobLogRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetJobLogRequest>
      _instance;
} _GetJobLogRequest_default_instance_;
class GetJobLogResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetJobLogResponse>
      _instance;
} _GetJobLogResponse_default_instance_;
class CreateFunctionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateFunctionRequest>
      _instance;
} _CreateFunctionRequest_default_instance_;
class CreateFunctionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateFunctionResponse>
      _instance;
} _CreateFunctionResponse_default_instance_;
class DropFunctionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DropFunctionRequest>
      _instance;
} _DropFunctionRequest_default_instance_;
class DropFunctionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DropFunctionResponse>
      _instance;
} _DropFunctionResponse_default_instance_;
}  // namespace taskmanager
}  // namespace openmldb
namespace protobuf_taskmanager_2eproto {
static void InitDefaultsJobInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_JobInfo_default_instance_;
    new (ptr) ::openmldb::taskmanager::JobInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::taskmanager::JobInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_JobInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsJobInfo}, {}};

static void InitDefaultsShowJobsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_ShowJobsRequest_default_instance_;
    new (ptr) ::openmldb::taskmanager::ShowJobsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::taskmanager::ShowJobsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShowJobsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShowJobsRequest}, {}};

static void InitDefaultsShowJobsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_ShowJobsResponse_default_instance_;
    new (ptr) ::openmldb::taskmanager::ShowJobsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::taskmanager::ShowJobsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ShowJobsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsShowJobsResponse}, {
      &protobuf_taskmanager_2eproto::scc_info_JobInfo.base,}};

static void InitDefaultsShowJobRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_ShowJobRequest_default_instance_;
    new (ptr) ::openmldb::taskmanager::ShowJobRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::taskmanager::ShowJobRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShowJobRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShowJobRequest}, {}};

static void InitDefaultsShowJobResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_ShowJobResponse_default_instance_;
    new (ptr) ::openmldb::taskmanager::ShowJobResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::taskmanager::ShowJobResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ShowJobResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsShowJobResponse}, {
      &protobuf_taskmanager_2eproto::scc_info_JobInfo.base,}};

static void InitDefaultsStopJobRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_StopJobRequest_default_instance_;
    new (ptr) ::openmldb::taskmanager::StopJobRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::taskmanager::StopJobRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StopJobRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStopJobRequest}, {}};

static void InitDefaultsStopJobResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_StopJobResponse_default_instance_;
    new (ptr) ::openmldb::taskmanager::StopJobResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::taskmanager::StopJobResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StopJobResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStopJobResponse}, {
      &protobuf_taskmanager_2eproto::scc_info_JobInfo.base,}};

static void InitDefaultsDeleteJobRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_DeleteJobRequest_default_instance_;
    new (ptr) ::openmldb::taskmanager::DeleteJobRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::taskmanager::DeleteJobRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteJobRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteJobRequest}, {}};

static void InitDefaultsDeleteJobResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_DeleteJobResponse_default_instance_;
    new (ptr) ::openmldb::taskmanager::DeleteJobResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::taskmanager::DeleteJobResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteJobResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteJobResponse}, {}};

static void InitDefaultsShowBatchVersionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_ShowBatchVersionRequest_default_instance_;
    new (ptr) ::openmldb::taskmanager::ShowBatchVersionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::taskmanager::ShowBatchVersionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShowBatchVersionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShowBatchVersionRequest}, {}};

static void InitDefaultsRunBatchSqlRequest_ConfEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_RunBatchSqlRequest_ConfEntry_DoNotUse_default_instance_;
    new (ptr) ::openmldb::taskmanager::RunBatchSqlRequest_ConfEntry_DoNotUse();
  }
  ::openmldb::taskmanager::RunBatchSqlRequest_ConfEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RunBatchSqlRequest_ConfEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRunBatchSqlRequest_ConfEntry_DoNotUse}, {}};

static void InitDefaultsRunBatchSqlRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_RunBatchSqlRequest_default_instance_;
    new (ptr) ::openmldb::taskmanager::RunBatchSqlRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::taskmanager::RunBatchSqlRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RunBatchSqlRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRunBatchSqlRequest}, {
      &protobuf_taskmanager_2eproto::scc_info_RunBatchSqlRequest_ConfEntry_DoNotUse.base,}};

static void InitDefaultsRunBatchSqlResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_RunBatchSqlResponse_default_instance_;
    new (ptr) ::openmldb::taskmanager::RunBatchSqlResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::taskmanager::RunBatchSqlResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RunBatchSqlResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRunBatchSqlResponse}, {}};

static void InitDefaultsRunBatchAndShowRequest_ConfEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_RunBatchAndShowRequest_ConfEntry_DoNotUse_default_instance_;
    new (ptr) ::openmldb::taskmanager::RunBatchAndShowRequest_ConfEntry_DoNotUse();
  }
  ::openmldb::taskmanager::RunBatchAndShowRequest_ConfEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RunBatchAndShowRequest_ConfEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRunBatchAndShowRequest_ConfEntry_DoNotUse}, {}};

static void InitDefaultsRunBatchAndShowRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_RunBatchAndShowRequest_default_instance_;
    new (ptr) ::openmldb::taskmanager::RunBatchAndShowRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::taskmanager::RunBatchAndShowRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RunBatchAndShowRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRunBatchAndShowRequest}, {
      &protobuf_taskmanager_2eproto::scc_info_RunBatchAndShowRequest_ConfEntry_DoNotUse.base,}};

static void InitDefaultsImportOnlineDataRequest_ConfEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_ImportOnlineDataRequest_ConfEntry_DoNotUse_default_instance_;
    new (ptr) ::openmldb::taskmanager::ImportOnlineDataRequest_ConfEntry_DoNotUse();
  }
  ::openmldb::taskmanager::ImportOnlineDataRequest_ConfEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ImportOnlineDataRequest_ConfEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsImportOnlineDataRequest_ConfEntry_DoNotUse}, {}};

static void InitDefaultsImportOnlineDataRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_ImportOnlineDataRequest_default_instance_;
    new (ptr) ::openmldb::taskmanager::ImportOnlineDataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::taskmanager::ImportOnlineDataRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ImportOnlineDataRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsImportOnlineDataRequest}, {
      &protobuf_taskmanager_2eproto::scc_info_ImportOnlineDataRequest_ConfEntry_DoNotUse.base,}};

static void InitDefaultsImportOfflineDataRequest_ConfEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_ImportOfflineDataRequest_ConfEntry_DoNotUse_default_instance_;
    new (ptr) ::openmldb::taskmanager::ImportOfflineDataRequest_ConfEntry_DoNotUse();
  }
  ::openmldb::taskmanager::ImportOfflineDataRequest_ConfEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ImportOfflineDataRequest_ConfEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsImportOfflineDataRequest_ConfEntry_DoNotUse}, {}};

static void InitDefaultsImportOfflineDataRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_ImportOfflineDataRequest_default_instance_;
    new (ptr) ::openmldb::taskmanager::ImportOfflineDataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::taskmanager::ImportOfflineDataRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ImportOfflineDataRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsImportOfflineDataRequest}, {
      &protobuf_taskmanager_2eproto::scc_info_ImportOfflineDataRequest_ConfEntry_DoNotUse.base,}};

static void InitDefaultsExportOfflineDataRequest_ConfEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_ExportOfflineDataRequest_ConfEntry_DoNotUse_default_instance_;
    new (ptr) ::openmldb::taskmanager::ExportOfflineDataRequest_ConfEntry_DoNotUse();
  }
  ::openmldb::taskmanager::ExportOfflineDataRequest_ConfEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExportOfflineDataRequest_ConfEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExportOfflineDataRequest_ConfEntry_DoNotUse}, {}};

static void InitDefaultsExportOfflineDataRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_ExportOfflineDataRequest_default_instance_;
    new (ptr) ::openmldb::taskmanager::ExportOfflineDataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::taskmanager::ExportOfflineDataRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ExportOfflineDataRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsExportOfflineDataRequest}, {
      &protobuf_taskmanager_2eproto::scc_info_ExportOfflineDataRequest_ConfEntry_DoNotUse.base,}};

static void InitDefaultsDropOfflineTableRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_DropOfflineTableRequest_default_instance_;
    new (ptr) ::openmldb::taskmanager::DropOfflineTableRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::taskmanager::DropOfflineTableRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DropOfflineTableRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDropOfflineTableRequest}, {}};

static void InitDefaultsDropOfflineTableResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_DropOfflineTableResponse_default_instance_;
    new (ptr) ::openmldb::taskmanager::DropOfflineTableResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::taskmanager::DropOfflineTableResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DropOfflineTableResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDropOfflineTableResponse}, {}};

static void InitDefaultsGetJobLogRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_GetJobLogRequest_default_instance_;
    new (ptr) ::openmldb::taskmanager::GetJobLogRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::taskmanager::GetJobLogRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetJobLogRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetJobLogRequest}, {}};

static void InitDefaultsGetJobLogResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_GetJobLogResponse_default_instance_;
    new (ptr) ::openmldb::taskmanager::GetJobLogResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::taskmanager::GetJobLogResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetJobLogResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetJobLogResponse}, {}};

static void InitDefaultsCreateFunctionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_CreateFunctionRequest_default_instance_;
    new (ptr) ::openmldb::taskmanager::CreateFunctionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::taskmanager::CreateFunctionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateFunctionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateFunctionRequest}, {
      &protobuf_common_2eproto::scc_info_ExternalFun.base,}};

static void InitDefaultsCreateFunctionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_CreateFunctionResponse_default_instance_;
    new (ptr) ::openmldb::taskmanager::CreateFunctionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::taskmanager::CreateFunctionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateFunctionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateFunctionResponse}, {}};

static void InitDefaultsDropFunctionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_DropFunctionRequest_default_instance_;
    new (ptr) ::openmldb::taskmanager::DropFunctionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::taskmanager::DropFunctionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DropFunctionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDropFunctionRequest}, {}};

static void InitDefaultsDropFunctionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::taskmanager::_DropFunctionResponse_default_instance_;
    new (ptr) ::openmldb::taskmanager::DropFunctionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::taskmanager::DropFunctionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DropFunctionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDropFunctionResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_JobInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShowJobsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShowJobsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShowJobRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShowJobResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StopJobRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StopJobResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteJobRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteJobResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShowBatchVersionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RunBatchSqlRequest_ConfEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RunBatchSqlRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RunBatchSqlResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RunBatchAndShowRequest_ConfEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RunBatchAndShowRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImportOnlineDataRequest_ConfEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImportOnlineDataRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImportOfflineDataRequest_ConfEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImportOfflineDataRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExportOfflineDataRequest_ConfEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExportOfflineDataRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DropOfflineTableRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DropOfflineTableResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetJobLogRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetJobLogResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateFunctionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateFunctionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DropFunctionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DropFunctionResponse.base);
}

::google::protobuf::Metadata file_level_metadata[29];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::JobInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::JobInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::JobInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::JobInfo, job_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::JobInfo, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::JobInfo, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::JobInfo, end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::JobInfo, parameter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::JobInfo, cluster_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::JobInfo, application_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::JobInfo, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::JobInfo, tracking_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::JobInfo, progress_),
  9,
  0,
  1,
  7,
  8,
  2,
  3,
  4,
  5,
  6,
  10,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ShowJobsRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ShowJobsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ShowJobsRequest, unfinished_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ShowJobsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ShowJobsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ShowJobsResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ShowJobsResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ShowJobsResponse, jobs_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ShowJobRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ShowJobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ShowJobRequest, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ShowJobResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ShowJobResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ShowJobResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ShowJobResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ShowJobResponse, job_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::StopJobRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::StopJobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::StopJobRequest, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::StopJobResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::StopJobResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::StopJobResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::StopJobResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::StopJobResponse, job_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::DeleteJobRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::DeleteJobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::DeleteJobRequest, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::DeleteJobResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::DeleteJobResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::DeleteJobResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::DeleteJobResponse, msg_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ShowBatchVersionRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ShowBatchVersionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::RunBatchSqlRequest_ConfEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::RunBatchSqlRequest_ConfEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::RunBatchSqlRequest_ConfEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::RunBatchSqlRequest_ConfEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::RunBatchSqlRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::RunBatchSqlRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::RunBatchSqlRequest, sql_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::RunBatchSqlRequest, conf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::RunBatchSqlRequest, default_db_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::RunBatchSqlResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::RunBatchSqlResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::RunBatchSqlResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::RunBatchSqlResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::RunBatchSqlResponse, output_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::RunBatchAndShowRequest_ConfEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::RunBatchAndShowRequest_ConfEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::RunBatchAndShowRequest_ConfEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::RunBatchAndShowRequest_ConfEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::RunBatchAndShowRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::RunBatchAndShowRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::RunBatchAndShowRequest, sql_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::RunBatchAndShowRequest, conf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::RunBatchAndShowRequest, default_db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::RunBatchAndShowRequest, sync_job_),
  0,
  ~0u,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ImportOnlineDataRequest_ConfEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ImportOnlineDataRequest_ConfEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ImportOnlineDataRequest_ConfEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ImportOnlineDataRequest_ConfEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ImportOnlineDataRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ImportOnlineDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ImportOnlineDataRequest, sql_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ImportOnlineDataRequest, conf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ImportOnlineDataRequest, default_db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ImportOnlineDataRequest, sync_job_),
  0,
  ~0u,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ImportOfflineDataRequest_ConfEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ImportOfflineDataRequest_ConfEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ImportOfflineDataRequest_ConfEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ImportOfflineDataRequest_ConfEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ImportOfflineDataRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ImportOfflineDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ImportOfflineDataRequest, sql_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ImportOfflineDataRequest, conf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ImportOfflineDataRequest, default_db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ImportOfflineDataRequest, sync_job_),
  0,
  ~0u,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ExportOfflineDataRequest_ConfEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ExportOfflineDataRequest_ConfEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ExportOfflineDataRequest_ConfEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ExportOfflineDataRequest_ConfEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ExportOfflineDataRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ExportOfflineDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ExportOfflineDataRequest, sql_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ExportOfflineDataRequest, conf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ExportOfflineDataRequest, default_db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::ExportOfflineDataRequest, sync_job_),
  0,
  ~0u,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::DropOfflineTableRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::DropOfflineTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::DropOfflineTableRequest, db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::DropOfflineTableRequest, table_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::DropOfflineTableResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::DropOfflineTableResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::DropOfflineTableResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::DropOfflineTableResponse, msg_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::GetJobLogRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::GetJobLogRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::GetJobLogRequest, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::GetJobLogResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::GetJobLogResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::GetJobLogResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::GetJobLogResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::GetJobLogResponse, log_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::CreateFunctionRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::CreateFunctionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::CreateFunctionRequest, fun_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::CreateFunctionResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::CreateFunctionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::CreateFunctionResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::CreateFunctionResponse, msg_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::DropFunctionRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::DropFunctionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::DropFunctionRequest, name_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::DropFunctionResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::DropFunctionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::DropFunctionResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::taskmanager::DropFunctionResponse, msg_),
  1,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 16, sizeof(::openmldb::taskmanager::JobInfo)},
  { 27, 33, sizeof(::openmldb::taskmanager::ShowJobsRequest)},
  { 34, 42, sizeof(::openmldb::taskmanager::ShowJobsResponse)},
  { 45, 51, sizeof(::openmldb::taskmanager::ShowJobRequest)},
  { 52, 60, sizeof(::openmldb::taskmanager::ShowJobResponse)},
  { 63, 69, sizeof(::openmldb::taskmanager::StopJobRequest)},
  { 70, 78, sizeof(::openmldb::taskmanager::StopJobResponse)},
  { 81, 87, sizeof(::openmldb::taskmanager::DeleteJobRequest)},
  { 88, 95, sizeof(::openmldb::taskmanager::DeleteJobResponse)},
  { 97, 102, sizeof(::openmldb::taskmanager::ShowBatchVersionRequest)},
  { 102, 109, sizeof(::openmldb::taskmanager::RunBatchSqlRequest_ConfEntry_DoNotUse)},
  { 111, 119, sizeof(::openmldb::taskmanager::RunBatchSqlRequest)},
  { 122, 130, sizeof(::openmldb::taskmanager::RunBatchSqlResponse)},
  { 133, 140, sizeof(::openmldb::taskmanager::RunBatchAndShowRequest_ConfEntry_DoNotUse)},
  { 142, 151, sizeof(::openmldb::taskmanager::RunBatchAndShowRequest)},
  { 155, 162, sizeof(::openmldb::taskmanager::ImportOnlineDataRequest_ConfEntry_DoNotUse)},
  { 164, 173, sizeof(::openmldb::taskmanager::ImportOnlineDataRequest)},
  { 177, 184, sizeof(::openmldb::taskmanager::ImportOfflineDataRequest_ConfEntry_DoNotUse)},
  { 186, 195, sizeof(::openmldb::taskmanager::ImportOfflineDataRequest)},
  { 199, 206, sizeof(::openmldb::taskmanager::ExportOfflineDataRequest_ConfEntry_DoNotUse)},
  { 208, 217, sizeof(::openmldb::taskmanager::ExportOfflineDataRequest)},
  { 221, 228, sizeof(::openmldb::taskmanager::DropOfflineTableRequest)},
  { 230, 237, sizeof(::openmldb::taskmanager::DropOfflineTableResponse)},
  { 239, 245, sizeof(::openmldb::taskmanager::GetJobLogRequest)},
  { 246, 254, sizeof(::openmldb::taskmanager::GetJobLogResponse)},
  { 257, 263, sizeof(::openmldb::taskmanager::CreateFunctionRequest)},
  { 264, 271, sizeof(::openmldb::taskmanager::CreateFunctionResponse)},
  { 273, 279, sizeof(::openmldb::taskmanager::DropFunctionRequest)},
  { 280, 287, sizeof(::openmldb::taskmanager::DropFunctionResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_JobInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_ShowJobsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_ShowJobsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_ShowJobRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_ShowJobResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_StopJobRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_StopJobResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_DeleteJobRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_DeleteJobResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_ShowBatchVersionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_RunBatchSqlRequest_ConfEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_RunBatchSqlRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_RunBatchSqlResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_RunBatchAndShowRequest_ConfEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_RunBatchAndShowRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_ImportOnlineDataRequest_ConfEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_ImportOnlineDataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_ImportOfflineDataRequest_ConfEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_ImportOfflineDataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_ExportOfflineDataRequest_ConfEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_ExportOfflineDataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_DropOfflineTableRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_DropOfflineTableResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_GetJobLogRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_GetJobLogResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_CreateFunctionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_CreateFunctionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_DropFunctionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::taskmanager::_DropFunctionResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "taskmanager.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 29);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021taskmanager.proto\022\024openmldb.taskmanage"
      "r\032\014common.proto\"\317\001\n\007JobInfo\022\n\n\002id\030\001 \002(\005\022"
      "\020\n\010job_type\030\002 \001(\t\022\r\n\005state\030\003 \001(\t\022\022\n\nstar"
      "t_time\030\004 \001(\003\022\020\n\010end_time\030\005 \001(\003\022\021\n\tparame"
      "ter\030\006 \001(\t\022\017\n\007cluster\030\007 \001(\t\022\026\n\016applicatio"
      "n_id\030\010 \001(\t\022\r\n\005error\030\t \001(\t\022\024\n\014tracking_ur"
      "l\030\n \001(\t\022\020\n\010progress\030\013 \001(\002\",\n\017ShowJobsReq"
      "uest\022\031\n\nunfinished\030\001 \001(\010:\005false\"Z\n\020ShowJ"
      "obsResponse\022\014\n\004code\030\001 \002(\005\022\013\n\003msg\030\002 \001(\t\022+"
      "\n\004jobs\030\003 \003(\0132\035.openmldb.taskmanager.JobI"
      "nfo\"\034\n\016ShowJobRequest\022\n\n\002id\030\001 \002(\005\"X\n\017Sho"
      "wJobResponse\022\014\n\004code\030\001 \002(\005\022\013\n\003msg\030\002 \001(\t\022"
      "*\n\003job\030\003 \001(\0132\035.openmldb.taskmanager.JobI"
      "nfo\"\034\n\016StopJobRequest\022\n\n\002id\030\001 \002(\005\"X\n\017Sto"
      "pJobResponse\022\014\n\004code\030\001 \002(\005\022\013\n\003msg\030\002 \001(\t\022"
      "*\n\003job\030\003 \001(\0132\035.openmldb.taskmanager.JobI"
      "nfo\"\036\n\020DeleteJobRequest\022\n\n\002id\030\001 \002(\005\".\n\021D"
      "eleteJobResponse\022\014\n\004code\030\001 \002(\005\022\013\n\003msg\030\002 "
      "\001(\t\"\031\n\027ShowBatchVersionRequest\"\246\001\n\022RunBa"
      "tchSqlRequest\022\013\n\003sql\030\001 \002(\t\022@\n\004conf\030\002 \003(\013"
      "22.openmldb.taskmanager.RunBatchSqlReque"
      "st.ConfEntry\022\024\n\ndefault_db\030\003 \001(\t:\000\032+\n\tCo"
      "nfEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\""
      "@\n\023RunBatchSqlResponse\022\014\n\004code\030\001 \002(\005\022\013\n\003"
      "msg\030\002 \001(\t\022\016\n\006output\030\003 \001(\t\"\307\001\n\026RunBatchAn"
      "dShowRequest\022\013\n\003sql\030\001 \002(\t\022D\n\004conf\030\002 \003(\0132"
      "6.openmldb.taskmanager.RunBatchAndShowRe"
      "quest.ConfEntry\022\024\n\ndefault_db\030\003 \001(\t:\000\022\027\n"
      "\010sync_job\030\004 \001(\010:\005false\032+\n\tConfEntry\022\013\n\003k"
      "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\311\001\n\027ImportOn"
      "lineDataRequest\022\013\n\003sql\030\001 \002(\t\022E\n\004conf\030\002 \003"
      "(\01327.openmldb.taskmanager.ImportOnlineDa"
      "taRequest.ConfEntry\022\024\n\ndefault_db\030\003 \001(\t:"
      "\000\022\027\n\010sync_job\030\004 \001(\010:\005false\032+\n\tConfEntry\022"
      "\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\313\001\n\030Impo"
      "rtOfflineDataRequest\022\013\n\003sql\030\001 \002(\t\022F\n\004con"
      "f\030\002 \003(\01328.openmldb.taskmanager.ImportOff"
      "lineDataRequest.ConfEntry\022\024\n\ndefault_db\030"
      "\003 \001(\t:\000\022\027\n\010sync_job\030\004 \001(\010:\005false\032+\n\tConf"
      "Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\313\001"
      "\n\030ExportOfflineDataRequest\022\013\n\003sql\030\001 \002(\t\022"
      "F\n\004conf\030\002 \003(\01328.openmldb.taskmanager.Exp"
      "ortOfflineDataRequest.ConfEntry\022\024\n\ndefau"
      "lt_db\030\003 \001(\t:\000\022\027\n\010sync_job\030\004 \001(\010:\005false\032+"
      "\n\tConfEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:"
      "\0028\001\"4\n\027DropOfflineTableRequest\022\n\n\002db\030\001 \002"
      "(\t\022\r\n\005table\030\002 \002(\t\"5\n\030DropOfflineTableRes"
      "ponse\022\014\n\004code\030\001 \002(\005\022\013\n\003msg\030\002 \001(\t\"\036\n\020GetJ"
      "obLogRequest\022\n\n\002id\030\001 \002(\005\";\n\021GetJobLogRes"
      "ponse\022\014\n\004code\030\001 \002(\005\022\013\n\003msg\030\002 \001(\t\022\013\n\003log\030"
      "\003 \001(\t\"B\n\025CreateFunctionRequest\022)\n\003fun\030\001 "
      "\001(\0132\034.openmldb.common.ExternalFun\"3\n\026Cre"
      "ateFunctionResponse\022\014\n\004code\030\001 \002(\005\022\013\n\003msg"
      "\030\002 \001(\t\"#\n\023DropFunctionRequest\022\014\n\004name\030\001 "
      "\001(\t\"1\n\024DropFunctionResponse\022\014\n\004code\030\001 \002("
      "\005\022\013\n\003msg\030\002 \001(\t2\231\013\n\021TaskManagerServer\022Y\n\010"
      "ShowJobs\022%.openmldb.taskmanager.ShowJobs"
      "Request\032&.openmldb.taskmanager.ShowJobsR"
      "esponse\022V\n\007ShowJob\022$.openmldb.taskmanage"
      "r.ShowJobRequest\032%.openmldb.taskmanager."
      "ShowJobResponse\022V\n\007StopJob\022$.openmldb.ta"
      "skmanager.StopJobRequest\032%.openmldb.task"
      "manager.StopJobResponse\022\\\n\tDeleteJob\022&.o"
      "penmldb.taskmanager.DeleteJobRequest\032\'.o"
      "penmldb.taskmanager.DeleteJobResponse\022h\n"
      "\020ShowBatchVersion\022-.openmldb.taskmanager"
      ".ShowBatchVersionRequest\032%.openmldb.task"
      "manager.ShowJobResponse\022b\n\013RunBatchSql\022("
      ".openmldb.taskmanager.RunBatchSqlRequest"
      "\032).openmldb.taskmanager.RunBatchSqlRespo"
      "nse\022f\n\017RunBatchAndShow\022,.openmldb.taskma"
      "nager.RunBatchAndShowRequest\032%.openmldb."
      "taskmanager.ShowJobResponse\022h\n\020ImportOnl"
      "ineData\022-.openmldb.taskmanager.ImportOnl"
      "ineDataRequest\032%.openmldb.taskmanager.Sh"
      "owJobResponse\022j\n\021ImportOfflineData\022..ope"
      "nmldb.taskmanager.ImportOfflineDataReque"
      "st\032%.openmldb.taskmanager.ShowJobRespons"
      "e\022j\n\021ExportOfflineData\022..openmldb.taskma"
      "nager.ExportOfflineDataRequest\032%.openmld"
      "b.taskmanager.ShowJobResponse\022q\n\020DropOff"
      "lineTable\022-.openmldb.taskmanager.DropOff"
      "lineTableRequest\032..openmldb.taskmanager."
      "DropOfflineTableResponse\022\\\n\tGetJobLog\022&."
      "openmldb.taskmanager.GetJobLogRequest\032\'."
      "openmldb.taskmanager.GetJobLogResponse\022k"
      "\n\016CreateFunction\022+.openmldb.taskmanager."
      "CreateFunctionRequest\032,.openmldb.taskman"
      "ager.CreateFunctionResponse\022e\n\014DropFunct"
      "ion\022).openmldb.taskmanager.DropFunctionR"
      "equest\032*.openmldb.taskmanager.DropFuncti"
      "onResponseB/\n\035com._4paradigm.openmldb.pr"
      "otoB\013TaskManager\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3699);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "taskmanager.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_taskmanager_2eproto
namespace openmldb {
namespace taskmanager {

// ===================================================================

void JobInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JobInfo::kIdFieldNumber;
const int JobInfo::kJobTypeFieldNumber;
const int JobInfo::kStateFieldNumber;
const int JobInfo::kStartTimeFieldNumber;
const int JobInfo::kEndTimeFieldNumber;
const int JobInfo::kParameterFieldNumber;
const int JobInfo::kClusterFieldNumber;
const int JobInfo::kApplicationIdFieldNumber;
const int JobInfo::kErrorFieldNumber;
const int JobInfo::kTrackingUrlFieldNumber;
const int JobInfo::kProgressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JobInfo::JobInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_taskmanager_2eproto::scc_info_JobInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.taskmanager.JobInfo)
}
JobInfo::JobInfo(const JobInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  job_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_job_type()) {
    job_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_type_);
  }
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_state()) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  parameter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_parameter()) {
    parameter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parameter_);
  }
  cluster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cluster()) {
    cluster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_);
  }
  application_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_application_id()) {
    application_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.application_id_);
  }
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error()) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  tracking_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tracking_url()) {
    tracking_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tracking_url_);
  }
  ::memcpy(&start_time_, &from.start_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&progress_) -
    reinterpret_cast<char*>(&start_time_)) + sizeof(progress_));
  // @@protoc_insertion_point(copy_constructor:openmldb.taskmanager.JobInfo)
}

void JobInfo::SharedCtor() {
  job_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parameter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  application_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tracking_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(progress_));
}

JobInfo::~JobInfo() {
  // @@protoc_insertion_point(destructor:openmldb.taskmanager.JobInfo)
  SharedDtor();
}

void JobInfo::SharedDtor() {
  job_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parameter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  application_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tracking_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void JobInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* JobInfo::descriptor() {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JobInfo& JobInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_taskmanager_2eproto::scc_info_JobInfo.base);
  return *internal_default_instance();
}


void JobInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.taskmanager.JobInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      job_type_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      state_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      parameter_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      cluster_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      application_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      error_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      tracking_url_.ClearNonDefaultToEmptyNoArena();
    }
  }
  start_time_ = GOOGLE_LONGLONG(0);
  if (cached_has_bits & 1792u) {
    ::memset(&end_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&progress_) -
        reinterpret_cast<char*>(&end_time_)) + sizeof(progress_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool JobInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.taskmanager.JobInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string job_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_job_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->job_type().data(), static_cast<int>(this->job_type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.JobInfo.job_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_state()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->state().data(), static_cast<int>(this->state().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.JobInfo.state");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 start_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_start_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 end_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_end_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string parameter = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parameter()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->parameter().data(), static_cast<int>(this->parameter().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.JobInfo.parameter");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string cluster = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cluster().data(), static_cast<int>(this->cluster().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.JobInfo.cluster");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string application_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_application_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->application_id().data(), static_cast<int>(this->application_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.JobInfo.application_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.JobInfo.error");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tracking_url = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tracking_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tracking_url().data(), static_cast<int>(this->tracking_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.JobInfo.tracking_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float progress = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {
          set_has_progress();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.taskmanager.JobInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.taskmanager.JobInfo)
  return false;
#undef DO_
}

void JobInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.taskmanager.JobInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string job_type = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->job_type().data(), static_cast<int>(this->job_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.JobInfo.job_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->job_type(), output);
  }

  // optional string state = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state().data(), static_cast<int>(this->state().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.JobInfo.state");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->state(), output);
  }

  // optional int64 start_time = 4;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->start_time(), output);
  }

  // optional int64 end_time = 5;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->end_time(), output);
  }

  // optional string parameter = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parameter().data(), static_cast<int>(this->parameter().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.JobInfo.parameter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->parameter(), output);
  }

  // optional string cluster = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cluster().data(), static_cast<int>(this->cluster().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.JobInfo.cluster");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->cluster(), output);
  }

  // optional string application_id = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->application_id().data(), static_cast<int>(this->application_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.JobInfo.application_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->application_id(), output);
  }

  // optional string error = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.JobInfo.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->error(), output);
  }

  // optional string tracking_url = 10;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tracking_url().data(), static_cast<int>(this->tracking_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.JobInfo.tracking_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->tracking_url(), output);
  }

  // optional float progress = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->progress(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.taskmanager.JobInfo)
}

::google::protobuf::uint8* JobInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.taskmanager.JobInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string job_type = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->job_type().data(), static_cast<int>(this->job_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.JobInfo.job_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->job_type(), target);
  }

  // optional string state = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state().data(), static_cast<int>(this->state().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.JobInfo.state");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->state(), target);
  }

  // optional int64 start_time = 4;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->start_time(), target);
  }

  // optional int64 end_time = 5;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->end_time(), target);
  }

  // optional string parameter = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parameter().data(), static_cast<int>(this->parameter().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.JobInfo.parameter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->parameter(), target);
  }

  // optional string cluster = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cluster().data(), static_cast<int>(this->cluster().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.JobInfo.cluster");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->cluster(), target);
  }

  // optional string application_id = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->application_id().data(), static_cast<int>(this->application_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.JobInfo.application_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->application_id(), target);
  }

  // optional string error = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.JobInfo.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->error(), target);
  }

  // optional string tracking_url = 10;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tracking_url().data(), static_cast<int>(this->tracking_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.JobInfo.tracking_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->tracking_url(), target);
  }

  // optional float progress = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->progress(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.taskmanager.JobInfo)
  return target;
}

size_t JobInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.taskmanager.JobInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string job_type = 2;
    if (has_job_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->job_type());
    }

    // optional string state = 3;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->state());
    }

    // optional string parameter = 6;
    if (has_parameter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->parameter());
    }

    // optional string cluster = 7;
    if (has_cluster()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cluster());
    }

    // optional string application_id = 8;
    if (has_application_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->application_id());
    }

    // optional string error = 9;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
    }

    // optional string tracking_url = 10;
    if (has_tracking_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tracking_url());
    }

    // optional int64 start_time = 4;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

  }
  // optional int64 end_time = 5;
  if (has_end_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->end_time());
  }

  // optional float progress = 11;
  if (has_progress()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JobInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.taskmanager.JobInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const JobInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JobInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.taskmanager.JobInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.taskmanager.JobInfo)
    MergeFrom(*source);
  }
}

void JobInfo::MergeFrom(const JobInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.taskmanager.JobInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_job_type();
      job_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_type_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_state();
      state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_parameter();
      parameter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parameter_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_cluster();
      cluster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_application_id();
      application_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.application_id_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_error();
      error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_tracking_url();
      tracking_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tracking_url_);
    }
    if (cached_has_bits & 0x00000080u) {
      start_time_ = from.start_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      end_time_ = from.end_time_;
    }
    if (cached_has_bits & 0x00000200u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000400u) {
      progress_ = from.progress_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void JobInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.taskmanager.JobInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobInfo::CopyFrom(const JobInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.taskmanager.JobInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000200) != 0x00000200) return false;
  return true;
}

void JobInfo::Swap(JobInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JobInfo::InternalSwap(JobInfo* other) {
  using std::swap;
  job_type_.Swap(&other->job_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parameter_.Swap(&other->parameter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_.Swap(&other->cluster_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  application_id_.Swap(&other->application_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tracking_url_.Swap(&other->tracking_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(start_time_, other->start_time_);
  swap(end_time_, other->end_time_);
  swap(id_, other->id_);
  swap(progress_, other->progress_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata JobInfo::GetMetadata() const {
  protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShowJobsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowJobsRequest::kUnfinishedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowJobsRequest::ShowJobsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_taskmanager_2eproto::scc_info_ShowJobsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.taskmanager.ShowJobsRequest)
}
ShowJobsRequest::ShowJobsRequest(const ShowJobsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  unfinished_ = from.unfinished_;
  // @@protoc_insertion_point(copy_constructor:openmldb.taskmanager.ShowJobsRequest)
}

void ShowJobsRequest::SharedCtor() {
  unfinished_ = false;
}

ShowJobsRequest::~ShowJobsRequest() {
  // @@protoc_insertion_point(destructor:openmldb.taskmanager.ShowJobsRequest)
  SharedDtor();
}

void ShowJobsRequest::SharedDtor() {
}

void ShowJobsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShowJobsRequest::descriptor() {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShowJobsRequest& ShowJobsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_taskmanager_2eproto::scc_info_ShowJobsRequest.base);
  return *internal_default_instance();
}


void ShowJobsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.taskmanager.ShowJobsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unfinished_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowJobsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.taskmanager.ShowJobsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool unfinished = 1 [default = false];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_unfinished();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unfinished_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.taskmanager.ShowJobsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.taskmanager.ShowJobsRequest)
  return false;
#undef DO_
}

void ShowJobsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.taskmanager.ShowJobsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool unfinished = 1 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->unfinished(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.taskmanager.ShowJobsRequest)
}

::google::protobuf::uint8* ShowJobsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.taskmanager.ShowJobsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool unfinished = 1 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->unfinished(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.taskmanager.ShowJobsRequest)
  return target;
}

size_t ShowJobsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.taskmanager.ShowJobsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool unfinished = 1 [default = false];
  if (has_unfinished()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowJobsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.taskmanager.ShowJobsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowJobsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShowJobsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.taskmanager.ShowJobsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.taskmanager.ShowJobsRequest)
    MergeFrom(*source);
  }
}

void ShowJobsRequest::MergeFrom(const ShowJobsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.taskmanager.ShowJobsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_unfinished()) {
    set_unfinished(from.unfinished());
  }
}

void ShowJobsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.taskmanager.ShowJobsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowJobsRequest::CopyFrom(const ShowJobsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.taskmanager.ShowJobsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowJobsRequest::IsInitialized() const {
  return true;
}

void ShowJobsRequest::Swap(ShowJobsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowJobsRequest::InternalSwap(ShowJobsRequest* other) {
  using std::swap;
  swap(unfinished_, other->unfinished_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShowJobsRequest::GetMetadata() const {
  protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShowJobsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowJobsResponse::kCodeFieldNumber;
const int ShowJobsResponse::kMsgFieldNumber;
const int ShowJobsResponse::kJobsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowJobsResponse::ShowJobsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_taskmanager_2eproto::scc_info_ShowJobsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.taskmanager.ShowJobsResponse)
}
ShowJobsResponse::ShowJobsResponse(const ShowJobsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      jobs_(from.jobs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.taskmanager.ShowJobsResponse)
}

void ShowJobsResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

ShowJobsResponse::~ShowJobsResponse() {
  // @@protoc_insertion_point(destructor:openmldb.taskmanager.ShowJobsResponse)
  SharedDtor();
}

void ShowJobsResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShowJobsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShowJobsResponse::descriptor() {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShowJobsResponse& ShowJobsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_taskmanager_2eproto::scc_info_ShowJobsResponse.base);
  return *internal_default_instance();
}


void ShowJobsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.taskmanager.ShowJobsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  jobs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowJobsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.taskmanager.ShowJobsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.ShowJobsResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.taskmanager.JobInfo jobs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_jobs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.taskmanager.ShowJobsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.taskmanager.ShowJobsResponse)
  return false;
#undef DO_
}

void ShowJobsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.taskmanager.ShowJobsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.ShowJobsResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // repeated .openmldb.taskmanager.JobInfo jobs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->jobs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->jobs(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.taskmanager.ShowJobsResponse)
}

::google::protobuf::uint8* ShowJobsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.taskmanager.ShowJobsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.ShowJobsResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // repeated .openmldb.taskmanager.JobInfo jobs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->jobs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->jobs(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.taskmanager.ShowJobsResponse)
  return target;
}

size_t ShowJobsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.taskmanager.ShowJobsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }
  // repeated .openmldb.taskmanager.JobInfo jobs = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->jobs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->jobs(static_cast<int>(i)));
    }
  }

  // optional string msg = 2;
  if (has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowJobsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.taskmanager.ShowJobsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowJobsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShowJobsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.taskmanager.ShowJobsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.taskmanager.ShowJobsResponse)
    MergeFrom(*source);
  }
}

void ShowJobsResponse::MergeFrom(const ShowJobsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.taskmanager.ShowJobsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  jobs_.MergeFrom(from.jobs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShowJobsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.taskmanager.ShowJobsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowJobsResponse::CopyFrom(const ShowJobsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.taskmanager.ShowJobsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowJobsResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->jobs())) return false;
  return true;
}

void ShowJobsResponse::Swap(ShowJobsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowJobsResponse::InternalSwap(ShowJobsResponse* other) {
  using std::swap;
  CastToBase(&jobs_)->InternalSwap(CastToBase(&other->jobs_));
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShowJobsResponse::GetMetadata() const {
  protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShowJobRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowJobRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowJobRequest::ShowJobRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_taskmanager_2eproto::scc_info_ShowJobRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.taskmanager.ShowJobRequest)
}
ShowJobRequest::ShowJobRequest(const ShowJobRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:openmldb.taskmanager.ShowJobRequest)
}

void ShowJobRequest::SharedCtor() {
  id_ = 0;
}

ShowJobRequest::~ShowJobRequest() {
  // @@protoc_insertion_point(destructor:openmldb.taskmanager.ShowJobRequest)
  SharedDtor();
}

void ShowJobRequest::SharedDtor() {
}

void ShowJobRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShowJobRequest::descriptor() {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShowJobRequest& ShowJobRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_taskmanager_2eproto::scc_info_ShowJobRequest.base);
  return *internal_default_instance();
}


void ShowJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.taskmanager.ShowJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowJobRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.taskmanager.ShowJobRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.taskmanager.ShowJobRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.taskmanager.ShowJobRequest)
  return false;
#undef DO_
}

void ShowJobRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.taskmanager.ShowJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.taskmanager.ShowJobRequest)
}

::google::protobuf::uint8* ShowJobRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.taskmanager.ShowJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.taskmanager.ShowJobRequest)
  return target;
}

size_t ShowJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.taskmanager.ShowJobRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowJobRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.taskmanager.ShowJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowJobRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShowJobRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.taskmanager.ShowJobRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.taskmanager.ShowJobRequest)
    MergeFrom(*source);
  }
}

void ShowJobRequest::MergeFrom(const ShowJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.taskmanager.ShowJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void ShowJobRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.taskmanager.ShowJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowJobRequest::CopyFrom(const ShowJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.taskmanager.ShowJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowJobRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ShowJobRequest::Swap(ShowJobRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowJobRequest::InternalSwap(ShowJobRequest* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShowJobRequest::GetMetadata() const {
  protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShowJobResponse::InitAsDefaultInstance() {
  ::openmldb::taskmanager::_ShowJobResponse_default_instance_._instance.get_mutable()->job_ = const_cast< ::openmldb::taskmanager::JobInfo*>(
      ::openmldb::taskmanager::JobInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowJobResponse::kCodeFieldNumber;
const int ShowJobResponse::kMsgFieldNumber;
const int ShowJobResponse::kJobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowJobResponse::ShowJobResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_taskmanager_2eproto::scc_info_ShowJobResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.taskmanager.ShowJobResponse)
}
ShowJobResponse::ShowJobResponse(const ShowJobResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_job()) {
    job_ = new ::openmldb::taskmanager::JobInfo(*from.job_);
  } else {
    job_ = NULL;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.taskmanager.ShowJobResponse)
}

void ShowJobResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&job_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&job_)) + sizeof(code_));
}

ShowJobResponse::~ShowJobResponse() {
  // @@protoc_insertion_point(destructor:openmldb.taskmanager.ShowJobResponse)
  SharedDtor();
}

void ShowJobResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete job_;
}

void ShowJobResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShowJobResponse::descriptor() {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShowJobResponse& ShowJobResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_taskmanager_2eproto::scc_info_ShowJobResponse.base);
  return *internal_default_instance();
}


void ShowJobResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.taskmanager.ShowJobResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      msg_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(job_ != NULL);
      job_->Clear();
    }
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowJobResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.taskmanager.ShowJobResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.ShowJobResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.taskmanager.JobInfo job = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_job()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.taskmanager.ShowJobResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.taskmanager.ShowJobResponse)
  return false;
#undef DO_
}

void ShowJobResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.taskmanager.ShowJobResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.ShowJobResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // optional .openmldb.taskmanager.JobInfo job = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_job(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.taskmanager.ShowJobResponse)
}

::google::protobuf::uint8* ShowJobResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.taskmanager.ShowJobResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.ShowJobResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // optional .openmldb.taskmanager.JobInfo job = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_job(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.taskmanager.ShowJobResponse)
  return target;
}

size_t ShowJobResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.taskmanager.ShowJobResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional .openmldb.taskmanager.JobInfo job = 3;
    if (has_job()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *job_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowJobResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.taskmanager.ShowJobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowJobResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShowJobResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.taskmanager.ShowJobResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.taskmanager.ShowJobResponse)
    MergeFrom(*source);
  }
}

void ShowJobResponse::MergeFrom(const ShowJobResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.taskmanager.ShowJobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_job()->::openmldb::taskmanager::JobInfo::MergeFrom(from.job());
    }
    if (cached_has_bits & 0x00000004u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShowJobResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.taskmanager.ShowJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowJobResponse::CopyFrom(const ShowJobResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.taskmanager.ShowJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowJobResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_job()) {
    if (!this->job_->IsInitialized()) return false;
  }
  return true;
}

void ShowJobResponse::Swap(ShowJobResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowJobResponse::InternalSwap(ShowJobResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(job_, other->job_);
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShowJobResponse::GetMetadata() const {
  protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StopJobRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StopJobRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StopJobRequest::StopJobRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_taskmanager_2eproto::scc_info_StopJobRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.taskmanager.StopJobRequest)
}
StopJobRequest::StopJobRequest(const StopJobRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:openmldb.taskmanager.StopJobRequest)
}

void StopJobRequest::SharedCtor() {
  id_ = 0;
}

StopJobRequest::~StopJobRequest() {
  // @@protoc_insertion_point(destructor:openmldb.taskmanager.StopJobRequest)
  SharedDtor();
}

void StopJobRequest::SharedDtor() {
}

void StopJobRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StopJobRequest::descriptor() {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StopJobRequest& StopJobRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_taskmanager_2eproto::scc_info_StopJobRequest.base);
  return *internal_default_instance();
}


void StopJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.taskmanager.StopJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StopJobRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.taskmanager.StopJobRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.taskmanager.StopJobRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.taskmanager.StopJobRequest)
  return false;
#undef DO_
}

void StopJobRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.taskmanager.StopJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.taskmanager.StopJobRequest)
}

::google::protobuf::uint8* StopJobRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.taskmanager.StopJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.taskmanager.StopJobRequest)
  return target;
}

size_t StopJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.taskmanager.StopJobRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopJobRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.taskmanager.StopJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StopJobRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StopJobRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.taskmanager.StopJobRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.taskmanager.StopJobRequest)
    MergeFrom(*source);
  }
}

void StopJobRequest::MergeFrom(const StopJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.taskmanager.StopJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void StopJobRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.taskmanager.StopJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopJobRequest::CopyFrom(const StopJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.taskmanager.StopJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopJobRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void StopJobRequest::Swap(StopJobRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StopJobRequest::InternalSwap(StopJobRequest* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StopJobRequest::GetMetadata() const {
  protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StopJobResponse::InitAsDefaultInstance() {
  ::openmldb::taskmanager::_StopJobResponse_default_instance_._instance.get_mutable()->job_ = const_cast< ::openmldb::taskmanager::JobInfo*>(
      ::openmldb::taskmanager::JobInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StopJobResponse::kCodeFieldNumber;
const int StopJobResponse::kMsgFieldNumber;
const int StopJobResponse::kJobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StopJobResponse::StopJobResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_taskmanager_2eproto::scc_info_StopJobResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.taskmanager.StopJobResponse)
}
StopJobResponse::StopJobResponse(const StopJobResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_job()) {
    job_ = new ::openmldb::taskmanager::JobInfo(*from.job_);
  } else {
    job_ = NULL;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.taskmanager.StopJobResponse)
}

void StopJobResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&job_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&job_)) + sizeof(code_));
}

StopJobResponse::~StopJobResponse() {
  // @@protoc_insertion_point(destructor:openmldb.taskmanager.StopJobResponse)
  SharedDtor();
}

void StopJobResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete job_;
}

void StopJobResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StopJobResponse::descriptor() {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StopJobResponse& StopJobResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_taskmanager_2eproto::scc_info_StopJobResponse.base);
  return *internal_default_instance();
}


void StopJobResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.taskmanager.StopJobResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      msg_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(job_ != NULL);
      job_->Clear();
    }
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StopJobResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.taskmanager.StopJobResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.StopJobResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.taskmanager.JobInfo job = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_job()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.taskmanager.StopJobResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.taskmanager.StopJobResponse)
  return false;
#undef DO_
}

void StopJobResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.taskmanager.StopJobResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.StopJobResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // optional .openmldb.taskmanager.JobInfo job = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_job(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.taskmanager.StopJobResponse)
}

::google::protobuf::uint8* StopJobResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.taskmanager.StopJobResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.StopJobResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // optional .openmldb.taskmanager.JobInfo job = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_job(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.taskmanager.StopJobResponse)
  return target;
}

size_t StopJobResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.taskmanager.StopJobResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional .openmldb.taskmanager.JobInfo job = 3;
    if (has_job()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *job_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopJobResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.taskmanager.StopJobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StopJobResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StopJobResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.taskmanager.StopJobResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.taskmanager.StopJobResponse)
    MergeFrom(*source);
  }
}

void StopJobResponse::MergeFrom(const StopJobResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.taskmanager.StopJobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_job()->::openmldb::taskmanager::JobInfo::MergeFrom(from.job());
    }
    if (cached_has_bits & 0x00000004u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StopJobResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.taskmanager.StopJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopJobResponse::CopyFrom(const StopJobResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.taskmanager.StopJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopJobResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_job()) {
    if (!this->job_->IsInitialized()) return false;
  }
  return true;
}

void StopJobResponse::Swap(StopJobResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StopJobResponse::InternalSwap(StopJobResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(job_, other->job_);
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StopJobResponse::GetMetadata() const {
  protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteJobRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteJobRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteJobRequest::DeleteJobRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_taskmanager_2eproto::scc_info_DeleteJobRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.taskmanager.DeleteJobRequest)
}
DeleteJobRequest::DeleteJobRequest(const DeleteJobRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:openmldb.taskmanager.DeleteJobRequest)
}

void DeleteJobRequest::SharedCtor() {
  id_ = 0;
}

DeleteJobRequest::~DeleteJobRequest() {
  // @@protoc_insertion_point(destructor:openmldb.taskmanager.DeleteJobRequest)
  SharedDtor();
}

void DeleteJobRequest::SharedDtor() {
}

void DeleteJobRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteJobRequest::descriptor() {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteJobRequest& DeleteJobRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_taskmanager_2eproto::scc_info_DeleteJobRequest.base);
  return *internal_default_instance();
}


void DeleteJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.taskmanager.DeleteJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeleteJobRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.taskmanager.DeleteJobRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.taskmanager.DeleteJobRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.taskmanager.DeleteJobRequest)
  return false;
#undef DO_
}

void DeleteJobRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.taskmanager.DeleteJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.taskmanager.DeleteJobRequest)
}

::google::protobuf::uint8* DeleteJobRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.taskmanager.DeleteJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.taskmanager.DeleteJobRequest)
  return target;
}

size_t DeleteJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.taskmanager.DeleteJobRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteJobRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.taskmanager.DeleteJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteJobRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteJobRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.taskmanager.DeleteJobRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.taskmanager.DeleteJobRequest)
    MergeFrom(*source);
  }
}

void DeleteJobRequest::MergeFrom(const DeleteJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.taskmanager.DeleteJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void DeleteJobRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.taskmanager.DeleteJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteJobRequest::CopyFrom(const DeleteJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.taskmanager.DeleteJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteJobRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void DeleteJobRequest::Swap(DeleteJobRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteJobRequest::InternalSwap(DeleteJobRequest* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteJobRequest::GetMetadata() const {
  protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteJobResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteJobResponse::kCodeFieldNumber;
const int DeleteJobResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteJobResponse::DeleteJobResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_taskmanager_2eproto::scc_info_DeleteJobResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.taskmanager.DeleteJobResponse)
}
DeleteJobResponse::DeleteJobResponse(const DeleteJobResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.taskmanager.DeleteJobResponse)
}

void DeleteJobResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

DeleteJobResponse::~DeleteJobResponse() {
  // @@protoc_insertion_point(destructor:openmldb.taskmanager.DeleteJobResponse)
  SharedDtor();
}

void DeleteJobResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteJobResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteJobResponse::descriptor() {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteJobResponse& DeleteJobResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_taskmanager_2eproto::scc_info_DeleteJobResponse.base);
  return *internal_default_instance();
}


void DeleteJobResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.taskmanager.DeleteJobResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeleteJobResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.taskmanager.DeleteJobResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.DeleteJobResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.taskmanager.DeleteJobResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.taskmanager.DeleteJobResponse)
  return false;
#undef DO_
}

void DeleteJobResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.taskmanager.DeleteJobResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.DeleteJobResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.taskmanager.DeleteJobResponse)
}

::google::protobuf::uint8* DeleteJobResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.taskmanager.DeleteJobResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.DeleteJobResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.taskmanager.DeleteJobResponse)
  return target;
}

size_t DeleteJobResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.taskmanager.DeleteJobResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }
  // optional string msg = 2;
  if (has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteJobResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.taskmanager.DeleteJobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteJobResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteJobResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.taskmanager.DeleteJobResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.taskmanager.DeleteJobResponse)
    MergeFrom(*source);
  }
}

void DeleteJobResponse::MergeFrom(const DeleteJobResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.taskmanager.DeleteJobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DeleteJobResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.taskmanager.DeleteJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteJobResponse::CopyFrom(const DeleteJobResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.taskmanager.DeleteJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteJobResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void DeleteJobResponse::Swap(DeleteJobResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteJobResponse::InternalSwap(DeleteJobResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteJobResponse::GetMetadata() const {
  protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShowBatchVersionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowBatchVersionRequest::ShowBatchVersionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_taskmanager_2eproto::scc_info_ShowBatchVersionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.taskmanager.ShowBatchVersionRequest)
}
ShowBatchVersionRequest::ShowBatchVersionRequest(const ShowBatchVersionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openmldb.taskmanager.ShowBatchVersionRequest)
}

void ShowBatchVersionRequest::SharedCtor() {
}

ShowBatchVersionRequest::~ShowBatchVersionRequest() {
  // @@protoc_insertion_point(destructor:openmldb.taskmanager.ShowBatchVersionRequest)
  SharedDtor();
}

void ShowBatchVersionRequest::SharedDtor() {
}

void ShowBatchVersionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShowBatchVersionRequest::descriptor() {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShowBatchVersionRequest& ShowBatchVersionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_taskmanager_2eproto::scc_info_ShowBatchVersionRequest.base);
  return *internal_default_instance();
}


void ShowBatchVersionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.taskmanager.ShowBatchVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowBatchVersionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.taskmanager.ShowBatchVersionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.taskmanager.ShowBatchVersionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.taskmanager.ShowBatchVersionRequest)
  return false;
#undef DO_
}

void ShowBatchVersionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.taskmanager.ShowBatchVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.taskmanager.ShowBatchVersionRequest)
}

::google::protobuf::uint8* ShowBatchVersionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.taskmanager.ShowBatchVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.taskmanager.ShowBatchVersionRequest)
  return target;
}

size_t ShowBatchVersionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.taskmanager.ShowBatchVersionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowBatchVersionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.taskmanager.ShowBatchVersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowBatchVersionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShowBatchVersionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.taskmanager.ShowBatchVersionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.taskmanager.ShowBatchVersionRequest)
    MergeFrom(*source);
  }
}

void ShowBatchVersionRequest::MergeFrom(const ShowBatchVersionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.taskmanager.ShowBatchVersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ShowBatchVersionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.taskmanager.ShowBatchVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowBatchVersionRequest::CopyFrom(const ShowBatchVersionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.taskmanager.ShowBatchVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowBatchVersionRequest::IsInitialized() const {
  return true;
}

void ShowBatchVersionRequest::Swap(ShowBatchVersionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowBatchVersionRequest::InternalSwap(ShowBatchVersionRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShowBatchVersionRequest::GetMetadata() const {
  protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

RunBatchSqlRequest_ConfEntry_DoNotUse::RunBatchSqlRequest_ConfEntry_DoNotUse() {}
RunBatchSqlRequest_ConfEntry_DoNotUse::RunBatchSqlRequest_ConfEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void RunBatchSqlRequest_ConfEntry_DoNotUse::MergeFrom(const RunBatchSqlRequest_ConfEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata RunBatchSqlRequest_ConfEntry_DoNotUse::GetMetadata() const {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[10];
}
void RunBatchSqlRequest_ConfEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void RunBatchSqlRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunBatchSqlRequest::kSqlFieldNumber;
const int RunBatchSqlRequest::kConfFieldNumber;
const int RunBatchSqlRequest::kDefaultDbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunBatchSqlRequest::RunBatchSqlRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_taskmanager_2eproto::scc_info_RunBatchSqlRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.taskmanager.RunBatchSqlRequest)
}
RunBatchSqlRequest::RunBatchSqlRequest(const RunBatchSqlRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  conf_.MergeFrom(from.conf_);
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sql()) {
    sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
  }
  default_db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_default_db()) {
    default_db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_db_);
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.taskmanager.RunBatchSqlRequest)
}

void RunBatchSqlRequest::SharedCtor() {
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RunBatchSqlRequest::~RunBatchSqlRequest() {
  // @@protoc_insertion_point(destructor:openmldb.taskmanager.RunBatchSqlRequest)
  SharedDtor();
}

void RunBatchSqlRequest::SharedDtor() {
  sql_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RunBatchSqlRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RunBatchSqlRequest::descriptor() {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RunBatchSqlRequest& RunBatchSqlRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_taskmanager_2eproto::scc_info_RunBatchSqlRequest.base);
  return *internal_default_instance();
}


void RunBatchSqlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.taskmanager.RunBatchSqlRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  conf_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      sql_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      default_db_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RunBatchSqlRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.taskmanager.RunBatchSqlRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sql = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sql()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sql().data(), static_cast<int>(this->sql().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.RunBatchSqlRequest.sql");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> conf = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          RunBatchSqlRequest_ConfEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              RunBatchSqlRequest_ConfEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&conf_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.RunBatchSqlRequest.ConfEntry.key");
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.RunBatchSqlRequest.ConfEntry.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string default_db = 3 [default = ""];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->default_db().data(), static_cast<int>(this->default_db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.RunBatchSqlRequest.default_db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.taskmanager.RunBatchSqlRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.taskmanager.RunBatchSqlRequest)
  return false;
#undef DO_
}

void RunBatchSqlRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.taskmanager.RunBatchSqlRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sql = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), static_cast<int>(this->sql().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.RunBatchSqlRequest.sql");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sql(), output);
  }

  // map<string, string> conf = 2;
  if (!this->conf().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "openmldb.taskmanager.RunBatchSqlRequest.ConfEntry.key");
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "openmldb.taskmanager.RunBatchSqlRequest.ConfEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->conf().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->conf().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->conf().begin();
          it != this->conf().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<RunBatchSqlRequest_ConfEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(conf_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<RunBatchSqlRequest_ConfEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->conf().begin();
          it != this->conf().end(); ++it) {
        entry.reset(conf_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string default_db = 3 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_db().data(), static_cast<int>(this->default_db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.RunBatchSqlRequest.default_db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->default_db(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.taskmanager.RunBatchSqlRequest)
}

::google::protobuf::uint8* RunBatchSqlRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.taskmanager.RunBatchSqlRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sql = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), static_cast<int>(this->sql().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.RunBatchSqlRequest.sql");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sql(), target);
  }

  // map<string, string> conf = 2;
  if (!this->conf().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "openmldb.taskmanager.RunBatchSqlRequest.ConfEntry.key");
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "openmldb.taskmanager.RunBatchSqlRequest.ConfEntry.value");
      }
    };

    if (deterministic &&
        this->conf().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->conf().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->conf().begin();
          it != this->conf().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<RunBatchSqlRequest_ConfEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(conf_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<RunBatchSqlRequest_ConfEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->conf().begin();
          it != this->conf().end(); ++it) {
        entry.reset(conf_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string default_db = 3 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_db().data(), static_cast<int>(this->default_db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.RunBatchSqlRequest.default_db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->default_db(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.taskmanager.RunBatchSqlRequest)
  return target;
}

size_t RunBatchSqlRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.taskmanager.RunBatchSqlRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string sql = 1;
  if (has_sql()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sql());
  }
  // map<string, string> conf = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->conf_size());
  {
    ::std::unique_ptr<RunBatchSqlRequest_ConfEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->conf().begin();
        it != this->conf().end(); ++it) {
      entry.reset(conf_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // optional string default_db = 3 [default = ""];
  if (has_default_db()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->default_db());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RunBatchSqlRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.taskmanager.RunBatchSqlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RunBatchSqlRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RunBatchSqlRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.taskmanager.RunBatchSqlRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.taskmanager.RunBatchSqlRequest)
    MergeFrom(*source);
  }
}

void RunBatchSqlRequest::MergeFrom(const RunBatchSqlRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.taskmanager.RunBatchSqlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  conf_.MergeFrom(from.conf_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sql();
      sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_default_db();
      default_db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_db_);
    }
  }
}

void RunBatchSqlRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.taskmanager.RunBatchSqlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunBatchSqlRequest::CopyFrom(const RunBatchSqlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.taskmanager.RunBatchSqlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunBatchSqlRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void RunBatchSqlRequest::Swap(RunBatchSqlRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunBatchSqlRequest::InternalSwap(RunBatchSqlRequest* other) {
  using std::swap;
  conf_.Swap(&other->conf_);
  sql_.Swap(&other->sql_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  default_db_.Swap(&other->default_db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RunBatchSqlRequest::GetMetadata() const {
  protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RunBatchSqlResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunBatchSqlResponse::kCodeFieldNumber;
const int RunBatchSqlResponse::kMsgFieldNumber;
const int RunBatchSqlResponse::kOutputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunBatchSqlResponse::RunBatchSqlResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_taskmanager_2eproto::scc_info_RunBatchSqlResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.taskmanager.RunBatchSqlResponse)
}
RunBatchSqlResponse::RunBatchSqlResponse(const RunBatchSqlResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_output()) {
    output_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.taskmanager.RunBatchSqlResponse)
}

void RunBatchSqlResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

RunBatchSqlResponse::~RunBatchSqlResponse() {
  // @@protoc_insertion_point(destructor:openmldb.taskmanager.RunBatchSqlResponse)
  SharedDtor();
}

void RunBatchSqlResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RunBatchSqlResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RunBatchSqlResponse::descriptor() {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RunBatchSqlResponse& RunBatchSqlResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_taskmanager_2eproto::scc_info_RunBatchSqlResponse.base);
  return *internal_default_instance();
}


void RunBatchSqlResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.taskmanager.RunBatchSqlResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      msg_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      output_.ClearNonDefaultToEmptyNoArena();
    }
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RunBatchSqlResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.taskmanager.RunBatchSqlResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.RunBatchSqlResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string output = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->output().data(), static_cast<int>(this->output().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.RunBatchSqlResponse.output");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.taskmanager.RunBatchSqlResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.taskmanager.RunBatchSqlResponse)
  return false;
#undef DO_
}

void RunBatchSqlResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.taskmanager.RunBatchSqlResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.RunBatchSqlResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // optional string output = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output().data(), static_cast<int>(this->output().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.RunBatchSqlResponse.output");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->output(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.taskmanager.RunBatchSqlResponse)
}

::google::protobuf::uint8* RunBatchSqlResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.taskmanager.RunBatchSqlResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.RunBatchSqlResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // optional string output = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output().data(), static_cast<int>(this->output().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.RunBatchSqlResponse.output");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->output(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.taskmanager.RunBatchSqlResponse)
  return target;
}

size_t RunBatchSqlResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.taskmanager.RunBatchSqlResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional string output = 3;
    if (has_output()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->output());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RunBatchSqlResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.taskmanager.RunBatchSqlResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RunBatchSqlResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RunBatchSqlResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.taskmanager.RunBatchSqlResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.taskmanager.RunBatchSqlResponse)
    MergeFrom(*source);
  }
}

void RunBatchSqlResponse::MergeFrom(const RunBatchSqlResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.taskmanager.RunBatchSqlResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_output();
      output_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_);
    }
    if (cached_has_bits & 0x00000004u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RunBatchSqlResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.taskmanager.RunBatchSqlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunBatchSqlResponse::CopyFrom(const RunBatchSqlResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.taskmanager.RunBatchSqlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunBatchSqlResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void RunBatchSqlResponse::Swap(RunBatchSqlResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunBatchSqlResponse::InternalSwap(RunBatchSqlResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  output_.Swap(&other->output_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RunBatchSqlResponse::GetMetadata() const {
  protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

RunBatchAndShowRequest_ConfEntry_DoNotUse::RunBatchAndShowRequest_ConfEntry_DoNotUse() {}
RunBatchAndShowRequest_ConfEntry_DoNotUse::RunBatchAndShowRequest_ConfEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void RunBatchAndShowRequest_ConfEntry_DoNotUse::MergeFrom(const RunBatchAndShowRequest_ConfEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata RunBatchAndShowRequest_ConfEntry_DoNotUse::GetMetadata() const {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[13];
}
void RunBatchAndShowRequest_ConfEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void RunBatchAndShowRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunBatchAndShowRequest::kSqlFieldNumber;
const int RunBatchAndShowRequest::kConfFieldNumber;
const int RunBatchAndShowRequest::kDefaultDbFieldNumber;
const int RunBatchAndShowRequest::kSyncJobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunBatchAndShowRequest::RunBatchAndShowRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_taskmanager_2eproto::scc_info_RunBatchAndShowRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.taskmanager.RunBatchAndShowRequest)
}
RunBatchAndShowRequest::RunBatchAndShowRequest(const RunBatchAndShowRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  conf_.MergeFrom(from.conf_);
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sql()) {
    sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
  }
  default_db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_default_db()) {
    default_db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_db_);
  }
  sync_job_ = from.sync_job_;
  // @@protoc_insertion_point(copy_constructor:openmldb.taskmanager.RunBatchAndShowRequest)
}

void RunBatchAndShowRequest::SharedCtor() {
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sync_job_ = false;
}

RunBatchAndShowRequest::~RunBatchAndShowRequest() {
  // @@protoc_insertion_point(destructor:openmldb.taskmanager.RunBatchAndShowRequest)
  SharedDtor();
}

void RunBatchAndShowRequest::SharedDtor() {
  sql_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RunBatchAndShowRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RunBatchAndShowRequest::descriptor() {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RunBatchAndShowRequest& RunBatchAndShowRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_taskmanager_2eproto::scc_info_RunBatchAndShowRequest.base);
  return *internal_default_instance();
}


void RunBatchAndShowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.taskmanager.RunBatchAndShowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  conf_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      sql_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      default_db_.ClearNonDefaultToEmptyNoArena();
    }
  }
  sync_job_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RunBatchAndShowRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.taskmanager.RunBatchAndShowRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sql = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sql()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sql().data(), static_cast<int>(this->sql().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.RunBatchAndShowRequest.sql");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> conf = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          RunBatchAndShowRequest_ConfEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              RunBatchAndShowRequest_ConfEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&conf_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.RunBatchAndShowRequest.ConfEntry.key");
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.RunBatchAndShowRequest.ConfEntry.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string default_db = 3 [default = ""];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->default_db().data(), static_cast<int>(this->default_db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.RunBatchAndShowRequest.default_db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool sync_job = 4 [default = false];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_sync_job();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sync_job_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.taskmanager.RunBatchAndShowRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.taskmanager.RunBatchAndShowRequest)
  return false;
#undef DO_
}

void RunBatchAndShowRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.taskmanager.RunBatchAndShowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sql = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), static_cast<int>(this->sql().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.RunBatchAndShowRequest.sql");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sql(), output);
  }

  // map<string, string> conf = 2;
  if (!this->conf().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "openmldb.taskmanager.RunBatchAndShowRequest.ConfEntry.key");
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "openmldb.taskmanager.RunBatchAndShowRequest.ConfEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->conf().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->conf().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->conf().begin();
          it != this->conf().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<RunBatchAndShowRequest_ConfEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(conf_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<RunBatchAndShowRequest_ConfEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->conf().begin();
          it != this->conf().end(); ++it) {
        entry.reset(conf_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string default_db = 3 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_db().data(), static_cast<int>(this->default_db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.RunBatchAndShowRequest.default_db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->default_db(), output);
  }

  // optional bool sync_job = 4 [default = false];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->sync_job(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.taskmanager.RunBatchAndShowRequest)
}

::google::protobuf::uint8* RunBatchAndShowRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.taskmanager.RunBatchAndShowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sql = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), static_cast<int>(this->sql().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.RunBatchAndShowRequest.sql");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sql(), target);
  }

  // map<string, string> conf = 2;
  if (!this->conf().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "openmldb.taskmanager.RunBatchAndShowRequest.ConfEntry.key");
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "openmldb.taskmanager.RunBatchAndShowRequest.ConfEntry.value");
      }
    };

    if (deterministic &&
        this->conf().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->conf().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->conf().begin();
          it != this->conf().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<RunBatchAndShowRequest_ConfEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(conf_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<RunBatchAndShowRequest_ConfEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->conf().begin();
          it != this->conf().end(); ++it) {
        entry.reset(conf_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string default_db = 3 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_db().data(), static_cast<int>(this->default_db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.RunBatchAndShowRequest.default_db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->default_db(), target);
  }

  // optional bool sync_job = 4 [default = false];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->sync_job(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.taskmanager.RunBatchAndShowRequest)
  return target;
}

size_t RunBatchAndShowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.taskmanager.RunBatchAndShowRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string sql = 1;
  if (has_sql()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sql());
  }
  // map<string, string> conf = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->conf_size());
  {
    ::std::unique_ptr<RunBatchAndShowRequest_ConfEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->conf().begin();
        it != this->conf().end(); ++it) {
      entry.reset(conf_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  if (_has_bits_[0 / 32] & 6u) {
    // optional string default_db = 3 [default = ""];
    if (has_default_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->default_db());
    }

    // optional bool sync_job = 4 [default = false];
    if (has_sync_job()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RunBatchAndShowRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.taskmanager.RunBatchAndShowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RunBatchAndShowRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RunBatchAndShowRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.taskmanager.RunBatchAndShowRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.taskmanager.RunBatchAndShowRequest)
    MergeFrom(*source);
  }
}

void RunBatchAndShowRequest::MergeFrom(const RunBatchAndShowRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.taskmanager.RunBatchAndShowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  conf_.MergeFrom(from.conf_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sql();
      sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_default_db();
      default_db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_db_);
    }
    if (cached_has_bits & 0x00000004u) {
      sync_job_ = from.sync_job_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RunBatchAndShowRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.taskmanager.RunBatchAndShowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunBatchAndShowRequest::CopyFrom(const RunBatchAndShowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.taskmanager.RunBatchAndShowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunBatchAndShowRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void RunBatchAndShowRequest::Swap(RunBatchAndShowRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunBatchAndShowRequest::InternalSwap(RunBatchAndShowRequest* other) {
  using std::swap;
  conf_.Swap(&other->conf_);
  sql_.Swap(&other->sql_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  default_db_.Swap(&other->default_db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sync_job_, other->sync_job_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RunBatchAndShowRequest::GetMetadata() const {
  protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ImportOnlineDataRequest_ConfEntry_DoNotUse::ImportOnlineDataRequest_ConfEntry_DoNotUse() {}
ImportOnlineDataRequest_ConfEntry_DoNotUse::ImportOnlineDataRequest_ConfEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ImportOnlineDataRequest_ConfEntry_DoNotUse::MergeFrom(const ImportOnlineDataRequest_ConfEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ImportOnlineDataRequest_ConfEntry_DoNotUse::GetMetadata() const {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[15];
}
void ImportOnlineDataRequest_ConfEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ImportOnlineDataRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImportOnlineDataRequest::kSqlFieldNumber;
const int ImportOnlineDataRequest::kConfFieldNumber;
const int ImportOnlineDataRequest::kDefaultDbFieldNumber;
const int ImportOnlineDataRequest::kSyncJobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImportOnlineDataRequest::ImportOnlineDataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_taskmanager_2eproto::scc_info_ImportOnlineDataRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.taskmanager.ImportOnlineDataRequest)
}
ImportOnlineDataRequest::ImportOnlineDataRequest(const ImportOnlineDataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  conf_.MergeFrom(from.conf_);
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sql()) {
    sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
  }
  default_db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_default_db()) {
    default_db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_db_);
  }
  sync_job_ = from.sync_job_;
  // @@protoc_insertion_point(copy_constructor:openmldb.taskmanager.ImportOnlineDataRequest)
}

void ImportOnlineDataRequest::SharedCtor() {
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sync_job_ = false;
}

ImportOnlineDataRequest::~ImportOnlineDataRequest() {
  // @@protoc_insertion_point(destructor:openmldb.taskmanager.ImportOnlineDataRequest)
  SharedDtor();
}

void ImportOnlineDataRequest::SharedDtor() {
  sql_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ImportOnlineDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImportOnlineDataRequest::descriptor() {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImportOnlineDataRequest& ImportOnlineDataRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_taskmanager_2eproto::scc_info_ImportOnlineDataRequest.base);
  return *internal_default_instance();
}


void ImportOnlineDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.taskmanager.ImportOnlineDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  conf_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      sql_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      default_db_.ClearNonDefaultToEmptyNoArena();
    }
  }
  sync_job_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ImportOnlineDataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.taskmanager.ImportOnlineDataRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sql = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sql()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sql().data(), static_cast<int>(this->sql().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.ImportOnlineDataRequest.sql");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> conf = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          ImportOnlineDataRequest_ConfEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ImportOnlineDataRequest_ConfEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&conf_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.ImportOnlineDataRequest.ConfEntry.key");
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.ImportOnlineDataRequest.ConfEntry.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string default_db = 3 [default = ""];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->default_db().data(), static_cast<int>(this->default_db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.ImportOnlineDataRequest.default_db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool sync_job = 4 [default = false];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_sync_job();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sync_job_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.taskmanager.ImportOnlineDataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.taskmanager.ImportOnlineDataRequest)
  return false;
#undef DO_
}

void ImportOnlineDataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.taskmanager.ImportOnlineDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sql = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), static_cast<int>(this->sql().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.ImportOnlineDataRequest.sql");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sql(), output);
  }

  // map<string, string> conf = 2;
  if (!this->conf().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "openmldb.taskmanager.ImportOnlineDataRequest.ConfEntry.key");
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "openmldb.taskmanager.ImportOnlineDataRequest.ConfEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->conf().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->conf().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->conf().begin();
          it != this->conf().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ImportOnlineDataRequest_ConfEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(conf_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ImportOnlineDataRequest_ConfEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->conf().begin();
          it != this->conf().end(); ++it) {
        entry.reset(conf_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string default_db = 3 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_db().data(), static_cast<int>(this->default_db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.ImportOnlineDataRequest.default_db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->default_db(), output);
  }

  // optional bool sync_job = 4 [default = false];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->sync_job(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.taskmanager.ImportOnlineDataRequest)
}

::google::protobuf::uint8* ImportOnlineDataRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.taskmanager.ImportOnlineDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sql = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), static_cast<int>(this->sql().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.ImportOnlineDataRequest.sql");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sql(), target);
  }

  // map<string, string> conf = 2;
  if (!this->conf().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "openmldb.taskmanager.ImportOnlineDataRequest.ConfEntry.key");
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "openmldb.taskmanager.ImportOnlineDataRequest.ConfEntry.value");
      }
    };

    if (deterministic &&
        this->conf().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->conf().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->conf().begin();
          it != this->conf().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ImportOnlineDataRequest_ConfEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(conf_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ImportOnlineDataRequest_ConfEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->conf().begin();
          it != this->conf().end(); ++it) {
        entry.reset(conf_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string default_db = 3 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_db().data(), static_cast<int>(this->default_db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.ImportOnlineDataRequest.default_db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->default_db(), target);
  }

  // optional bool sync_job = 4 [default = false];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->sync_job(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.taskmanager.ImportOnlineDataRequest)
  return target;
}

size_t ImportOnlineDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.taskmanager.ImportOnlineDataRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string sql = 1;
  if (has_sql()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sql());
  }
  // map<string, string> conf = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->conf_size());
  {
    ::std::unique_ptr<ImportOnlineDataRequest_ConfEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->conf().begin();
        it != this->conf().end(); ++it) {
      entry.reset(conf_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  if (_has_bits_[0 / 32] & 6u) {
    // optional string default_db = 3 [default = ""];
    if (has_default_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->default_db());
    }

    // optional bool sync_job = 4 [default = false];
    if (has_sync_job()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImportOnlineDataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.taskmanager.ImportOnlineDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImportOnlineDataRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImportOnlineDataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.taskmanager.ImportOnlineDataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.taskmanager.ImportOnlineDataRequest)
    MergeFrom(*source);
  }
}

void ImportOnlineDataRequest::MergeFrom(const ImportOnlineDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.taskmanager.ImportOnlineDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  conf_.MergeFrom(from.conf_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sql();
      sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_default_db();
      default_db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_db_);
    }
    if (cached_has_bits & 0x00000004u) {
      sync_job_ = from.sync_job_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ImportOnlineDataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.taskmanager.ImportOnlineDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImportOnlineDataRequest::CopyFrom(const ImportOnlineDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.taskmanager.ImportOnlineDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImportOnlineDataRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ImportOnlineDataRequest::Swap(ImportOnlineDataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImportOnlineDataRequest::InternalSwap(ImportOnlineDataRequest* other) {
  using std::swap;
  conf_.Swap(&other->conf_);
  sql_.Swap(&other->sql_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  default_db_.Swap(&other->default_db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sync_job_, other->sync_job_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImportOnlineDataRequest::GetMetadata() const {
  protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ImportOfflineDataRequest_ConfEntry_DoNotUse::ImportOfflineDataRequest_ConfEntry_DoNotUse() {}
ImportOfflineDataRequest_ConfEntry_DoNotUse::ImportOfflineDataRequest_ConfEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ImportOfflineDataRequest_ConfEntry_DoNotUse::MergeFrom(const ImportOfflineDataRequest_ConfEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ImportOfflineDataRequest_ConfEntry_DoNotUse::GetMetadata() const {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[17];
}
void ImportOfflineDataRequest_ConfEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ImportOfflineDataRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImportOfflineDataRequest::kSqlFieldNumber;
const int ImportOfflineDataRequest::kConfFieldNumber;
const int ImportOfflineDataRequest::kDefaultDbFieldNumber;
const int ImportOfflineDataRequest::kSyncJobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImportOfflineDataRequest::ImportOfflineDataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_taskmanager_2eproto::scc_info_ImportOfflineDataRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.taskmanager.ImportOfflineDataRequest)
}
ImportOfflineDataRequest::ImportOfflineDataRequest(const ImportOfflineDataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  conf_.MergeFrom(from.conf_);
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sql()) {
    sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
  }
  default_db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_default_db()) {
    default_db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_db_);
  }
  sync_job_ = from.sync_job_;
  // @@protoc_insertion_point(copy_constructor:openmldb.taskmanager.ImportOfflineDataRequest)
}

void ImportOfflineDataRequest::SharedCtor() {
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sync_job_ = false;
}

ImportOfflineDataRequest::~ImportOfflineDataRequest() {
  // @@protoc_insertion_point(destructor:openmldb.taskmanager.ImportOfflineDataRequest)
  SharedDtor();
}

void ImportOfflineDataRequest::SharedDtor() {
  sql_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ImportOfflineDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImportOfflineDataRequest::descriptor() {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImportOfflineDataRequest& ImportOfflineDataRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_taskmanager_2eproto::scc_info_ImportOfflineDataRequest.base);
  return *internal_default_instance();
}


void ImportOfflineDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.taskmanager.ImportOfflineDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  conf_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      sql_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      default_db_.ClearNonDefaultToEmptyNoArena();
    }
  }
  sync_job_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ImportOfflineDataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.taskmanager.ImportOfflineDataRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sql = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sql()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sql().data(), static_cast<int>(this->sql().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.ImportOfflineDataRequest.sql");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> conf = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          ImportOfflineDataRequest_ConfEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ImportOfflineDataRequest_ConfEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&conf_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.ImportOfflineDataRequest.ConfEntry.key");
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.ImportOfflineDataRequest.ConfEntry.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string default_db = 3 [default = ""];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->default_db().data(), static_cast<int>(this->default_db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.ImportOfflineDataRequest.default_db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool sync_job = 4 [default = false];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_sync_job();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sync_job_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.taskmanager.ImportOfflineDataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.taskmanager.ImportOfflineDataRequest)
  return false;
#undef DO_
}

void ImportOfflineDataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.taskmanager.ImportOfflineDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sql = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), static_cast<int>(this->sql().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.ImportOfflineDataRequest.sql");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sql(), output);
  }

  // map<string, string> conf = 2;
  if (!this->conf().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "openmldb.taskmanager.ImportOfflineDataRequest.ConfEntry.key");
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "openmldb.taskmanager.ImportOfflineDataRequest.ConfEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->conf().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->conf().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->conf().begin();
          it != this->conf().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ImportOfflineDataRequest_ConfEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(conf_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ImportOfflineDataRequest_ConfEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->conf().begin();
          it != this->conf().end(); ++it) {
        entry.reset(conf_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string default_db = 3 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_db().data(), static_cast<int>(this->default_db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.ImportOfflineDataRequest.default_db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->default_db(), output);
  }

  // optional bool sync_job = 4 [default = false];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->sync_job(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.taskmanager.ImportOfflineDataRequest)
}

::google::protobuf::uint8* ImportOfflineDataRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.taskmanager.ImportOfflineDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sql = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), static_cast<int>(this->sql().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.ImportOfflineDataRequest.sql");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sql(), target);
  }

  // map<string, string> conf = 2;
  if (!this->conf().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "openmldb.taskmanager.ImportOfflineDataRequest.ConfEntry.key");
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "openmldb.taskmanager.ImportOfflineDataRequest.ConfEntry.value");
      }
    };

    if (deterministic &&
        this->conf().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->conf().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->conf().begin();
          it != this->conf().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ImportOfflineDataRequest_ConfEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(conf_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ImportOfflineDataRequest_ConfEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->conf().begin();
          it != this->conf().end(); ++it) {
        entry.reset(conf_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string default_db = 3 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_db().data(), static_cast<int>(this->default_db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.ImportOfflineDataRequest.default_db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->default_db(), target);
  }

  // optional bool sync_job = 4 [default = false];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->sync_job(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.taskmanager.ImportOfflineDataRequest)
  return target;
}

size_t ImportOfflineDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.taskmanager.ImportOfflineDataRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string sql = 1;
  if (has_sql()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sql());
  }
  // map<string, string> conf = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->conf_size());
  {
    ::std::unique_ptr<ImportOfflineDataRequest_ConfEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->conf().begin();
        it != this->conf().end(); ++it) {
      entry.reset(conf_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  if (_has_bits_[0 / 32] & 6u) {
    // optional string default_db = 3 [default = ""];
    if (has_default_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->default_db());
    }

    // optional bool sync_job = 4 [default = false];
    if (has_sync_job()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImportOfflineDataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.taskmanager.ImportOfflineDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImportOfflineDataRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImportOfflineDataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.taskmanager.ImportOfflineDataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.taskmanager.ImportOfflineDataRequest)
    MergeFrom(*source);
  }
}

void ImportOfflineDataRequest::MergeFrom(const ImportOfflineDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.taskmanager.ImportOfflineDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  conf_.MergeFrom(from.conf_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sql();
      sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_default_db();
      default_db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_db_);
    }
    if (cached_has_bits & 0x00000004u) {
      sync_job_ = from.sync_job_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ImportOfflineDataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.taskmanager.ImportOfflineDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImportOfflineDataRequest::CopyFrom(const ImportOfflineDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.taskmanager.ImportOfflineDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImportOfflineDataRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ImportOfflineDataRequest::Swap(ImportOfflineDataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImportOfflineDataRequest::InternalSwap(ImportOfflineDataRequest* other) {
  using std::swap;
  conf_.Swap(&other->conf_);
  sql_.Swap(&other->sql_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  default_db_.Swap(&other->default_db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sync_job_, other->sync_job_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImportOfflineDataRequest::GetMetadata() const {
  protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ExportOfflineDataRequest_ConfEntry_DoNotUse::ExportOfflineDataRequest_ConfEntry_DoNotUse() {}
ExportOfflineDataRequest_ConfEntry_DoNotUse::ExportOfflineDataRequest_ConfEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ExportOfflineDataRequest_ConfEntry_DoNotUse::MergeFrom(const ExportOfflineDataRequest_ConfEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ExportOfflineDataRequest_ConfEntry_DoNotUse::GetMetadata() const {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[19];
}
void ExportOfflineDataRequest_ConfEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ExportOfflineDataRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExportOfflineDataRequest::kSqlFieldNumber;
const int ExportOfflineDataRequest::kConfFieldNumber;
const int ExportOfflineDataRequest::kDefaultDbFieldNumber;
const int ExportOfflineDataRequest::kSyncJobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExportOfflineDataRequest::ExportOfflineDataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_taskmanager_2eproto::scc_info_ExportOfflineDataRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.taskmanager.ExportOfflineDataRequest)
}
ExportOfflineDataRequest::ExportOfflineDataRequest(const ExportOfflineDataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  conf_.MergeFrom(from.conf_);
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sql()) {
    sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
  }
  default_db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_default_db()) {
    default_db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_db_);
  }
  sync_job_ = from.sync_job_;
  // @@protoc_insertion_point(copy_constructor:openmldb.taskmanager.ExportOfflineDataRequest)
}

void ExportOfflineDataRequest::SharedCtor() {
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sync_job_ = false;
}

ExportOfflineDataRequest::~ExportOfflineDataRequest() {
  // @@protoc_insertion_point(destructor:openmldb.taskmanager.ExportOfflineDataRequest)
  SharedDtor();
}

void ExportOfflineDataRequest::SharedDtor() {
  sql_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExportOfflineDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExportOfflineDataRequest::descriptor() {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExportOfflineDataRequest& ExportOfflineDataRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_taskmanager_2eproto::scc_info_ExportOfflineDataRequest.base);
  return *internal_default_instance();
}


void ExportOfflineDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.taskmanager.ExportOfflineDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  conf_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      sql_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      default_db_.ClearNonDefaultToEmptyNoArena();
    }
  }
  sync_job_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExportOfflineDataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.taskmanager.ExportOfflineDataRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sql = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sql()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sql().data(), static_cast<int>(this->sql().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.ExportOfflineDataRequest.sql");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> conf = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          ExportOfflineDataRequest_ConfEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ExportOfflineDataRequest_ConfEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&conf_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.ExportOfflineDataRequest.ConfEntry.key");
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.ExportOfflineDataRequest.ConfEntry.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string default_db = 3 [default = ""];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->default_db().data(), static_cast<int>(this->default_db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.ExportOfflineDataRequest.default_db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool sync_job = 4 [default = false];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_sync_job();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sync_job_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.taskmanager.ExportOfflineDataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.taskmanager.ExportOfflineDataRequest)
  return false;
#undef DO_
}

void ExportOfflineDataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.taskmanager.ExportOfflineDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sql = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), static_cast<int>(this->sql().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.ExportOfflineDataRequest.sql");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sql(), output);
  }

  // map<string, string> conf = 2;
  if (!this->conf().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "openmldb.taskmanager.ExportOfflineDataRequest.ConfEntry.key");
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "openmldb.taskmanager.ExportOfflineDataRequest.ConfEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->conf().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->conf().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->conf().begin();
          it != this->conf().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ExportOfflineDataRequest_ConfEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(conf_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ExportOfflineDataRequest_ConfEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->conf().begin();
          it != this->conf().end(); ++it) {
        entry.reset(conf_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string default_db = 3 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_db().data(), static_cast<int>(this->default_db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.ExportOfflineDataRequest.default_db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->default_db(), output);
  }

  // optional bool sync_job = 4 [default = false];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->sync_job(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.taskmanager.ExportOfflineDataRequest)
}

::google::protobuf::uint8* ExportOfflineDataRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.taskmanager.ExportOfflineDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sql = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), static_cast<int>(this->sql().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.ExportOfflineDataRequest.sql");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sql(), target);
  }

  // map<string, string> conf = 2;
  if (!this->conf().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "openmldb.taskmanager.ExportOfflineDataRequest.ConfEntry.key");
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "openmldb.taskmanager.ExportOfflineDataRequest.ConfEntry.value");
      }
    };

    if (deterministic &&
        this->conf().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->conf().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->conf().begin();
          it != this->conf().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ExportOfflineDataRequest_ConfEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(conf_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ExportOfflineDataRequest_ConfEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->conf().begin();
          it != this->conf().end(); ++it) {
        entry.reset(conf_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string default_db = 3 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_db().data(), static_cast<int>(this->default_db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.ExportOfflineDataRequest.default_db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->default_db(), target);
  }

  // optional bool sync_job = 4 [default = false];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->sync_job(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.taskmanager.ExportOfflineDataRequest)
  return target;
}

size_t ExportOfflineDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.taskmanager.ExportOfflineDataRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string sql = 1;
  if (has_sql()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sql());
  }
  // map<string, string> conf = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->conf_size());
  {
    ::std::unique_ptr<ExportOfflineDataRequest_ConfEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->conf().begin();
        it != this->conf().end(); ++it) {
      entry.reset(conf_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  if (_has_bits_[0 / 32] & 6u) {
    // optional string default_db = 3 [default = ""];
    if (has_default_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->default_db());
    }

    // optional bool sync_job = 4 [default = false];
    if (has_sync_job()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExportOfflineDataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.taskmanager.ExportOfflineDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExportOfflineDataRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExportOfflineDataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.taskmanager.ExportOfflineDataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.taskmanager.ExportOfflineDataRequest)
    MergeFrom(*source);
  }
}

void ExportOfflineDataRequest::MergeFrom(const ExportOfflineDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.taskmanager.ExportOfflineDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  conf_.MergeFrom(from.conf_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sql();
      sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_default_db();
      default_db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_db_);
    }
    if (cached_has_bits & 0x00000004u) {
      sync_job_ = from.sync_job_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExportOfflineDataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.taskmanager.ExportOfflineDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExportOfflineDataRequest::CopyFrom(const ExportOfflineDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.taskmanager.ExportOfflineDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExportOfflineDataRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ExportOfflineDataRequest::Swap(ExportOfflineDataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExportOfflineDataRequest::InternalSwap(ExportOfflineDataRequest* other) {
  using std::swap;
  conf_.Swap(&other->conf_);
  sql_.Swap(&other->sql_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  default_db_.Swap(&other->default_db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sync_job_, other->sync_job_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExportOfflineDataRequest::GetMetadata() const {
  protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DropOfflineTableRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DropOfflineTableRequest::kDbFieldNumber;
const int DropOfflineTableRequest::kTableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DropOfflineTableRequest::DropOfflineTableRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_taskmanager_2eproto::scc_info_DropOfflineTableRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.taskmanager.DropOfflineTableRequest)
}
DropOfflineTableRequest::DropOfflineTableRequest(const DropOfflineTableRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_table()) {
    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.taskmanager.DropOfflineTableRequest)
}

void DropOfflineTableRequest::SharedCtor() {
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DropOfflineTableRequest::~DropOfflineTableRequest() {
  // @@protoc_insertion_point(destructor:openmldb.taskmanager.DropOfflineTableRequest)
  SharedDtor();
}

void DropOfflineTableRequest::SharedDtor() {
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  table_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DropOfflineTableRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DropOfflineTableRequest::descriptor() {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DropOfflineTableRequest& DropOfflineTableRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_taskmanager_2eproto::scc_info_DropOfflineTableRequest.base);
  return *internal_default_instance();
}


void DropOfflineTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.taskmanager.DropOfflineTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      table_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DropOfflineTableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.taskmanager.DropOfflineTableRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string db = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.DropOfflineTableRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string table = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->table().data(), static_cast<int>(this->table().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.DropOfflineTableRequest.table");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.taskmanager.DropOfflineTableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.taskmanager.DropOfflineTableRequest)
  return false;
#undef DO_
}

void DropOfflineTableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.taskmanager.DropOfflineTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string db = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.DropOfflineTableRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->db(), output);
  }

  // required string table = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table().data(), static_cast<int>(this->table().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.DropOfflineTableRequest.table");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->table(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.taskmanager.DropOfflineTableRequest)
}

::google::protobuf::uint8* DropOfflineTableRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.taskmanager.DropOfflineTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string db = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.DropOfflineTableRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->db(), target);
  }

  // required string table = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table().data(), static_cast<int>(this->table().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.DropOfflineTableRequest.table");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->table(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.taskmanager.DropOfflineTableRequest)
  return target;
}

size_t DropOfflineTableRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openmldb.taskmanager.DropOfflineTableRequest)
  size_t total_size = 0;

  if (has_db()) {
    // required string db = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->db());
  }

  if (has_table()) {
    // required string table = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table());
  }

  return total_size;
}
size_t DropOfflineTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.taskmanager.DropOfflineTableRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string db = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->db());

    // required string table = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DropOfflineTableRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.taskmanager.DropOfflineTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DropOfflineTableRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DropOfflineTableRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.taskmanager.DropOfflineTableRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.taskmanager.DropOfflineTableRequest)
    MergeFrom(*source);
  }
}

void DropOfflineTableRequest::MergeFrom(const DropOfflineTableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.taskmanager.DropOfflineTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_table();
      table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
    }
  }
}

void DropOfflineTableRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.taskmanager.DropOfflineTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropOfflineTableRequest::CopyFrom(const DropOfflineTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.taskmanager.DropOfflineTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropOfflineTableRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void DropOfflineTableRequest::Swap(DropOfflineTableRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DropOfflineTableRequest::InternalSwap(DropOfflineTableRequest* other) {
  using std::swap;
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  table_.Swap(&other->table_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DropOfflineTableRequest::GetMetadata() const {
  protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DropOfflineTableResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DropOfflineTableResponse::kCodeFieldNumber;
const int DropOfflineTableResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DropOfflineTableResponse::DropOfflineTableResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_taskmanager_2eproto::scc_info_DropOfflineTableResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.taskmanager.DropOfflineTableResponse)
}
DropOfflineTableResponse::DropOfflineTableResponse(const DropOfflineTableResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.taskmanager.DropOfflineTableResponse)
}

void DropOfflineTableResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

DropOfflineTableResponse::~DropOfflineTableResponse() {
  // @@protoc_insertion_point(destructor:openmldb.taskmanager.DropOfflineTableResponse)
  SharedDtor();
}

void DropOfflineTableResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DropOfflineTableResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DropOfflineTableResponse::descriptor() {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DropOfflineTableResponse& DropOfflineTableResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_taskmanager_2eproto::scc_info_DropOfflineTableResponse.base);
  return *internal_default_instance();
}


void DropOfflineTableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.taskmanager.DropOfflineTableResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DropOfflineTableResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.taskmanager.DropOfflineTableResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.DropOfflineTableResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.taskmanager.DropOfflineTableResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.taskmanager.DropOfflineTableResponse)
  return false;
#undef DO_
}

void DropOfflineTableResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.taskmanager.DropOfflineTableResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.DropOfflineTableResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.taskmanager.DropOfflineTableResponse)
}

::google::protobuf::uint8* DropOfflineTableResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.taskmanager.DropOfflineTableResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.DropOfflineTableResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.taskmanager.DropOfflineTableResponse)
  return target;
}

size_t DropOfflineTableResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.taskmanager.DropOfflineTableResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }
  // optional string msg = 2;
  if (has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DropOfflineTableResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.taskmanager.DropOfflineTableResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DropOfflineTableResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DropOfflineTableResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.taskmanager.DropOfflineTableResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.taskmanager.DropOfflineTableResponse)
    MergeFrom(*source);
  }
}

void DropOfflineTableResponse::MergeFrom(const DropOfflineTableResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.taskmanager.DropOfflineTableResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DropOfflineTableResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.taskmanager.DropOfflineTableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropOfflineTableResponse::CopyFrom(const DropOfflineTableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.taskmanager.DropOfflineTableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropOfflineTableResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void DropOfflineTableResponse::Swap(DropOfflineTableResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DropOfflineTableResponse::InternalSwap(DropOfflineTableResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DropOfflineTableResponse::GetMetadata() const {
  protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetJobLogRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetJobLogRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetJobLogRequest::GetJobLogRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_taskmanager_2eproto::scc_info_GetJobLogRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.taskmanager.GetJobLogRequest)
}
GetJobLogRequest::GetJobLogRequest(const GetJobLogRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:openmldb.taskmanager.GetJobLogRequest)
}

void GetJobLogRequest::SharedCtor() {
  id_ = 0;
}

GetJobLogRequest::~GetJobLogRequest() {
  // @@protoc_insertion_point(destructor:openmldb.taskmanager.GetJobLogRequest)
  SharedDtor();
}

void GetJobLogRequest::SharedDtor() {
}

void GetJobLogRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetJobLogRequest::descriptor() {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetJobLogRequest& GetJobLogRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_taskmanager_2eproto::scc_info_GetJobLogRequest.base);
  return *internal_default_instance();
}


void GetJobLogRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.taskmanager.GetJobLogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetJobLogRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.taskmanager.GetJobLogRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.taskmanager.GetJobLogRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.taskmanager.GetJobLogRequest)
  return false;
#undef DO_
}

void GetJobLogRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.taskmanager.GetJobLogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.taskmanager.GetJobLogRequest)
}

::google::protobuf::uint8* GetJobLogRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.taskmanager.GetJobLogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.taskmanager.GetJobLogRequest)
  return target;
}

size_t GetJobLogRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.taskmanager.GetJobLogRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetJobLogRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.taskmanager.GetJobLogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetJobLogRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetJobLogRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.taskmanager.GetJobLogRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.taskmanager.GetJobLogRequest)
    MergeFrom(*source);
  }
}

void GetJobLogRequest::MergeFrom(const GetJobLogRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.taskmanager.GetJobLogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void GetJobLogRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.taskmanager.GetJobLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetJobLogRequest::CopyFrom(const GetJobLogRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.taskmanager.GetJobLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetJobLogRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void GetJobLogRequest::Swap(GetJobLogRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetJobLogRequest::InternalSwap(GetJobLogRequest* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetJobLogRequest::GetMetadata() const {
  protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetJobLogResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetJobLogResponse::kCodeFieldNumber;
const int GetJobLogResponse::kMsgFieldNumber;
const int GetJobLogResponse::kLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetJobLogResponse::GetJobLogResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_taskmanager_2eproto::scc_info_GetJobLogResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.taskmanager.GetJobLogResponse)
}
GetJobLogResponse::GetJobLogResponse(const GetJobLogResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  log_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_log()) {
    log_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.taskmanager.GetJobLogResponse)
}

void GetJobLogResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

GetJobLogResponse::~GetJobLogResponse() {
  // @@protoc_insertion_point(destructor:openmldb.taskmanager.GetJobLogResponse)
  SharedDtor();
}

void GetJobLogResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetJobLogResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetJobLogResponse::descriptor() {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetJobLogResponse& GetJobLogResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_taskmanager_2eproto::scc_info_GetJobLogResponse.base);
  return *internal_default_instance();
}


void GetJobLogResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.taskmanager.GetJobLogResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      msg_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      log_.ClearNonDefaultToEmptyNoArena();
    }
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetJobLogResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.taskmanager.GetJobLogResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.GetJobLogResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string log = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->log().data(), static_cast<int>(this->log().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.GetJobLogResponse.log");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.taskmanager.GetJobLogResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.taskmanager.GetJobLogResponse)
  return false;
#undef DO_
}

void GetJobLogResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.taskmanager.GetJobLogResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.GetJobLogResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // optional string log = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->log().data(), static_cast<int>(this->log().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.GetJobLogResponse.log");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->log(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.taskmanager.GetJobLogResponse)
}

::google::protobuf::uint8* GetJobLogResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.taskmanager.GetJobLogResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.GetJobLogResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // optional string log = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->log().data(), static_cast<int>(this->log().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.GetJobLogResponse.log");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->log(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.taskmanager.GetJobLogResponse)
  return target;
}

size_t GetJobLogResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.taskmanager.GetJobLogResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional string log = 3;
    if (has_log()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->log());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetJobLogResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.taskmanager.GetJobLogResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetJobLogResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetJobLogResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.taskmanager.GetJobLogResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.taskmanager.GetJobLogResponse)
    MergeFrom(*source);
  }
}

void GetJobLogResponse::MergeFrom(const GetJobLogResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.taskmanager.GetJobLogResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_log();
      log_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_);
    }
    if (cached_has_bits & 0x00000004u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetJobLogResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.taskmanager.GetJobLogResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetJobLogResponse::CopyFrom(const GetJobLogResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.taskmanager.GetJobLogResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetJobLogResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void GetJobLogResponse::Swap(GetJobLogResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetJobLogResponse::InternalSwap(GetJobLogResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  log_.Swap(&other->log_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetJobLogResponse::GetMetadata() const {
  protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateFunctionRequest::InitAsDefaultInstance() {
  ::openmldb::taskmanager::_CreateFunctionRequest_default_instance_._instance.get_mutable()->fun_ = const_cast< ::openmldb::common::ExternalFun*>(
      ::openmldb::common::ExternalFun::internal_default_instance());
}
void CreateFunctionRequest::clear_fun() {
  if (fun_ != NULL) fun_->Clear();
  clear_has_fun();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateFunctionRequest::kFunFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateFunctionRequest::CreateFunctionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_taskmanager_2eproto::scc_info_CreateFunctionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.taskmanager.CreateFunctionRequest)
}
CreateFunctionRequest::CreateFunctionRequest(const CreateFunctionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_fun()) {
    fun_ = new ::openmldb::common::ExternalFun(*from.fun_);
  } else {
    fun_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.taskmanager.CreateFunctionRequest)
}

void CreateFunctionRequest::SharedCtor() {
  fun_ = NULL;
}

CreateFunctionRequest::~CreateFunctionRequest() {
  // @@protoc_insertion_point(destructor:openmldb.taskmanager.CreateFunctionRequest)
  SharedDtor();
}

void CreateFunctionRequest::SharedDtor() {
  if (this != internal_default_instance()) delete fun_;
}

void CreateFunctionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateFunctionRequest::descriptor() {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateFunctionRequest& CreateFunctionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_taskmanager_2eproto::scc_info_CreateFunctionRequest.base);
  return *internal_default_instance();
}


void CreateFunctionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.taskmanager.CreateFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(fun_ != NULL);
    fun_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateFunctionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.taskmanager.CreateFunctionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .openmldb.common.ExternalFun fun = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fun()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.taskmanager.CreateFunctionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.taskmanager.CreateFunctionRequest)
  return false;
#undef DO_
}

void CreateFunctionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.taskmanager.CreateFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.common.ExternalFun fun = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_fun(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.taskmanager.CreateFunctionRequest)
}

::google::protobuf::uint8* CreateFunctionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.taskmanager.CreateFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.common.ExternalFun fun = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_fun(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.taskmanager.CreateFunctionRequest)
  return target;
}

size_t CreateFunctionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.taskmanager.CreateFunctionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .openmldb.common.ExternalFun fun = 1;
  if (has_fun()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *fun_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateFunctionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.taskmanager.CreateFunctionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateFunctionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateFunctionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.taskmanager.CreateFunctionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.taskmanager.CreateFunctionRequest)
    MergeFrom(*source);
  }
}

void CreateFunctionRequest::MergeFrom(const CreateFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.taskmanager.CreateFunctionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_fun()) {
    mutable_fun()->::openmldb::common::ExternalFun::MergeFrom(from.fun());
  }
}

void CreateFunctionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.taskmanager.CreateFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateFunctionRequest::CopyFrom(const CreateFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.taskmanager.CreateFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateFunctionRequest::IsInitialized() const {
  return true;
}

void CreateFunctionRequest::Swap(CreateFunctionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateFunctionRequest::InternalSwap(CreateFunctionRequest* other) {
  using std::swap;
  swap(fun_, other->fun_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateFunctionRequest::GetMetadata() const {
  protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateFunctionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateFunctionResponse::kCodeFieldNumber;
const int CreateFunctionResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateFunctionResponse::CreateFunctionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_taskmanager_2eproto::scc_info_CreateFunctionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.taskmanager.CreateFunctionResponse)
}
CreateFunctionResponse::CreateFunctionResponse(const CreateFunctionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.taskmanager.CreateFunctionResponse)
}

void CreateFunctionResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

CreateFunctionResponse::~CreateFunctionResponse() {
  // @@protoc_insertion_point(destructor:openmldb.taskmanager.CreateFunctionResponse)
  SharedDtor();
}

void CreateFunctionResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateFunctionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateFunctionResponse::descriptor() {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateFunctionResponse& CreateFunctionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_taskmanager_2eproto::scc_info_CreateFunctionResponse.base);
  return *internal_default_instance();
}


void CreateFunctionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.taskmanager.CreateFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateFunctionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.taskmanager.CreateFunctionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.CreateFunctionResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.taskmanager.CreateFunctionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.taskmanager.CreateFunctionResponse)
  return false;
#undef DO_
}

void CreateFunctionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.taskmanager.CreateFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.CreateFunctionResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.taskmanager.CreateFunctionResponse)
}

::google::protobuf::uint8* CreateFunctionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.taskmanager.CreateFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.CreateFunctionResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.taskmanager.CreateFunctionResponse)
  return target;
}

size_t CreateFunctionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.taskmanager.CreateFunctionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }
  // optional string msg = 2;
  if (has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateFunctionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.taskmanager.CreateFunctionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateFunctionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateFunctionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.taskmanager.CreateFunctionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.taskmanager.CreateFunctionResponse)
    MergeFrom(*source);
  }
}

void CreateFunctionResponse::MergeFrom(const CreateFunctionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.taskmanager.CreateFunctionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CreateFunctionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.taskmanager.CreateFunctionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateFunctionResponse::CopyFrom(const CreateFunctionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.taskmanager.CreateFunctionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateFunctionResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void CreateFunctionResponse::Swap(CreateFunctionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateFunctionResponse::InternalSwap(CreateFunctionResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateFunctionResponse::GetMetadata() const {
  protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DropFunctionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DropFunctionRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DropFunctionRequest::DropFunctionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_taskmanager_2eproto::scc_info_DropFunctionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.taskmanager.DropFunctionRequest)
}
DropFunctionRequest::DropFunctionRequest(const DropFunctionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.taskmanager.DropFunctionRequest)
}

void DropFunctionRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DropFunctionRequest::~DropFunctionRequest() {
  // @@protoc_insertion_point(destructor:openmldb.taskmanager.DropFunctionRequest)
  SharedDtor();
}

void DropFunctionRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DropFunctionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DropFunctionRequest::descriptor() {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DropFunctionRequest& DropFunctionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_taskmanager_2eproto::scc_info_DropFunctionRequest.base);
  return *internal_default_instance();
}


void DropFunctionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.taskmanager.DropFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DropFunctionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.taskmanager.DropFunctionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.DropFunctionRequest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.taskmanager.DropFunctionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.taskmanager.DropFunctionRequest)
  return false;
#undef DO_
}

void DropFunctionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.taskmanager.DropFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.DropFunctionRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.taskmanager.DropFunctionRequest)
}

::google::protobuf::uint8* DropFunctionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.taskmanager.DropFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.DropFunctionRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.taskmanager.DropFunctionRequest)
  return target;
}

size_t DropFunctionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.taskmanager.DropFunctionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DropFunctionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.taskmanager.DropFunctionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DropFunctionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DropFunctionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.taskmanager.DropFunctionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.taskmanager.DropFunctionRequest)
    MergeFrom(*source);
  }
}

void DropFunctionRequest::MergeFrom(const DropFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.taskmanager.DropFunctionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DropFunctionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.taskmanager.DropFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropFunctionRequest::CopyFrom(const DropFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.taskmanager.DropFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropFunctionRequest::IsInitialized() const {
  return true;
}

void DropFunctionRequest::Swap(DropFunctionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DropFunctionRequest::InternalSwap(DropFunctionRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DropFunctionRequest::GetMetadata() const {
  protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DropFunctionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DropFunctionResponse::kCodeFieldNumber;
const int DropFunctionResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DropFunctionResponse::DropFunctionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_taskmanager_2eproto::scc_info_DropFunctionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.taskmanager.DropFunctionResponse)
}
DropFunctionResponse::DropFunctionResponse(const DropFunctionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.taskmanager.DropFunctionResponse)
}

void DropFunctionResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

DropFunctionResponse::~DropFunctionResponse() {
  // @@protoc_insertion_point(destructor:openmldb.taskmanager.DropFunctionResponse)
  SharedDtor();
}

void DropFunctionResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DropFunctionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DropFunctionResponse::descriptor() {
  ::protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DropFunctionResponse& DropFunctionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_taskmanager_2eproto::scc_info_DropFunctionResponse.base);
  return *internal_default_instance();
}


void DropFunctionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.taskmanager.DropFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DropFunctionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.taskmanager.DropFunctionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.taskmanager.DropFunctionResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.taskmanager.DropFunctionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.taskmanager.DropFunctionResponse)
  return false;
#undef DO_
}

void DropFunctionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.taskmanager.DropFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.DropFunctionResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.taskmanager.DropFunctionResponse)
}

::google::protobuf::uint8* DropFunctionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.taskmanager.DropFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.taskmanager.DropFunctionResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.taskmanager.DropFunctionResponse)
  return target;
}

size_t DropFunctionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.taskmanager.DropFunctionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }
  // optional string msg = 2;
  if (has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DropFunctionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.taskmanager.DropFunctionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DropFunctionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DropFunctionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.taskmanager.DropFunctionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.taskmanager.DropFunctionResponse)
    MergeFrom(*source);
  }
}

void DropFunctionResponse::MergeFrom(const DropFunctionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.taskmanager.DropFunctionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DropFunctionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.taskmanager.DropFunctionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropFunctionResponse::CopyFrom(const DropFunctionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.taskmanager.DropFunctionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropFunctionResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void DropFunctionResponse::Swap(DropFunctionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DropFunctionResponse::InternalSwap(DropFunctionResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DropFunctionResponse::GetMetadata() const {
  protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_taskmanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

TaskManagerServer::~TaskManagerServer() {}

const ::google::protobuf::ServiceDescriptor* TaskManagerServer::descriptor() {
  protobuf_taskmanager_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_taskmanager_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* TaskManagerServer::GetDescriptor() {
  return descriptor();
}

void TaskManagerServer::ShowJobs(::google::protobuf::RpcController* controller,
                         const ::openmldb::taskmanager::ShowJobsRequest*,
                         ::openmldb::taskmanager::ShowJobsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ShowJobs() not implemented.");
  done->Run();
}

void TaskManagerServer::ShowJob(::google::protobuf::RpcController* controller,
                         const ::openmldb::taskmanager::ShowJobRequest*,
                         ::openmldb::taskmanager::ShowJobResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ShowJob() not implemented.");
  done->Run();
}

void TaskManagerServer::StopJob(::google::protobuf::RpcController* controller,
                         const ::openmldb::taskmanager::StopJobRequest*,
                         ::openmldb::taskmanager::StopJobResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method StopJob() not implemented.");
  done->Run();
}

void TaskManagerServer::DeleteJob(::google::protobuf::RpcController* controller,
                         const ::openmldb::taskmanager::DeleteJobRequest*,
                         ::openmldb::taskmanager::DeleteJobResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DeleteJob() not implemented.");
  done->Run();
}

void TaskManagerServer::ShowBatchVersion(::google::protobuf::RpcController* controller,
                         const ::openmldb::taskmanager::ShowBatchVersionRequest*,
                         ::openmldb::taskmanager::ShowJobResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ShowBatchVersion() not implemented.");
  done->Run();
}

void TaskManagerServer::RunBatchSql(::google::protobuf::RpcController* controller,
                         const ::openmldb::taskmanager::RunBatchSqlRequest*,
                         ::openmldb::taskmanager::RunBatchSqlResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RunBatchSql() not implemented.");
  done->Run();
}

void TaskManagerServer::RunBatchAndShow(::google::protobuf::RpcController* controller,
                         const ::openmldb::taskmanager::RunBatchAndShowRequest*,
                         ::openmldb::taskmanager::ShowJobResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RunBatchAndShow() not implemented.");
  done->Run();
}

void TaskManagerServer::ImportOnlineData(::google::protobuf::RpcController* controller,
                         const ::openmldb::taskmanager::ImportOnlineDataRequest*,
                         ::openmldb::taskmanager::ShowJobResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ImportOnlineData() not implemented.");
  done->Run();
}

void TaskManagerServer::ImportOfflineData(::google::protobuf::RpcController* controller,
                         const ::openmldb::taskmanager::ImportOfflineDataRequest*,
                         ::openmldb::taskmanager::ShowJobResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ImportOfflineData() not implemented.");
  done->Run();
}

void TaskManagerServer::ExportOfflineData(::google::protobuf::RpcController* controller,
                         const ::openmldb::taskmanager::ExportOfflineDataRequest*,
                         ::openmldb::taskmanager::ShowJobResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ExportOfflineData() not implemented.");
  done->Run();
}

void TaskManagerServer::DropOfflineTable(::google::protobuf::RpcController* controller,
                         const ::openmldb::taskmanager::DropOfflineTableRequest*,
                         ::openmldb::taskmanager::DropOfflineTableResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DropOfflineTable() not implemented.");
  done->Run();
}

void TaskManagerServer::GetJobLog(::google::protobuf::RpcController* controller,
                         const ::openmldb::taskmanager::GetJobLogRequest*,
                         ::openmldb::taskmanager::GetJobLogResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetJobLog() not implemented.");
  done->Run();
}

void TaskManagerServer::CreateFunction(::google::protobuf::RpcController* controller,
                         const ::openmldb::taskmanager::CreateFunctionRequest*,
                         ::openmldb::taskmanager::CreateFunctionResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CreateFunction() not implemented.");
  done->Run();
}

void TaskManagerServer::DropFunction(::google::protobuf::RpcController* controller,
                         const ::openmldb::taskmanager::DropFunctionRequest*,
                         ::openmldb::taskmanager::DropFunctionResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DropFunction() not implemented.");
  done->Run();
}

void TaskManagerServer::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_taskmanager_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      ShowJobs(controller,
             ::google::protobuf::down_cast<const ::openmldb::taskmanager::ShowJobsRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::taskmanager::ShowJobsResponse*>(response),
             done);
      break;
    case 1:
      ShowJob(controller,
             ::google::protobuf::down_cast<const ::openmldb::taskmanager::ShowJobRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::taskmanager::ShowJobResponse*>(response),
             done);
      break;
    case 2:
      StopJob(controller,
             ::google::protobuf::down_cast<const ::openmldb::taskmanager::StopJobRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::taskmanager::StopJobResponse*>(response),
             done);
      break;
    case 3:
      DeleteJob(controller,
             ::google::protobuf::down_cast<const ::openmldb::taskmanager::DeleteJobRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::taskmanager::DeleteJobResponse*>(response),
             done);
      break;
    case 4:
      ShowBatchVersion(controller,
             ::google::protobuf::down_cast<const ::openmldb::taskmanager::ShowBatchVersionRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::taskmanager::ShowJobResponse*>(response),
             done);
      break;
    case 5:
      RunBatchSql(controller,
             ::google::protobuf::down_cast<const ::openmldb::taskmanager::RunBatchSqlRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::taskmanager::RunBatchSqlResponse*>(response),
             done);
      break;
    case 6:
      RunBatchAndShow(controller,
             ::google::protobuf::down_cast<const ::openmldb::taskmanager::RunBatchAndShowRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::taskmanager::ShowJobResponse*>(response),
             done);
      break;
    case 7:
      ImportOnlineData(controller,
             ::google::protobuf::down_cast<const ::openmldb::taskmanager::ImportOnlineDataRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::taskmanager::ShowJobResponse*>(response),
             done);
      break;
    case 8:
      ImportOfflineData(controller,
             ::google::protobuf::down_cast<const ::openmldb::taskmanager::ImportOfflineDataRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::taskmanager::ShowJobResponse*>(response),
             done);
      break;
    case 9:
      ExportOfflineData(controller,
             ::google::protobuf::down_cast<const ::openmldb::taskmanager::ExportOfflineDataRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::taskmanager::ShowJobResponse*>(response),
             done);
      break;
    case 10:
      DropOfflineTable(controller,
             ::google::protobuf::down_cast<const ::openmldb::taskmanager::DropOfflineTableRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::taskmanager::DropOfflineTableResponse*>(response),
             done);
      break;
    case 11:
      GetJobLog(controller,
             ::google::protobuf::down_cast<const ::openmldb::taskmanager::GetJobLogRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::taskmanager::GetJobLogResponse*>(response),
             done);
      break;
    case 12:
      CreateFunction(controller,
             ::google::protobuf::down_cast<const ::openmldb::taskmanager::CreateFunctionRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::taskmanager::CreateFunctionResponse*>(response),
             done);
      break;
    case 13:
      DropFunction(controller,
             ::google::protobuf::down_cast<const ::openmldb::taskmanager::DropFunctionRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::taskmanager::DropFunctionResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& TaskManagerServer::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::openmldb::taskmanager::ShowJobsRequest::default_instance();
    case 1:
      return ::openmldb::taskmanager::ShowJobRequest::default_instance();
    case 2:
      return ::openmldb::taskmanager::StopJobRequest::default_instance();
    case 3:
      return ::openmldb::taskmanager::DeleteJobRequest::default_instance();
    case 4:
      return ::openmldb::taskmanager::ShowBatchVersionRequest::default_instance();
    case 5:
      return ::openmldb::taskmanager::RunBatchSqlRequest::default_instance();
    case 6:
      return ::openmldb::taskmanager::RunBatchAndShowRequest::default_instance();
    case 7:
      return ::openmldb::taskmanager::ImportOnlineDataRequest::default_instance();
    case 8:
      return ::openmldb::taskmanager::ImportOfflineDataRequest::default_instance();
    case 9:
      return ::openmldb::taskmanager::ExportOfflineDataRequest::default_instance();
    case 10:
      return ::openmldb::taskmanager::DropOfflineTableRequest::default_instance();
    case 11:
      return ::openmldb::taskmanager::GetJobLogRequest::default_instance();
    case 12:
      return ::openmldb::taskmanager::CreateFunctionRequest::default_instance();
    case 13:
      return ::openmldb::taskmanager::DropFunctionRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& TaskManagerServer::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::openmldb::taskmanager::ShowJobsResponse::default_instance();
    case 1:
      return ::openmldb::taskmanager::ShowJobResponse::default_instance();
    case 2:
      return ::openmldb::taskmanager::StopJobResponse::default_instance();
    case 3:
      return ::openmldb::taskmanager::DeleteJobResponse::default_instance();
    case 4:
      return ::openmldb::taskmanager::ShowJobResponse::default_instance();
    case 5:
      return ::openmldb::taskmanager::RunBatchSqlResponse::default_instance();
    case 6:
      return ::openmldb::taskmanager::ShowJobResponse::default_instance();
    case 7:
      return ::openmldb::taskmanager::ShowJobResponse::default_instance();
    case 8:
      return ::openmldb::taskmanager::ShowJobResponse::default_instance();
    case 9:
      return ::openmldb::taskmanager::ShowJobResponse::default_instance();
    case 10:
      return ::openmldb::taskmanager::DropOfflineTableResponse::default_instance();
    case 11:
      return ::openmldb::taskmanager::GetJobLogResponse::default_instance();
    case 12:
      return ::openmldb::taskmanager::CreateFunctionResponse::default_instance();
    case 13:
      return ::openmldb::taskmanager::DropFunctionResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

TaskManagerServer_Stub::TaskManagerServer_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
TaskManagerServer_Stub::TaskManagerServer_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
TaskManagerServer_Stub::~TaskManagerServer_Stub() {
  if (owns_channel_) delete channel_;
}

void TaskManagerServer_Stub::ShowJobs(::google::protobuf::RpcController* controller,
                              const ::openmldb::taskmanager::ShowJobsRequest* request,
                              ::openmldb::taskmanager::ShowJobsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void TaskManagerServer_Stub::ShowJob(::google::protobuf::RpcController* controller,
                              const ::openmldb::taskmanager::ShowJobRequest* request,
                              ::openmldb::taskmanager::ShowJobResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void TaskManagerServer_Stub::StopJob(::google::protobuf::RpcController* controller,
                              const ::openmldb::taskmanager::StopJobRequest* request,
                              ::openmldb::taskmanager::StopJobResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void TaskManagerServer_Stub::DeleteJob(::google::protobuf::RpcController* controller,
                              const ::openmldb::taskmanager::DeleteJobRequest* request,
                              ::openmldb::taskmanager::DeleteJobResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void TaskManagerServer_Stub::ShowBatchVersion(::google::protobuf::RpcController* controller,
                              const ::openmldb::taskmanager::ShowBatchVersionRequest* request,
                              ::openmldb::taskmanager::ShowJobResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void TaskManagerServer_Stub::RunBatchSql(::google::protobuf::RpcController* controller,
                              const ::openmldb::taskmanager::RunBatchSqlRequest* request,
                              ::openmldb::taskmanager::RunBatchSqlResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}
void TaskManagerServer_Stub::RunBatchAndShow(::google::protobuf::RpcController* controller,
                              const ::openmldb::taskmanager::RunBatchAndShowRequest* request,
                              ::openmldb::taskmanager::ShowJobResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(6),
                       controller, request, response, done);
}
void TaskManagerServer_Stub::ImportOnlineData(::google::protobuf::RpcController* controller,
                              const ::openmldb::taskmanager::ImportOnlineDataRequest* request,
                              ::openmldb::taskmanager::ShowJobResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(7),
                       controller, request, response, done);
}
void TaskManagerServer_Stub::ImportOfflineData(::google::protobuf::RpcController* controller,
                              const ::openmldb::taskmanager::ImportOfflineDataRequest* request,
                              ::openmldb::taskmanager::ShowJobResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(8),
                       controller, request, response, done);
}
void TaskManagerServer_Stub::ExportOfflineData(::google::protobuf::RpcController* controller,
                              const ::openmldb::taskmanager::ExportOfflineDataRequest* request,
                              ::openmldb::taskmanager::ShowJobResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(9),
                       controller, request, response, done);
}
void TaskManagerServer_Stub::DropOfflineTable(::google::protobuf::RpcController* controller,
                              const ::openmldb::taskmanager::DropOfflineTableRequest* request,
                              ::openmldb::taskmanager::DropOfflineTableResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(10),
                       controller, request, response, done);
}
void TaskManagerServer_Stub::GetJobLog(::google::protobuf::RpcController* controller,
                              const ::openmldb::taskmanager::GetJobLogRequest* request,
                              ::openmldb::taskmanager::GetJobLogResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(11),
                       controller, request, response, done);
}
void TaskManagerServer_Stub::CreateFunction(::google::protobuf::RpcController* controller,
                              const ::openmldb::taskmanager::CreateFunctionRequest* request,
                              ::openmldb::taskmanager::CreateFunctionResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(12),
                       controller, request, response, done);
}
void TaskManagerServer_Stub::DropFunction(::google::protobuf::RpcController* controller,
                              const ::openmldb::taskmanager::DropFunctionRequest* request,
                              ::openmldb::taskmanager::DropFunctionResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(13),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace taskmanager
}  // namespace openmldb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::JobInfo* Arena::CreateMaybeMessage< ::openmldb::taskmanager::JobInfo >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::JobInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::ShowJobsRequest* Arena::CreateMaybeMessage< ::openmldb::taskmanager::ShowJobsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::ShowJobsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::ShowJobsResponse* Arena::CreateMaybeMessage< ::openmldb::taskmanager::ShowJobsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::ShowJobsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::ShowJobRequest* Arena::CreateMaybeMessage< ::openmldb::taskmanager::ShowJobRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::ShowJobRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::ShowJobResponse* Arena::CreateMaybeMessage< ::openmldb::taskmanager::ShowJobResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::ShowJobResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::StopJobRequest* Arena::CreateMaybeMessage< ::openmldb::taskmanager::StopJobRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::StopJobRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::StopJobResponse* Arena::CreateMaybeMessage< ::openmldb::taskmanager::StopJobResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::StopJobResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::DeleteJobRequest* Arena::CreateMaybeMessage< ::openmldb::taskmanager::DeleteJobRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::DeleteJobRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::DeleteJobResponse* Arena::CreateMaybeMessage< ::openmldb::taskmanager::DeleteJobResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::DeleteJobResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::ShowBatchVersionRequest* Arena::CreateMaybeMessage< ::openmldb::taskmanager::ShowBatchVersionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::ShowBatchVersionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::RunBatchSqlRequest_ConfEntry_DoNotUse* Arena::CreateMaybeMessage< ::openmldb::taskmanager::RunBatchSqlRequest_ConfEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::RunBatchSqlRequest_ConfEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::RunBatchSqlRequest* Arena::CreateMaybeMessage< ::openmldb::taskmanager::RunBatchSqlRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::RunBatchSqlRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::RunBatchSqlResponse* Arena::CreateMaybeMessage< ::openmldb::taskmanager::RunBatchSqlResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::RunBatchSqlResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::RunBatchAndShowRequest_ConfEntry_DoNotUse* Arena::CreateMaybeMessage< ::openmldb::taskmanager::RunBatchAndShowRequest_ConfEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::RunBatchAndShowRequest_ConfEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::RunBatchAndShowRequest* Arena::CreateMaybeMessage< ::openmldb::taskmanager::RunBatchAndShowRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::RunBatchAndShowRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::ImportOnlineDataRequest_ConfEntry_DoNotUse* Arena::CreateMaybeMessage< ::openmldb::taskmanager::ImportOnlineDataRequest_ConfEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::ImportOnlineDataRequest_ConfEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::ImportOnlineDataRequest* Arena::CreateMaybeMessage< ::openmldb::taskmanager::ImportOnlineDataRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::ImportOnlineDataRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::ImportOfflineDataRequest_ConfEntry_DoNotUse* Arena::CreateMaybeMessage< ::openmldb::taskmanager::ImportOfflineDataRequest_ConfEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::ImportOfflineDataRequest_ConfEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::ImportOfflineDataRequest* Arena::CreateMaybeMessage< ::openmldb::taskmanager::ImportOfflineDataRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::ImportOfflineDataRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::ExportOfflineDataRequest_ConfEntry_DoNotUse* Arena::CreateMaybeMessage< ::openmldb::taskmanager::ExportOfflineDataRequest_ConfEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::ExportOfflineDataRequest_ConfEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::ExportOfflineDataRequest* Arena::CreateMaybeMessage< ::openmldb::taskmanager::ExportOfflineDataRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::ExportOfflineDataRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::DropOfflineTableRequest* Arena::CreateMaybeMessage< ::openmldb::taskmanager::DropOfflineTableRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::DropOfflineTableRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::DropOfflineTableResponse* Arena::CreateMaybeMessage< ::openmldb::taskmanager::DropOfflineTableResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::DropOfflineTableResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::GetJobLogRequest* Arena::CreateMaybeMessage< ::openmldb::taskmanager::GetJobLogRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::GetJobLogRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::GetJobLogResponse* Arena::CreateMaybeMessage< ::openmldb::taskmanager::GetJobLogResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::GetJobLogResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::CreateFunctionRequest* Arena::CreateMaybeMessage< ::openmldb::taskmanager::CreateFunctionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::CreateFunctionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::CreateFunctionResponse* Arena::CreateMaybeMessage< ::openmldb::taskmanager::CreateFunctionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::CreateFunctionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::DropFunctionRequest* Arena::CreateMaybeMessage< ::openmldb::taskmanager::DropFunctionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::DropFunctionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::taskmanager::DropFunctionResponse* Arena::CreateMaybeMessage< ::openmldb::taskmanager::DropFunctionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::taskmanager::DropFunctionResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
