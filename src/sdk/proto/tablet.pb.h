// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tablet.proto

#ifndef PROTOBUF_INCLUDED_tablet_2eproto
#define PROTOBUF_INCLUDED_tablet_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "type.pb.h"
#include "common.pb.h"
#include "sql_procedure.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto 

namespace protobuf_tablet_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[109];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_tablet_2eproto
namespace openmldb {
namespace api {
class AddIndexRequest;
class AddIndexRequestDefaultTypeInternal;
extern AddIndexRequestDefaultTypeInternal _AddIndexRequest_default_instance_;
class AddReplicaResponse;
class AddReplicaResponseDefaultTypeInternal;
extern AddReplicaResponseDefaultTypeInternal _AddReplicaResponse_default_instance_;
class AppendEntriesRequest;
class AppendEntriesRequestDefaultTypeInternal;
extern AppendEntriesRequestDefaultTypeInternal _AppendEntriesRequest_default_instance_;
class AppendEntriesResponse;
class AppendEntriesResponseDefaultTypeInternal;
extern AppendEntriesResponseDefaultTypeInternal _AppendEntriesResponse_default_instance_;
class BinlogInfo;
class BinlogInfoDefaultTypeInternal;
extern BinlogInfoDefaultTypeInternal _BinlogInfo_default_instance_;
class BulkLoadIndex;
class BulkLoadIndexDefaultTypeInternal;
extern BulkLoadIndexDefaultTypeInternal _BulkLoadIndex_default_instance_;
class BulkLoadInfoRequest;
class BulkLoadInfoRequestDefaultTypeInternal;
extern BulkLoadInfoRequestDefaultTypeInternal _BulkLoadInfoRequest_default_instance_;
class BulkLoadInfoResponse;
class BulkLoadInfoResponseDefaultTypeInternal;
extern BulkLoadInfoResponseDefaultTypeInternal _BulkLoadInfoResponse_default_instance_;
class BulkLoadInfoResponse_InnerIndexSt;
class BulkLoadInfoResponse_InnerIndexStDefaultTypeInternal;
extern BulkLoadInfoResponse_InnerIndexStDefaultTypeInternal _BulkLoadInfoResponse_InnerIndexSt_default_instance_;
class BulkLoadInfoResponse_InnerIndexSt_IndexDef;
class BulkLoadInfoResponse_InnerIndexSt_IndexDefDefaultTypeInternal;
extern BulkLoadInfoResponse_InnerIndexSt_IndexDefDefaultTypeInternal _BulkLoadInfoResponse_InnerIndexSt_IndexDef_default_instance_;
class BulkLoadInfoResponse_InnerSegments;
class BulkLoadInfoResponse_InnerSegmentsDefaultTypeInternal;
extern BulkLoadInfoResponse_InnerSegmentsDefaultTypeInternal _BulkLoadInfoResponse_InnerSegments_default_instance_;
class BulkLoadInfoResponse_InnerSegments_Segment;
class BulkLoadInfoResponse_InnerSegments_SegmentDefaultTypeInternal;
extern BulkLoadInfoResponse_InnerSegments_SegmentDefaultTypeInternal _BulkLoadInfoResponse_InnerSegments_Segment_default_instance_;
class BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry;
class BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntryDefaultTypeInternal;
extern BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntryDefaultTypeInternal _BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry_default_instance_;
class BulkLoadRequest;
class BulkLoadRequestDefaultTypeInternal;
extern BulkLoadRequestDefaultTypeInternal _BulkLoadRequest_default_instance_;
class CancelOPRequest;
class CancelOPRequestDefaultTypeInternal;
extern CancelOPRequestDefaultTypeInternal _CancelOPRequest_default_instance_;
class ChangeRoleRequest;
class ChangeRoleRequestDefaultTypeInternal;
extern ChangeRoleRequestDefaultTypeInternal _ChangeRoleRequest_default_instance_;
class ChangeRoleResponse;
class ChangeRoleResponseDefaultTypeInternal;
extern ChangeRoleResponseDefaultTypeInternal _ChangeRoleResponse_default_instance_;
class CheckFileRequest;
class CheckFileRequestDefaultTypeInternal;
extern CheckFileRequestDefaultTypeInternal _CheckFileRequest_default_instance_;
class Columns;
class ColumnsDefaultTypeInternal;
extern ColumnsDefaultTypeInternal _Columns_default_instance_;
class ConnectZKRequest;
class ConnectZKRequestDefaultTypeInternal;
extern ConnectZKRequestDefaultTypeInternal _ConnectZKRequest_default_instance_;
class CountRequest;
class CountRequestDefaultTypeInternal;
extern CountRequestDefaultTypeInternal _CountRequest_default_instance_;
class CountResponse;
class CountResponseDefaultTypeInternal;
extern CountResponseDefaultTypeInternal _CountResponse_default_instance_;
class CreateAggregatorRequest;
class CreateAggregatorRequestDefaultTypeInternal;
extern CreateAggregatorRequestDefaultTypeInternal _CreateAggregatorRequest_default_instance_;
class CreateAggregatorResponse;
class CreateAggregatorResponseDefaultTypeInternal;
extern CreateAggregatorResponseDefaultTypeInternal _CreateAggregatorResponse_default_instance_;
class CreateFunctionRequest;
class CreateFunctionRequestDefaultTypeInternal;
extern CreateFunctionRequestDefaultTypeInternal _CreateFunctionRequest_default_instance_;
class CreateFunctionResponse;
class CreateFunctionResponseDefaultTypeInternal;
extern CreateFunctionResponseDefaultTypeInternal _CreateFunctionResponse_default_instance_;
class CreateTableRequest;
class CreateTableRequestDefaultTypeInternal;
extern CreateTableRequestDefaultTypeInternal _CreateTableRequest_default_instance_;
class CreateTableResponse;
class CreateTableResponseDefaultTypeInternal;
extern CreateTableResponseDefaultTypeInternal _CreateTableResponse_default_instance_;
class DataBlockInfo;
class DataBlockInfoDefaultTypeInternal;
extern DataBlockInfoDefaultTypeInternal _DataBlockInfo_default_instance_;
class DeleteIndexRequest;
class DeleteIndexRequestDefaultTypeInternal;
extern DeleteIndexRequestDefaultTypeInternal _DeleteIndexRequest_default_instance_;
class DeleteRequest;
class DeleteRequestDefaultTypeInternal;
extern DeleteRequestDefaultTypeInternal _DeleteRequest_default_instance_;
class DeleteTaskRequest;
class DeleteTaskRequestDefaultTypeInternal;
extern DeleteTaskRequestDefaultTypeInternal _DeleteTaskRequest_default_instance_;
class DeployStatsResponse;
class DeployStatsResponseDefaultTypeInternal;
extern DeployStatsResponseDefaultTypeInternal _DeployStatsResponse_default_instance_;
class DeployStatsResponse_DeployStat;
class DeployStatsResponse_DeployStatDefaultTypeInternal;
extern DeployStatsResponse_DeployStatDefaultTypeInternal _DeployStatsResponse_DeployStat_default_instance_;
class Dimension;
class DimensionDefaultTypeInternal;
extern DimensionDefaultTypeInternal _Dimension_default_instance_;
class DisConnectZKRequest;
class DisConnectZKRequestDefaultTypeInternal;
extern DisConnectZKRequestDefaultTypeInternal _DisConnectZKRequest_default_instance_;
class DropFunctionRequest;
class DropFunctionRequestDefaultTypeInternal;
extern DropFunctionRequestDefaultTypeInternal _DropFunctionRequest_default_instance_;
class DropFunctionResponse;
class DropFunctionResponseDefaultTypeInternal;
extern DropFunctionResponseDefaultTypeInternal _DropFunctionResponse_default_instance_;
class DropTableRequest;
class DropTableRequestDefaultTypeInternal;
extern DropTableRequestDefaultTypeInternal _DropTableRequest_default_instance_;
class DropTableResponse;
class DropTableResponseDefaultTypeInternal;
extern DropTableResponseDefaultTypeInternal _DropTableResponse_default_instance_;
class DumpIndexDataRequest;
class DumpIndexDataRequestDefaultTypeInternal;
extern DumpIndexDataRequestDefaultTypeInternal _DumpIndexDataRequest_default_instance_;
class EmptyRequest;
class EmptyRequestDefaultTypeInternal;
extern EmptyRequestDefaultTypeInternal _EmptyRequest_default_instance_;
class ExecuteGcRequest;
class ExecuteGcRequestDefaultTypeInternal;
extern ExecuteGcRequestDefaultTypeInternal _ExecuteGcRequest_default_instance_;
class ExplainRequest;
class ExplainRequestDefaultTypeInternal;
extern ExplainRequestDefaultTypeInternal _ExplainRequest_default_instance_;
class ExplainResponse;
class ExplainResponseDefaultTypeInternal;
extern ExplainResponseDefaultTypeInternal _ExplainResponse_default_instance_;
class ExtractIndexDataRequest;
class ExtractIndexDataRequestDefaultTypeInternal;
extern ExtractIndexDataRequestDefaultTypeInternal _ExtractIndexDataRequest_default_instance_;
class ExtractMultiIndexDataRequest;
class ExtractMultiIndexDataRequestDefaultTypeInternal;
extern ExtractMultiIndexDataRequestDefaultTypeInternal _ExtractMultiIndexDataRequest_default_instance_;
class FollowerInfo;
class FollowerInfoDefaultTypeInternal;
extern FollowerInfoDefaultTypeInternal _FollowerInfo_default_instance_;
class GAFDeployStatsRequest;
class GAFDeployStatsRequestDefaultTypeInternal;
extern GAFDeployStatsRequestDefaultTypeInternal _GAFDeployStatsRequest_default_instance_;
class GeneralRequest;
class GeneralRequestDefaultTypeInternal;
extern GeneralRequestDefaultTypeInternal _GeneralRequest_default_instance_;
class GeneralResponse;
class GeneralResponseDefaultTypeInternal;
extern GeneralResponseDefaultTypeInternal _GeneralResponse_default_instance_;
class GetCatalogRequest;
class GetCatalogRequestDefaultTypeInternal;
extern GetCatalogRequestDefaultTypeInternal _GetCatalogRequest_default_instance_;
class GetCatalogResponse;
class GetCatalogResponseDefaultTypeInternal;
extern GetCatalogResponseDefaultTypeInternal _GetCatalogResponse_default_instance_;
class GetManifestRequest;
class GetManifestRequestDefaultTypeInternal;
extern GetManifestRequestDefaultTypeInternal _GetManifestRequest_default_instance_;
class GetManifestResponse;
class GetManifestResponseDefaultTypeInternal;
extern GetManifestResponseDefaultTypeInternal _GetManifestResponse_default_instance_;
class GetRequest;
class GetRequestDefaultTypeInternal;
extern GetRequestDefaultTypeInternal _GetRequest_default_instance_;
class GetResponse;
class GetResponseDefaultTypeInternal;
extern GetResponseDefaultTypeInternal _GetResponse_default_instance_;
class GetTableFollowerRequest;
class GetTableFollowerRequestDefaultTypeInternal;
extern GetTableFollowerRequestDefaultTypeInternal _GetTableFollowerRequest_default_instance_;
class GetTableFollowerResponse;
class GetTableFollowerResponseDefaultTypeInternal;
extern GetTableFollowerResponseDefaultTypeInternal _GetTableFollowerResponse_default_instance_;
class GetTableSchemaRequest;
class GetTableSchemaRequestDefaultTypeInternal;
extern GetTableSchemaRequestDefaultTypeInternal _GetTableSchemaRequest_default_instance_;
class GetTableSchemaResponse;
class GetTableSchemaResponseDefaultTypeInternal;
extern GetTableSchemaResponseDefaultTypeInternal _GetTableSchemaResponse_default_instance_;
class GetTableStatusRequest;
class GetTableStatusRequestDefaultTypeInternal;
extern GetTableStatusRequestDefaultTypeInternal _GetTableStatusRequest_default_instance_;
class GetTableStatusResponse;
class GetTableStatusResponseDefaultTypeInternal;
extern GetTableStatusResponseDefaultTypeInternal _GetTableStatusResponse_default_instance_;
class GetTermPairRequest;
class GetTermPairRequestDefaultTypeInternal;
extern GetTermPairRequestDefaultTypeInternal _GetTermPairRequest_default_instance_;
class GetTermPairResponse;
class GetTermPairResponseDefaultTypeInternal;
extern GetTermPairResponseDefaultTypeInternal _GetTermPairResponse_default_instance_;
class HttpRequest;
class HttpRequestDefaultTypeInternal;
extern HttpRequestDefaultTypeInternal _HttpRequest_default_instance_;
class HttpResponse;
class HttpResponseDefaultTypeInternal;
extern HttpResponseDefaultTypeInternal _HttpResponse_default_instance_;
class LoadIndexDataRequest;
class LoadIndexDataRequestDefaultTypeInternal;
extern LoadIndexDataRequestDefaultTypeInternal _LoadIndexDataRequest_default_instance_;
class LoadTableRequest;
class LoadTableRequestDefaultTypeInternal;
extern LoadTableRequestDefaultTypeInternal _LoadTableRequest_default_instance_;
class LogEntry;
class LogEntryDefaultTypeInternal;
extern LogEntryDefaultTypeInternal _LogEntry_default_instance_;
class Manifest;
class ManifestDefaultTypeInternal;
extern ManifestDefaultTypeInternal _Manifest_default_instance_;
class OPInfo;
class OPInfoDefaultTypeInternal;
extern OPInfoDefaultTypeInternal _OPInfo_default_instance_;
class PartSnapshotOffset;
class PartSnapshotOffsetDefaultTypeInternal;
extern PartSnapshotOffsetDefaultTypeInternal _PartSnapshotOffset_default_instance_;
class PutRequest;
class PutRequestDefaultTypeInternal;
extern PutRequestDefaultTypeInternal _PutRequest_default_instance_;
class PutResponse;
class PutResponseDefaultTypeInternal;
extern PutResponseDefaultTypeInternal _PutResponse_default_instance_;
class QueryRequest;
class QueryRequestDefaultTypeInternal;
extern QueryRequestDefaultTypeInternal _QueryRequest_default_instance_;
class QueryResponse;
class QueryResponseDefaultTypeInternal;
extern QueryResponseDefaultTypeInternal _QueryResponse_default_instance_;
class RealEndpointPair;
class RealEndpointPairDefaultTypeInternal;
extern RealEndpointPairDefaultTypeInternal _RealEndpointPair_default_instance_;
class RefreshRequest;
class RefreshRequestDefaultTypeInternal;
extern RefreshRequestDefaultTypeInternal _RefreshRequest_default_instance_;
class ReplicaRequest;
class ReplicaRequestDefaultTypeInternal;
extern ReplicaRequestDefaultTypeInternal _ReplicaRequest_default_instance_;
class SQLBatchRequestQueryRequest;
class SQLBatchRequestQueryRequestDefaultTypeInternal;
extern SQLBatchRequestQueryRequestDefaultTypeInternal _SQLBatchRequestQueryRequest_default_instance_;
class SQLBatchRequestQueryResponse;
class SQLBatchRequestQueryResponseDefaultTypeInternal;
extern SQLBatchRequestQueryResponseDefaultTypeInternal _SQLBatchRequestQueryResponse_default_instance_;
class ScanRequest;
class ScanRequestDefaultTypeInternal;
extern ScanRequestDefaultTypeInternal _ScanRequest_default_instance_;
class ScanResponse;
class ScanResponseDefaultTypeInternal;
extern ScanResponseDefaultTypeInternal _ScanResponse_default_instance_;
class Segment;
class SegmentDefaultTypeInternal;
extern SegmentDefaultTypeInternal _Segment_default_instance_;
class Segment_KeyEntries;
class Segment_KeyEntriesDefaultTypeInternal;
extern Segment_KeyEntriesDefaultTypeInternal _Segment_KeyEntries_default_instance_;
class Segment_KeyEntries_KeyEntry;
class Segment_KeyEntries_KeyEntryDefaultTypeInternal;
extern Segment_KeyEntries_KeyEntryDefaultTypeInternal _Segment_KeyEntries_KeyEntry_default_instance_;
class Segment_KeyEntries_KeyEntry_TimeEntry;
class Segment_KeyEntries_KeyEntry_TimeEntryDefaultTypeInternal;
extern Segment_KeyEntries_KeyEntry_TimeEntryDefaultTypeInternal _Segment_KeyEntries_KeyEntry_TimeEntry_default_instance_;
class SendDataRequest;
class SendDataRequestDefaultTypeInternal;
extern SendDataRequestDefaultTypeInternal _SendDataRequest_default_instance_;
class SendIndexDataRequest;
class SendIndexDataRequestDefaultTypeInternal;
extern SendIndexDataRequestDefaultTypeInternal _SendIndexDataRequest_default_instance_;
class SendIndexDataRequest_EndpointPair;
class SendIndexDataRequest_EndpointPairDefaultTypeInternal;
extern SendIndexDataRequest_EndpointPairDefaultTypeInternal _SendIndexDataRequest_EndpointPair_default_instance_;
class SendSnapshotRequest;
class SendSnapshotRequestDefaultTypeInternal;
extern SendSnapshotRequestDefaultTypeInternal _SendSnapshotRequest_default_instance_;
class SetExpireRequest;
class SetExpireRequestDefaultTypeInternal;
extern SetExpireRequestDefaultTypeInternal _SetExpireRequest_default_instance_;
class SetModeRequest;
class SetModeRequestDefaultTypeInternal;
extern SetModeRequestDefaultTypeInternal _SetModeRequest_default_instance_;
class TSDimension;
class TSDimensionDefaultTypeInternal;
extern TSDimensionDefaultTypeInternal _TSDimension_default_instance_;
class TableMeta;
class TableMetaDefaultTypeInternal;
extern TableMetaDefaultTypeInternal _TableMeta_default_instance_;
class TableSnapshotOffsetResponse;
class TableSnapshotOffsetResponseDefaultTypeInternal;
extern TableSnapshotOffsetResponseDefaultTypeInternal _TableSnapshotOffsetResponse_default_instance_;
class TableSnapshotOffsetResponse_Table;
class TableSnapshotOffsetResponse_TableDefaultTypeInternal;
extern TableSnapshotOffsetResponse_TableDefaultTypeInternal _TableSnapshotOffsetResponse_Table_default_instance_;
class TableStatus;
class TableStatusDefaultTypeInternal;
extern TableStatusDefaultTypeInternal _TableStatus_default_instance_;
class TaskInfo;
class TaskInfoDefaultTypeInternal;
extern TaskInfoDefaultTypeInternal _TaskInfo_default_instance_;
class TaskStatusRequest;
class TaskStatusRequestDefaultTypeInternal;
extern TaskStatusRequestDefaultTypeInternal _TaskStatusRequest_default_instance_;
class TaskStatusResponse;
class TaskStatusResponseDefaultTypeInternal;
extern TaskStatusResponseDefaultTypeInternal _TaskStatusResponse_default_instance_;
class TraverseRequest;
class TraverseRequestDefaultTypeInternal;
extern TraverseRequestDefaultTypeInternal _TraverseRequest_default_instance_;
class TraverseResponse;
class TraverseResponseDefaultTypeInternal;
extern TraverseResponseDefaultTypeInternal _TraverseResponse_default_instance_;
class TsIdxStatus;
class TsIdxStatusDefaultTypeInternal;
extern TsIdxStatusDefaultTypeInternal _TsIdxStatus_default_instance_;
class UpdateRealEndpointMapRequest;
class UpdateRealEndpointMapRequestDefaultTypeInternal;
extern UpdateRealEndpointMapRequestDefaultTypeInternal _UpdateRealEndpointMapRequest_default_instance_;
class UpdateTTLRequest;
class UpdateTTLRequestDefaultTypeInternal;
extern UpdateTTLRequestDefaultTypeInternal _UpdateTTLRequest_default_instance_;
class UpdateTTLResponse;
class UpdateTTLResponseDefaultTypeInternal;
extern UpdateTTLResponseDefaultTypeInternal _UpdateTTLResponse_default_instance_;
class UpdateTableMetaForAddFieldRequest;
class UpdateTableMetaForAddFieldRequestDefaultTypeInternal;
extern UpdateTableMetaForAddFieldRequestDefaultTypeInternal _UpdateTableMetaForAddFieldRequest_default_instance_;
}  // namespace api
}  // namespace openmldb
namespace google {
namespace protobuf {
template<> ::openmldb::api::AddIndexRequest* Arena::CreateMaybeMessage<::openmldb::api::AddIndexRequest>(Arena*);
template<> ::openmldb::api::AddReplicaResponse* Arena::CreateMaybeMessage<::openmldb::api::AddReplicaResponse>(Arena*);
template<> ::openmldb::api::AppendEntriesRequest* Arena::CreateMaybeMessage<::openmldb::api::AppendEntriesRequest>(Arena*);
template<> ::openmldb::api::AppendEntriesResponse* Arena::CreateMaybeMessage<::openmldb::api::AppendEntriesResponse>(Arena*);
template<> ::openmldb::api::BinlogInfo* Arena::CreateMaybeMessage<::openmldb::api::BinlogInfo>(Arena*);
template<> ::openmldb::api::BulkLoadIndex* Arena::CreateMaybeMessage<::openmldb::api::BulkLoadIndex>(Arena*);
template<> ::openmldb::api::BulkLoadInfoRequest* Arena::CreateMaybeMessage<::openmldb::api::BulkLoadInfoRequest>(Arena*);
template<> ::openmldb::api::BulkLoadInfoResponse* Arena::CreateMaybeMessage<::openmldb::api::BulkLoadInfoResponse>(Arena*);
template<> ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt* Arena::CreateMaybeMessage<::openmldb::api::BulkLoadInfoResponse_InnerIndexSt>(Arena*);
template<> ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt_IndexDef* Arena::CreateMaybeMessage<::openmldb::api::BulkLoadInfoResponse_InnerIndexSt_IndexDef>(Arena*);
template<> ::openmldb::api::BulkLoadInfoResponse_InnerSegments* Arena::CreateMaybeMessage<::openmldb::api::BulkLoadInfoResponse_InnerSegments>(Arena*);
template<> ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment* Arena::CreateMaybeMessage<::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment>(Arena*);
template<> ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry* Arena::CreateMaybeMessage<::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry>(Arena*);
template<> ::openmldb::api::BulkLoadRequest* Arena::CreateMaybeMessage<::openmldb::api::BulkLoadRequest>(Arena*);
template<> ::openmldb::api::CancelOPRequest* Arena::CreateMaybeMessage<::openmldb::api::CancelOPRequest>(Arena*);
template<> ::openmldb::api::ChangeRoleRequest* Arena::CreateMaybeMessage<::openmldb::api::ChangeRoleRequest>(Arena*);
template<> ::openmldb::api::ChangeRoleResponse* Arena::CreateMaybeMessage<::openmldb::api::ChangeRoleResponse>(Arena*);
template<> ::openmldb::api::CheckFileRequest* Arena::CreateMaybeMessage<::openmldb::api::CheckFileRequest>(Arena*);
template<> ::openmldb::api::Columns* Arena::CreateMaybeMessage<::openmldb::api::Columns>(Arena*);
template<> ::openmldb::api::ConnectZKRequest* Arena::CreateMaybeMessage<::openmldb::api::ConnectZKRequest>(Arena*);
template<> ::openmldb::api::CountRequest* Arena::CreateMaybeMessage<::openmldb::api::CountRequest>(Arena*);
template<> ::openmldb::api::CountResponse* Arena::CreateMaybeMessage<::openmldb::api::CountResponse>(Arena*);
template<> ::openmldb::api::CreateAggregatorRequest* Arena::CreateMaybeMessage<::openmldb::api::CreateAggregatorRequest>(Arena*);
template<> ::openmldb::api::CreateAggregatorResponse* Arena::CreateMaybeMessage<::openmldb::api::CreateAggregatorResponse>(Arena*);
template<> ::openmldb::api::CreateFunctionRequest* Arena::CreateMaybeMessage<::openmldb::api::CreateFunctionRequest>(Arena*);
template<> ::openmldb::api::CreateFunctionResponse* Arena::CreateMaybeMessage<::openmldb::api::CreateFunctionResponse>(Arena*);
template<> ::openmldb::api::CreateTableRequest* Arena::CreateMaybeMessage<::openmldb::api::CreateTableRequest>(Arena*);
template<> ::openmldb::api::CreateTableResponse* Arena::CreateMaybeMessage<::openmldb::api::CreateTableResponse>(Arena*);
template<> ::openmldb::api::DataBlockInfo* Arena::CreateMaybeMessage<::openmldb::api::DataBlockInfo>(Arena*);
template<> ::openmldb::api::DeleteIndexRequest* Arena::CreateMaybeMessage<::openmldb::api::DeleteIndexRequest>(Arena*);
template<> ::openmldb::api::DeleteRequest* Arena::CreateMaybeMessage<::openmldb::api::DeleteRequest>(Arena*);
template<> ::openmldb::api::DeleteTaskRequest* Arena::CreateMaybeMessage<::openmldb::api::DeleteTaskRequest>(Arena*);
template<> ::openmldb::api::DeployStatsResponse* Arena::CreateMaybeMessage<::openmldb::api::DeployStatsResponse>(Arena*);
template<> ::openmldb::api::DeployStatsResponse_DeployStat* Arena::CreateMaybeMessage<::openmldb::api::DeployStatsResponse_DeployStat>(Arena*);
template<> ::openmldb::api::Dimension* Arena::CreateMaybeMessage<::openmldb::api::Dimension>(Arena*);
template<> ::openmldb::api::DisConnectZKRequest* Arena::CreateMaybeMessage<::openmldb::api::DisConnectZKRequest>(Arena*);
template<> ::openmldb::api::DropFunctionRequest* Arena::CreateMaybeMessage<::openmldb::api::DropFunctionRequest>(Arena*);
template<> ::openmldb::api::DropFunctionResponse* Arena::CreateMaybeMessage<::openmldb::api::DropFunctionResponse>(Arena*);
template<> ::openmldb::api::DropTableRequest* Arena::CreateMaybeMessage<::openmldb::api::DropTableRequest>(Arena*);
template<> ::openmldb::api::DropTableResponse* Arena::CreateMaybeMessage<::openmldb::api::DropTableResponse>(Arena*);
template<> ::openmldb::api::DumpIndexDataRequest* Arena::CreateMaybeMessage<::openmldb::api::DumpIndexDataRequest>(Arena*);
template<> ::openmldb::api::EmptyRequest* Arena::CreateMaybeMessage<::openmldb::api::EmptyRequest>(Arena*);
template<> ::openmldb::api::ExecuteGcRequest* Arena::CreateMaybeMessage<::openmldb::api::ExecuteGcRequest>(Arena*);
template<> ::openmldb::api::ExplainRequest* Arena::CreateMaybeMessage<::openmldb::api::ExplainRequest>(Arena*);
template<> ::openmldb::api::ExplainResponse* Arena::CreateMaybeMessage<::openmldb::api::ExplainResponse>(Arena*);
template<> ::openmldb::api::ExtractIndexDataRequest* Arena::CreateMaybeMessage<::openmldb::api::ExtractIndexDataRequest>(Arena*);
template<> ::openmldb::api::ExtractMultiIndexDataRequest* Arena::CreateMaybeMessage<::openmldb::api::ExtractMultiIndexDataRequest>(Arena*);
template<> ::openmldb::api::FollowerInfo* Arena::CreateMaybeMessage<::openmldb::api::FollowerInfo>(Arena*);
template<> ::openmldb::api::GAFDeployStatsRequest* Arena::CreateMaybeMessage<::openmldb::api::GAFDeployStatsRequest>(Arena*);
template<> ::openmldb::api::GeneralRequest* Arena::CreateMaybeMessage<::openmldb::api::GeneralRequest>(Arena*);
template<> ::openmldb::api::GeneralResponse* Arena::CreateMaybeMessage<::openmldb::api::GeneralResponse>(Arena*);
template<> ::openmldb::api::GetCatalogRequest* Arena::CreateMaybeMessage<::openmldb::api::GetCatalogRequest>(Arena*);
template<> ::openmldb::api::GetCatalogResponse* Arena::CreateMaybeMessage<::openmldb::api::GetCatalogResponse>(Arena*);
template<> ::openmldb::api::GetManifestRequest* Arena::CreateMaybeMessage<::openmldb::api::GetManifestRequest>(Arena*);
template<> ::openmldb::api::GetManifestResponse* Arena::CreateMaybeMessage<::openmldb::api::GetManifestResponse>(Arena*);
template<> ::openmldb::api::GetRequest* Arena::CreateMaybeMessage<::openmldb::api::GetRequest>(Arena*);
template<> ::openmldb::api::GetResponse* Arena::CreateMaybeMessage<::openmldb::api::GetResponse>(Arena*);
template<> ::openmldb::api::GetTableFollowerRequest* Arena::CreateMaybeMessage<::openmldb::api::GetTableFollowerRequest>(Arena*);
template<> ::openmldb::api::GetTableFollowerResponse* Arena::CreateMaybeMessage<::openmldb::api::GetTableFollowerResponse>(Arena*);
template<> ::openmldb::api::GetTableSchemaRequest* Arena::CreateMaybeMessage<::openmldb::api::GetTableSchemaRequest>(Arena*);
template<> ::openmldb::api::GetTableSchemaResponse* Arena::CreateMaybeMessage<::openmldb::api::GetTableSchemaResponse>(Arena*);
template<> ::openmldb::api::GetTableStatusRequest* Arena::CreateMaybeMessage<::openmldb::api::GetTableStatusRequest>(Arena*);
template<> ::openmldb::api::GetTableStatusResponse* Arena::CreateMaybeMessage<::openmldb::api::GetTableStatusResponse>(Arena*);
template<> ::openmldb::api::GetTermPairRequest* Arena::CreateMaybeMessage<::openmldb::api::GetTermPairRequest>(Arena*);
template<> ::openmldb::api::GetTermPairResponse* Arena::CreateMaybeMessage<::openmldb::api::GetTermPairResponse>(Arena*);
template<> ::openmldb::api::HttpRequest* Arena::CreateMaybeMessage<::openmldb::api::HttpRequest>(Arena*);
template<> ::openmldb::api::HttpResponse* Arena::CreateMaybeMessage<::openmldb::api::HttpResponse>(Arena*);
template<> ::openmldb::api::LoadIndexDataRequest* Arena::CreateMaybeMessage<::openmldb::api::LoadIndexDataRequest>(Arena*);
template<> ::openmldb::api::LoadTableRequest* Arena::CreateMaybeMessage<::openmldb::api::LoadTableRequest>(Arena*);
template<> ::openmldb::api::LogEntry* Arena::CreateMaybeMessage<::openmldb::api::LogEntry>(Arena*);
template<> ::openmldb::api::Manifest* Arena::CreateMaybeMessage<::openmldb::api::Manifest>(Arena*);
template<> ::openmldb::api::OPInfo* Arena::CreateMaybeMessage<::openmldb::api::OPInfo>(Arena*);
template<> ::openmldb::api::PartSnapshotOffset* Arena::CreateMaybeMessage<::openmldb::api::PartSnapshotOffset>(Arena*);
template<> ::openmldb::api::PutRequest* Arena::CreateMaybeMessage<::openmldb::api::PutRequest>(Arena*);
template<> ::openmldb::api::PutResponse* Arena::CreateMaybeMessage<::openmldb::api::PutResponse>(Arena*);
template<> ::openmldb::api::QueryRequest* Arena::CreateMaybeMessage<::openmldb::api::QueryRequest>(Arena*);
template<> ::openmldb::api::QueryResponse* Arena::CreateMaybeMessage<::openmldb::api::QueryResponse>(Arena*);
template<> ::openmldb::api::RealEndpointPair* Arena::CreateMaybeMessage<::openmldb::api::RealEndpointPair>(Arena*);
template<> ::openmldb::api::RefreshRequest* Arena::CreateMaybeMessage<::openmldb::api::RefreshRequest>(Arena*);
template<> ::openmldb::api::ReplicaRequest* Arena::CreateMaybeMessage<::openmldb::api::ReplicaRequest>(Arena*);
template<> ::openmldb::api::SQLBatchRequestQueryRequest* Arena::CreateMaybeMessage<::openmldb::api::SQLBatchRequestQueryRequest>(Arena*);
template<> ::openmldb::api::SQLBatchRequestQueryResponse* Arena::CreateMaybeMessage<::openmldb::api::SQLBatchRequestQueryResponse>(Arena*);
template<> ::openmldb::api::ScanRequest* Arena::CreateMaybeMessage<::openmldb::api::ScanRequest>(Arena*);
template<> ::openmldb::api::ScanResponse* Arena::CreateMaybeMessage<::openmldb::api::ScanResponse>(Arena*);
template<> ::openmldb::api::Segment* Arena::CreateMaybeMessage<::openmldb::api::Segment>(Arena*);
template<> ::openmldb::api::Segment_KeyEntries* Arena::CreateMaybeMessage<::openmldb::api::Segment_KeyEntries>(Arena*);
template<> ::openmldb::api::Segment_KeyEntries_KeyEntry* Arena::CreateMaybeMessage<::openmldb::api::Segment_KeyEntries_KeyEntry>(Arena*);
template<> ::openmldb::api::Segment_KeyEntries_KeyEntry_TimeEntry* Arena::CreateMaybeMessage<::openmldb::api::Segment_KeyEntries_KeyEntry_TimeEntry>(Arena*);
template<> ::openmldb::api::SendDataRequest* Arena::CreateMaybeMessage<::openmldb::api::SendDataRequest>(Arena*);
template<> ::openmldb::api::SendIndexDataRequest* Arena::CreateMaybeMessage<::openmldb::api::SendIndexDataRequest>(Arena*);
template<> ::openmldb::api::SendIndexDataRequest_EndpointPair* Arena::CreateMaybeMessage<::openmldb::api::SendIndexDataRequest_EndpointPair>(Arena*);
template<> ::openmldb::api::SendSnapshotRequest* Arena::CreateMaybeMessage<::openmldb::api::SendSnapshotRequest>(Arena*);
template<> ::openmldb::api::SetExpireRequest* Arena::CreateMaybeMessage<::openmldb::api::SetExpireRequest>(Arena*);
template<> ::openmldb::api::SetModeRequest* Arena::CreateMaybeMessage<::openmldb::api::SetModeRequest>(Arena*);
template<> ::openmldb::api::TSDimension* Arena::CreateMaybeMessage<::openmldb::api::TSDimension>(Arena*);
template<> ::openmldb::api::TableMeta* Arena::CreateMaybeMessage<::openmldb::api::TableMeta>(Arena*);
template<> ::openmldb::api::TableSnapshotOffsetResponse* Arena::CreateMaybeMessage<::openmldb::api::TableSnapshotOffsetResponse>(Arena*);
template<> ::openmldb::api::TableSnapshotOffsetResponse_Table* Arena::CreateMaybeMessage<::openmldb::api::TableSnapshotOffsetResponse_Table>(Arena*);
template<> ::openmldb::api::TableStatus* Arena::CreateMaybeMessage<::openmldb::api::TableStatus>(Arena*);
template<> ::openmldb::api::TaskInfo* Arena::CreateMaybeMessage<::openmldb::api::TaskInfo>(Arena*);
template<> ::openmldb::api::TaskStatusRequest* Arena::CreateMaybeMessage<::openmldb::api::TaskStatusRequest>(Arena*);
template<> ::openmldb::api::TaskStatusResponse* Arena::CreateMaybeMessage<::openmldb::api::TaskStatusResponse>(Arena*);
template<> ::openmldb::api::TraverseRequest* Arena::CreateMaybeMessage<::openmldb::api::TraverseRequest>(Arena*);
template<> ::openmldb::api::TraverseResponse* Arena::CreateMaybeMessage<::openmldb::api::TraverseResponse>(Arena*);
template<> ::openmldb::api::TsIdxStatus* Arena::CreateMaybeMessage<::openmldb::api::TsIdxStatus>(Arena*);
template<> ::openmldb::api::UpdateRealEndpointMapRequest* Arena::CreateMaybeMessage<::openmldb::api::UpdateRealEndpointMapRequest>(Arena*);
template<> ::openmldb::api::UpdateTTLRequest* Arena::CreateMaybeMessage<::openmldb::api::UpdateTTLRequest>(Arena*);
template<> ::openmldb::api::UpdateTTLResponse* Arena::CreateMaybeMessage<::openmldb::api::UpdateTTLResponse>(Arena*);
template<> ::openmldb::api::UpdateTableMetaForAddFieldRequest* Arena::CreateMaybeMessage<::openmldb::api::UpdateTableMetaForAddFieldRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace openmldb {
namespace api {

enum TableMode {
  kTableLeader = 1,
  kTableFollower = 2
};
bool TableMode_IsValid(int value);
const TableMode TableMode_MIN = kTableLeader;
const TableMode TableMode_MAX = kTableFollower;
const int TableMode_ARRAYSIZE = TableMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* TableMode_descriptor();
inline const ::std::string& TableMode_Name(TableMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    TableMode_descriptor(), value);
}
inline bool TableMode_Parse(
    const ::std::string& name, TableMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TableMode>(
    TableMode_descriptor(), name, value);
}
enum TableState {
  kTableUndefined = 0,
  kTableNormal = 1,
  kTableLoading = 2,
  kMakingSnapshot = 3,
  kSnapshotPaused = 4
};
bool TableState_IsValid(int value);
const TableState TableState_MIN = kTableUndefined;
const TableState TableState_MAX = kSnapshotPaused;
const int TableState_ARRAYSIZE = TableState_MAX + 1;

const ::google::protobuf::EnumDescriptor* TableState_descriptor();
inline const ::std::string& TableState_Name(TableState value) {
  return ::google::protobuf::internal::NameOfEnum(
    TableState_descriptor(), value);
}
inline bool TableState_Parse(
    const ::std::string& name, TableState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TableState>(
    TableState_descriptor(), name, value);
}
enum GetType {
  kSubKeyEq = 1,
  kSubKeyLt = 2,
  kSubKeyLe = 3,
  kSubKeyGt = 4,
  kSubKeyGe = 5
};
bool GetType_IsValid(int value);
const GetType GetType_MIN = kSubKeyEq;
const GetType GetType_MAX = kSubKeyGe;
const int GetType_ARRAYSIZE = GetType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetType_descriptor();
inline const ::std::string& GetType_Name(GetType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetType_descriptor(), value);
}
inline bool GetType_Parse(
    const ::std::string& name, GetType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetType>(
    GetType_descriptor(), name, value);
}
enum OPType {
  kMakeSnapshotOP = 1,
  kAddReplicaOP = 2,
  kDelReplicaOP = 3,
  kChangeLeaderOP = 4,
  kOfflineReplicaOP = 5,
  kReAddReplicaOP = 6,
  kReAddReplicaNoSendOP = 7,
  kReAddReplicaWithDropOP = 8,
  kReAddReplicaSimplifyOP = 9,
  kUpdateTableAliveOP = 10,
  kMigrateOP = 11,
  kReLoadTableOP = 12,
  kUpdatePartitionStatusOP = 13,
  kRecoverTableOP = 14,
  kCreateTableRemoteOP = 15,
  kDropTableRemoteOP = 16,
  kAddReplicaSimplyRemoteOP = 17,
  kDelReplicaRemoteOP = 18,
  kAddReplicaRemoteOP = 19,
  kAddIndexOP = 20
};
bool OPType_IsValid(int value);
const OPType OPType_MIN = kMakeSnapshotOP;
const OPType OPType_MAX = kAddIndexOP;
const int OPType_ARRAYSIZE = OPType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OPType_descriptor();
inline const ::std::string& OPType_Name(OPType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OPType_descriptor(), value);
}
inline bool OPType_Parse(
    const ::std::string& name, OPType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OPType>(
    OPType_descriptor(), name, value);
}
enum TaskType {
  kMakeSnapshot = 1,
  kPauseSnapshot = 2,
  kRecoverSnapshot = 3,
  kSendSnapshot = 4,
  kLoadTable = 5,
  kAddReplica = 6,
  kAddTableInfo = 7,
  kDelReplica = 8,
  kDelTableInfo = 9,
  kChangeLeader = 10,
  kUpdatePartitionStatus = 11,
  kDropTable = 12,
  kUpdateTableAlive = 13,
  kUpdateTableInfo = 14,
  kSelectLeader = 15,
  kUpdateLeaderInfo = 16,
  kRecoverTable = 17,
  kCheckBinlogSyncProgress = 18,
  kCreateTableRemote = 19,
  kDropTableRemote = 20,
  kAddReplicaNSRemote = 21,
  kDumpIndexData = 22,
  kSendIndexData = 23,
  kLoadIndexData = 24,
  kExtractIndexData = 25,
  kAddIndexToTablet = 26,
  kTableSyncTask = 27
};
bool TaskType_IsValid(int value);
const TaskType TaskType_MIN = kMakeSnapshot;
const TaskType TaskType_MAX = kTableSyncTask;
const int TaskType_ARRAYSIZE = TaskType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TaskType_descriptor();
inline const ::std::string& TaskType_Name(TaskType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TaskType_descriptor(), value);
}
inline bool TaskType_Parse(
    const ::std::string& name, TaskType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TaskType>(
    TaskType_descriptor(), name, value);
}
enum TaskStatus {
  kInited = 1,
  kDoing = 2,
  kDone = 3,
  kFailed = 4,
  kCanceled = 5
};
bool TaskStatus_IsValid(int value);
const TaskStatus TaskStatus_MIN = kInited;
const TaskStatus TaskStatus_MAX = kCanceled;
const int TaskStatus_ARRAYSIZE = TaskStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* TaskStatus_descriptor();
inline const ::std::string& TaskStatus_Name(TaskStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    TaskStatus_descriptor(), value);
}
inline bool TaskStatus_Parse(
    const ::std::string& name, TaskStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TaskStatus>(
    TaskStatus_descriptor(), name, value);
}
enum MethodType {
  kPut = 1,
  kDelete = 2
};
bool MethodType_IsValid(int value);
const MethodType MethodType_MIN = kPut;
const MethodType MethodType_MAX = kDelete;
const int MethodType_ARRAYSIZE = MethodType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MethodType_descriptor();
inline const ::std::string& MethodType_Name(MethodType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MethodType_descriptor(), value);
}
inline bool MethodType_Parse(
    const ::std::string& name, MethodType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MethodType>(
    MethodType_descriptor(), name, value);
}
// ===================================================================

class TaskInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.TaskInfo) */ {
 public:
  TaskInfo();
  virtual ~TaskInfo();

  TaskInfo(const TaskInfo& from);

  inline TaskInfo& operator=(const TaskInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TaskInfo(TaskInfo&& from) noexcept
    : TaskInfo() {
    *this = ::std::move(from);
  }

  inline TaskInfo& operator=(TaskInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TaskInfo* internal_default_instance() {
    return reinterpret_cast<const TaskInfo*>(
               &_TaskInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(TaskInfo* other);
  friend void swap(TaskInfo& a, TaskInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TaskInfo* New() const final {
    return CreateMaybeMessage<TaskInfo>(NULL);
  }

  TaskInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TaskInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TaskInfo& from);
  void MergeFrom(const TaskInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TaskInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 rep_cluster_op_id = 7;
  int rep_cluster_op_id_size() const;
  void clear_rep_cluster_op_id();
  static const int kRepClusterOpIdFieldNumber = 7;
  ::google::protobuf::uint64 rep_cluster_op_id(int index) const;
  void set_rep_cluster_op_id(int index, ::google::protobuf::uint64 value);
  void add_rep_cluster_op_id(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      rep_cluster_op_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_rep_cluster_op_id();

  // optional string endpoint = 5;
  bool has_endpoint() const;
  void clear_endpoint();
  static const int kEndpointFieldNumber = 5;
  const ::std::string& endpoint() const;
  void set_endpoint(const ::std::string& value);
  #if LANG_CXX11
  void set_endpoint(::std::string&& value);
  #endif
  void set_endpoint(const char* value);
  void set_endpoint(const char* value, size_t size);
  ::std::string* mutable_endpoint();
  ::std::string* release_endpoint();
  void set_allocated_endpoint(::std::string* endpoint);

  // required uint64 op_id = 1;
  bool has_op_id() const;
  void clear_op_id();
  static const int kOpIdFieldNumber = 1;
  ::google::protobuf::uint64 op_id() const;
  void set_op_id(::google::protobuf::uint64 value);

  // optional uint64 task_id = 8 [default = 0];
  bool has_task_id() const;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 8;
  ::google::protobuf::uint64 task_id() const;
  void set_task_id(::google::protobuf::uint64 value);

  // optional bool is_rpc_send = 6 [default = false];
  bool has_is_rpc_send() const;
  void clear_is_rpc_send();
  static const int kIsRpcSendFieldNumber = 6;
  bool is_rpc_send() const;
  void set_is_rpc_send(bool value);

  // required .openmldb.api.TaskStatus status = 4;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  ::openmldb::api::TaskStatus status() const;
  void set_status(::openmldb::api::TaskStatus value);

  // required .openmldb.api.OPType op_type = 2;
  bool has_op_type() const;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 2;
  ::openmldb::api::OPType op_type() const;
  void set_op_type(::openmldb::api::OPType value);

  // required .openmldb.api.TaskType task_type = 3;
  bool has_task_type() const;
  void clear_task_type();
  static const int kTaskTypeFieldNumber = 3;
  ::openmldb::api::TaskType task_type() const;
  void set_task_type(::openmldb::api::TaskType value);

  // @@protoc_insertion_point(class_scope:openmldb.api.TaskInfo)
 private:
  void set_has_op_id();
  void clear_has_op_id();
  void set_has_op_type();
  void clear_has_op_type();
  void set_has_task_type();
  void clear_has_task_type();
  void set_has_status();
  void clear_has_status();
  void set_has_endpoint();
  void clear_has_endpoint();
  void set_has_is_rpc_send();
  void clear_has_is_rpc_send();
  void set_has_task_id();
  void clear_has_task_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > rep_cluster_op_id_;
  ::google::protobuf::internal::ArenaStringPtr endpoint_;
  ::google::protobuf::uint64 op_id_;
  ::google::protobuf::uint64 task_id_;
  bool is_rpc_send_;
  int status_;
  int op_type_;
  int task_type_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OPInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.OPInfo) */ {
 public:
  OPInfo();
  virtual ~OPInfo();

  OPInfo(const OPInfo& from);

  inline OPInfo& operator=(const OPInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OPInfo(OPInfo&& from) noexcept
    : OPInfo() {
    *this = ::std::move(from);
  }

  inline OPInfo& operator=(OPInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OPInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OPInfo* internal_default_instance() {
    return reinterpret_cast<const OPInfo*>(
               &_OPInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(OPInfo* other);
  friend void swap(OPInfo& a, OPInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OPInfo* New() const final {
    return CreateMaybeMessage<OPInfo>(NULL);
  }

  OPInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OPInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OPInfo& from);
  void MergeFrom(const OPInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OPInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string data = 4;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 4;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional string name = 8;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 8;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string db = 14;
  bool has_db() const;
  void clear_db();
  static const int kDbFieldNumber = 14;
  const ::std::string& db() const;
  void set_db(const ::std::string& value);
  #if LANG_CXX11
  void set_db(::std::string&& value);
  #endif
  void set_db(const char* value);
  void set_db(const char* value, size_t size);
  ::std::string* mutable_db();
  ::std::string* release_db();
  void set_allocated_db(::std::string* db);

  // required uint64 op_id = 1;
  bool has_op_id() const;
  void clear_op_id();
  static const int kOpIdFieldNumber = 1;
  ::google::protobuf::uint64 op_id() const;
  void set_op_id(::google::protobuf::uint64 value);

  // optional uint64 start_time = 6 [default = 0];
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 6;
  ::google::protobuf::uint64 start_time() const;
  void set_start_time(::google::protobuf::uint64 value);

  // required uint32 task_index = 3;
  bool has_task_index() const;
  void clear_task_index();
  static const int kTaskIndexFieldNumber = 3;
  ::google::protobuf::uint32 task_index() const;
  void set_task_index(::google::protobuf::uint32 value);

  // optional uint32 pid = 9;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 9;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // optional uint64 end_time = 7 [default = 0];
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 7;
  ::google::protobuf::uint64 end_time() const;
  void set_end_time(::google::protobuf::uint64 value);

  // optional uint64 parent_id = 10;
  bool has_parent_id() const;
  void clear_parent_id();
  static const int kParentIdFieldNumber = 10;
  ::google::protobuf::uint64 parent_id() const;
  void set_parent_id(::google::protobuf::uint64 value);

  // optional uint64 remote_op_id = 12;
  bool has_remote_op_id() const;
  void clear_remote_op_id();
  static const int kRemoteOpIdFieldNumber = 12;
  ::google::protobuf::uint64 remote_op_id() const;
  void set_remote_op_id(::google::protobuf::uint64 value);

  // optional uint32 vec_idx = 11;
  bool has_vec_idx() const;
  void clear_vec_idx();
  static const int kVecIdxFieldNumber = 11;
  ::google::protobuf::uint32 vec_idx() const;
  void set_vec_idx(::google::protobuf::uint32 value);

  // optional int32 for_replica_cluster = 13 [default = 0];
  bool has_for_replica_cluster() const;
  void clear_for_replica_cluster();
  static const int kForReplicaClusterFieldNumber = 13;
  ::google::protobuf::int32 for_replica_cluster() const;
  void set_for_replica_cluster(::google::protobuf::int32 value);

  // required .openmldb.api.OPType op_type = 2;
  bool has_op_type() const;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 2;
  ::openmldb::api::OPType op_type() const;
  void set_op_type(::openmldb::api::OPType value);

  // optional .openmldb.api.TaskStatus task_status = 5;
  bool has_task_status() const;
  void clear_task_status();
  static const int kTaskStatusFieldNumber = 5;
  ::openmldb::api::TaskStatus task_status() const;
  void set_task_status(::openmldb::api::TaskStatus value);

  // @@protoc_insertion_point(class_scope:openmldb.api.OPInfo)
 private:
  void set_has_op_id();
  void clear_has_op_id();
  void set_has_op_type();
  void clear_has_op_type();
  void set_has_task_index();
  void clear_has_task_index();
  void set_has_data();
  void clear_has_data();
  void set_has_task_status();
  void clear_has_task_status();
  void set_has_start_time();
  void clear_has_start_time();
  void set_has_end_time();
  void clear_has_end_time();
  void set_has_name();
  void clear_has_name();
  void set_has_pid();
  void clear_has_pid();
  void set_has_parent_id();
  void clear_has_parent_id();
  void set_has_vec_idx();
  void clear_has_vec_idx();
  void set_has_remote_op_id();
  void clear_has_remote_op_id();
  void set_has_for_replica_cluster();
  void clear_has_for_replica_cluster();
  void set_has_db();
  void clear_has_db();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr db_;
  ::google::protobuf::uint64 op_id_;
  ::google::protobuf::uint64 start_time_;
  ::google::protobuf::uint32 task_index_;
  ::google::protobuf::uint32 pid_;
  ::google::protobuf::uint64 end_time_;
  ::google::protobuf::uint64 parent_id_;
  ::google::protobuf::uint64 remote_op_id_;
  ::google::protobuf::uint32 vec_idx_;
  ::google::protobuf::int32 for_replica_cluster_;
  int op_type_;
  int task_status_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PartSnapshotOffset : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.PartSnapshotOffset) */ {
 public:
  PartSnapshotOffset();
  virtual ~PartSnapshotOffset();

  PartSnapshotOffset(const PartSnapshotOffset& from);

  inline PartSnapshotOffset& operator=(const PartSnapshotOffset& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PartSnapshotOffset(PartSnapshotOffset&& from) noexcept
    : PartSnapshotOffset() {
    *this = ::std::move(from);
  }

  inline PartSnapshotOffset& operator=(PartSnapshotOffset&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PartSnapshotOffset& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PartSnapshotOffset* internal_default_instance() {
    return reinterpret_cast<const PartSnapshotOffset*>(
               &_PartSnapshotOffset_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PartSnapshotOffset* other);
  friend void swap(PartSnapshotOffset& a, PartSnapshotOffset& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PartSnapshotOffset* New() const final {
    return CreateMaybeMessage<PartSnapshotOffset>(NULL);
  }

  PartSnapshotOffset* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PartSnapshotOffset>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PartSnapshotOffset& from);
  void MergeFrom(const PartSnapshotOffset& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PartSnapshotOffset* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 offset = 3;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 3;
  ::google::protobuf::uint64 offset() const;
  void set_offset(::google::protobuf::uint64 value);

  // optional uint32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.PartSnapshotOffset)
 private:
  void set_has_pid();
  void clear_has_pid();
  void set_has_offset();
  void clear_has_offset();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 offset_;
  ::google::protobuf::uint32 pid_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TableSnapshotOffsetResponse_Table : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.TableSnapshotOffsetResponse.Table) */ {
 public:
  TableSnapshotOffsetResponse_Table();
  virtual ~TableSnapshotOffsetResponse_Table();

  TableSnapshotOffsetResponse_Table(const TableSnapshotOffsetResponse_Table& from);

  inline TableSnapshotOffsetResponse_Table& operator=(const TableSnapshotOffsetResponse_Table& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TableSnapshotOffsetResponse_Table(TableSnapshotOffsetResponse_Table&& from) noexcept
    : TableSnapshotOffsetResponse_Table() {
    *this = ::std::move(from);
  }

  inline TableSnapshotOffsetResponse_Table& operator=(TableSnapshotOffsetResponse_Table&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TableSnapshotOffsetResponse_Table& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TableSnapshotOffsetResponse_Table* internal_default_instance() {
    return reinterpret_cast<const TableSnapshotOffsetResponse_Table*>(
               &_TableSnapshotOffsetResponse_Table_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(TableSnapshotOffsetResponse_Table* other);
  friend void swap(TableSnapshotOffsetResponse_Table& a, TableSnapshotOffsetResponse_Table& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TableSnapshotOffsetResponse_Table* New() const final {
    return CreateMaybeMessage<TableSnapshotOffsetResponse_Table>(NULL);
  }

  TableSnapshotOffsetResponse_Table* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TableSnapshotOffsetResponse_Table>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TableSnapshotOffsetResponse_Table& from);
  void MergeFrom(const TableSnapshotOffsetResponse_Table& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TableSnapshotOffsetResponse_Table* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .openmldb.api.PartSnapshotOffset parts = 2;
  int parts_size() const;
  void clear_parts();
  static const int kPartsFieldNumber = 2;
  ::openmldb::api::PartSnapshotOffset* mutable_parts(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::PartSnapshotOffset >*
      mutable_parts();
  const ::openmldb::api::PartSnapshotOffset& parts(int index) const;
  ::openmldb::api::PartSnapshotOffset* add_parts();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::api::PartSnapshotOffset >&
      parts() const;

  // optional uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.TableSnapshotOffsetResponse.Table)
 private:
  void set_has_tid();
  void clear_has_tid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::PartSnapshotOffset > parts_;
  ::google::protobuf::uint32 tid_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TableSnapshotOffsetResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.TableSnapshotOffsetResponse) */ {
 public:
  TableSnapshotOffsetResponse();
  virtual ~TableSnapshotOffsetResponse();

  TableSnapshotOffsetResponse(const TableSnapshotOffsetResponse& from);

  inline TableSnapshotOffsetResponse& operator=(const TableSnapshotOffsetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TableSnapshotOffsetResponse(TableSnapshotOffsetResponse&& from) noexcept
    : TableSnapshotOffsetResponse() {
    *this = ::std::move(from);
  }

  inline TableSnapshotOffsetResponse& operator=(TableSnapshotOffsetResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TableSnapshotOffsetResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TableSnapshotOffsetResponse* internal_default_instance() {
    return reinterpret_cast<const TableSnapshotOffsetResponse*>(
               &_TableSnapshotOffsetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(TableSnapshotOffsetResponse* other);
  friend void swap(TableSnapshotOffsetResponse& a, TableSnapshotOffsetResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TableSnapshotOffsetResponse* New() const final {
    return CreateMaybeMessage<TableSnapshotOffsetResponse>(NULL);
  }

  TableSnapshotOffsetResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TableSnapshotOffsetResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TableSnapshotOffsetResponse& from);
  void MergeFrom(const TableSnapshotOffsetResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TableSnapshotOffsetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TableSnapshotOffsetResponse_Table Table;

  // accessors -------------------------------------------------------

  // repeated .openmldb.api.TableSnapshotOffsetResponse.Table tables = 3;
  int tables_size() const;
  void clear_tables();
  static const int kTablesFieldNumber = 3;
  ::openmldb::api::TableSnapshotOffsetResponse_Table* mutable_tables(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::TableSnapshotOffsetResponse_Table >*
      mutable_tables();
  const ::openmldb::api::TableSnapshotOffsetResponse_Table& tables(int index) const;
  ::openmldb::api::TableSnapshotOffsetResponse_Table* add_tables();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::api::TableSnapshotOffsetResponse_Table >&
      tables() const;

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.TableSnapshotOffsetResponse)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::TableSnapshotOffsetResponse_Table > tables_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 code_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Manifest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.Manifest) */ {
 public:
  Manifest();
  virtual ~Manifest();

  Manifest(const Manifest& from);

  inline Manifest& operator=(const Manifest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Manifest(Manifest&& from) noexcept
    : Manifest() {
    *this = ::std::move(from);
  }

  inline Manifest& operator=(Manifest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Manifest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Manifest* internal_default_instance() {
    return reinterpret_cast<const Manifest*>(
               &_Manifest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Manifest* other);
  friend void swap(Manifest& a, Manifest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Manifest* New() const final {
    return CreateMaybeMessage<Manifest>(NULL);
  }

  Manifest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Manifest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Manifest& from);
  void MergeFrom(const Manifest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Manifest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint64 offset = 1;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 1;
  ::google::protobuf::uint64 offset() const;
  void set_offset(::google::protobuf::uint64 value);

  // optional uint64 count = 3;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::uint64 count() const;
  void set_count(::google::protobuf::uint64 value);

  // optional uint64 term = 4;
  bool has_term() const;
  void clear_term();
  static const int kTermFieldNumber = 4;
  ::google::protobuf::uint64 term() const;
  void set_term(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.Manifest)
 private:
  void set_has_offset();
  void clear_has_offset();
  void set_has_name();
  void clear_has_name();
  void set_has_count();
  void clear_has_count();
  void set_has_term();
  void clear_has_term();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 offset_;
  ::google::protobuf::uint64 count_;
  ::google::protobuf::uint64 term_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Dimension : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.Dimension) */ {
 public:
  Dimension();
  virtual ~Dimension();

  Dimension(const Dimension& from);

  inline Dimension& operator=(const Dimension& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Dimension(Dimension&& from) noexcept
    : Dimension() {
    *this = ::std::move(from);
  }

  inline Dimension& operator=(Dimension&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Dimension& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Dimension* internal_default_instance() {
    return reinterpret_cast<const Dimension*>(
               &_Dimension_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Dimension* other);
  friend void swap(Dimension& a, Dimension& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Dimension* New() const final {
    return CreateMaybeMessage<Dimension>(NULL);
  }

  Dimension* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Dimension>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Dimension& from);
  void MergeFrom(const Dimension& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Dimension* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional uint32 idx = 2;
  bool has_idx() const;
  void clear_idx();
  static const int kIdxFieldNumber = 2;
  ::google::protobuf::uint32 idx() const;
  void set_idx(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.Dimension)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_idx();
  void clear_has_idx();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::uint32 idx_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TSDimension : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.TSDimension) */ {
 public:
  TSDimension();
  virtual ~TSDimension();

  TSDimension(const TSDimension& from);

  inline TSDimension& operator=(const TSDimension& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TSDimension(TSDimension&& from) noexcept
    : TSDimension() {
    *this = ::std::move(from);
  }

  inline TSDimension& operator=(TSDimension&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSDimension& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TSDimension* internal_default_instance() {
    return reinterpret_cast<const TSDimension*>(
               &_TSDimension_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(TSDimension* other);
  friend void swap(TSDimension& a, TSDimension& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TSDimension* New() const final {
    return CreateMaybeMessage<TSDimension>(NULL);
  }

  TSDimension* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TSDimension>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TSDimension& from);
  void MergeFrom(const TSDimension& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TSDimension* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 ts = 1;
  bool has_ts() const;
  void clear_ts();
  static const int kTsFieldNumber = 1;
  ::google::protobuf::uint64 ts() const;
  void set_ts(::google::protobuf::uint64 value);

  // optional uint32 idx = 2;
  bool has_idx() const;
  void clear_idx();
  static const int kIdxFieldNumber = 2;
  ::google::protobuf::uint32 idx() const;
  void set_idx(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.TSDimension)
 private:
  void set_has_ts();
  void clear_has_ts();
  void set_has_idx();
  void clear_has_idx();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 ts_;
  ::google::protobuf::uint32 idx_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PutRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.PutRequest) */ {
 public:
  PutRequest();
  virtual ~PutRequest();

  PutRequest(const PutRequest& from);

  inline PutRequest& operator=(const PutRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PutRequest(PutRequest&& from) noexcept
    : PutRequest() {
    *this = ::std::move(from);
  }

  inline PutRequest& operator=(PutRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PutRequest* internal_default_instance() {
    return reinterpret_cast<const PutRequest*>(
               &_PutRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(PutRequest* other);
  friend void swap(PutRequest& a, PutRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PutRequest* New() const final {
    return CreateMaybeMessage<PutRequest>(NULL);
  }

  PutRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PutRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PutRequest& from);
  void MergeFrom(const PutRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .openmldb.api.Dimension dimensions = 6;
  int dimensions_size() const;
  void clear_dimensions();
  static const int kDimensionsFieldNumber = 6;
  ::openmldb::api::Dimension* mutable_dimensions(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::Dimension >*
      mutable_dimensions();
  const ::openmldb::api::Dimension& dimensions(int index) const;
  ::openmldb::api::Dimension* add_dimensions();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::api::Dimension >&
      dimensions() const;

  // repeated .openmldb.api.TSDimension ts_dimensions = 7 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR int ts_dimensions_size() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_ts_dimensions();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kTsDimensionsFieldNumber = 7;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::openmldb::api::TSDimension* mutable_ts_dimensions(int index);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::protobuf::RepeatedPtrField< ::openmldb::api::TSDimension >*
      mutable_ts_dimensions();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::openmldb::api::TSDimension& ts_dimensions(int index) const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::openmldb::api::TSDimension* add_ts_dimensions();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::google::protobuf::RepeatedPtrField< ::openmldb::api::TSDimension >&
      ts_dimensions() const;

  // optional string pk = 1;
  bool has_pk() const;
  void clear_pk();
  static const int kPkFieldNumber = 1;
  const ::std::string& pk() const;
  void set_pk(const ::std::string& value);
  #if LANG_CXX11
  void set_pk(::std::string&& value);
  #endif
  void set_pk(const char* value);
  void set_pk(const char* value, size_t size);
  ::std::string* mutable_pk();
  ::std::string* release_pk();
  void set_allocated_pk(::std::string* pk);

  // optional bytes value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional int64 time = 2;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // optional uint32 tid = 4;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 4;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // optional uint32 pid = 5;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 5;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // optional uint32 format_version = 8 [default = 0];
  bool has_format_version() const;
  void clear_format_version();
  static const int kFormatVersionFieldNumber = 8;
  ::google::protobuf::uint32 format_version() const;
  void set_format_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.PutRequest)
 private:
  void set_has_pk();
  void clear_has_pk();
  void set_has_time();
  void clear_has_time();
  void set_has_value();
  void clear_has_value();
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_format_version();
  void clear_has_format_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::Dimension > dimensions_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::TSDimension > ts_dimensions_;
  ::google::protobuf::internal::ArenaStringPtr pk_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  ::google::protobuf::uint32 format_version_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PutResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.PutResponse) */ {
 public:
  PutResponse();
  virtual ~PutResponse();

  PutResponse(const PutResponse& from);

  inline PutResponse& operator=(const PutResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PutResponse(PutResponse&& from) noexcept
    : PutResponse() {
    *this = ::std::move(from);
  }

  inline PutResponse& operator=(PutResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PutResponse* internal_default_instance() {
    return reinterpret_cast<const PutResponse*>(
               &_PutResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(PutResponse* other);
  friend void swap(PutResponse& a, PutResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PutResponse* New() const final {
    return CreateMaybeMessage<PutResponse>(NULL);
  }

  PutResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PutResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PutResponse& from);
  void MergeFrom(const PutResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.PutResponse)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 code_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.DeleteRequest) */ {
 public:
  DeleteRequest();
  virtual ~DeleteRequest();

  DeleteRequest(const DeleteRequest& from);

  inline DeleteRequest& operator=(const DeleteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteRequest(DeleteRequest&& from) noexcept
    : DeleteRequest() {
    *this = ::std::move(from);
  }

  inline DeleteRequest& operator=(DeleteRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteRequest*>(
               &_DeleteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(DeleteRequest* other);
  friend void swap(DeleteRequest& a, DeleteRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteRequest* New() const final {
    return CreateMaybeMessage<DeleteRequest>(NULL);
  }

  DeleteRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteRequest& from);
  void MergeFrom(const DeleteRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 3;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 3;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string idx_name = 4;
  bool has_idx_name() const;
  void clear_idx_name();
  static const int kIdxNameFieldNumber = 4;
  const ::std::string& idx_name() const;
  void set_idx_name(const ::std::string& value);
  #if LANG_CXX11
  void set_idx_name(::std::string&& value);
  #endif
  void set_idx_name(const char* value);
  void set_idx_name(const char* value, size_t size);
  ::std::string* mutable_idx_name();
  ::std::string* release_idx_name();
  void set_allocated_idx_name(::std::string* idx_name);

  // optional uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // optional uint32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.DeleteRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_key();
  void clear_has_key();
  void set_has_idx_name();
  void clear_has_idx_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr idx_name_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExecuteGcRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.ExecuteGcRequest) */ {
 public:
  ExecuteGcRequest();
  virtual ~ExecuteGcRequest();

  ExecuteGcRequest(const ExecuteGcRequest& from);

  inline ExecuteGcRequest& operator=(const ExecuteGcRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecuteGcRequest(ExecuteGcRequest&& from) noexcept
    : ExecuteGcRequest() {
    *this = ::std::move(from);
  }

  inline ExecuteGcRequest& operator=(ExecuteGcRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteGcRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExecuteGcRequest* internal_default_instance() {
    return reinterpret_cast<const ExecuteGcRequest*>(
               &_ExecuteGcRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(ExecuteGcRequest* other);
  friend void swap(ExecuteGcRequest& a, ExecuteGcRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecuteGcRequest* New() const final {
    return CreateMaybeMessage<ExecuteGcRequest>(NULL);
  }

  ExecuteGcRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExecuteGcRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExecuteGcRequest& from);
  void MergeFrom(const ExecuteGcRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExecuteGcRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // optional uint32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.ExecuteGcRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GeneralRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.GeneralRequest) */ {
 public:
  GeneralRequest();
  virtual ~GeneralRequest();

  GeneralRequest(const GeneralRequest& from);

  inline GeneralRequest& operator=(const GeneralRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GeneralRequest(GeneralRequest&& from) noexcept
    : GeneralRequest() {
    *this = ::std::move(from);
  }

  inline GeneralRequest& operator=(GeneralRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GeneralRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GeneralRequest* internal_default_instance() {
    return reinterpret_cast<const GeneralRequest*>(
               &_GeneralRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(GeneralRequest* other);
  friend void swap(GeneralRequest& a, GeneralRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GeneralRequest* New() const final {
    return CreateMaybeMessage<GeneralRequest>(NULL);
  }

  GeneralRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GeneralRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GeneralRequest& from);
  void MergeFrom(const GeneralRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GeneralRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .openmldb.api.TaskInfo task_info = 3;
  bool has_task_info() const;
  void clear_task_info();
  static const int kTaskInfoFieldNumber = 3;
  private:
  const ::openmldb::api::TaskInfo& _internal_task_info() const;
  public:
  const ::openmldb::api::TaskInfo& task_info() const;
  ::openmldb::api::TaskInfo* release_task_info();
  ::openmldb::api::TaskInfo* mutable_task_info();
  void set_allocated_task_info(::openmldb::api::TaskInfo* task_info);

  // required int32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::int32 tid() const;
  void set_tid(::google::protobuf::int32 value);

  // required int32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::int32 pid() const;
  void set_pid(::google::protobuf::int32 value);

  // optional uint64 offset = 4;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 4;
  ::google::protobuf::uint64 offset() const;
  void set_offset(::google::protobuf::uint64 value);

  // optional .openmldb.common.StorageMode storage_mode = 5 [default = kMemory];
  bool has_storage_mode() const;
  void clear_storage_mode();
  static const int kStorageModeFieldNumber = 5;
  ::openmldb::common::StorageMode storage_mode() const;
  void set_storage_mode(::openmldb::common::StorageMode value);

  // @@protoc_insertion_point(class_scope:openmldb.api.GeneralRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_task_info();
  void clear_has_task_info();
  void set_has_offset();
  void clear_has_offset();
  void set_has_storage_mode();
  void clear_has_storage_mode();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::openmldb::api::TaskInfo* task_info_;
  ::google::protobuf::int32 tid_;
  ::google::protobuf::int32 pid_;
  ::google::protobuf::uint64 offset_;
  int storage_mode_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TaskStatusRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.TaskStatusRequest) */ {
 public:
  TaskStatusRequest();
  virtual ~TaskStatusRequest();

  TaskStatusRequest(const TaskStatusRequest& from);

  inline TaskStatusRequest& operator=(const TaskStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TaskStatusRequest(TaskStatusRequest&& from) noexcept
    : TaskStatusRequest() {
    *this = ::std::move(from);
  }

  inline TaskStatusRequest& operator=(TaskStatusRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskStatusRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TaskStatusRequest* internal_default_instance() {
    return reinterpret_cast<const TaskStatusRequest*>(
               &_TaskStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(TaskStatusRequest* other);
  friend void swap(TaskStatusRequest& a, TaskStatusRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TaskStatusRequest* New() const final {
    return CreateMaybeMessage<TaskStatusRequest>(NULL);
  }

  TaskStatusRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TaskStatusRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TaskStatusRequest& from);
  void MergeFrom(const TaskStatusRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TaskStatusRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openmldb.api.TaskStatusRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TaskStatusResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.TaskStatusResponse) */ {
 public:
  TaskStatusResponse();
  virtual ~TaskStatusResponse();

  TaskStatusResponse(const TaskStatusResponse& from);

  inline TaskStatusResponse& operator=(const TaskStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TaskStatusResponse(TaskStatusResponse&& from) noexcept
    : TaskStatusResponse() {
    *this = ::std::move(from);
  }

  inline TaskStatusResponse& operator=(TaskStatusResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskStatusResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TaskStatusResponse* internal_default_instance() {
    return reinterpret_cast<const TaskStatusResponse*>(
               &_TaskStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(TaskStatusResponse* other);
  friend void swap(TaskStatusResponse& a, TaskStatusResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TaskStatusResponse* New() const final {
    return CreateMaybeMessage<TaskStatusResponse>(NULL);
  }

  TaskStatusResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TaskStatusResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TaskStatusResponse& from);
  void MergeFrom(const TaskStatusResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TaskStatusResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .openmldb.api.TaskInfo task = 3;
  int task_size() const;
  void clear_task();
  static const int kTaskFieldNumber = 3;
  ::openmldb::api::TaskInfo* mutable_task(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::TaskInfo >*
      mutable_task();
  const ::openmldb::api::TaskInfo& task(int index) const;
  ::openmldb::api::TaskInfo* add_task();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::api::TaskInfo >&
      task() const;

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.TaskStatusResponse)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::TaskInfo > task_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 code_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteTaskRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.DeleteTaskRequest) */ {
 public:
  DeleteTaskRequest();
  virtual ~DeleteTaskRequest();

  DeleteTaskRequest(const DeleteTaskRequest& from);

  inline DeleteTaskRequest& operator=(const DeleteTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteTaskRequest(DeleteTaskRequest&& from) noexcept
    : DeleteTaskRequest() {
    *this = ::std::move(from);
  }

  inline DeleteTaskRequest& operator=(DeleteTaskRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteTaskRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteTaskRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteTaskRequest*>(
               &_DeleteTaskRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(DeleteTaskRequest* other);
  friend void swap(DeleteTaskRequest& a, DeleteTaskRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteTaskRequest* New() const final {
    return CreateMaybeMessage<DeleteTaskRequest>(NULL);
  }

  DeleteTaskRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteTaskRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteTaskRequest& from);
  void MergeFrom(const DeleteTaskRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteTaskRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 op_id = 1;
  int op_id_size() const;
  void clear_op_id();
  static const int kOpIdFieldNumber = 1;
  ::google::protobuf::uint64 op_id(int index) const;
  void set_op_id(int index, ::google::protobuf::uint64 value);
  void add_op_id(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      op_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_op_id();

  // @@protoc_insertion_point(class_scope:openmldb.api.DeleteTaskRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > op_id_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GeneralResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.GeneralResponse) */ {
 public:
  GeneralResponse();
  virtual ~GeneralResponse();

  GeneralResponse(const GeneralResponse& from);

  inline GeneralResponse& operator=(const GeneralResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GeneralResponse(GeneralResponse&& from) noexcept
    : GeneralResponse() {
    *this = ::std::move(from);
  }

  inline GeneralResponse& operator=(GeneralResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GeneralResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GeneralResponse* internal_default_instance() {
    return reinterpret_cast<const GeneralResponse*>(
               &_GeneralResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(GeneralResponse* other);
  friend void swap(GeneralResponse& a, GeneralResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GeneralResponse* New() const final {
    return CreateMaybeMessage<GeneralResponse>(NULL);
  }

  GeneralResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GeneralResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GeneralResponse& from);
  void MergeFrom(const GeneralResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GeneralResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 additional_ids = 3;
  int additional_ids_size() const;
  void clear_additional_ids();
  static const int kAdditionalIdsFieldNumber = 3;
  ::google::protobuf::int64 additional_ids(int index) const;
  void set_additional_ids(int index, ::google::protobuf::int64 value);
  void add_additional_ids(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      additional_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_additional_ids();

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // optional uint32 count = 4;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 4;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.GeneralResponse)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();
  void set_has_count();
  void clear_has_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > additional_ids_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::uint32 count_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScanRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.ScanRequest) */ {
 public:
  ScanRequest();
  virtual ~ScanRequest();

  ScanRequest(const ScanRequest& from);

  inline ScanRequest& operator=(const ScanRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScanRequest(ScanRequest&& from) noexcept
    : ScanRequest() {
    *this = ::std::move(from);
  }

  inline ScanRequest& operator=(ScanRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScanRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScanRequest* internal_default_instance() {
    return reinterpret_cast<const ScanRequest*>(
               &_ScanRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(ScanRequest* other);
  friend void swap(ScanRequest& a, ScanRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScanRequest* New() const final {
    return CreateMaybeMessage<ScanRequest>(NULL);
  }

  ScanRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ScanRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ScanRequest& from);
  void MergeFrom(const ScanRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScanRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 projection = 10;
  int projection_size() const;
  void clear_projection();
  static const int kProjectionFieldNumber = 10;
  ::google::protobuf::uint32 projection(int index) const;
  void set_projection(int index, ::google::protobuf::uint32 value);
  void add_projection(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      projection() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_projection();

  // repeated uint32 pid_group = 11;
  int pid_group_size() const;
  void clear_pid_group();
  static const int kPidGroupFieldNumber = 11;
  ::google::protobuf::uint32 pid_group(int index) const;
  void set_pid_group(int index, ::google::protobuf::uint32 value);
  void add_pid_group(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      pid_group() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_pid_group();

  // optional string pk = 1;
  bool has_pk() const;
  void clear_pk();
  static const int kPkFieldNumber = 1;
  const ::std::string& pk() const;
  void set_pk(const ::std::string& value);
  #if LANG_CXX11
  void set_pk(::std::string&& value);
  #endif
  void set_pk(const char* value);
  void set_pk(const char* value, size_t size);
  ::std::string* mutable_pk();
  ::std::string* release_pk();
  void set_allocated_pk(::std::string* pk);

  // optional string idx_name = 8;
  bool has_idx_name() const;
  void clear_idx_name();
  static const int kIdxNameFieldNumber = 8;
  const ::std::string& idx_name() const;
  void set_idx_name(const ::std::string& value);
  #if LANG_CXX11
  void set_idx_name(::std::string&& value);
  #endif
  void set_idx_name(const char* value);
  void set_idx_name(const char* value, size_t size);
  ::std::string* mutable_idx_name();
  ::std::string* release_idx_name();
  void set_allocated_idx_name(::std::string* idx_name);

  // optional uint64 st = 2;
  bool has_st() const;
  void clear_st();
  static const int kStFieldNumber = 2;
  ::google::protobuf::uint64 st() const;
  void set_st(::google::protobuf::uint64 value);

  // optional uint64 et = 3;
  bool has_et() const;
  void clear_et();
  static const int kEtFieldNumber = 3;
  ::google::protobuf::uint64 et() const;
  void set_et(::google::protobuf::uint64 value);

  // optional uint32 limit = 4;
  bool has_limit() const;
  void clear_limit();
  static const int kLimitFieldNumber = 4;
  ::google::protobuf::uint32 limit() const;
  void set_limit(::google::protobuf::uint32 value);

  // optional uint32 tid = 5;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 5;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // optional uint32 pid = 6;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 6;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // optional bool enable_remove_duplicated_record = 7 [default = false];
  bool has_enable_remove_duplicated_record() const;
  void clear_enable_remove_duplicated_record();
  static const int kEnableRemoveDuplicatedRecordFieldNumber = 7;
  bool enable_remove_duplicated_record() const;
  void set_enable_remove_duplicated_record(bool value);

  // optional bool enable_remove_ts = 9 [default = false];
  bool has_enable_remove_ts() const;
  void clear_enable_remove_ts();
  static const int kEnableRemoveTsFieldNumber = 9;
  bool enable_remove_ts() const;
  void set_enable_remove_ts(bool value);

  // optional bool use_attachment = 12 [default = false];
  bool has_use_attachment() const;
  void clear_use_attachment();
  static const int kUseAttachmentFieldNumber = 12;
  bool use_attachment() const;
  void set_use_attachment(bool value);

  // optional uint32 skip_record_num = 13 [default = 0];
  bool has_skip_record_num() const;
  void clear_skip_record_num();
  static const int kSkipRecordNumFieldNumber = 13;
  ::google::protobuf::uint32 skip_record_num() const;
  void set_skip_record_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.ScanRequest)
 private:
  void set_has_pk();
  void clear_has_pk();
  void set_has_st();
  void clear_has_st();
  void set_has_et();
  void clear_has_et();
  void set_has_limit();
  void clear_has_limit();
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_enable_remove_duplicated_record();
  void clear_has_enable_remove_duplicated_record();
  void set_has_idx_name();
  void clear_has_idx_name();
  void set_has_enable_remove_ts();
  void clear_has_enable_remove_ts();
  void set_has_use_attachment();
  void clear_has_use_attachment();
  void set_has_skip_record_num();
  void clear_has_skip_record_num();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > projection_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > pid_group_;
  ::google::protobuf::internal::ArenaStringPtr pk_;
  ::google::protobuf::internal::ArenaStringPtr idx_name_;
  ::google::protobuf::uint64 st_;
  ::google::protobuf::uint64 et_;
  ::google::protobuf::uint32 limit_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  bool enable_remove_duplicated_record_;
  bool enable_remove_ts_;
  bool use_attachment_;
  ::google::protobuf::uint32 skip_record_num_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TraverseRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.TraverseRequest) */ {
 public:
  TraverseRequest();
  virtual ~TraverseRequest();

  TraverseRequest(const TraverseRequest& from);

  inline TraverseRequest& operator=(const TraverseRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TraverseRequest(TraverseRequest&& from) noexcept
    : TraverseRequest() {
    *this = ::std::move(from);
  }

  inline TraverseRequest& operator=(TraverseRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TraverseRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TraverseRequest* internal_default_instance() {
    return reinterpret_cast<const TraverseRequest*>(
               &_TraverseRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(TraverseRequest* other);
  friend void swap(TraverseRequest& a, TraverseRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TraverseRequest* New() const final {
    return CreateMaybeMessage<TraverseRequest>(NULL);
  }

  TraverseRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TraverseRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TraverseRequest& from);
  void MergeFrom(const TraverseRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TraverseRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string idx_name = 3;
  bool has_idx_name() const;
  void clear_idx_name();
  static const int kIdxNameFieldNumber = 3;
  const ::std::string& idx_name() const;
  void set_idx_name(const ::std::string& value);
  #if LANG_CXX11
  void set_idx_name(::std::string&& value);
  #endif
  void set_idx_name(const char* value);
  void set_idx_name(const char* value, size_t size);
  ::std::string* mutable_idx_name();
  ::std::string* release_idx_name();
  void set_allocated_idx_name(::std::string* idx_name);

  // optional string pk = 5;
  bool has_pk() const;
  void clear_pk();
  static const int kPkFieldNumber = 5;
  const ::std::string& pk() const;
  void set_pk(const ::std::string& value);
  #if LANG_CXX11
  void set_pk(::std::string&& value);
  #endif
  void set_pk(const char* value);
  void set_pk(const char* value, size_t size);
  ::std::string* mutable_pk();
  ::std::string* release_pk();
  void set_allocated_pk(::std::string* pk);

  // optional uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // optional uint32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // optional uint64 ts = 6;
  bool has_ts() const;
  void clear_ts();
  static const int kTsFieldNumber = 6;
  ::google::protobuf::uint64 ts() const;
  void set_ts(::google::protobuf::uint64 value);

  // optional bool enable_remove_duplicated_record = 7 [default = false];
  bool has_enable_remove_duplicated_record() const;
  void clear_enable_remove_duplicated_record();
  static const int kEnableRemoveDuplicatedRecordFieldNumber = 7;
  bool enable_remove_duplicated_record() const;
  void set_enable_remove_duplicated_record(bool value);

  // optional bool skip_current_pk = 8 [default = false];
  bool has_skip_current_pk() const;
  void clear_skip_current_pk();
  static const int kSkipCurrentPkFieldNumber = 8;
  bool skip_current_pk() const;
  void set_skip_current_pk(bool value);

  // optional uint32 limit = 4 [default = 100];
  bool has_limit() const;
  void clear_limit();
  static const int kLimitFieldNumber = 4;
  ::google::protobuf::uint32 limit() const;
  void set_limit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.TraverseRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_idx_name();
  void clear_has_idx_name();
  void set_has_limit();
  void clear_has_limit();
  void set_has_pk();
  void clear_has_pk();
  void set_has_ts();
  void clear_has_ts();
  void set_has_enable_remove_duplicated_record();
  void clear_has_enable_remove_duplicated_record();
  void set_has_skip_current_pk();
  void clear_has_skip_current_pk();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr idx_name_;
  ::google::protobuf::internal::ArenaStringPtr pk_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  ::google::protobuf::uint64 ts_;
  bool enable_remove_duplicated_record_;
  bool skip_current_pk_;
  ::google::protobuf::uint32 limit_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TraverseResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.TraverseResponse) */ {
 public:
  TraverseResponse();
  virtual ~TraverseResponse();

  TraverseResponse(const TraverseResponse& from);

  inline TraverseResponse& operator=(const TraverseResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TraverseResponse(TraverseResponse&& from) noexcept
    : TraverseResponse() {
    *this = ::std::move(from);
  }

  inline TraverseResponse& operator=(TraverseResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TraverseResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TraverseResponse* internal_default_instance() {
    return reinterpret_cast<const TraverseResponse*>(
               &_TraverseResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(TraverseResponse* other);
  friend void swap(TraverseResponse& a, TraverseResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TraverseResponse* New() const final {
    return CreateMaybeMessage<TraverseResponse>(NULL);
  }

  TraverseResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TraverseResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TraverseResponse& from);
  void MergeFrom(const TraverseResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TraverseResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes pairs = 1;
  bool has_pairs() const;
  void clear_pairs();
  static const int kPairsFieldNumber = 1;
  const ::std::string& pairs() const;
  void set_pairs(const ::std::string& value);
  #if LANG_CXX11
  void set_pairs(::std::string&& value);
  #endif
  void set_pairs(const char* value);
  void set_pairs(const void* value, size_t size);
  ::std::string* mutable_pairs();
  ::std::string* release_pairs();
  void set_allocated_pairs(::std::string* pairs);

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional string pk = 5;
  bool has_pk() const;
  void clear_pk();
  static const int kPkFieldNumber = 5;
  const ::std::string& pk() const;
  void set_pk(const ::std::string& value);
  #if LANG_CXX11
  void set_pk(::std::string&& value);
  #endif
  void set_pk(const char* value);
  void set_pk(const char* value, size_t size);
  ::std::string* mutable_pk();
  ::std::string* release_pk();
  void set_allocated_pk(::std::string* pk);

  // optional int32 code = 3;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 3;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // optional uint32 count = 4;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 4;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // optional uint64 ts = 6;
  bool has_ts() const;
  void clear_ts();
  static const int kTsFieldNumber = 6;
  ::google::protobuf::uint64 ts() const;
  void set_ts(::google::protobuf::uint64 value);

  // optional uint64 snapshot_id = 8;
  bool has_snapshot_id() const;
  void clear_snapshot_id();
  static const int kSnapshotIdFieldNumber = 8;
  ::google::protobuf::uint64 snapshot_id() const;
  void set_snapshot_id(::google::protobuf::uint64 value);

  // optional bool is_finish = 7;
  bool has_is_finish() const;
  void clear_is_finish();
  static const int kIsFinishFieldNumber = 7;
  bool is_finish() const;
  void set_is_finish(bool value);

  // @@protoc_insertion_point(class_scope:openmldb.api.TraverseResponse)
 private:
  void set_has_pairs();
  void clear_has_pairs();
  void set_has_msg();
  void clear_has_msg();
  void set_has_code();
  void clear_has_code();
  void set_has_count();
  void clear_has_count();
  void set_has_pk();
  void clear_has_pk();
  void set_has_ts();
  void clear_has_ts();
  void set_has_is_finish();
  void clear_has_is_finish();
  void set_has_snapshot_id();
  void clear_has_snapshot_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr pairs_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr pk_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint64 ts_;
  ::google::protobuf::uint64 snapshot_id_;
  bool is_finish_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScanResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.ScanResponse) */ {
 public:
  ScanResponse();
  virtual ~ScanResponse();

  ScanResponse(const ScanResponse& from);

  inline ScanResponse& operator=(const ScanResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScanResponse(ScanResponse&& from) noexcept
    : ScanResponse() {
    *this = ::std::move(from);
  }

  inline ScanResponse& operator=(ScanResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScanResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScanResponse* internal_default_instance() {
    return reinterpret_cast<const ScanResponse*>(
               &_ScanResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(ScanResponse* other);
  friend void swap(ScanResponse& a, ScanResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScanResponse* New() const final {
    return CreateMaybeMessage<ScanResponse>(NULL);
  }

  ScanResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ScanResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ScanResponse& from);
  void MergeFrom(const ScanResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScanResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes pairs = 1;
  bool has_pairs() const;
  void clear_pairs();
  static const int kPairsFieldNumber = 1;
  const ::std::string& pairs() const;
  void set_pairs(const ::std::string& value);
  #if LANG_CXX11
  void set_pairs(::std::string&& value);
  #endif
  void set_pairs(const char* value);
  void set_pairs(const void* value, size_t size);
  ::std::string* mutable_pairs();
  ::std::string* release_pairs();
  void set_allocated_pairs(::std::string* pairs);

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional int32 code = 3;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 3;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // optional uint32 count = 4;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 4;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // optional uint32 buf_size = 5;
  bool has_buf_size() const;
  void clear_buf_size();
  static const int kBufSizeFieldNumber = 5;
  ::google::protobuf::uint32 buf_size() const;
  void set_buf_size(::google::protobuf::uint32 value);

  // optional bool is_finish = 6 [default = true];
  bool has_is_finish() const;
  void clear_is_finish();
  static const int kIsFinishFieldNumber = 6;
  bool is_finish() const;
  void set_is_finish(bool value);

  // @@protoc_insertion_point(class_scope:openmldb.api.ScanResponse)
 private:
  void set_has_pairs();
  void clear_has_pairs();
  void set_has_msg();
  void clear_has_msg();
  void set_has_code();
  void clear_has_code();
  void set_has_count();
  void clear_has_count();
  void set_has_buf_size();
  void clear_has_buf_size();
  void set_has_is_finish();
  void clear_has_is_finish();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr pairs_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 buf_size_;
  bool is_finish_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReplicaRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.ReplicaRequest) */ {
 public:
  ReplicaRequest();
  virtual ~ReplicaRequest();

  ReplicaRequest(const ReplicaRequest& from);

  inline ReplicaRequest& operator=(const ReplicaRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReplicaRequest(ReplicaRequest&& from) noexcept
    : ReplicaRequest() {
    *this = ::std::move(from);
  }

  inline ReplicaRequest& operator=(ReplicaRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplicaRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReplicaRequest* internal_default_instance() {
    return reinterpret_cast<const ReplicaRequest*>(
               &_ReplicaRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(ReplicaRequest* other);
  friend void swap(ReplicaRequest& a, ReplicaRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReplicaRequest* New() const final {
    return CreateMaybeMessage<ReplicaRequest>(NULL);
  }

  ReplicaRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReplicaRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReplicaRequest& from);
  void MergeFrom(const ReplicaRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReplicaRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string endpoint = 3;
  bool has_endpoint() const;
  void clear_endpoint();
  static const int kEndpointFieldNumber = 3;
  const ::std::string& endpoint() const;
  void set_endpoint(const ::std::string& value);
  #if LANG_CXX11
  void set_endpoint(::std::string&& value);
  #endif
  void set_endpoint(const char* value);
  void set_endpoint(const char* value, size_t size);
  ::std::string* mutable_endpoint();
  ::std::string* release_endpoint();
  void set_allocated_endpoint(::std::string* endpoint);

  // optional .openmldb.api.TaskInfo task_info = 4;
  bool has_task_info() const;
  void clear_task_info();
  static const int kTaskInfoFieldNumber = 4;
  private:
  const ::openmldb::api::TaskInfo& _internal_task_info() const;
  public:
  const ::openmldb::api::TaskInfo& task_info() const;
  ::openmldb::api::TaskInfo* release_task_info();
  ::openmldb::api::TaskInfo* mutable_task_info();
  void set_allocated_task_info(::openmldb::api::TaskInfo* task_info);

  // optional uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // optional uint32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // optional uint32 remote_tid = 5;
  bool has_remote_tid() const;
  void clear_remote_tid();
  static const int kRemoteTidFieldNumber = 5;
  ::google::protobuf::uint32 remote_tid() const;
  void set_remote_tid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.ReplicaRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_endpoint();
  void clear_has_endpoint();
  void set_has_task_info();
  void clear_has_task_info();
  void set_has_remote_tid();
  void clear_has_remote_tid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr endpoint_;
  ::openmldb::api::TaskInfo* task_info_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  ::google::protobuf::uint32 remote_tid_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddReplicaResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.AddReplicaResponse) */ {
 public:
  AddReplicaResponse();
  virtual ~AddReplicaResponse();

  AddReplicaResponse(const AddReplicaResponse& from);

  inline AddReplicaResponse& operator=(const AddReplicaResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddReplicaResponse(AddReplicaResponse&& from) noexcept
    : AddReplicaResponse() {
    *this = ::std::move(from);
  }

  inline AddReplicaResponse& operator=(AddReplicaResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddReplicaResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddReplicaResponse* internal_default_instance() {
    return reinterpret_cast<const AddReplicaResponse*>(
               &_AddReplicaResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(AddReplicaResponse* other);
  friend void swap(AddReplicaResponse& a, AddReplicaResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddReplicaResponse* New() const final {
    return CreateMaybeMessage<AddReplicaResponse>(NULL);
  }

  AddReplicaResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AddReplicaResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AddReplicaResponse& from);
  void MergeFrom(const AddReplicaResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddReplicaResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.AddReplicaResponse)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 code_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TableMeta : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.TableMeta) */ {
 public:
  TableMeta();
  virtual ~TableMeta();

  TableMeta(const TableMeta& from);

  inline TableMeta& operator=(const TableMeta& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TableMeta(TableMeta&& from) noexcept
    : TableMeta() {
    *this = ::std::move(from);
  }

  inline TableMeta& operator=(TableMeta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TableMeta& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TableMeta* internal_default_instance() {
    return reinterpret_cast<const TableMeta*>(
               &_TableMeta_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(TableMeta* other);
  friend void swap(TableMeta& a, TableMeta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TableMeta* New() const final {
    return CreateMaybeMessage<TableMeta>(NULL);
  }

  TableMeta* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TableMeta>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TableMeta& from);
  void MergeFrom(const TableMeta& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TableMeta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string replicas = 5;
  int replicas_size() const;
  void clear_replicas();
  static const int kReplicasFieldNumber = 5;
  const ::std::string& replicas(int index) const;
  ::std::string* mutable_replicas(int index);
  void set_replicas(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_replicas(int index, ::std::string&& value);
  #endif
  void set_replicas(int index, const char* value);
  void set_replicas(int index, const char* value, size_t size);
  ::std::string* add_replicas();
  void add_replicas(const ::std::string& value);
  #if LANG_CXX11
  void add_replicas(::std::string&& value);
  #endif
  void add_replicas(const char* value);
  void add_replicas(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& replicas() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_replicas();

  // repeated .openmldb.common.ColumnDesc column_desc = 10;
  int column_desc_size() const;
  void clear_column_desc();
  static const int kColumnDescFieldNumber = 10;
  ::openmldb::common::ColumnDesc* mutable_column_desc(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnDesc >*
      mutable_column_desc();
  const ::openmldb::common::ColumnDesc& column_desc(int index) const;
  ::openmldb::common::ColumnDesc* add_column_desc();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnDesc >&
      column_desc() const;

  // repeated .openmldb.common.ColumnKey column_key = 11;
  int column_key_size() const;
  void clear_column_key();
  static const int kColumnKeyFieldNumber = 11;
  ::openmldb::common::ColumnKey* mutable_column_key(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnKey >*
      mutable_column_key();
  const ::openmldb::common::ColumnKey& column_key(int index) const;
  ::openmldb::common::ColumnKey* add_column_key();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnKey >&
      column_key() const;

  // repeated .openmldb.common.ColumnDesc added_column_desc = 12;
  int added_column_desc_size() const;
  void clear_added_column_desc();
  static const int kAddedColumnDescFieldNumber = 12;
  ::openmldb::common::ColumnDesc* mutable_added_column_desc(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnDesc >*
      mutable_added_column_desc();
  const ::openmldb::common::ColumnDesc& added_column_desc(int index) const;
  ::openmldb::common::ColumnDesc* add_added_column_desc();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnDesc >&
      added_column_desc() const;

  // repeated .openmldb.common.VersionPair schema_versions = 15;
  int schema_versions_size() const;
  void clear_schema_versions();
  static const int kSchemaVersionsFieldNumber = 15;
  ::openmldb::common::VersionPair* mutable_schema_versions(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::common::VersionPair >*
      mutable_schema_versions();
  const ::openmldb::common::VersionPair& schema_versions(int index) const;
  ::openmldb::common::VersionPair* add_schema_versions();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::common::VersionPair >&
      schema_versions() const;

  // repeated .openmldb.common.TablePartition table_partition = 16;
  int table_partition_size() const;
  void clear_table_partition();
  static const int kTablePartitionFieldNumber = 16;
  ::openmldb::common::TablePartition* mutable_table_partition(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::common::TablePartition >*
      mutable_table_partition();
  const ::openmldb::common::TablePartition& table_partition(int index) const;
  ::openmldb::common::TablePartition* add_table_partition();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::common::TablePartition >&
      table_partition() const;

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string db = 14 [default = ""];
  bool has_db() const;
  void clear_db();
  static const int kDbFieldNumber = 14;
  const ::std::string& db() const;
  void set_db(const ::std::string& value);
  #if LANG_CXX11
  void set_db(::std::string&& value);
  #endif
  void set_db(const char* value);
  void set_db(const char* value, size_t size);
  ::std::string* mutable_db();
  ::std::string* release_db();
  void set_allocated_db(::std::string* db);

  // optional int32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::int32 tid() const;
  void set_tid(::google::protobuf::int32 value);

  // optional int32 pid = 3;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 3;
  ::google::protobuf::int32 pid() const;
  void set_pid(::google::protobuf::int32 value);

  // optional int32 seg_cnt = 4;
  bool has_seg_cnt() const;
  void clear_seg_cnt();
  static const int kSegCntFieldNumber = 4;
  ::google::protobuf::int32 seg_cnt() const;
  void set_seg_cnt(::google::protobuf::int32 value);

  // optional .openmldb.type.CompressType compress_type = 8;
  bool has_compress_type() const;
  void clear_compress_type();
  static const int kCompressTypeFieldNumber = 8;
  ::openmldb::type::CompressType compress_type() const;
  void set_compress_type(::openmldb::type::CompressType value);

  // optional uint64 term = 7 [default = 0];
  bool has_term() const;
  void clear_term();
  static const int kTermFieldNumber = 7;
  ::google::protobuf::uint64 term() const;
  void set_term(::google::protobuf::uint64 value);

  // optional uint32 key_entry_max_height = 9;
  bool has_key_entry_max_height() const;
  void clear_key_entry_max_height();
  static const int kKeyEntryMaxHeightFieldNumber = 9;
  ::google::protobuf::uint32 key_entry_max_height() const;
  void set_key_entry_max_height(::google::protobuf::uint32 value);

  // optional uint32 format_version = 13 [default = 0];
  bool has_format_version() const;
  void clear_format_version();
  static const int kFormatVersionFieldNumber = 13;
  ::google::protobuf::uint32 format_version() const;
  void set_format_version(::google::protobuf::uint32 value);

  // optional uint32 base_table_tid = 18 [default = 0];
  bool has_base_table_tid() const;
  void clear_base_table_tid();
  static const int kBaseTableTidFieldNumber = 18;
  ::google::protobuf::uint32 base_table_tid() const;
  void set_base_table_tid(::google::protobuf::uint32 value);

  // optional .openmldb.api.TableMode mode = 6;
  bool has_mode() const;
  void clear_mode();
  static const int kModeFieldNumber = 6;
  ::openmldb::api::TableMode mode() const;
  void set_mode(::openmldb::api::TableMode value);

  // optional .openmldb.common.StorageMode storage_mode = 17 [default = kMemory];
  bool has_storage_mode() const;
  void clear_storage_mode();
  static const int kStorageModeFieldNumber = 17;
  ::openmldb::common::StorageMode storage_mode() const;
  void set_storage_mode(::openmldb::common::StorageMode value);

  // @@protoc_insertion_point(class_scope:openmldb.api.TableMeta)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_name();
  void clear_has_name();
  void set_has_pid();
  void clear_has_pid();
  void set_has_seg_cnt();
  void clear_has_seg_cnt();
  void set_has_mode();
  void clear_has_mode();
  void set_has_term();
  void clear_has_term();
  void set_has_compress_type();
  void clear_has_compress_type();
  void set_has_key_entry_max_height();
  void clear_has_key_entry_max_height();
  void set_has_format_version();
  void clear_has_format_version();
  void set_has_db();
  void clear_has_db();
  void set_has_storage_mode();
  void clear_has_storage_mode();
  void set_has_base_table_tid();
  void clear_has_base_table_tid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> replicas_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnDesc > column_desc_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnKey > column_key_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnDesc > added_column_desc_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::common::VersionPair > schema_versions_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::common::TablePartition > table_partition_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr db_;
  ::google::protobuf::int32 tid_;
  ::google::protobuf::int32 pid_;
  ::google::protobuf::int32 seg_cnt_;
  int compress_type_;
  ::google::protobuf::uint64 term_;
  ::google::protobuf::uint32 key_entry_max_height_;
  ::google::protobuf::uint32 format_version_;
  ::google::protobuf::uint32 base_table_tid_;
  int mode_;
  int storage_mode_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateTableRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.CreateTableRequest) */ {
 public:
  CreateTableRequest();
  virtual ~CreateTableRequest();

  CreateTableRequest(const CreateTableRequest& from);

  inline CreateTableRequest& operator=(const CreateTableRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateTableRequest(CreateTableRequest&& from) noexcept
    : CreateTableRequest() {
    *this = ::std::move(from);
  }

  inline CreateTableRequest& operator=(CreateTableRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateTableRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateTableRequest* internal_default_instance() {
    return reinterpret_cast<const CreateTableRequest*>(
               &_CreateTableRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(CreateTableRequest* other);
  friend void swap(CreateTableRequest& a, CreateTableRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateTableRequest* New() const final {
    return CreateMaybeMessage<CreateTableRequest>(NULL);
  }

  CreateTableRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateTableRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateTableRequest& from);
  void MergeFrom(const CreateTableRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateTableRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .openmldb.api.TableMeta table_meta = 1;
  bool has_table_meta() const;
  void clear_table_meta();
  static const int kTableMetaFieldNumber = 1;
  private:
  const ::openmldb::api::TableMeta& _internal_table_meta() const;
  public:
  const ::openmldb::api::TableMeta& table_meta() const;
  ::openmldb::api::TableMeta* release_table_meta();
  ::openmldb::api::TableMeta* mutable_table_meta();
  void set_allocated_table_meta(::openmldb::api::TableMeta* table_meta);

  // @@protoc_insertion_point(class_scope:openmldb.api.CreateTableRequest)
 private:
  void set_has_table_meta();
  void clear_has_table_meta();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::openmldb::api::TableMeta* table_meta_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateTableMetaForAddFieldRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.UpdateTableMetaForAddFieldRequest) */ {
 public:
  UpdateTableMetaForAddFieldRequest();
  virtual ~UpdateTableMetaForAddFieldRequest();

  UpdateTableMetaForAddFieldRequest(const UpdateTableMetaForAddFieldRequest& from);

  inline UpdateTableMetaForAddFieldRequest& operator=(const UpdateTableMetaForAddFieldRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateTableMetaForAddFieldRequest(UpdateTableMetaForAddFieldRequest&& from) noexcept
    : UpdateTableMetaForAddFieldRequest() {
    *this = ::std::move(from);
  }

  inline UpdateTableMetaForAddFieldRequest& operator=(UpdateTableMetaForAddFieldRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateTableMetaForAddFieldRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateTableMetaForAddFieldRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateTableMetaForAddFieldRequest*>(
               &_UpdateTableMetaForAddFieldRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(UpdateTableMetaForAddFieldRequest* other);
  friend void swap(UpdateTableMetaForAddFieldRequest& a, UpdateTableMetaForAddFieldRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateTableMetaForAddFieldRequest* New() const final {
    return CreateMaybeMessage<UpdateTableMetaForAddFieldRequest>(NULL);
  }

  UpdateTableMetaForAddFieldRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateTableMetaForAddFieldRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateTableMetaForAddFieldRequest& from);
  void MergeFrom(const UpdateTableMetaForAddFieldRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateTableMetaForAddFieldRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .openmldb.common.ColumnDesc column_descs = 3;
  int column_descs_size() const;
  void clear_column_descs();
  static const int kColumnDescsFieldNumber = 3;
  ::openmldb::common::ColumnDesc* mutable_column_descs(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnDesc >*
      mutable_column_descs();
  const ::openmldb::common::ColumnDesc& column_descs(int index) const;
  ::openmldb::common::ColumnDesc* add_column_descs();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnDesc >&
      column_descs() const;

  // optional .openmldb.common.ColumnDesc column_desc = 2;
  bool has_column_desc() const;
  void clear_column_desc();
  static const int kColumnDescFieldNumber = 2;
  private:
  const ::openmldb::common::ColumnDesc& _internal_column_desc() const;
  public:
  const ::openmldb::common::ColumnDesc& column_desc() const;
  ::openmldb::common::ColumnDesc* release_column_desc();
  ::openmldb::common::ColumnDesc* mutable_column_desc();
  void set_allocated_column_desc(::openmldb::common::ColumnDesc* column_desc);

  // optional .openmldb.common.VersionPair version_pair = 4;
  bool has_version_pair() const;
  void clear_version_pair();
  static const int kVersionPairFieldNumber = 4;
  private:
  const ::openmldb::common::VersionPair& _internal_version_pair() const;
  public:
  const ::openmldb::common::VersionPair& version_pair() const;
  ::openmldb::common::VersionPair* release_version_pair();
  ::openmldb::common::VersionPair* mutable_version_pair();
  void set_allocated_version_pair(::openmldb::common::VersionPair* version_pair);

  // optional uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.UpdateTableMetaForAddFieldRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_column_desc();
  void clear_has_column_desc();
  void set_has_version_pair();
  void clear_has_version_pair();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnDesc > column_descs_;
  ::openmldb::common::ColumnDesc* column_desc_;
  ::openmldb::common::VersionPair* version_pair_;
  ::google::protobuf::uint32 tid_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateTableResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.CreateTableResponse) */ {
 public:
  CreateTableResponse();
  virtual ~CreateTableResponse();

  CreateTableResponse(const CreateTableResponse& from);

  inline CreateTableResponse& operator=(const CreateTableResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateTableResponse(CreateTableResponse&& from) noexcept
    : CreateTableResponse() {
    *this = ::std::move(from);
  }

  inline CreateTableResponse& operator=(CreateTableResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateTableResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateTableResponse* internal_default_instance() {
    return reinterpret_cast<const CreateTableResponse*>(
               &_CreateTableResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(CreateTableResponse* other);
  friend void swap(CreateTableResponse& a, CreateTableResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateTableResponse* New() const final {
    return CreateMaybeMessage<CreateTableResponse>(NULL);
  }

  CreateTableResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateTableResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateTableResponse& from);
  void MergeFrom(const CreateTableResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateTableResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.CreateTableResponse)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 code_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoadTableRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.LoadTableRequest) */ {
 public:
  LoadTableRequest();
  virtual ~LoadTableRequest();

  LoadTableRequest(const LoadTableRequest& from);

  inline LoadTableRequest& operator=(const LoadTableRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoadTableRequest(LoadTableRequest&& from) noexcept
    : LoadTableRequest() {
    *this = ::std::move(from);
  }

  inline LoadTableRequest& operator=(LoadTableRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadTableRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoadTableRequest* internal_default_instance() {
    return reinterpret_cast<const LoadTableRequest*>(
               &_LoadTableRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(LoadTableRequest* other);
  friend void swap(LoadTableRequest& a, LoadTableRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoadTableRequest* New() const final {
    return CreateMaybeMessage<LoadTableRequest>(NULL);
  }

  LoadTableRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoadTableRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoadTableRequest& from);
  void MergeFrom(const LoadTableRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoadTableRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .openmldb.api.TableMeta table_meta = 1;
  bool has_table_meta() const;
  void clear_table_meta();
  static const int kTableMetaFieldNumber = 1;
  private:
  const ::openmldb::api::TableMeta& _internal_table_meta() const;
  public:
  const ::openmldb::api::TableMeta& table_meta() const;
  ::openmldb::api::TableMeta* release_table_meta();
  ::openmldb::api::TableMeta* mutable_table_meta();
  void set_allocated_table_meta(::openmldb::api::TableMeta* table_meta);

  // optional .openmldb.api.TaskInfo task_info = 2;
  bool has_task_info() const;
  void clear_task_info();
  static const int kTaskInfoFieldNumber = 2;
  private:
  const ::openmldb::api::TaskInfo& _internal_task_info() const;
  public:
  const ::openmldb::api::TaskInfo& task_info() const;
  ::openmldb::api::TaskInfo* release_task_info();
  ::openmldb::api::TaskInfo* mutable_task_info();
  void set_allocated_task_info(::openmldb::api::TaskInfo* task_info);

  // @@protoc_insertion_point(class_scope:openmldb.api.LoadTableRequest)
 private:
  void set_has_table_meta();
  void clear_has_table_meta();
  void set_has_task_info();
  void clear_has_task_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::openmldb::api::TableMeta* table_meta_;
  ::openmldb::api::TaskInfo* task_info_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DropTableRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.DropTableRequest) */ {
 public:
  DropTableRequest();
  virtual ~DropTableRequest();

  DropTableRequest(const DropTableRequest& from);

  inline DropTableRequest& operator=(const DropTableRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DropTableRequest(DropTableRequest&& from) noexcept
    : DropTableRequest() {
    *this = ::std::move(from);
  }

  inline DropTableRequest& operator=(DropTableRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DropTableRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DropTableRequest* internal_default_instance() {
    return reinterpret_cast<const DropTableRequest*>(
               &_DropTableRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(DropTableRequest* other);
  friend void swap(DropTableRequest& a, DropTableRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DropTableRequest* New() const final {
    return CreateMaybeMessage<DropTableRequest>(NULL);
  }

  DropTableRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DropTableRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DropTableRequest& from);
  void MergeFrom(const DropTableRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DropTableRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .openmldb.api.TaskInfo task_info = 3;
  bool has_task_info() const;
  void clear_task_info();
  static const int kTaskInfoFieldNumber = 3;
  private:
  const ::openmldb::api::TaskInfo& _internal_task_info() const;
  public:
  const ::openmldb::api::TaskInfo& task_info() const;
  ::openmldb::api::TaskInfo* release_task_info();
  ::openmldb::api::TaskInfo* mutable_task_info();
  void set_allocated_task_info(::openmldb::api::TaskInfo* task_info);

  // optional int32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::int32 tid() const;
  void set_tid(::google::protobuf::int32 value);

  // optional int32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::int32 pid() const;
  void set_pid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.DropTableRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_task_info();
  void clear_has_task_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::openmldb::api::TaskInfo* task_info_;
  ::google::protobuf::int32 tid_;
  ::google::protobuf::int32 pid_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DropTableResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.DropTableResponse) */ {
 public:
  DropTableResponse();
  virtual ~DropTableResponse();

  DropTableResponse(const DropTableResponse& from);

  inline DropTableResponse& operator=(const DropTableResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DropTableResponse(DropTableResponse&& from) noexcept
    : DropTableResponse() {
    *this = ::std::move(from);
  }

  inline DropTableResponse& operator=(DropTableResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DropTableResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DropTableResponse* internal_default_instance() {
    return reinterpret_cast<const DropTableResponse*>(
               &_DropTableResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(DropTableResponse* other);
  friend void swap(DropTableResponse& a, DropTableResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DropTableResponse* New() const final {
    return CreateMaybeMessage<DropTableResponse>(NULL);
  }

  DropTableResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DropTableResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DropTableResponse& from);
  void MergeFrom(const DropTableResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DropTableResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.DropTableResponse)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 code_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetTableSchemaRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.GetTableSchemaRequest) */ {
 public:
  GetTableSchemaRequest();
  virtual ~GetTableSchemaRequest();

  GetTableSchemaRequest(const GetTableSchemaRequest& from);

  inline GetTableSchemaRequest& operator=(const GetTableSchemaRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetTableSchemaRequest(GetTableSchemaRequest&& from) noexcept
    : GetTableSchemaRequest() {
    *this = ::std::move(from);
  }

  inline GetTableSchemaRequest& operator=(GetTableSchemaRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTableSchemaRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetTableSchemaRequest* internal_default_instance() {
    return reinterpret_cast<const GetTableSchemaRequest*>(
               &_GetTableSchemaRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(GetTableSchemaRequest* other);
  friend void swap(GetTableSchemaRequest& a, GetTableSchemaRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetTableSchemaRequest* New() const final {
    return CreateMaybeMessage<GetTableSchemaRequest>(NULL);
  }

  GetTableSchemaRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetTableSchemaRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetTableSchemaRequest& from);
  void MergeFrom(const GetTableSchemaRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetTableSchemaRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::int32 tid() const;
  void set_tid(::google::protobuf::int32 value);

  // optional int32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::int32 pid() const;
  void set_pid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.GetTableSchemaRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 tid_;
  ::google::protobuf::int32 pid_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetExpireRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.SetExpireRequest) */ {
 public:
  SetExpireRequest();
  virtual ~SetExpireRequest();

  SetExpireRequest(const SetExpireRequest& from);

  inline SetExpireRequest& operator=(const SetExpireRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetExpireRequest(SetExpireRequest&& from) noexcept
    : SetExpireRequest() {
    *this = ::std::move(from);
  }

  inline SetExpireRequest& operator=(SetExpireRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetExpireRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetExpireRequest* internal_default_instance() {
    return reinterpret_cast<const SetExpireRequest*>(
               &_SetExpireRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(SetExpireRequest* other);
  friend void swap(SetExpireRequest& a, SetExpireRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetExpireRequest* New() const final {
    return CreateMaybeMessage<SetExpireRequest>(NULL);
  }

  SetExpireRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetExpireRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetExpireRequest& from);
  void MergeFrom(const SetExpireRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetExpireRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::int32 tid() const;
  void set_tid(::google::protobuf::int32 value);

  // optional int32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::int32 pid() const;
  void set_pid(::google::protobuf::int32 value);

  // optional bool is_expire = 3;
  bool has_is_expire() const;
  void clear_is_expire();
  static const int kIsExpireFieldNumber = 3;
  bool is_expire() const;
  void set_is_expire(bool value);

  // @@protoc_insertion_point(class_scope:openmldb.api.SetExpireRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_is_expire();
  void clear_has_is_expire();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 tid_;
  ::google::protobuf::int32 pid_;
  bool is_expire_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetTableSchemaResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.GetTableSchemaResponse) */ {
 public:
  GetTableSchemaResponse();
  virtual ~GetTableSchemaResponse();

  GetTableSchemaResponse(const GetTableSchemaResponse& from);

  inline GetTableSchemaResponse& operator=(const GetTableSchemaResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetTableSchemaResponse(GetTableSchemaResponse&& from) noexcept
    : GetTableSchemaResponse() {
    *this = ::std::move(from);
  }

  inline GetTableSchemaResponse& operator=(GetTableSchemaResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTableSchemaResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetTableSchemaResponse* internal_default_instance() {
    return reinterpret_cast<const GetTableSchemaResponse*>(
               &_GetTableSchemaResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(GetTableSchemaResponse* other);
  friend void swap(GetTableSchemaResponse& a, GetTableSchemaResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetTableSchemaResponse* New() const final {
    return CreateMaybeMessage<GetTableSchemaResponse>(NULL);
  }

  GetTableSchemaResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetTableSchemaResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetTableSchemaResponse& from);
  void MergeFrom(const GetTableSchemaResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetTableSchemaResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional .openmldb.api.TableMeta table_meta = 3;
  bool has_table_meta() const;
  void clear_table_meta();
  static const int kTableMetaFieldNumber = 3;
  private:
  const ::openmldb::api::TableMeta& _internal_table_meta() const;
  public:
  const ::openmldb::api::TableMeta& table_meta() const;
  ::openmldb::api::TableMeta* release_table_meta();
  ::openmldb::api::TableMeta* mutable_table_meta();
  void set_allocated_table_meta(::openmldb::api::TableMeta* table_meta);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.GetTableSchemaResponse)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();
  void set_has_table_meta();
  void clear_has_table_meta();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::openmldb::api::TableMeta* table_meta_;
  ::google::protobuf::int32 code_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateTTLRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.UpdateTTLRequest) */ {
 public:
  UpdateTTLRequest();
  virtual ~UpdateTTLRequest();

  UpdateTTLRequest(const UpdateTTLRequest& from);

  inline UpdateTTLRequest& operator=(const UpdateTTLRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateTTLRequest(UpdateTTLRequest&& from) noexcept
    : UpdateTTLRequest() {
    *this = ::std::move(from);
  }

  inline UpdateTTLRequest& operator=(UpdateTTLRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateTTLRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateTTLRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateTTLRequest*>(
               &_UpdateTTLRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(UpdateTTLRequest* other);
  friend void swap(UpdateTTLRequest& a, UpdateTTLRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateTTLRequest* New() const final {
    return CreateMaybeMessage<UpdateTTLRequest>(NULL);
  }

  UpdateTTLRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateTTLRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateTTLRequest& from);
  void MergeFrom(const UpdateTTLRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateTTLRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string index_name = 5;
  bool has_index_name() const;
  void clear_index_name();
  static const int kIndexNameFieldNumber = 5;
  const ::std::string& index_name() const;
  void set_index_name(const ::std::string& value);
  #if LANG_CXX11
  void set_index_name(::std::string&& value);
  #endif
  void set_index_name(const char* value);
  void set_index_name(const char* value, size_t size);
  ::std::string* mutable_index_name();
  ::std::string* release_index_name();
  void set_allocated_index_name(::std::string* index_name);

  // optional .openmldb.common.TTLSt ttl = 3;
  bool has_ttl() const;
  void clear_ttl();
  static const int kTtlFieldNumber = 3;
  private:
  const ::openmldb::common::TTLSt& _internal_ttl() const;
  public:
  const ::openmldb::common::TTLSt& ttl() const;
  ::openmldb::common::TTLSt* release_ttl();
  ::openmldb::common::TTLSt* mutable_ttl();
  void set_allocated_ttl(::openmldb::common::TTLSt* ttl);

  // optional int32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::int32 tid() const;
  void set_tid(::google::protobuf::int32 value);

  // optional int32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::int32 pid() const;
  void set_pid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.UpdateTTLRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_ttl();
  void clear_has_ttl();
  void set_has_index_name();
  void clear_has_index_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr index_name_;
  ::openmldb::common::TTLSt* ttl_;
  ::google::protobuf::int32 tid_;
  ::google::protobuf::int32 pid_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateTTLResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.UpdateTTLResponse) */ {
 public:
  UpdateTTLResponse();
  virtual ~UpdateTTLResponse();

  UpdateTTLResponse(const UpdateTTLResponse& from);

  inline UpdateTTLResponse& operator=(const UpdateTTLResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateTTLResponse(UpdateTTLResponse&& from) noexcept
    : UpdateTTLResponse() {
    *this = ::std::move(from);
  }

  inline UpdateTTLResponse& operator=(UpdateTTLResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateTTLResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateTTLResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateTTLResponse*>(
               &_UpdateTTLResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(UpdateTTLResponse* other);
  friend void swap(UpdateTTLResponse& a, UpdateTTLResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateTTLResponse* New() const final {
    return CreateMaybeMessage<UpdateTTLResponse>(NULL);
  }

  UpdateTTLResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateTTLResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateTTLResponse& from);
  void MergeFrom(const UpdateTTLResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateTTLResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.UpdateTTLResponse)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 code_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LogEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.LogEntry) */ {
 public:
  LogEntry();
  virtual ~LogEntry();

  LogEntry(const LogEntry& from);

  inline LogEntry& operator=(const LogEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LogEntry(LogEntry&& from) noexcept
    : LogEntry() {
    *this = ::std::move(from);
  }

  inline LogEntry& operator=(LogEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogEntry* internal_default_instance() {
    return reinterpret_cast<const LogEntry*>(
               &_LogEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(LogEntry* other);
  friend void swap(LogEntry& a, LogEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LogEntry* New() const final {
    return CreateMaybeMessage<LogEntry>(NULL);
  }

  LogEntry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LogEntry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LogEntry& from);
  void MergeFrom(const LogEntry& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .openmldb.api.Dimension dimensions = 6;
  int dimensions_size() const;
  void clear_dimensions();
  static const int kDimensionsFieldNumber = 6;
  ::openmldb::api::Dimension* mutable_dimensions(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::Dimension >*
      mutable_dimensions();
  const ::openmldb::api::Dimension& dimensions(int index) const;
  ::openmldb::api::Dimension* add_dimensions();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::api::Dimension >&
      dimensions() const;

  // repeated .openmldb.api.TSDimension ts_dimensions = 8 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR int ts_dimensions_size() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_ts_dimensions();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kTsDimensionsFieldNumber = 8;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::openmldb::api::TSDimension* mutable_ts_dimensions(int index);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::protobuf::RepeatedPtrField< ::openmldb::api::TSDimension >*
      mutable_ts_dimensions();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::openmldb::api::TSDimension& ts_dimensions(int index) const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::openmldb::api::TSDimension* add_ts_dimensions();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::google::protobuf::RepeatedPtrField< ::openmldb::api::TSDimension >&
      ts_dimensions() const;

  // optional string pk = 3;
  bool has_pk() const;
  void clear_pk();
  static const int kPkFieldNumber = 3;
  const ::std::string& pk() const;
  void set_pk(const ::std::string& value);
  #if LANG_CXX11
  void set_pk(::std::string&& value);
  #endif
  void set_pk(const char* value);
  void set_pk(const char* value, size_t size);
  ::std::string* mutable_pk();
  ::std::string* release_pk();
  void set_allocated_pk(::std::string* pk);

  // optional bytes value = 4;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 4;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional uint64 term = 1;
  bool has_term() const;
  void clear_term();
  static const int kTermFieldNumber = 1;
  ::google::protobuf::uint64 term() const;
  void set_term(::google::protobuf::uint64 value);

  // optional uint64 log_index = 2;
  bool has_log_index() const;
  void clear_log_index();
  static const int kLogIndexFieldNumber = 2;
  ::google::protobuf::uint64 log_index() const;
  void set_log_index(::google::protobuf::uint64 value);

  // optional uint64 ts = 5;
  bool has_ts() const;
  void clear_ts();
  static const int kTsFieldNumber = 5;
  ::google::protobuf::uint64 ts() const;
  void set_ts(::google::protobuf::uint64 value);

  // optional .openmldb.api.MethodType method_type = 7;
  bool has_method_type() const;
  void clear_method_type();
  static const int kMethodTypeFieldNumber = 7;
  ::openmldb::api::MethodType method_type() const;
  void set_method_type(::openmldb::api::MethodType value);

  // @@protoc_insertion_point(class_scope:openmldb.api.LogEntry)
 private:
  void set_has_term();
  void clear_has_term();
  void set_has_log_index();
  void clear_has_log_index();
  void set_has_pk();
  void clear_has_pk();
  void set_has_value();
  void clear_has_value();
  void set_has_ts();
  void clear_has_ts();
  void set_has_method_type();
  void clear_has_method_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::Dimension > dimensions_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::TSDimension > ts_dimensions_;
  ::google::protobuf::internal::ArenaStringPtr pk_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint64 term_;
  ::google::protobuf::uint64 log_index_;
  ::google::protobuf::uint64 ts_;
  int method_type_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AppendEntriesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.AppendEntriesRequest) */ {
 public:
  AppendEntriesRequest();
  virtual ~AppendEntriesRequest();

  AppendEntriesRequest(const AppendEntriesRequest& from);

  inline AppendEntriesRequest& operator=(const AppendEntriesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AppendEntriesRequest(AppendEntriesRequest&& from) noexcept
    : AppendEntriesRequest() {
    *this = ::std::move(from);
  }

  inline AppendEntriesRequest& operator=(AppendEntriesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppendEntriesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppendEntriesRequest* internal_default_instance() {
    return reinterpret_cast<const AppendEntriesRequest*>(
               &_AppendEntriesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(AppendEntriesRequest* other);
  friend void swap(AppendEntriesRequest& a, AppendEntriesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AppendEntriesRequest* New() const final {
    return CreateMaybeMessage<AppendEntriesRequest>(NULL);
  }

  AppendEntriesRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AppendEntriesRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AppendEntriesRequest& from);
  void MergeFrom(const AppendEntriesRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppendEntriesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .openmldb.api.LogEntry entries = 4;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 4;
  ::openmldb::api::LogEntry* mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::LogEntry >*
      mutable_entries();
  const ::openmldb::api::LogEntry& entries(int index) const;
  ::openmldb::api::LogEntry* add_entries();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::api::LogEntry >&
      entries() const;

  // optional uint64 pre_log_index = 2;
  bool has_pre_log_index() const;
  void clear_pre_log_index();
  static const int kPreLogIndexFieldNumber = 2;
  ::google::protobuf::uint64 pre_log_index() const;
  void set_pre_log_index(::google::protobuf::uint64 value);

  // optional uint32 tid = 6;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 6;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // optional uint32 pid = 7;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 7;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // optional uint64 term = 8;
  bool has_term() const;
  void clear_term();
  static const int kTermFieldNumber = 8;
  ::google::protobuf::uint64 term() const;
  void set_term(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.AppendEntriesRequest)
 private:
  void set_has_pre_log_index();
  void clear_has_pre_log_index();
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_term();
  void clear_has_term();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::LogEntry > entries_;
  ::google::protobuf::uint64 pre_log_index_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  ::google::protobuf::uint64 term_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AppendEntriesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.AppendEntriesResponse) */ {
 public:
  AppendEntriesResponse();
  virtual ~AppendEntriesResponse();

  AppendEntriesResponse(const AppendEntriesResponse& from);

  inline AppendEntriesResponse& operator=(const AppendEntriesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AppendEntriesResponse(AppendEntriesResponse&& from) noexcept
    : AppendEntriesResponse() {
    *this = ::std::move(from);
  }

  inline AppendEntriesResponse& operator=(AppendEntriesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppendEntriesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppendEntriesResponse* internal_default_instance() {
    return reinterpret_cast<const AppendEntriesResponse*>(
               &_AppendEntriesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(AppendEntriesResponse* other);
  friend void swap(AppendEntriesResponse& a, AppendEntriesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AppendEntriesResponse* New() const final {
    return CreateMaybeMessage<AppendEntriesResponse>(NULL);
  }

  AppendEntriesResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AppendEntriesResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AppendEntriesResponse& from);
  void MergeFrom(const AppendEntriesResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppendEntriesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 3;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 3;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional uint64 log_offset = 1;
  bool has_log_offset() const;
  void clear_log_offset();
  static const int kLogOffsetFieldNumber = 1;
  ::google::protobuf::uint64 log_offset() const;
  void set_log_offset(::google::protobuf::uint64 value);

  // optional uint64 term = 4;
  bool has_term() const;
  void clear_term();
  static const int kTermFieldNumber = 4;
  ::google::protobuf::uint64 term() const;
  void set_term(::google::protobuf::uint64 value);

  // optional int32 code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.AppendEntriesResponse)
 private:
  void set_has_log_offset();
  void clear_has_log_offset();
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();
  void set_has_term();
  void clear_has_term();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::uint64 log_offset_;
  ::google::protobuf::uint64 term_;
  ::google::protobuf::int32 code_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChangeRoleRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.ChangeRoleRequest) */ {
 public:
  ChangeRoleRequest();
  virtual ~ChangeRoleRequest();

  ChangeRoleRequest(const ChangeRoleRequest& from);

  inline ChangeRoleRequest& operator=(const ChangeRoleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChangeRoleRequest(ChangeRoleRequest&& from) noexcept
    : ChangeRoleRequest() {
    *this = ::std::move(from);
  }

  inline ChangeRoleRequest& operator=(ChangeRoleRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeRoleRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChangeRoleRequest* internal_default_instance() {
    return reinterpret_cast<const ChangeRoleRequest*>(
               &_ChangeRoleRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(ChangeRoleRequest* other);
  friend void swap(ChangeRoleRequest& a, ChangeRoleRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChangeRoleRequest* New() const final {
    return CreateMaybeMessage<ChangeRoleRequest>(NULL);
  }

  ChangeRoleRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ChangeRoleRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ChangeRoleRequest& from);
  void MergeFrom(const ChangeRoleRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChangeRoleRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string replicas = 5;
  int replicas_size() const;
  void clear_replicas();
  static const int kReplicasFieldNumber = 5;
  const ::std::string& replicas(int index) const;
  ::std::string* mutable_replicas(int index);
  void set_replicas(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_replicas(int index, ::std::string&& value);
  #endif
  void set_replicas(int index, const char* value);
  void set_replicas(int index, const char* value, size_t size);
  ::std::string* add_replicas();
  void add_replicas(const ::std::string& value);
  #if LANG_CXX11
  void add_replicas(::std::string&& value);
  #endif
  void add_replicas(const char* value);
  void add_replicas(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& replicas() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_replicas();

  // repeated .openmldb.common.EndpointAndTid endpoint_tid = 6;
  int endpoint_tid_size() const;
  void clear_endpoint_tid();
  static const int kEndpointTidFieldNumber = 6;
  ::openmldb::common::EndpointAndTid* mutable_endpoint_tid(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::common::EndpointAndTid >*
      mutable_endpoint_tid();
  const ::openmldb::common::EndpointAndTid& endpoint_tid(int index) const;
  ::openmldb::common::EndpointAndTid* add_endpoint_tid();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::common::EndpointAndTid >&
      endpoint_tid() const;

  // optional uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // optional uint32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // optional uint64 term = 3;
  bool has_term() const;
  void clear_term();
  static const int kTermFieldNumber = 3;
  ::google::protobuf::uint64 term() const;
  void set_term(::google::protobuf::uint64 value);

  // optional .openmldb.api.TableMode mode = 4;
  bool has_mode() const;
  void clear_mode();
  static const int kModeFieldNumber = 4;
  ::openmldb::api::TableMode mode() const;
  void set_mode(::openmldb::api::TableMode value);

  // @@protoc_insertion_point(class_scope:openmldb.api.ChangeRoleRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_term();
  void clear_has_term();
  void set_has_mode();
  void clear_has_mode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> replicas_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::common::EndpointAndTid > endpoint_tid_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  ::google::protobuf::uint64 term_;
  int mode_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendSnapshotRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.SendSnapshotRequest) */ {
 public:
  SendSnapshotRequest();
  virtual ~SendSnapshotRequest();

  SendSnapshotRequest(const SendSnapshotRequest& from);

  inline SendSnapshotRequest& operator=(const SendSnapshotRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendSnapshotRequest(SendSnapshotRequest&& from) noexcept
    : SendSnapshotRequest() {
    *this = ::std::move(from);
  }

  inline SendSnapshotRequest& operator=(SendSnapshotRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendSnapshotRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendSnapshotRequest* internal_default_instance() {
    return reinterpret_cast<const SendSnapshotRequest*>(
               &_SendSnapshotRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  void Swap(SendSnapshotRequest* other);
  friend void swap(SendSnapshotRequest& a, SendSnapshotRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendSnapshotRequest* New() const final {
    return CreateMaybeMessage<SendSnapshotRequest>(NULL);
  }

  SendSnapshotRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendSnapshotRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendSnapshotRequest& from);
  void MergeFrom(const SendSnapshotRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendSnapshotRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string endpoint = 3;
  bool has_endpoint() const;
  void clear_endpoint();
  static const int kEndpointFieldNumber = 3;
  const ::std::string& endpoint() const;
  void set_endpoint(const ::std::string& value);
  #if LANG_CXX11
  void set_endpoint(::std::string&& value);
  #endif
  void set_endpoint(const char* value);
  void set_endpoint(const char* value, size_t size);
  ::std::string* mutable_endpoint();
  ::std::string* release_endpoint();
  void set_allocated_endpoint(::std::string* endpoint);

  // optional .openmldb.api.TaskInfo task_info = 4;
  bool has_task_info() const;
  void clear_task_info();
  static const int kTaskInfoFieldNumber = 4;
  private:
  const ::openmldb::api::TaskInfo& _internal_task_info() const;
  public:
  const ::openmldb::api::TaskInfo& task_info() const;
  ::openmldb::api::TaskInfo* release_task_info();
  ::openmldb::api::TaskInfo* mutable_task_info();
  void set_allocated_task_info(::openmldb::api::TaskInfo* task_info);

  // required uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // required uint32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // optional uint32 remote_tid = 5;
  bool has_remote_tid() const;
  void clear_remote_tid();
  static const int kRemoteTidFieldNumber = 5;
  ::google::protobuf::uint32 remote_tid() const;
  void set_remote_tid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.SendSnapshotRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_endpoint();
  void clear_has_endpoint();
  void set_has_task_info();
  void clear_has_task_info();
  void set_has_remote_tid();
  void clear_has_remote_tid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr endpoint_;
  ::openmldb::api::TaskInfo* task_info_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  ::google::protobuf::uint32 remote_tid_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendIndexDataRequest_EndpointPair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.SendIndexDataRequest.EndpointPair) */ {
 public:
  SendIndexDataRequest_EndpointPair();
  virtual ~SendIndexDataRequest_EndpointPair();

  SendIndexDataRequest_EndpointPair(const SendIndexDataRequest_EndpointPair& from);

  inline SendIndexDataRequest_EndpointPair& operator=(const SendIndexDataRequest_EndpointPair& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendIndexDataRequest_EndpointPair(SendIndexDataRequest_EndpointPair&& from) noexcept
    : SendIndexDataRequest_EndpointPair() {
    *this = ::std::move(from);
  }

  inline SendIndexDataRequest_EndpointPair& operator=(SendIndexDataRequest_EndpointPair&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendIndexDataRequest_EndpointPair& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendIndexDataRequest_EndpointPair* internal_default_instance() {
    return reinterpret_cast<const SendIndexDataRequest_EndpointPair*>(
               &_SendIndexDataRequest_EndpointPair_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  void Swap(SendIndexDataRequest_EndpointPair* other);
  friend void swap(SendIndexDataRequest_EndpointPair& a, SendIndexDataRequest_EndpointPair& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendIndexDataRequest_EndpointPair* New() const final {
    return CreateMaybeMessage<SendIndexDataRequest_EndpointPair>(NULL);
  }

  SendIndexDataRequest_EndpointPair* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendIndexDataRequest_EndpointPair>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendIndexDataRequest_EndpointPair& from);
  void MergeFrom(const SendIndexDataRequest_EndpointPair& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendIndexDataRequest_EndpointPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string endpoint = 2;
  bool has_endpoint() const;
  void clear_endpoint();
  static const int kEndpointFieldNumber = 2;
  const ::std::string& endpoint() const;
  void set_endpoint(const ::std::string& value);
  #if LANG_CXX11
  void set_endpoint(::std::string&& value);
  #endif
  void set_endpoint(const char* value);
  void set_endpoint(const char* value, size_t size);
  ::std::string* mutable_endpoint();
  ::std::string* release_endpoint();
  void set_allocated_endpoint(::std::string* endpoint);

  // optional uint32 pid = 1;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 1;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.SendIndexDataRequest.EndpointPair)
 private:
  void set_has_pid();
  void clear_has_pid();
  void set_has_endpoint();
  void clear_has_endpoint();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr endpoint_;
  ::google::protobuf::uint32 pid_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendIndexDataRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.SendIndexDataRequest) */ {
 public:
  SendIndexDataRequest();
  virtual ~SendIndexDataRequest();

  SendIndexDataRequest(const SendIndexDataRequest& from);

  inline SendIndexDataRequest& operator=(const SendIndexDataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendIndexDataRequest(SendIndexDataRequest&& from) noexcept
    : SendIndexDataRequest() {
    *this = ::std::move(from);
  }

  inline SendIndexDataRequest& operator=(SendIndexDataRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendIndexDataRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendIndexDataRequest* internal_default_instance() {
    return reinterpret_cast<const SendIndexDataRequest*>(
               &_SendIndexDataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  void Swap(SendIndexDataRequest* other);
  friend void swap(SendIndexDataRequest& a, SendIndexDataRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendIndexDataRequest* New() const final {
    return CreateMaybeMessage<SendIndexDataRequest>(NULL);
  }

  SendIndexDataRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendIndexDataRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendIndexDataRequest& from);
  void MergeFrom(const SendIndexDataRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendIndexDataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SendIndexDataRequest_EndpointPair EndpointPair;

  // accessors -------------------------------------------------------

  // repeated .openmldb.api.SendIndexDataRequest.EndpointPair pairs = 3;
  int pairs_size() const;
  void clear_pairs();
  static const int kPairsFieldNumber = 3;
  ::openmldb::api::SendIndexDataRequest_EndpointPair* mutable_pairs(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::SendIndexDataRequest_EndpointPair >*
      mutable_pairs();
  const ::openmldb::api::SendIndexDataRequest_EndpointPair& pairs(int index) const;
  ::openmldb::api::SendIndexDataRequest_EndpointPair* add_pairs();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::api::SendIndexDataRequest_EndpointPair >&
      pairs() const;

  // optional .openmldb.api.TaskInfo task_info = 4;
  bool has_task_info() const;
  void clear_task_info();
  static const int kTaskInfoFieldNumber = 4;
  private:
  const ::openmldb::api::TaskInfo& _internal_task_info() const;
  public:
  const ::openmldb::api::TaskInfo& task_info() const;
  ::openmldb::api::TaskInfo* release_task_info();
  ::openmldb::api::TaskInfo* mutable_task_info();
  void set_allocated_task_info(::openmldb::api::TaskInfo* task_info);

  // optional uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // optional uint32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.SendIndexDataRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_task_info();
  void clear_has_task_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::SendIndexDataRequest_EndpointPair > pairs_;
  ::openmldb::api::TaskInfo* task_info_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendDataRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.SendDataRequest) */ {
 public:
  SendDataRequest();
  virtual ~SendDataRequest();

  SendDataRequest(const SendDataRequest& from);

  inline SendDataRequest& operator=(const SendDataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendDataRequest(SendDataRequest&& from) noexcept
    : SendDataRequest() {
    *this = ::std::move(from);
  }

  inline SendDataRequest& operator=(SendDataRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendDataRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendDataRequest* internal_default_instance() {
    return reinterpret_cast<const SendDataRequest*>(
               &_SendDataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  void Swap(SendDataRequest* other);
  friend void swap(SendDataRequest& a, SendDataRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendDataRequest* New() const final {
    return CreateMaybeMessage<SendDataRequest>(NULL);
  }

  SendDataRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendDataRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendDataRequest& from);
  void MergeFrom(const SendDataRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendDataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string file_name = 3;
  bool has_file_name() const;
  void clear_file_name();
  static const int kFileNameFieldNumber = 3;
  const ::std::string& file_name() const;
  void set_file_name(const ::std::string& value);
  #if LANG_CXX11
  void set_file_name(::std::string&& value);
  #endif
  void set_file_name(const char* value);
  void set_file_name(const char* value, size_t size);
  ::std::string* mutable_file_name();
  ::std::string* release_file_name();
  void set_allocated_file_name(::std::string* file_name);

  // optional string dir_name = 7;
  bool has_dir_name() const;
  void clear_dir_name();
  static const int kDirNameFieldNumber = 7;
  const ::std::string& dir_name() const;
  void set_dir_name(const ::std::string& value);
  #if LANG_CXX11
  void set_dir_name(::std::string&& value);
  #endif
  void set_dir_name(const char* value);
  void set_dir_name(const char* value, size_t size);
  ::std::string* mutable_dir_name();
  ::std::string* release_dir_name();
  void set_allocated_dir_name(::std::string* dir_name);

  // required uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // required uint32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // required uint64 block_id = 4;
  bool has_block_id() const;
  void clear_block_id();
  static const int kBlockIdFieldNumber = 4;
  ::google::protobuf::uint64 block_id() const;
  void set_block_id(::google::protobuf::uint64 value);

  // optional uint32 block_size = 5;
  bool has_block_size() const;
  void clear_block_size();
  static const int kBlockSizeFieldNumber = 5;
  ::google::protobuf::uint32 block_size() const;
  void set_block_size(::google::protobuf::uint32 value);

  // optional bool eof = 6 [default = false];
  bool has_eof() const;
  void clear_eof();
  static const int kEofFieldNumber = 6;
  bool eof() const;
  void set_eof(bool value);

  // optional .openmldb.common.StorageMode storage_mode = 8 [default = kMemory];
  bool has_storage_mode() const;
  void clear_storage_mode();
  static const int kStorageModeFieldNumber = 8;
  ::openmldb::common::StorageMode storage_mode() const;
  void set_storage_mode(::openmldb::common::StorageMode value);

  // @@protoc_insertion_point(class_scope:openmldb.api.SendDataRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_file_name();
  void clear_has_file_name();
  void set_has_block_id();
  void clear_has_block_id();
  void set_has_block_size();
  void clear_has_block_size();
  void set_has_eof();
  void clear_has_eof();
  void set_has_dir_name();
  void clear_has_dir_name();
  void set_has_storage_mode();
  void clear_has_storage_mode();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr file_name_;
  ::google::protobuf::internal::ArenaStringPtr dir_name_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  ::google::protobuf::uint64 block_id_;
  ::google::protobuf::uint32 block_size_;
  bool eof_;
  int storage_mode_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChangeRoleResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.ChangeRoleResponse) */ {
 public:
  ChangeRoleResponse();
  virtual ~ChangeRoleResponse();

  ChangeRoleResponse(const ChangeRoleResponse& from);

  inline ChangeRoleResponse& operator=(const ChangeRoleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChangeRoleResponse(ChangeRoleResponse&& from) noexcept
    : ChangeRoleResponse() {
    *this = ::std::move(from);
  }

  inline ChangeRoleResponse& operator=(ChangeRoleResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeRoleResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChangeRoleResponse* internal_default_instance() {
    return reinterpret_cast<const ChangeRoleResponse*>(
               &_ChangeRoleResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  void Swap(ChangeRoleResponse* other);
  friend void swap(ChangeRoleResponse& a, ChangeRoleResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChangeRoleResponse* New() const final {
    return CreateMaybeMessage<ChangeRoleResponse>(NULL);
  }

  ChangeRoleResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ChangeRoleResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ChangeRoleResponse& from);
  void MergeFrom(const ChangeRoleResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChangeRoleResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.ChangeRoleResponse)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 code_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetTableStatusRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.GetTableStatusRequest) */ {
 public:
  GetTableStatusRequest();
  virtual ~GetTableStatusRequest();

  GetTableStatusRequest(const GetTableStatusRequest& from);

  inline GetTableStatusRequest& operator=(const GetTableStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetTableStatusRequest(GetTableStatusRequest&& from) noexcept
    : GetTableStatusRequest() {
    *this = ::std::move(from);
  }

  inline GetTableStatusRequest& operator=(GetTableStatusRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTableStatusRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetTableStatusRequest* internal_default_instance() {
    return reinterpret_cast<const GetTableStatusRequest*>(
               &_GetTableStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  void Swap(GetTableStatusRequest* other);
  friend void swap(GetTableStatusRequest& a, GetTableStatusRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetTableStatusRequest* New() const final {
    return CreateMaybeMessage<GetTableStatusRequest>(NULL);
  }

  GetTableStatusRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetTableStatusRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetTableStatusRequest& from);
  void MergeFrom(const GetTableStatusRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetTableStatusRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // optional uint32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // optional bool need_schema = 3 [default = false];
  bool has_need_schema() const;
  void clear_need_schema();
  static const int kNeedSchemaFieldNumber = 3;
  bool need_schema() const;
  void set_need_schema(bool value);

  // @@protoc_insertion_point(class_scope:openmldb.api.GetTableStatusRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_need_schema();
  void clear_has_need_schema();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  bool need_schema_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TsIdxStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.TsIdxStatus) */ {
 public:
  TsIdxStatus();
  virtual ~TsIdxStatus();

  TsIdxStatus(const TsIdxStatus& from);

  inline TsIdxStatus& operator=(const TsIdxStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TsIdxStatus(TsIdxStatus&& from) noexcept
    : TsIdxStatus() {
    *this = ::std::move(from);
  }

  inline TsIdxStatus& operator=(TsIdxStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TsIdxStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TsIdxStatus* internal_default_instance() {
    return reinterpret_cast<const TsIdxStatus*>(
               &_TsIdxStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  void Swap(TsIdxStatus* other);
  friend void swap(TsIdxStatus& a, TsIdxStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TsIdxStatus* New() const final {
    return CreateMaybeMessage<TsIdxStatus>(NULL);
  }

  TsIdxStatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TsIdxStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TsIdxStatus& from);
  void MergeFrom(const TsIdxStatus& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TsIdxStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 seg_cnts = 2;
  int seg_cnts_size() const;
  void clear_seg_cnts();
  static const int kSegCntsFieldNumber = 2;
  ::google::protobuf::uint64 seg_cnts(int index) const;
  void set_seg_cnts(int index, ::google::protobuf::uint64 value);
  void add_seg_cnts(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      seg_cnts() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_seg_cnts();

  // optional string idx_name = 1;
  bool has_idx_name() const;
  void clear_idx_name();
  static const int kIdxNameFieldNumber = 1;
  const ::std::string& idx_name() const;
  void set_idx_name(const ::std::string& value);
  #if LANG_CXX11
  void set_idx_name(::std::string&& value);
  #endif
  void set_idx_name(const char* value);
  void set_idx_name(const char* value, size_t size);
  ::std::string* mutable_idx_name();
  ::std::string* release_idx_name();
  void set_allocated_idx_name(::std::string* idx_name);

  // @@protoc_insertion_point(class_scope:openmldb.api.TsIdxStatus)
 private:
  void set_has_idx_name();
  void clear_has_idx_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > seg_cnts_;
  ::google::protobuf::internal::ArenaStringPtr idx_name_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TableStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.TableStatus) */ {
 public:
  TableStatus();
  virtual ~TableStatus();

  TableStatus(const TableStatus& from);

  inline TableStatus& operator=(const TableStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TableStatus(TableStatus&& from) noexcept
    : TableStatus() {
    *this = ::std::move(from);
  }

  inline TableStatus& operator=(TableStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TableStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TableStatus* internal_default_instance() {
    return reinterpret_cast<const TableStatus*>(
               &_TableStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  void Swap(TableStatus* other);
  friend void swap(TableStatus& a, TableStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TableStatus* New() const final {
    return CreateMaybeMessage<TableStatus>(NULL);
  }

  TableStatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TableStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TableStatus& from);
  void MergeFrom(const TableStatus& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TableStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .openmldb.api.TsIdxStatus ts_idx_status = 11;
  int ts_idx_status_size() const;
  void clear_ts_idx_status();
  static const int kTsIdxStatusFieldNumber = 11;
  ::openmldb::api::TsIdxStatus* mutable_ts_idx_status(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::TsIdxStatus >*
      mutable_ts_idx_status();
  const ::openmldb::api::TsIdxStatus& ts_idx_status(int index) const;
  ::openmldb::api::TsIdxStatus* add_ts_idx_status();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::api::TsIdxStatus >&
      ts_idx_status() const;

  // optional string name = 12;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 12;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // optional uint32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // optional uint64 offset = 3;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 3;
  ::google::protobuf::uint64 offset() const;
  void set_offset(::google::protobuf::uint64 value);

  // optional .openmldb.api.TableState state = 5;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 5;
  ::openmldb::api::TableState state() const;
  void set_state(::openmldb::api::TableState value);

  // optional bool is_expire = 7;
  bool has_is_expire() const;
  void clear_is_expire();
  static const int kIsExpireFieldNumber = 7;
  bool is_expire() const;
  void set_is_expire(bool value);

  // optional int64 time_offset = 8;
  bool has_time_offset() const;
  void clear_time_offset();
  static const int kTimeOffsetFieldNumber = 8;
  ::google::protobuf::int64 time_offset() const;
  void set_time_offset(::google::protobuf::int64 value);

  // optional uint64 record_cnt = 9;
  bool has_record_cnt() const;
  void clear_record_cnt();
  static const int kRecordCntFieldNumber = 9;
  ::google::protobuf::uint64 record_cnt() const;
  void set_record_cnt(::google::protobuf::uint64 value);

  // optional uint64 idx_cnt = 10;
  bool has_idx_cnt() const;
  void clear_idx_cnt();
  static const int kIdxCntFieldNumber = 10;
  ::google::protobuf::uint64 idx_cnt() const;
  void set_idx_cnt(::google::protobuf::uint64 value);

  // optional uint64 record_byte_size = 13;
  bool has_record_byte_size() const;
  void clear_record_byte_size();
  static const int kRecordByteSizeFieldNumber = 13;
  ::google::protobuf::uint64 record_byte_size() const;
  void set_record_byte_size(::google::protobuf::uint64 value);

  // optional uint64 record_idx_byte_size = 14;
  bool has_record_idx_byte_size() const;
  void clear_record_idx_byte_size();
  static const int kRecordIdxByteSizeFieldNumber = 14;
  ::google::protobuf::uint64 record_idx_byte_size() const;
  void set_record_idx_byte_size(::google::protobuf::uint64 value);

  // optional uint64 record_pk_cnt = 15;
  bool has_record_pk_cnt() const;
  void clear_record_pk_cnt();
  static const int kRecordPkCntFieldNumber = 15;
  ::google::protobuf::uint64 record_pk_cnt() const;
  void set_record_pk_cnt(::google::protobuf::uint64 value);

  // optional .openmldb.type.CompressType compress_type = 17;
  bool has_compress_type() const;
  void clear_compress_type();
  static const int kCompressTypeFieldNumber = 17;
  ::openmldb::type::CompressType compress_type() const;
  void set_compress_type(::openmldb::type::CompressType value);

  // optional uint32 skiplist_height = 18;
  bool has_skiplist_height() const;
  void clear_skiplist_height();
  static const int kSkiplistHeightFieldNumber = 18;
  ::google::protobuf::uint32 skiplist_height() const;
  void set_skiplist_height(::google::protobuf::uint32 value);

  // optional uint64 diskused = 19 [default = 0];
  bool has_diskused() const;
  void clear_diskused();
  static const int kDiskusedFieldNumber = 19;
  ::google::protobuf::uint64 diskused() const;
  void set_diskused(::google::protobuf::uint64 value);

  // optional .openmldb.api.TableMode mode = 4;
  bool has_mode() const;
  void clear_mode();
  static const int kModeFieldNumber = 4;
  ::openmldb::api::TableMode mode() const;
  void set_mode(::openmldb::api::TableMode value);

  // optional .openmldb.common.StorageMode storage_mode = 20 [default = kMemory];
  bool has_storage_mode() const;
  void clear_storage_mode();
  static const int kStorageModeFieldNumber = 20;
  ::openmldb::common::StorageMode storage_mode() const;
  void set_storage_mode(::openmldb::common::StorageMode value);

  // @@protoc_insertion_point(class_scope:openmldb.api.TableStatus)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_offset();
  void clear_has_offset();
  void set_has_mode();
  void clear_has_mode();
  void set_has_state();
  void clear_has_state();
  void set_has_is_expire();
  void clear_has_is_expire();
  void set_has_time_offset();
  void clear_has_time_offset();
  void set_has_record_cnt();
  void clear_has_record_cnt();
  void set_has_idx_cnt();
  void clear_has_idx_cnt();
  void set_has_name();
  void clear_has_name();
  void set_has_record_byte_size();
  void clear_has_record_byte_size();
  void set_has_record_idx_byte_size();
  void clear_has_record_idx_byte_size();
  void set_has_record_pk_cnt();
  void clear_has_record_pk_cnt();
  void set_has_compress_type();
  void clear_has_compress_type();
  void set_has_skiplist_height();
  void clear_has_skiplist_height();
  void set_has_diskused();
  void clear_has_diskused();
  void set_has_storage_mode();
  void clear_has_storage_mode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::TsIdxStatus > ts_idx_status_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  ::google::protobuf::uint64 offset_;
  int state_;
  bool is_expire_;
  ::google::protobuf::int64 time_offset_;
  ::google::protobuf::uint64 record_cnt_;
  ::google::protobuf::uint64 idx_cnt_;
  ::google::protobuf::uint64 record_byte_size_;
  ::google::protobuf::uint64 record_idx_byte_size_;
  ::google::protobuf::uint64 record_pk_cnt_;
  int compress_type_;
  ::google::protobuf::uint32 skiplist_height_;
  ::google::protobuf::uint64 diskused_;
  int mode_;
  int storage_mode_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetTableStatusResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.GetTableStatusResponse) */ {
 public:
  GetTableStatusResponse();
  virtual ~GetTableStatusResponse();

  GetTableStatusResponse(const GetTableStatusResponse& from);

  inline GetTableStatusResponse& operator=(const GetTableStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetTableStatusResponse(GetTableStatusResponse&& from) noexcept
    : GetTableStatusResponse() {
    *this = ::std::move(from);
  }

  inline GetTableStatusResponse& operator=(GetTableStatusResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTableStatusResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetTableStatusResponse* internal_default_instance() {
    return reinterpret_cast<const GetTableStatusResponse*>(
               &_GetTableStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  void Swap(GetTableStatusResponse* other);
  friend void swap(GetTableStatusResponse& a, GetTableStatusResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetTableStatusResponse* New() const final {
    return CreateMaybeMessage<GetTableStatusResponse>(NULL);
  }

  GetTableStatusResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetTableStatusResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetTableStatusResponse& from);
  void MergeFrom(const GetTableStatusResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetTableStatusResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .openmldb.api.TableStatus all_table_status = 1;
  int all_table_status_size() const;
  void clear_all_table_status();
  static const int kAllTableStatusFieldNumber = 1;
  ::openmldb::api::TableStatus* mutable_all_table_status(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::TableStatus >*
      mutable_all_table_status();
  const ::openmldb::api::TableStatus& all_table_status(int index) const;
  ::openmldb::api::TableStatus* add_all_table_status();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::api::TableStatus >&
      all_table_status() const;

  // optional string msg = 3;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 3;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional int32 code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.GetTableStatusResponse)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::TableStatus > all_table_status_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 code_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.GetRequest) */ {
 public:
  GetRequest();
  virtual ~GetRequest();

  GetRequest(const GetRequest& from);

  inline GetRequest& operator=(const GetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetRequest(GetRequest&& from) noexcept
    : GetRequest() {
    *this = ::std::move(from);
  }

  inline GetRequest& operator=(GetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetRequest* internal_default_instance() {
    return reinterpret_cast<const GetRequest*>(
               &_GetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  void Swap(GetRequest* other);
  friend void swap(GetRequest& a, GetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRequest* New() const final {
    return CreateMaybeMessage<GetRequest>(NULL);
  }

  GetRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetRequest& from);
  void MergeFrom(const GetRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 projection = 9;
  int projection_size() const;
  void clear_projection();
  static const int kProjectionFieldNumber = 9;
  ::google::protobuf::uint32 projection(int index) const;
  void set_projection(int index, ::google::protobuf::uint32 value);
  void add_projection(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      projection() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_projection();

  // repeated uint32 pid_group = 10;
  int pid_group_size() const;
  void clear_pid_group();
  static const int kPidGroupFieldNumber = 10;
  ::google::protobuf::uint32 pid_group(int index) const;
  void set_pid_group(int index, ::google::protobuf::uint32 value);
  void add_pid_group(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      pid_group() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_pid_group();

  // optional string key = 3;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 3;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string idx_name = 5;
  bool has_idx_name() const;
  void clear_idx_name();
  static const int kIdxNameFieldNumber = 5;
  const ::std::string& idx_name() const;
  void set_idx_name(const ::std::string& value);
  #if LANG_CXX11
  void set_idx_name(::std::string&& value);
  #endif
  void set_idx_name(const char* value);
  void set_idx_name(const char* value, size_t size);
  ::std::string* mutable_idx_name();
  ::std::string* release_idx_name();
  void set_allocated_idx_name(::std::string* idx_name);

  // optional uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // optional uint32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // optional uint64 ts = 4 [default = 0];
  bool has_ts() const;
  void clear_ts();
  static const int kTsFieldNumber = 4;
  ::google::protobuf::uint64 ts() const;
  void set_ts(::google::protobuf::uint64 value);

  // optional uint64 et = 7;
  bool has_et() const;
  void clear_et();
  static const int kEtFieldNumber = 7;
  ::google::protobuf::uint64 et() const;
  void set_et(::google::protobuf::uint64 value);

  // optional .openmldb.api.GetType type = 6 [default = kSubKeyEq];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 6;
  ::openmldb::api::GetType type() const;
  void set_type(::openmldb::api::GetType value);

  // optional .openmldb.api.GetType et_type = 8 [default = kSubKeyGe];
  bool has_et_type() const;
  void clear_et_type();
  static const int kEtTypeFieldNumber = 8;
  ::openmldb::api::GetType et_type() const;
  void set_et_type(::openmldb::api::GetType value);

  // @@protoc_insertion_point(class_scope:openmldb.api.GetRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_key();
  void clear_has_key();
  void set_has_ts();
  void clear_has_ts();
  void set_has_idx_name();
  void clear_has_idx_name();
  void set_has_type();
  void clear_has_type();
  void set_has_et();
  void clear_has_et();
  void set_has_et_type();
  void clear_has_et_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > projection_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > pid_group_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr idx_name_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  ::google::protobuf::uint64 ts_;
  ::google::protobuf::uint64 et_;
  int type_;
  int et_type_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.GetResponse) */ {
 public:
  GetResponse();
  virtual ~GetResponse();

  GetResponse(const GetResponse& from);

  inline GetResponse& operator=(const GetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetResponse(GetResponse&& from) noexcept
    : GetResponse() {
    *this = ::std::move(from);
  }

  inline GetResponse& operator=(GetResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetResponse* internal_default_instance() {
    return reinterpret_cast<const GetResponse*>(
               &_GetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  void Swap(GetResponse* other);
  friend void swap(GetResponse& a, GetResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetResponse* New() const final {
    return CreateMaybeMessage<GetResponse>(NULL);
  }

  GetResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetResponse& from);
  void MergeFrom(const GetResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional string key = 3;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 3;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional bytes value = 5;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 5;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional uint64 ts = 4;
  bool has_ts() const;
  void clear_ts();
  static const int kTsFieldNumber = 4;
  ::google::protobuf::uint64 ts() const;
  void set_ts(::google::protobuf::uint64 value);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.GetResponse)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();
  void set_has_key();
  void clear_has_key();
  void set_has_ts();
  void clear_has_ts();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint64 ts_;
  ::google::protobuf::int32 code_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CountRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.CountRequest) */ {
 public:
  CountRequest();
  virtual ~CountRequest();

  CountRequest(const CountRequest& from);

  inline CountRequest& operator=(const CountRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CountRequest(CountRequest&& from) noexcept
    : CountRequest() {
    *this = ::std::move(from);
  }

  inline CountRequest& operator=(CountRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CountRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CountRequest* internal_default_instance() {
    return reinterpret_cast<const CountRequest*>(
               &_CountRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  void Swap(CountRequest* other);
  friend void swap(CountRequest& a, CountRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CountRequest* New() const final {
    return CreateMaybeMessage<CountRequest>(NULL);
  }

  CountRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CountRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CountRequest& from);
  void MergeFrom(const CountRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CountRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string idx_name = 3;
  bool has_idx_name() const;
  void clear_idx_name();
  static const int kIdxNameFieldNumber = 3;
  const ::std::string& idx_name() const;
  void set_idx_name(const ::std::string& value);
  #if LANG_CXX11
  void set_idx_name(::std::string&& value);
  #endif
  void set_idx_name(const char* value);
  void set_idx_name(const char* value, size_t size);
  ::std::string* mutable_idx_name();
  ::std::string* release_idx_name();
  void set_allocated_idx_name(::std::string* idx_name);

  // optional string key = 4;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 4;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // optional uint32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // optional uint64 st = 7 [default = 0];
  bool has_st() const;
  void clear_st();
  static const int kStFieldNumber = 7;
  ::google::protobuf::uint64 st() const;
  void set_st(::google::protobuf::uint64 value);

  // optional uint64 et = 9 [default = 0];
  bool has_et() const;
  void clear_et();
  static const int kEtFieldNumber = 9;
  ::google::protobuf::uint64 et() const;
  void set_et(::google::protobuf::uint64 value);

  // optional bool filter_expired_data = 5 [default = false];
  bool has_filter_expired_data() const;
  void clear_filter_expired_data();
  static const int kFilterExpiredDataFieldNumber = 5;
  bool filter_expired_data() const;
  void set_filter_expired_data(bool value);

  // optional bool enable_remove_duplicated_record = 6 [default = false];
  bool has_enable_remove_duplicated_record() const;
  void clear_enable_remove_duplicated_record();
  static const int kEnableRemoveDuplicatedRecordFieldNumber = 6;
  bool enable_remove_duplicated_record() const;
  void set_enable_remove_duplicated_record(bool value);

  // optional .openmldb.api.GetType st_type = 8 [default = kSubKeyLe];
  bool has_st_type() const;
  void clear_st_type();
  static const int kStTypeFieldNumber = 8;
  ::openmldb::api::GetType st_type() const;
  void set_st_type(::openmldb::api::GetType value);

  // optional .openmldb.api.GetType et_type = 10 [default = kSubKeyGt];
  bool has_et_type() const;
  void clear_et_type();
  static const int kEtTypeFieldNumber = 10;
  ::openmldb::api::GetType et_type() const;
  void set_et_type(::openmldb::api::GetType value);

  // @@protoc_insertion_point(class_scope:openmldb.api.CountRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_idx_name();
  void clear_has_idx_name();
  void set_has_key();
  void clear_has_key();
  void set_has_filter_expired_data();
  void clear_has_filter_expired_data();
  void set_has_enable_remove_duplicated_record();
  void clear_has_enable_remove_duplicated_record();
  void set_has_st();
  void clear_has_st();
  void set_has_st_type();
  void clear_has_st_type();
  void set_has_et();
  void clear_has_et();
  void set_has_et_type();
  void clear_has_et_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr idx_name_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  ::google::protobuf::uint64 st_;
  ::google::protobuf::uint64 et_;
  bool filter_expired_data_;
  bool enable_remove_duplicated_record_;
  int st_type_;
  int et_type_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CountResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.CountResponse) */ {
 public:
  CountResponse();
  virtual ~CountResponse();

  CountResponse(const CountResponse& from);

  inline CountResponse& operator=(const CountResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CountResponse(CountResponse&& from) noexcept
    : CountResponse() {
    *this = ::std::move(from);
  }

  inline CountResponse& operator=(CountResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CountResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CountResponse* internal_default_instance() {
    return reinterpret_cast<const CountResponse*>(
               &_CountResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  void Swap(CountResponse* other);
  friend void swap(CountResponse& a, CountResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CountResponse* New() const final {
    return CreateMaybeMessage<CountResponse>(NULL);
  }

  CountResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CountResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CountResponse& from);
  void MergeFrom(const CountResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CountResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // optional uint32 count = 3;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.CountResponse)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();
  void set_has_count();
  void clear_has_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::uint32 count_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetTermPairRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.GetTermPairRequest) */ {
 public:
  GetTermPairRequest();
  virtual ~GetTermPairRequest();

  GetTermPairRequest(const GetTermPairRequest& from);

  inline GetTermPairRequest& operator=(const GetTermPairRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetTermPairRequest(GetTermPairRequest&& from) noexcept
    : GetTermPairRequest() {
    *this = ::std::move(from);
  }

  inline GetTermPairRequest& operator=(GetTermPairRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTermPairRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetTermPairRequest* internal_default_instance() {
    return reinterpret_cast<const GetTermPairRequest*>(
               &_GetTermPairRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  void Swap(GetTermPairRequest* other);
  friend void swap(GetTermPairRequest& a, GetTermPairRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetTermPairRequest* New() const final {
    return CreateMaybeMessage<GetTermPairRequest>(NULL);
  }

  GetTermPairRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetTermPairRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetTermPairRequest& from);
  void MergeFrom(const GetTermPairRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetTermPairRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // optional uint32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // optional .openmldb.common.StorageMode storage_mode = 3 [default = kMemory];
  bool has_storage_mode() const;
  void clear_storage_mode();
  static const int kStorageModeFieldNumber = 3;
  ::openmldb::common::StorageMode storage_mode() const;
  void set_storage_mode(::openmldb::common::StorageMode value);

  // @@protoc_insertion_point(class_scope:openmldb.api.GetTermPairRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_storage_mode();
  void clear_has_storage_mode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  int storage_mode_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetTermPairResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.GetTermPairResponse) */ {
 public:
  GetTermPairResponse();
  virtual ~GetTermPairResponse();

  GetTermPairResponse(const GetTermPairResponse& from);

  inline GetTermPairResponse& operator=(const GetTermPairResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetTermPairResponse(GetTermPairResponse&& from) noexcept
    : GetTermPairResponse() {
    *this = ::std::move(from);
  }

  inline GetTermPairResponse& operator=(GetTermPairResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTermPairResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetTermPairResponse* internal_default_instance() {
    return reinterpret_cast<const GetTermPairResponse*>(
               &_GetTermPairResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  void Swap(GetTermPairResponse* other);
  friend void swap(GetTermPairResponse& a, GetTermPairResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetTermPairResponse* New() const final {
    return CreateMaybeMessage<GetTermPairResponse>(NULL);
  }

  GetTermPairResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetTermPairResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetTermPairResponse& from);
  void MergeFrom(const GetTermPairResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetTermPairResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional uint64 term = 3;
  bool has_term() const;
  void clear_term();
  static const int kTermFieldNumber = 3;
  ::google::protobuf::uint64 term() const;
  void set_term(::google::protobuf::uint64 value);

  // optional uint64 offset = 4;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 4;
  ::google::protobuf::uint64 offset() const;
  void set_offset(::google::protobuf::uint64 value);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // optional bool has_table = 5;
  bool has_has_table() const;
  void clear_has_table();
  static const int kHasTableFieldNumber = 5;
  bool has_table() const;
  void set_has_table(bool value);

  // optional bool is_leader = 6;
  bool has_is_leader() const;
  void clear_is_leader();
  static const int kIsLeaderFieldNumber = 6;
  bool is_leader() const;
  void set_is_leader(bool value);

  // @@protoc_insertion_point(class_scope:openmldb.api.GetTermPairResponse)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();
  void set_has_term();
  void clear_has_term();
  void set_has_offset();
  void clear_has_offset();
  void set_has_has_table();
  void clear_has_has_table();
  void set_has_is_leader();
  void clear_has_is_leader();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::uint64 term_;
  ::google::protobuf::uint64 offset_;
  ::google::protobuf::int32 code_;
  bool has_table_;
  bool is_leader_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetManifestRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.GetManifestRequest) */ {
 public:
  GetManifestRequest();
  virtual ~GetManifestRequest();

  GetManifestRequest(const GetManifestRequest& from);

  inline GetManifestRequest& operator=(const GetManifestRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetManifestRequest(GetManifestRequest&& from) noexcept
    : GetManifestRequest() {
    *this = ::std::move(from);
  }

  inline GetManifestRequest& operator=(GetManifestRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetManifestRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetManifestRequest* internal_default_instance() {
    return reinterpret_cast<const GetManifestRequest*>(
               &_GetManifestRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  void Swap(GetManifestRequest* other);
  friend void swap(GetManifestRequest& a, GetManifestRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetManifestRequest* New() const final {
    return CreateMaybeMessage<GetManifestRequest>(NULL);
  }

  GetManifestRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetManifestRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetManifestRequest& from);
  void MergeFrom(const GetManifestRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetManifestRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // optional uint32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // optional .openmldb.common.StorageMode storage_mode = 3 [default = kMemory];
  bool has_storage_mode() const;
  void clear_storage_mode();
  static const int kStorageModeFieldNumber = 3;
  ::openmldb::common::StorageMode storage_mode() const;
  void set_storage_mode(::openmldb::common::StorageMode value);

  // @@protoc_insertion_point(class_scope:openmldb.api.GetManifestRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_storage_mode();
  void clear_has_storage_mode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  int storage_mode_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetManifestResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.GetManifestResponse) */ {
 public:
  GetManifestResponse();
  virtual ~GetManifestResponse();

  GetManifestResponse(const GetManifestResponse& from);

  inline GetManifestResponse& operator=(const GetManifestResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetManifestResponse(GetManifestResponse&& from) noexcept
    : GetManifestResponse() {
    *this = ::std::move(from);
  }

  inline GetManifestResponse& operator=(GetManifestResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetManifestResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetManifestResponse* internal_default_instance() {
    return reinterpret_cast<const GetManifestResponse*>(
               &_GetManifestResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  void Swap(GetManifestResponse* other);
  friend void swap(GetManifestResponse& a, GetManifestResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetManifestResponse* New() const final {
    return CreateMaybeMessage<GetManifestResponse>(NULL);
  }

  GetManifestResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetManifestResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetManifestResponse& from);
  void MergeFrom(const GetManifestResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetManifestResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional .openmldb.api.Manifest manifest = 3;
  bool has_manifest() const;
  void clear_manifest();
  static const int kManifestFieldNumber = 3;
  private:
  const ::openmldb::api::Manifest& _internal_manifest() const;
  public:
  const ::openmldb::api::Manifest& manifest() const;
  ::openmldb::api::Manifest* release_manifest();
  ::openmldb::api::Manifest* mutable_manifest();
  void set_allocated_manifest(::openmldb::api::Manifest* manifest);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.GetManifestResponse)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();
  void set_has_manifest();
  void clear_has_manifest();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::openmldb::api::Manifest* manifest_;
  ::google::protobuf::int32 code_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetTableFollowerRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.GetTableFollowerRequest) */ {
 public:
  GetTableFollowerRequest();
  virtual ~GetTableFollowerRequest();

  GetTableFollowerRequest(const GetTableFollowerRequest& from);

  inline GetTableFollowerRequest& operator=(const GetTableFollowerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetTableFollowerRequest(GetTableFollowerRequest&& from) noexcept
    : GetTableFollowerRequest() {
    *this = ::std::move(from);
  }

  inline GetTableFollowerRequest& operator=(GetTableFollowerRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTableFollowerRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetTableFollowerRequest* internal_default_instance() {
    return reinterpret_cast<const GetTableFollowerRequest*>(
               &_GetTableFollowerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  void Swap(GetTableFollowerRequest* other);
  friend void swap(GetTableFollowerRequest& a, GetTableFollowerRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetTableFollowerRequest* New() const final {
    return CreateMaybeMessage<GetTableFollowerRequest>(NULL);
  }

  GetTableFollowerRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetTableFollowerRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetTableFollowerRequest& from);
  void MergeFrom(const GetTableFollowerRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetTableFollowerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // optional uint32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.GetTableFollowerRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FollowerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.FollowerInfo) */ {
 public:
  FollowerInfo();
  virtual ~FollowerInfo();

  FollowerInfo(const FollowerInfo& from);

  inline FollowerInfo& operator=(const FollowerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FollowerInfo(FollowerInfo&& from) noexcept
    : FollowerInfo() {
    *this = ::std::move(from);
  }

  inline FollowerInfo& operator=(FollowerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FollowerInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FollowerInfo* internal_default_instance() {
    return reinterpret_cast<const FollowerInfo*>(
               &_FollowerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  void Swap(FollowerInfo* other);
  friend void swap(FollowerInfo& a, FollowerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FollowerInfo* New() const final {
    return CreateMaybeMessage<FollowerInfo>(NULL);
  }

  FollowerInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FollowerInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FollowerInfo& from);
  void MergeFrom(const FollowerInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FollowerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string endpoint = 1;
  bool has_endpoint() const;
  void clear_endpoint();
  static const int kEndpointFieldNumber = 1;
  const ::std::string& endpoint() const;
  void set_endpoint(const ::std::string& value);
  #if LANG_CXX11
  void set_endpoint(::std::string&& value);
  #endif
  void set_endpoint(const char* value);
  void set_endpoint(const char* value, size_t size);
  ::std::string* mutable_endpoint();
  ::std::string* release_endpoint();
  void set_allocated_endpoint(::std::string* endpoint);

  // optional uint64 offset = 2;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 2;
  ::google::protobuf::uint64 offset() const;
  void set_offset(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.FollowerInfo)
 private:
  void set_has_endpoint();
  void clear_has_endpoint();
  void set_has_offset();
  void clear_has_offset();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr endpoint_;
  ::google::protobuf::uint64 offset_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetTableFollowerResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.GetTableFollowerResponse) */ {
 public:
  GetTableFollowerResponse();
  virtual ~GetTableFollowerResponse();

  GetTableFollowerResponse(const GetTableFollowerResponse& from);

  inline GetTableFollowerResponse& operator=(const GetTableFollowerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetTableFollowerResponse(GetTableFollowerResponse&& from) noexcept
    : GetTableFollowerResponse() {
    *this = ::std::move(from);
  }

  inline GetTableFollowerResponse& operator=(GetTableFollowerResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTableFollowerResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetTableFollowerResponse* internal_default_instance() {
    return reinterpret_cast<const GetTableFollowerResponse*>(
               &_GetTableFollowerResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  void Swap(GetTableFollowerResponse* other);
  friend void swap(GetTableFollowerResponse& a, GetTableFollowerResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetTableFollowerResponse* New() const final {
    return CreateMaybeMessage<GetTableFollowerResponse>(NULL);
  }

  GetTableFollowerResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetTableFollowerResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetTableFollowerResponse& from);
  void MergeFrom(const GetTableFollowerResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetTableFollowerResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .openmldb.api.FollowerInfo follower_info = 4;
  int follower_info_size() const;
  void clear_follower_info();
  static const int kFollowerInfoFieldNumber = 4;
  ::openmldb::api::FollowerInfo* mutable_follower_info(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::FollowerInfo >*
      mutable_follower_info();
  const ::openmldb::api::FollowerInfo& follower_info(int index) const;
  ::openmldb::api::FollowerInfo* add_follower_info();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::api::FollowerInfo >&
      follower_info() const;

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional uint64 offset = 3;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 3;
  ::google::protobuf::uint64 offset() const;
  void set_offset(::google::protobuf::uint64 value);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.GetTableFollowerResponse)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();
  void set_has_offset();
  void clear_has_offset();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::FollowerInfo > follower_info_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::uint64 offset_;
  ::google::protobuf::int32 code_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckFileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.CheckFileRequest) */ {
 public:
  CheckFileRequest();
  virtual ~CheckFileRequest();

  CheckFileRequest(const CheckFileRequest& from);

  inline CheckFileRequest& operator=(const CheckFileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckFileRequest(CheckFileRequest&& from) noexcept
    : CheckFileRequest() {
    *this = ::std::move(from);
  }

  inline CheckFileRequest& operator=(CheckFileRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckFileRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CheckFileRequest* internal_default_instance() {
    return reinterpret_cast<const CheckFileRequest*>(
               &_CheckFileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  void Swap(CheckFileRequest* other);
  friend void swap(CheckFileRequest& a, CheckFileRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckFileRequest* New() const final {
    return CreateMaybeMessage<CheckFileRequest>(NULL);
  }

  CheckFileRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CheckFileRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CheckFileRequest& from);
  void MergeFrom(const CheckFileRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CheckFileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string file = 3;
  bool has_file() const;
  void clear_file();
  static const int kFileFieldNumber = 3;
  const ::std::string& file() const;
  void set_file(const ::std::string& value);
  #if LANG_CXX11
  void set_file(::std::string&& value);
  #endif
  void set_file(const char* value);
  void set_file(const char* value, size_t size);
  ::std::string* mutable_file();
  ::std::string* release_file();
  void set_allocated_file(::std::string* file);

  // optional string dir_name = 5;
  bool has_dir_name() const;
  void clear_dir_name();
  static const int kDirNameFieldNumber = 5;
  const ::std::string& dir_name() const;
  void set_dir_name(const ::std::string& value);
  #if LANG_CXX11
  void set_dir_name(::std::string&& value);
  #endif
  void set_dir_name(const char* value);
  void set_dir_name(const char* value, size_t size);
  ::std::string* mutable_dir_name();
  ::std::string* release_dir_name();
  void set_allocated_dir_name(::std::string* dir_name);

  // optional uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // optional uint32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // optional uint64 size = 4;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 4;
  ::google::protobuf::uint64 size() const;
  void set_size(::google::protobuf::uint64 value);

  // optional .openmldb.common.StorageMode storage_mode = 6 [default = kMemory];
  bool has_storage_mode() const;
  void clear_storage_mode();
  static const int kStorageModeFieldNumber = 6;
  ::openmldb::common::StorageMode storage_mode() const;
  void set_storage_mode(::openmldb::common::StorageMode value);

  // @@protoc_insertion_point(class_scope:openmldb.api.CheckFileRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_file();
  void clear_has_file();
  void set_has_size();
  void clear_has_size();
  void set_has_dir_name();
  void clear_has_dir_name();
  void set_has_storage_mode();
  void clear_has_storage_mode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr file_;
  ::google::protobuf::internal::ArenaStringPtr dir_name_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  ::google::protobuf::uint64 size_;
  int storage_mode_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddIndexRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.AddIndexRequest) */ {
 public:
  AddIndexRequest();
  virtual ~AddIndexRequest();

  AddIndexRequest(const AddIndexRequest& from);

  inline AddIndexRequest& operator=(const AddIndexRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddIndexRequest(AddIndexRequest&& from) noexcept
    : AddIndexRequest() {
    *this = ::std::move(from);
  }

  inline AddIndexRequest& operator=(AddIndexRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddIndexRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddIndexRequest* internal_default_instance() {
    return reinterpret_cast<const AddIndexRequest*>(
               &_AddIndexRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  void Swap(AddIndexRequest* other);
  friend void swap(AddIndexRequest& a, AddIndexRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddIndexRequest* New() const final {
    return CreateMaybeMessage<AddIndexRequest>(NULL);
  }

  AddIndexRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AddIndexRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AddIndexRequest& from);
  void MergeFrom(const AddIndexRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddIndexRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .openmldb.common.ColumnKey column_keys = 4;
  int column_keys_size() const;
  void clear_column_keys();
  static const int kColumnKeysFieldNumber = 4;
  ::openmldb::common::ColumnKey* mutable_column_keys(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnKey >*
      mutable_column_keys();
  const ::openmldb::common::ColumnKey& column_keys(int index) const;
  ::openmldb::common::ColumnKey* add_column_keys();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnKey >&
      column_keys() const;

  // optional .openmldb.common.ColumnKey column_key = 3;
  bool has_column_key() const;
  void clear_column_key();
  static const int kColumnKeyFieldNumber = 3;
  private:
  const ::openmldb::common::ColumnKey& _internal_column_key() const;
  public:
  const ::openmldb::common::ColumnKey& column_key() const;
  ::openmldb::common::ColumnKey* release_column_key();
  ::openmldb::common::ColumnKey* mutable_column_key();
  void set_allocated_column_key(::openmldb::common::ColumnKey* column_key);

  // optional uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // optional uint32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.AddIndexRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_column_key();
  void clear_has_column_key();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnKey > column_keys_;
  ::openmldb::common::ColumnKey* column_key_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetModeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.SetModeRequest) */ {
 public:
  SetModeRequest();
  virtual ~SetModeRequest();

  SetModeRequest(const SetModeRequest& from);

  inline SetModeRequest& operator=(const SetModeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetModeRequest(SetModeRequest&& from) noexcept
    : SetModeRequest() {
    *this = ::std::move(from);
  }

  inline SetModeRequest& operator=(SetModeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetModeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetModeRequest* internal_default_instance() {
    return reinterpret_cast<const SetModeRequest*>(
               &_SetModeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  void Swap(SetModeRequest* other);
  friend void swap(SetModeRequest& a, SetModeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetModeRequest* New() const final {
    return CreateMaybeMessage<SetModeRequest>(NULL);
  }

  SetModeRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetModeRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetModeRequest& from);
  void MergeFrom(const SetModeRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetModeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool follower = 1;
  bool has_follower() const;
  void clear_follower();
  static const int kFollowerFieldNumber = 1;
  bool follower() const;
  void set_follower(bool value);

  // @@protoc_insertion_point(class_scope:openmldb.api.SetModeRequest)
 private:
  void set_has_follower();
  void clear_has_follower();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool follower_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EmptyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.EmptyRequest) */ {
 public:
  EmptyRequest();
  virtual ~EmptyRequest();

  EmptyRequest(const EmptyRequest& from);

  inline EmptyRequest& operator=(const EmptyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EmptyRequest(EmptyRequest&& from) noexcept
    : EmptyRequest() {
    *this = ::std::move(from);
  }

  inline EmptyRequest& operator=(EmptyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EmptyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EmptyRequest* internal_default_instance() {
    return reinterpret_cast<const EmptyRequest*>(
               &_EmptyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  void Swap(EmptyRequest* other);
  friend void swap(EmptyRequest& a, EmptyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EmptyRequest* New() const final {
    return CreateMaybeMessage<EmptyRequest>(NULL);
  }

  EmptyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EmptyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EmptyRequest& from);
  void MergeFrom(const EmptyRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EmptyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openmldb.api.EmptyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConnectZKRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.ConnectZKRequest) */ {
 public:
  ConnectZKRequest();
  virtual ~ConnectZKRequest();

  ConnectZKRequest(const ConnectZKRequest& from);

  inline ConnectZKRequest& operator=(const ConnectZKRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConnectZKRequest(ConnectZKRequest&& from) noexcept
    : ConnectZKRequest() {
    *this = ::std::move(from);
  }

  inline ConnectZKRequest& operator=(ConnectZKRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnectZKRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConnectZKRequest* internal_default_instance() {
    return reinterpret_cast<const ConnectZKRequest*>(
               &_ConnectZKRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  void Swap(ConnectZKRequest* other);
  friend void swap(ConnectZKRequest& a, ConnectZKRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConnectZKRequest* New() const final {
    return CreateMaybeMessage<ConnectZKRequest>(NULL);
  }

  ConnectZKRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConnectZKRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConnectZKRequest& from);
  void MergeFrom(const ConnectZKRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConnectZKRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openmldb.api.ConnectZKRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DisConnectZKRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.DisConnectZKRequest) */ {
 public:
  DisConnectZKRequest();
  virtual ~DisConnectZKRequest();

  DisConnectZKRequest(const DisConnectZKRequest& from);

  inline DisConnectZKRequest& operator=(const DisConnectZKRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DisConnectZKRequest(DisConnectZKRequest&& from) noexcept
    : DisConnectZKRequest() {
    *this = ::std::move(from);
  }

  inline DisConnectZKRequest& operator=(DisConnectZKRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DisConnectZKRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DisConnectZKRequest* internal_default_instance() {
    return reinterpret_cast<const DisConnectZKRequest*>(
               &_DisConnectZKRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  void Swap(DisConnectZKRequest* other);
  friend void swap(DisConnectZKRequest& a, DisConnectZKRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DisConnectZKRequest* New() const final {
    return CreateMaybeMessage<DisConnectZKRequest>(NULL);
  }

  DisConnectZKRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DisConnectZKRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DisConnectZKRequest& from);
  void MergeFrom(const DisConnectZKRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DisConnectZKRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openmldb.api.DisConnectZKRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HttpRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.HttpRequest) */ {
 public:
  HttpRequest();
  virtual ~HttpRequest();

  HttpRequest(const HttpRequest& from);

  inline HttpRequest& operator=(const HttpRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HttpRequest(HttpRequest&& from) noexcept
    : HttpRequest() {
    *this = ::std::move(from);
  }

  inline HttpRequest& operator=(HttpRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HttpRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HttpRequest* internal_default_instance() {
    return reinterpret_cast<const HttpRequest*>(
               &_HttpRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  void Swap(HttpRequest* other);
  friend void swap(HttpRequest& a, HttpRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HttpRequest* New() const final {
    return CreateMaybeMessage<HttpRequest>(NULL);
  }

  HttpRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HttpRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HttpRequest& from);
  void MergeFrom(const HttpRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HttpRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openmldb.api.HttpRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HttpResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.HttpResponse) */ {
 public:
  HttpResponse();
  virtual ~HttpResponse();

  HttpResponse(const HttpResponse& from);

  inline HttpResponse& operator=(const HttpResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HttpResponse(HttpResponse&& from) noexcept
    : HttpResponse() {
    *this = ::std::move(from);
  }

  inline HttpResponse& operator=(HttpResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HttpResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HttpResponse* internal_default_instance() {
    return reinterpret_cast<const HttpResponse*>(
               &_HttpResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  void Swap(HttpResponse* other);
  friend void swap(HttpResponse& a, HttpResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HttpResponse* New() const final {
    return CreateMaybeMessage<HttpResponse>(NULL);
  }

  HttpResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HttpResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HttpResponse& from);
  void MergeFrom(const HttpResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HttpResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openmldb.api.HttpResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteIndexRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.DeleteIndexRequest) */ {
 public:
  DeleteIndexRequest();
  virtual ~DeleteIndexRequest();

  DeleteIndexRequest(const DeleteIndexRequest& from);

  inline DeleteIndexRequest& operator=(const DeleteIndexRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteIndexRequest(DeleteIndexRequest&& from) noexcept
    : DeleteIndexRequest() {
    *this = ::std::move(from);
  }

  inline DeleteIndexRequest& operator=(DeleteIndexRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteIndexRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteIndexRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteIndexRequest*>(
               &_DeleteIndexRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  void Swap(DeleteIndexRequest* other);
  friend void swap(DeleteIndexRequest& a, DeleteIndexRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteIndexRequest* New() const final {
    return CreateMaybeMessage<DeleteIndexRequest>(NULL);
  }

  DeleteIndexRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteIndexRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteIndexRequest& from);
  void MergeFrom(const DeleteIndexRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteIndexRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string idx_name = 3;
  bool has_idx_name() const;
  void clear_idx_name();
  static const int kIdxNameFieldNumber = 3;
  const ::std::string& idx_name() const;
  void set_idx_name(const ::std::string& value);
  #if LANG_CXX11
  void set_idx_name(::std::string&& value);
  #endif
  void set_idx_name(const char* value);
  void set_idx_name(const char* value, size_t size);
  ::std::string* mutable_idx_name();
  ::std::string* release_idx_name();
  void set_allocated_idx_name(::std::string* idx_name);

  // optional uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // optional uint32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.DeleteIndexRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_idx_name();
  void clear_has_idx_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr idx_name_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DumpIndexDataRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.DumpIndexDataRequest) */ {
 public:
  DumpIndexDataRequest();
  virtual ~DumpIndexDataRequest();

  DumpIndexDataRequest(const DumpIndexDataRequest& from);

  inline DumpIndexDataRequest& operator=(const DumpIndexDataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DumpIndexDataRequest(DumpIndexDataRequest&& from) noexcept
    : DumpIndexDataRequest() {
    *this = ::std::move(from);
  }

  inline DumpIndexDataRequest& operator=(DumpIndexDataRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DumpIndexDataRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DumpIndexDataRequest* internal_default_instance() {
    return reinterpret_cast<const DumpIndexDataRequest*>(
               &_DumpIndexDataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  void Swap(DumpIndexDataRequest* other);
  friend void swap(DumpIndexDataRequest& a, DumpIndexDataRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DumpIndexDataRequest* New() const final {
    return CreateMaybeMessage<DumpIndexDataRequest>(NULL);
  }

  DumpIndexDataRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DumpIndexDataRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DumpIndexDataRequest& from);
  void MergeFrom(const DumpIndexDataRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DumpIndexDataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .openmldb.common.ColumnKey column_key = 5;
  bool has_column_key() const;
  void clear_column_key();
  static const int kColumnKeyFieldNumber = 5;
  private:
  const ::openmldb::common::ColumnKey& _internal_column_key() const;
  public:
  const ::openmldb::common::ColumnKey& column_key() const;
  ::openmldb::common::ColumnKey* release_column_key();
  ::openmldb::common::ColumnKey* mutable_column_key();
  void set_allocated_column_key(::openmldb::common::ColumnKey* column_key);

  // optional .openmldb.api.TaskInfo task_info = 6;
  bool has_task_info() const;
  void clear_task_info();
  static const int kTaskInfoFieldNumber = 6;
  private:
  const ::openmldb::api::TaskInfo& _internal_task_info() const;
  public:
  const ::openmldb::api::TaskInfo& task_info() const;
  ::openmldb::api::TaskInfo* release_task_info();
  ::openmldb::api::TaskInfo* mutable_task_info();
  void set_allocated_task_info(::openmldb::api::TaskInfo* task_info);

  // optional uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // optional uint32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // optional uint32 partition_num = 3;
  bool has_partition_num() const;
  void clear_partition_num();
  static const int kPartitionNumFieldNumber = 3;
  ::google::protobuf::uint32 partition_num() const;
  void set_partition_num(::google::protobuf::uint32 value);

  // optional uint32 idx = 4;
  bool has_idx() const;
  void clear_idx();
  static const int kIdxFieldNumber = 4;
  ::google::protobuf::uint32 idx() const;
  void set_idx(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.DumpIndexDataRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_partition_num();
  void clear_has_partition_num();
  void set_has_idx();
  void clear_has_idx();
  void set_has_column_key();
  void clear_has_column_key();
  void set_has_task_info();
  void clear_has_task_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::openmldb::common::ColumnKey* column_key_;
  ::openmldb::api::TaskInfo* task_info_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  ::google::protobuf::uint32 partition_num_;
  ::google::protobuf::uint32 idx_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoadIndexDataRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.LoadIndexDataRequest) */ {
 public:
  LoadIndexDataRequest();
  virtual ~LoadIndexDataRequest();

  LoadIndexDataRequest(const LoadIndexDataRequest& from);

  inline LoadIndexDataRequest& operator=(const LoadIndexDataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoadIndexDataRequest(LoadIndexDataRequest&& from) noexcept
    : LoadIndexDataRequest() {
    *this = ::std::move(from);
  }

  inline LoadIndexDataRequest& operator=(LoadIndexDataRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadIndexDataRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoadIndexDataRequest* internal_default_instance() {
    return reinterpret_cast<const LoadIndexDataRequest*>(
               &_LoadIndexDataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  void Swap(LoadIndexDataRequest* other);
  friend void swap(LoadIndexDataRequest& a, LoadIndexDataRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoadIndexDataRequest* New() const final {
    return CreateMaybeMessage<LoadIndexDataRequest>(NULL);
  }

  LoadIndexDataRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoadIndexDataRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoadIndexDataRequest& from);
  void MergeFrom(const LoadIndexDataRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoadIndexDataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .openmldb.api.TaskInfo task_info = 4;
  bool has_task_info() const;
  void clear_task_info();
  static const int kTaskInfoFieldNumber = 4;
  private:
  const ::openmldb::api::TaskInfo& _internal_task_info() const;
  public:
  const ::openmldb::api::TaskInfo& task_info() const;
  ::openmldb::api::TaskInfo* release_task_info();
  ::openmldb::api::TaskInfo* mutable_task_info();
  void set_allocated_task_info(::openmldb::api::TaskInfo* task_info);

  // optional uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // optional uint32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // optional uint32 partition_num = 3;
  bool has_partition_num() const;
  void clear_partition_num();
  static const int kPartitionNumFieldNumber = 3;
  ::google::protobuf::uint32 partition_num() const;
  void set_partition_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.LoadIndexDataRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_partition_num();
  void clear_has_partition_num();
  void set_has_task_info();
  void clear_has_task_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::openmldb::api::TaskInfo* task_info_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  ::google::protobuf::uint32 partition_num_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExtractMultiIndexDataRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.ExtractMultiIndexDataRequest) */ {
 public:
  ExtractMultiIndexDataRequest();
  virtual ~ExtractMultiIndexDataRequest();

  ExtractMultiIndexDataRequest(const ExtractMultiIndexDataRequest& from);

  inline ExtractMultiIndexDataRequest& operator=(const ExtractMultiIndexDataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExtractMultiIndexDataRequest(ExtractMultiIndexDataRequest&& from) noexcept
    : ExtractMultiIndexDataRequest() {
    *this = ::std::move(from);
  }

  inline ExtractMultiIndexDataRequest& operator=(ExtractMultiIndexDataRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExtractMultiIndexDataRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExtractMultiIndexDataRequest* internal_default_instance() {
    return reinterpret_cast<const ExtractMultiIndexDataRequest*>(
               &_ExtractMultiIndexDataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  void Swap(ExtractMultiIndexDataRequest* other);
  friend void swap(ExtractMultiIndexDataRequest& a, ExtractMultiIndexDataRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExtractMultiIndexDataRequest* New() const final {
    return CreateMaybeMessage<ExtractMultiIndexDataRequest>(NULL);
  }

  ExtractMultiIndexDataRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExtractMultiIndexDataRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExtractMultiIndexDataRequest& from);
  void MergeFrom(const ExtractMultiIndexDataRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExtractMultiIndexDataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .openmldb.common.ColumnKey column_key = 4;
  int column_key_size() const;
  void clear_column_key();
  static const int kColumnKeyFieldNumber = 4;
  ::openmldb::common::ColumnKey* mutable_column_key(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnKey >*
      mutable_column_key();
  const ::openmldb::common::ColumnKey& column_key(int index) const;
  ::openmldb::common::ColumnKey* add_column_key();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnKey >&
      column_key() const;

  // optional uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // optional uint32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // optional uint32 partition_num = 3;
  bool has_partition_num() const;
  void clear_partition_num();
  static const int kPartitionNumFieldNumber = 3;
  ::google::protobuf::uint32 partition_num() const;
  void set_partition_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.ExtractMultiIndexDataRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_partition_num();
  void clear_has_partition_num();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnKey > column_key_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  ::google::protobuf::uint32 partition_num_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExtractIndexDataRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.ExtractIndexDataRequest) */ {
 public:
  ExtractIndexDataRequest();
  virtual ~ExtractIndexDataRequest();

  ExtractIndexDataRequest(const ExtractIndexDataRequest& from);

  inline ExtractIndexDataRequest& operator=(const ExtractIndexDataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExtractIndexDataRequest(ExtractIndexDataRequest&& from) noexcept
    : ExtractIndexDataRequest() {
    *this = ::std::move(from);
  }

  inline ExtractIndexDataRequest& operator=(ExtractIndexDataRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExtractIndexDataRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExtractIndexDataRequest* internal_default_instance() {
    return reinterpret_cast<const ExtractIndexDataRequest*>(
               &_ExtractIndexDataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  void Swap(ExtractIndexDataRequest* other);
  friend void swap(ExtractIndexDataRequest& a, ExtractIndexDataRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExtractIndexDataRequest* New() const final {
    return CreateMaybeMessage<ExtractIndexDataRequest>(NULL);
  }

  ExtractIndexDataRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExtractIndexDataRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExtractIndexDataRequest& from);
  void MergeFrom(const ExtractIndexDataRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExtractIndexDataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .openmldb.common.ColumnKey column_key = 5;
  bool has_column_key() const;
  void clear_column_key();
  static const int kColumnKeyFieldNumber = 5;
  private:
  const ::openmldb::common::ColumnKey& _internal_column_key() const;
  public:
  const ::openmldb::common::ColumnKey& column_key() const;
  ::openmldb::common::ColumnKey* release_column_key();
  ::openmldb::common::ColumnKey* mutable_column_key();
  void set_allocated_column_key(::openmldb::common::ColumnKey* column_key);

  // optional .openmldb.api.TaskInfo task_info = 6;
  bool has_task_info() const;
  void clear_task_info();
  static const int kTaskInfoFieldNumber = 6;
  private:
  const ::openmldb::api::TaskInfo& _internal_task_info() const;
  public:
  const ::openmldb::api::TaskInfo& task_info() const;
  ::openmldb::api::TaskInfo* release_task_info();
  ::openmldb::api::TaskInfo* mutable_task_info();
  void set_allocated_task_info(::openmldb::api::TaskInfo* task_info);

  // optional uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // optional uint32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // optional uint32 partition_num = 3;
  bool has_partition_num() const;
  void clear_partition_num();
  static const int kPartitionNumFieldNumber = 3;
  ::google::protobuf::uint32 partition_num() const;
  void set_partition_num(::google::protobuf::uint32 value);

  // optional uint32 idx = 4;
  bool has_idx() const;
  void clear_idx();
  static const int kIdxFieldNumber = 4;
  ::google::protobuf::uint32 idx() const;
  void set_idx(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.ExtractIndexDataRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_partition_num();
  void clear_has_partition_num();
  void set_has_idx();
  void clear_has_idx();
  void set_has_column_key();
  void clear_has_column_key();
  void set_has_task_info();
  void clear_has_task_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::openmldb::common::ColumnKey* column_key_;
  ::openmldb::api::TaskInfo* task_info_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  ::google::protobuf::uint32 partition_num_;
  ::google::protobuf::uint32 idx_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Columns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.Columns) */ {
 public:
  Columns();
  virtual ~Columns();

  Columns(const Columns& from);

  inline Columns& operator=(const Columns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Columns(Columns&& from) noexcept
    : Columns() {
    *this = ::std::move(from);
  }

  inline Columns& operator=(Columns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Columns& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Columns* internal_default_instance() {
    return reinterpret_cast<const Columns*>(
               &_Columns_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  void Swap(Columns* other);
  friend void swap(Columns& a, Columns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Columns* New() const final {
    return CreateMaybeMessage<Columns>(NULL);
  }

  Columns* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Columns>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Columns& from);
  void MergeFrom(const Columns& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Columns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string name = 1;
  int name_size() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name(int index) const;
  ::std::string* mutable_name(int index);
  void set_name(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_name(int index, ::std::string&& value);
  #endif
  void set_name(int index, const char* value);
  void set_name(int index, const char* value, size_t size);
  ::std::string* add_name();
  void add_name(const ::std::string& value);
  #if LANG_CXX11
  void add_name(::std::string&& value);
  #endif
  void add_name(const char* value);
  void add_name(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& name() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_name();

  // optional bytes value = 2 [default = ""];
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional .openmldb.api.GetType type = 3 [default = kSubKeyEq];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::openmldb::api::GetType type() const;
  void set_type(::openmldb::api::GetType value);

  // @@protoc_insertion_point(class_scope:openmldb.api.Columns)
 private:
  void set_has_value();
  void clear_has_value();
  void set_has_type();
  void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  int type_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CancelOPRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.CancelOPRequest) */ {
 public:
  CancelOPRequest();
  virtual ~CancelOPRequest();

  CancelOPRequest(const CancelOPRequest& from);

  inline CancelOPRequest& operator=(const CancelOPRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CancelOPRequest(CancelOPRequest&& from) noexcept
    : CancelOPRequest() {
    *this = ::std::move(from);
  }

  inline CancelOPRequest& operator=(CancelOPRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CancelOPRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CancelOPRequest* internal_default_instance() {
    return reinterpret_cast<const CancelOPRequest*>(
               &_CancelOPRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  void Swap(CancelOPRequest* other);
  friend void swap(CancelOPRequest& a, CancelOPRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CancelOPRequest* New() const final {
    return CreateMaybeMessage<CancelOPRequest>(NULL);
  }

  CancelOPRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CancelOPRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CancelOPRequest& from);
  void MergeFrom(const CancelOPRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CancelOPRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 op_id = 1;
  bool has_op_id() const;
  void clear_op_id();
  static const int kOpIdFieldNumber = 1;
  ::google::protobuf::uint64 op_id() const;
  void set_op_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.CancelOPRequest)
 private:
  void set_has_op_id();
  void clear_has_op_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 op_id_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RealEndpointPair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.RealEndpointPair) */ {
 public:
  RealEndpointPair();
  virtual ~RealEndpointPair();

  RealEndpointPair(const RealEndpointPair& from);

  inline RealEndpointPair& operator=(const RealEndpointPair& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RealEndpointPair(RealEndpointPair&& from) noexcept
    : RealEndpointPair() {
    *this = ::std::move(from);
  }

  inline RealEndpointPair& operator=(RealEndpointPair&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RealEndpointPair& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RealEndpointPair* internal_default_instance() {
    return reinterpret_cast<const RealEndpointPair*>(
               &_RealEndpointPair_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  void Swap(RealEndpointPair* other);
  friend void swap(RealEndpointPair& a, RealEndpointPair& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RealEndpointPair* New() const final {
    return CreateMaybeMessage<RealEndpointPair>(NULL);
  }

  RealEndpointPair* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RealEndpointPair>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RealEndpointPair& from);
  void MergeFrom(const RealEndpointPair& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RealEndpointPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string real_endpoint = 2;
  bool has_real_endpoint() const;
  void clear_real_endpoint();
  static const int kRealEndpointFieldNumber = 2;
  const ::std::string& real_endpoint() const;
  void set_real_endpoint(const ::std::string& value);
  #if LANG_CXX11
  void set_real_endpoint(::std::string&& value);
  #endif
  void set_real_endpoint(const char* value);
  void set_real_endpoint(const char* value, size_t size);
  ::std::string* mutable_real_endpoint();
  ::std::string* release_real_endpoint();
  void set_allocated_real_endpoint(::std::string* real_endpoint);

  // @@protoc_insertion_point(class_scope:openmldb.api.RealEndpointPair)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_real_endpoint();
  void clear_has_real_endpoint();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr real_endpoint_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateRealEndpointMapRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.UpdateRealEndpointMapRequest) */ {
 public:
  UpdateRealEndpointMapRequest();
  virtual ~UpdateRealEndpointMapRequest();

  UpdateRealEndpointMapRequest(const UpdateRealEndpointMapRequest& from);

  inline UpdateRealEndpointMapRequest& operator=(const UpdateRealEndpointMapRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateRealEndpointMapRequest(UpdateRealEndpointMapRequest&& from) noexcept
    : UpdateRealEndpointMapRequest() {
    *this = ::std::move(from);
  }

  inline UpdateRealEndpointMapRequest& operator=(UpdateRealEndpointMapRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateRealEndpointMapRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateRealEndpointMapRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateRealEndpointMapRequest*>(
               &_UpdateRealEndpointMapRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  void Swap(UpdateRealEndpointMapRequest* other);
  friend void swap(UpdateRealEndpointMapRequest& a, UpdateRealEndpointMapRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateRealEndpointMapRequest* New() const final {
    return CreateMaybeMessage<UpdateRealEndpointMapRequest>(NULL);
  }

  UpdateRealEndpointMapRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateRealEndpointMapRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateRealEndpointMapRequest& from);
  void MergeFrom(const UpdateRealEndpointMapRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateRealEndpointMapRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .openmldb.api.RealEndpointPair real_endpoint_map = 1;
  int real_endpoint_map_size() const;
  void clear_real_endpoint_map();
  static const int kRealEndpointMapFieldNumber = 1;
  ::openmldb::api::RealEndpointPair* mutable_real_endpoint_map(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::RealEndpointPair >*
      mutable_real_endpoint_map();
  const ::openmldb::api::RealEndpointPair& real_endpoint_map(int index) const;
  ::openmldb::api::RealEndpointPair* add_real_endpoint_map();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::api::RealEndpointPair >&
      real_endpoint_map() const;

  // @@protoc_insertion_point(class_scope:openmldb.api.UpdateRealEndpointMapRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::RealEndpointPair > real_endpoint_map_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.QueryRequest) */ {
 public:
  QueryRequest();
  virtual ~QueryRequest();

  QueryRequest(const QueryRequest& from);

  inline QueryRequest& operator=(const QueryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryRequest(QueryRequest&& from) noexcept
    : QueryRequest() {
    *this = ::std::move(from);
  }

  inline QueryRequest& operator=(QueryRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryRequest* internal_default_instance() {
    return reinterpret_cast<const QueryRequest*>(
               &_QueryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  void Swap(QueryRequest* other);
  friend void swap(QueryRequest& a, QueryRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryRequest* New() const final {
    return CreateMaybeMessage<QueryRequest>(NULL);
  }

  QueryRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QueryRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QueryRequest& from);
  void MergeFrom(const QueryRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .openmldb.type.DataType parameter_types = 12;
  int parameter_types_size() const;
  void clear_parameter_types();
  static const int kParameterTypesFieldNumber = 12;
  ::openmldb::type::DataType parameter_types(int index) const;
  void set_parameter_types(int index, ::openmldb::type::DataType value);
  void add_parameter_types(::openmldb::type::DataType value);
  const ::google::protobuf::RepeatedField<int>& parameter_types() const;
  ::google::protobuf::RepeatedField<int>* mutable_parameter_types();

  // optional string sql = 1;
  bool has_sql() const;
  void clear_sql();
  static const int kSqlFieldNumber = 1;
  const ::std::string& sql() const;
  void set_sql(const ::std::string& value);
  #if LANG_CXX11
  void set_sql(::std::string&& value);
  #endif
  void set_sql(const char* value);
  void set_sql(const char* value, size_t size);
  ::std::string* mutable_sql();
  ::std::string* release_sql();
  void set_allocated_sql(::std::string* sql);

  // optional string db = 2;
  bool has_db() const;
  void clear_db();
  static const int kDbFieldNumber = 2;
  const ::std::string& db() const;
  void set_db(const ::std::string& value);
  #if LANG_CXX11
  void set_db(::std::string&& value);
  #endif
  void set_db(const char* value);
  void set_db(const char* value, size_t size);
  ::std::string* mutable_db();
  ::std::string* release_db();
  void set_allocated_db(::std::string* db);

  // optional string sp_name = 5;
  bool has_sp_name() const;
  void clear_sp_name();
  static const int kSpNameFieldNumber = 5;
  const ::std::string& sp_name() const;
  void set_sp_name(const ::std::string& value);
  #if LANG_CXX11
  void set_sp_name(::std::string&& value);
  #endif
  void set_sp_name(const char* value);
  void set_sp_name(const char* value, size_t size);
  ::std::string* mutable_sp_name();
  ::std::string* release_sp_name();
  void set_allocated_sp_name(::std::string* sp_name);

  // optional bool is_batch = 3;
  bool has_is_batch() const;
  void clear_is_batch();
  static const int kIsBatchFieldNumber = 3;
  bool is_batch() const;
  void set_is_batch(bool value);

  // optional bool is_debug = 4 [default = false];
  bool has_is_debug() const;
  void clear_is_debug();
  static const int kIsDebugFieldNumber = 4;
  bool is_debug() const;
  void set_is_debug(bool value);

  // optional bool is_procedure = 6 [default = false];
  bool has_is_procedure() const;
  void clear_is_procedure();
  static const int kIsProcedureFieldNumber = 6;
  bool is_procedure() const;
  void set_is_procedure(bool value);

  // optional uint32 row_size = 8;
  bool has_row_size() const;
  void clear_row_size();
  static const int kRowSizeFieldNumber = 8;
  ::google::protobuf::uint32 row_size() const;
  void set_row_size(::google::protobuf::uint32 value);

  // optional uint64 task_id = 7;
  bool has_task_id() const;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 7;
  ::google::protobuf::uint64 task_id() const;
  void set_task_id(::google::protobuf::uint64 value);

  // optional uint32 row_slices = 9;
  bool has_row_slices() const;
  void clear_row_slices();
  static const int kRowSlicesFieldNumber = 9;
  ::google::protobuf::uint32 row_slices() const;
  void set_row_slices(::google::protobuf::uint32 value);

  // optional uint32 parameter_row_size = 10;
  bool has_parameter_row_size() const;
  void clear_parameter_row_size();
  static const int kParameterRowSizeFieldNumber = 10;
  ::google::protobuf::uint32 parameter_row_size() const;
  void set_parameter_row_size(::google::protobuf::uint32 value);

  // optional uint32 parameter_row_slices = 11;
  bool has_parameter_row_slices() const;
  void clear_parameter_row_slices();
  static const int kParameterRowSlicesFieldNumber = 11;
  ::google::protobuf::uint32 parameter_row_slices() const;
  void set_parameter_row_slices(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.QueryRequest)
 private:
  void set_has_sql();
  void clear_has_sql();
  void set_has_db();
  void clear_has_db();
  void set_has_is_batch();
  void clear_has_is_batch();
  void set_has_is_debug();
  void clear_has_is_debug();
  void set_has_sp_name();
  void clear_has_sp_name();
  void set_has_is_procedure();
  void clear_has_is_procedure();
  void set_has_task_id();
  void clear_has_task_id();
  void set_has_row_size();
  void clear_has_row_size();
  void set_has_row_slices();
  void clear_has_row_slices();
  void set_has_parameter_row_size();
  void clear_has_parameter_row_size();
  void set_has_parameter_row_slices();
  void clear_has_parameter_row_slices();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField<int> parameter_types_;
  ::google::protobuf::internal::ArenaStringPtr sql_;
  ::google::protobuf::internal::ArenaStringPtr db_;
  ::google::protobuf::internal::ArenaStringPtr sp_name_;
  bool is_batch_;
  bool is_debug_;
  bool is_procedure_;
  ::google::protobuf::uint32 row_size_;
  ::google::protobuf::uint64 task_id_;
  ::google::protobuf::uint32 row_slices_;
  ::google::protobuf::uint32 parameter_row_size_;
  ::google::protobuf::uint32 parameter_row_slices_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.QueryResponse) */ {
 public:
  QueryResponse();
  virtual ~QueryResponse();

  QueryResponse(const QueryResponse& from);

  inline QueryResponse& operator=(const QueryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryResponse(QueryResponse&& from) noexcept
    : QueryResponse() {
    *this = ::std::move(from);
  }

  inline QueryResponse& operator=(QueryResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryResponse* internal_default_instance() {
    return reinterpret_cast<const QueryResponse*>(
               &_QueryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  void Swap(QueryResponse* other);
  friend void swap(QueryResponse& a, QueryResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryResponse* New() const final {
    return CreateMaybeMessage<QueryResponse>(NULL);
  }

  QueryResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QueryResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QueryResponse& from);
  void MergeFrom(const QueryResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional bytes schema = 5;
  bool has_schema() const;
  void clear_schema();
  static const int kSchemaFieldNumber = 5;
  const ::std::string& schema() const;
  void set_schema(const ::std::string& value);
  #if LANG_CXX11
  void set_schema(::std::string&& value);
  #endif
  void set_schema(const char* value);
  void set_schema(const void* value, size_t size);
  ::std::string* mutable_schema();
  ::std::string* release_schema();
  void set_allocated_schema(::std::string* schema);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // optional uint32 count = 3;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // optional uint32 byte_size = 4;
  bool has_byte_size() const;
  void clear_byte_size();
  static const int kByteSizeFieldNumber = 4;
  ::google::protobuf::uint32 byte_size() const;
  void set_byte_size(::google::protobuf::uint32 value);

  // optional uint32 row_slices = 6;
  bool has_row_slices() const;
  void clear_row_slices();
  static const int kRowSlicesFieldNumber = 6;
  ::google::protobuf::uint32 row_slices() const;
  void set_row_slices(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.QueryResponse)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();
  void set_has_count();
  void clear_has_count();
  void set_has_byte_size();
  void clear_has_byte_size();
  void set_has_schema();
  void clear_has_schema();
  void set_has_row_slices();
  void clear_has_row_slices();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr schema_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 byte_size_;
  ::google::protobuf::uint32 row_slices_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SQLBatchRequestQueryRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.SQLBatchRequestQueryRequest) */ {
 public:
  SQLBatchRequestQueryRequest();
  virtual ~SQLBatchRequestQueryRequest();

  SQLBatchRequestQueryRequest(const SQLBatchRequestQueryRequest& from);

  inline SQLBatchRequestQueryRequest& operator=(const SQLBatchRequestQueryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SQLBatchRequestQueryRequest(SQLBatchRequestQueryRequest&& from) noexcept
    : SQLBatchRequestQueryRequest() {
    *this = ::std::move(from);
  }

  inline SQLBatchRequestQueryRequest& operator=(SQLBatchRequestQueryRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SQLBatchRequestQueryRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SQLBatchRequestQueryRequest* internal_default_instance() {
    return reinterpret_cast<const SQLBatchRequestQueryRequest*>(
               &_SQLBatchRequestQueryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  void Swap(SQLBatchRequestQueryRequest* other);
  friend void swap(SQLBatchRequestQueryRequest& a, SQLBatchRequestQueryRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SQLBatchRequestQueryRequest* New() const final {
    return CreateMaybeMessage<SQLBatchRequestQueryRequest>(NULL);
  }

  SQLBatchRequestQueryRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SQLBatchRequestQueryRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SQLBatchRequestQueryRequest& from);
  void MergeFrom(const SQLBatchRequestQueryRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SQLBatchRequestQueryRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 common_column_indices = 3;
  int common_column_indices_size() const;
  void clear_common_column_indices();
  static const int kCommonColumnIndicesFieldNumber = 3;
  ::google::protobuf::uint32 common_column_indices(int index) const;
  void set_common_column_indices(int index, ::google::protobuf::uint32 value);
  void add_common_column_indices(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      common_column_indices() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_common_column_indices();

  // repeated uint32 row_sizes = 7;
  int row_sizes_size() const;
  void clear_row_sizes();
  static const int kRowSizesFieldNumber = 7;
  ::google::protobuf::uint32 row_sizes(int index) const;
  void set_row_sizes(int index, ::google::protobuf::uint32 value);
  void add_row_sizes(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      row_sizes() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_row_sizes();

  // optional string sql = 1;
  bool has_sql() const;
  void clear_sql();
  static const int kSqlFieldNumber = 1;
  const ::std::string& sql() const;
  void set_sql(const ::std::string& value);
  #if LANG_CXX11
  void set_sql(::std::string&& value);
  #endif
  void set_sql(const char* value);
  void set_sql(const char* value, size_t size);
  ::std::string* mutable_sql();
  ::std::string* release_sql();
  void set_allocated_sql(::std::string* sql);

  // optional string db = 2;
  bool has_db() const;
  void clear_db();
  static const int kDbFieldNumber = 2;
  const ::std::string& db() const;
  void set_db(const ::std::string& value);
  #if LANG_CXX11
  void set_db(::std::string&& value);
  #endif
  void set_db(const char* value);
  void set_db(const char* value, size_t size);
  ::std::string* mutable_db();
  ::std::string* release_db();
  void set_allocated_db(::std::string* db);

  // optional string sp_name = 5;
  bool has_sp_name() const;
  void clear_sp_name();
  static const int kSpNameFieldNumber = 5;
  const ::std::string& sp_name() const;
  void set_sp_name(const ::std::string& value);
  #if LANG_CXX11
  void set_sp_name(::std::string&& value);
  #endif
  void set_sp_name(const char* value);
  void set_sp_name(const char* value, size_t size);
  ::std::string* mutable_sp_name();
  ::std::string* release_sp_name();
  void set_allocated_sp_name(::std::string* sp_name);

  // optional bool is_debug = 4 [default = false];
  bool has_is_debug() const;
  void clear_is_debug();
  static const int kIsDebugFieldNumber = 4;
  bool is_debug() const;
  void set_is_debug(bool value);

  // optional bool is_procedure = 6 [default = false];
  bool has_is_procedure() const;
  void clear_is_procedure();
  static const int kIsProcedureFieldNumber = 6;
  bool is_procedure() const;
  void set_is_procedure(bool value);

  // optional uint32 common_slices = 8;
  bool has_common_slices() const;
  void clear_common_slices();
  static const int kCommonSlicesFieldNumber = 8;
  ::google::protobuf::uint32 common_slices() const;
  void set_common_slices(::google::protobuf::uint32 value);

  // optional uint64 task_id = 10;
  bool has_task_id() const;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 10;
  ::google::protobuf::uint64 task_id() const;
  void set_task_id(::google::protobuf::uint64 value);

  // optional uint32 non_common_slices = 9;
  bool has_non_common_slices() const;
  void clear_non_common_slices();
  static const int kNonCommonSlicesFieldNumber = 9;
  ::google::protobuf::uint32 non_common_slices() const;
  void set_non_common_slices(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.SQLBatchRequestQueryRequest)
 private:
  void set_has_sql();
  void clear_has_sql();
  void set_has_db();
  void clear_has_db();
  void set_has_is_debug();
  void clear_has_is_debug();
  void set_has_sp_name();
  void clear_has_sp_name();
  void set_has_is_procedure();
  void clear_has_is_procedure();
  void set_has_common_slices();
  void clear_has_common_slices();
  void set_has_non_common_slices();
  void clear_has_non_common_slices();
  void set_has_task_id();
  void clear_has_task_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > common_column_indices_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > row_sizes_;
  ::google::protobuf::internal::ArenaStringPtr sql_;
  ::google::protobuf::internal::ArenaStringPtr db_;
  ::google::protobuf::internal::ArenaStringPtr sp_name_;
  bool is_debug_;
  bool is_procedure_;
  ::google::protobuf::uint32 common_slices_;
  ::google::protobuf::uint64 task_id_;
  ::google::protobuf::uint32 non_common_slices_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SQLBatchRequestQueryResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.SQLBatchRequestQueryResponse) */ {
 public:
  SQLBatchRequestQueryResponse();
  virtual ~SQLBatchRequestQueryResponse();

  SQLBatchRequestQueryResponse(const SQLBatchRequestQueryResponse& from);

  inline SQLBatchRequestQueryResponse& operator=(const SQLBatchRequestQueryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SQLBatchRequestQueryResponse(SQLBatchRequestQueryResponse&& from) noexcept
    : SQLBatchRequestQueryResponse() {
    *this = ::std::move(from);
  }

  inline SQLBatchRequestQueryResponse& operator=(SQLBatchRequestQueryResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SQLBatchRequestQueryResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SQLBatchRequestQueryResponse* internal_default_instance() {
    return reinterpret_cast<const SQLBatchRequestQueryResponse*>(
               &_SQLBatchRequestQueryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  void Swap(SQLBatchRequestQueryResponse* other);
  friend void swap(SQLBatchRequestQueryResponse& a, SQLBatchRequestQueryResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SQLBatchRequestQueryResponse* New() const final {
    return CreateMaybeMessage<SQLBatchRequestQueryResponse>(NULL);
  }

  SQLBatchRequestQueryResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SQLBatchRequestQueryResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SQLBatchRequestQueryResponse& from);
  void MergeFrom(const SQLBatchRequestQueryResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SQLBatchRequestQueryResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 common_column_indices = 5;
  int common_column_indices_size() const;
  void clear_common_column_indices();
  static const int kCommonColumnIndicesFieldNumber = 5;
  ::google::protobuf::uint32 common_column_indices(int index) const;
  void set_common_column_indices(int index, ::google::protobuf::uint32 value);
  void add_common_column_indices(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      common_column_indices() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_common_column_indices();

  // repeated uint32 row_sizes = 6;
  int row_sizes_size() const;
  void clear_row_sizes();
  static const int kRowSizesFieldNumber = 6;
  ::google::protobuf::uint32 row_sizes(int index) const;
  void set_row_sizes(int index, ::google::protobuf::uint32 value);
  void add_row_sizes(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      row_sizes() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_row_sizes();

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional bytes schema = 4;
  bool has_schema() const;
  void clear_schema();
  static const int kSchemaFieldNumber = 4;
  const ::std::string& schema() const;
  void set_schema(const ::std::string& value);
  #if LANG_CXX11
  void set_schema(::std::string&& value);
  #endif
  void set_schema(const char* value);
  void set_schema(const void* value, size_t size);
  ::std::string* mutable_schema();
  ::std::string* release_schema();
  void set_allocated_schema(::std::string* schema);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // optional uint32 count = 3;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // optional uint32 common_slices = 7;
  bool has_common_slices() const;
  void clear_common_slices();
  static const int kCommonSlicesFieldNumber = 7;
  ::google::protobuf::uint32 common_slices() const;
  void set_common_slices(::google::protobuf::uint32 value);

  // optional uint32 non_common_slices = 8;
  bool has_non_common_slices() const;
  void clear_non_common_slices();
  static const int kNonCommonSlicesFieldNumber = 8;
  ::google::protobuf::uint32 non_common_slices() const;
  void set_non_common_slices(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.SQLBatchRequestQueryResponse)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();
  void set_has_count();
  void clear_has_count();
  void set_has_schema();
  void clear_has_schema();
  void set_has_common_slices();
  void clear_has_common_slices();
  void set_has_non_common_slices();
  void clear_has_non_common_slices();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > common_column_indices_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > row_sizes_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr schema_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 common_slices_;
  ::google::protobuf::uint32 non_common_slices_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExplainRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.ExplainRequest) */ {
 public:
  ExplainRequest();
  virtual ~ExplainRequest();

  ExplainRequest(const ExplainRequest& from);

  inline ExplainRequest& operator=(const ExplainRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExplainRequest(ExplainRequest&& from) noexcept
    : ExplainRequest() {
    *this = ::std::move(from);
  }

  inline ExplainRequest& operator=(ExplainRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExplainRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExplainRequest* internal_default_instance() {
    return reinterpret_cast<const ExplainRequest*>(
               &_ExplainRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  void Swap(ExplainRequest* other);
  friend void swap(ExplainRequest& a, ExplainRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExplainRequest* New() const final {
    return CreateMaybeMessage<ExplainRequest>(NULL);
  }

  ExplainRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExplainRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExplainRequest& from);
  void MergeFrom(const ExplainRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExplainRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string sql = 1;
  bool has_sql() const;
  void clear_sql();
  static const int kSqlFieldNumber = 1;
  const ::std::string& sql() const;
  void set_sql(const ::std::string& value);
  #if LANG_CXX11
  void set_sql(::std::string&& value);
  #endif
  void set_sql(const char* value);
  void set_sql(const char* value, size_t size);
  ::std::string* mutable_sql();
  ::std::string* release_sql();
  void set_allocated_sql(::std::string* sql);

  // optional string db = 2;
  bool has_db() const;
  void clear_db();
  static const int kDbFieldNumber = 2;
  const ::std::string& db() const;
  void set_db(const ::std::string& value);
  #if LANG_CXX11
  void set_db(::std::string&& value);
  #endif
  void set_db(const char* value);
  void set_db(const char* value, size_t size);
  ::std::string* mutable_db();
  ::std::string* release_db();
  void set_allocated_db(::std::string* db);

  // optional bool is_batch = 3;
  bool has_is_batch() const;
  void clear_is_batch();
  static const int kIsBatchFieldNumber = 3;
  bool is_batch() const;
  void set_is_batch(bool value);

  // @@protoc_insertion_point(class_scope:openmldb.api.ExplainRequest)
 private:
  void set_has_sql();
  void clear_has_sql();
  void set_has_db();
  void clear_has_db();
  void set_has_is_batch();
  void clear_has_is_batch();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr sql_;
  ::google::protobuf::internal::ArenaStringPtr db_;
  bool is_batch_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExplainResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.ExplainResponse) */ {
 public:
  ExplainResponse();
  virtual ~ExplainResponse();

  ExplainResponse(const ExplainResponse& from);

  inline ExplainResponse& operator=(const ExplainResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExplainResponse(ExplainResponse&& from) noexcept
    : ExplainResponse() {
    *this = ::std::move(from);
  }

  inline ExplainResponse& operator=(ExplainResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExplainResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExplainResponse* internal_default_instance() {
    return reinterpret_cast<const ExplainResponse*>(
               &_ExplainResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  void Swap(ExplainResponse* other);
  friend void swap(ExplainResponse& a, ExplainResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExplainResponse* New() const final {
    return CreateMaybeMessage<ExplainResponse>(NULL);
  }

  ExplainResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExplainResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExplainResponse& from);
  void MergeFrom(const ExplainResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExplainResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes input_schema = 1;
  bool has_input_schema() const;
  void clear_input_schema();
  static const int kInputSchemaFieldNumber = 1;
  const ::std::string& input_schema() const;
  void set_input_schema(const ::std::string& value);
  #if LANG_CXX11
  void set_input_schema(::std::string&& value);
  #endif
  void set_input_schema(const char* value);
  void set_input_schema(const void* value, size_t size);
  ::std::string* mutable_input_schema();
  ::std::string* release_input_schema();
  void set_allocated_input_schema(::std::string* input_schema);

  // optional string logical_plan = 3;
  bool has_logical_plan() const;
  void clear_logical_plan();
  static const int kLogicalPlanFieldNumber = 3;
  const ::std::string& logical_plan() const;
  void set_logical_plan(const ::std::string& value);
  #if LANG_CXX11
  void set_logical_plan(::std::string&& value);
  #endif
  void set_logical_plan(const char* value);
  void set_logical_plan(const char* value, size_t size);
  ::std::string* mutable_logical_plan();
  ::std::string* release_logical_plan();
  void set_allocated_logical_plan(::std::string* logical_plan);

  // optional string physical_plan = 4;
  bool has_physical_plan() const;
  void clear_physical_plan();
  static const int kPhysicalPlanFieldNumber = 4;
  const ::std::string& physical_plan() const;
  void set_physical_plan(const ::std::string& value);
  #if LANG_CXX11
  void set_physical_plan(::std::string&& value);
  #endif
  void set_physical_plan(const char* value);
  void set_physical_plan(const char* value, size_t size);
  ::std::string* mutable_physical_plan();
  ::std::string* release_physical_plan();
  void set_allocated_physical_plan(::std::string* physical_plan);

  // optional string ir = 5;
  bool has_ir() const;
  void clear_ir();
  static const int kIrFieldNumber = 5;
  const ::std::string& ir() const;
  void set_ir(const ::std::string& value);
  #if LANG_CXX11
  void set_ir(::std::string&& value);
  #endif
  void set_ir(const char* value);
  void set_ir(const char* value, size_t size);
  ::std::string* mutable_ir();
  ::std::string* release_ir();
  void set_allocated_ir(::std::string* ir);

  // optional bytes output_schema = 6;
  bool has_output_schema() const;
  void clear_output_schema();
  static const int kOutputSchemaFieldNumber = 6;
  const ::std::string& output_schema() const;
  void set_output_schema(const ::std::string& value);
  #if LANG_CXX11
  void set_output_schema(::std::string&& value);
  #endif
  void set_output_schema(const char* value);
  void set_output_schema(const void* value, size_t size);
  ::std::string* mutable_output_schema();
  ::std::string* release_output_schema();
  void set_allocated_output_schema(::std::string* output_schema);

  // optional bool is_batch = 7;
  bool has_is_batch() const;
  void clear_is_batch();
  static const int kIsBatchFieldNumber = 7;
  bool is_batch() const;
  void set_is_batch(bool value);

  // @@protoc_insertion_point(class_scope:openmldb.api.ExplainResponse)
 private:
  void set_has_input_schema();
  void clear_has_input_schema();
  void set_has_logical_plan();
  void clear_has_logical_plan();
  void set_has_physical_plan();
  void clear_has_physical_plan();
  void set_has_ir();
  void clear_has_ir();
  void set_has_output_schema();
  void clear_has_output_schema();
  void set_has_is_batch();
  void clear_has_is_batch();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr input_schema_;
  ::google::protobuf::internal::ArenaStringPtr logical_plan_;
  ::google::protobuf::internal::ArenaStringPtr physical_plan_;
  ::google::protobuf::internal::ArenaStringPtr ir_;
  ::google::protobuf::internal::ArenaStringPtr output_schema_;
  bool is_batch_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RefreshRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.RefreshRequest) */ {
 public:
  RefreshRequest();
  virtual ~RefreshRequest();

  RefreshRequest(const RefreshRequest& from);

  inline RefreshRequest& operator=(const RefreshRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RefreshRequest(RefreshRequest&& from) noexcept
    : RefreshRequest() {
    *this = ::std::move(from);
  }

  inline RefreshRequest& operator=(RefreshRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefreshRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RefreshRequest* internal_default_instance() {
    return reinterpret_cast<const RefreshRequest*>(
               &_RefreshRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  void Swap(RefreshRequest* other);
  friend void swap(RefreshRequest& a, RefreshRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RefreshRequest* New() const final {
    return CreateMaybeMessage<RefreshRequest>(NULL);
  }

  RefreshRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RefreshRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RefreshRequest& from);
  void MergeFrom(const RefreshRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RefreshRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.RefreshRequest)
 private:
  void set_has_tid();
  void clear_has_tid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 tid_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetCatalogRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.GetCatalogRequest) */ {
 public:
  GetCatalogRequest();
  virtual ~GetCatalogRequest();

  GetCatalogRequest(const GetCatalogRequest& from);

  inline GetCatalogRequest& operator=(const GetCatalogRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetCatalogRequest(GetCatalogRequest&& from) noexcept
    : GetCatalogRequest() {
    *this = ::std::move(from);
  }

  inline GetCatalogRequest& operator=(GetCatalogRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCatalogRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetCatalogRequest* internal_default_instance() {
    return reinterpret_cast<const GetCatalogRequest*>(
               &_GetCatalogRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    83;

  void Swap(GetCatalogRequest* other);
  friend void swap(GetCatalogRequest& a, GetCatalogRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetCatalogRequest* New() const final {
    return CreateMaybeMessage<GetCatalogRequest>(NULL);
  }

  GetCatalogRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetCatalogRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetCatalogRequest& from);
  void MergeFrom(const GetCatalogRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetCatalogRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openmldb.api.GetCatalogRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetCatalogResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.GetCatalogResponse) */ {
 public:
  GetCatalogResponse();
  virtual ~GetCatalogResponse();

  GetCatalogResponse(const GetCatalogResponse& from);

  inline GetCatalogResponse& operator=(const GetCatalogResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetCatalogResponse(GetCatalogResponse&& from) noexcept
    : GetCatalogResponse() {
    *this = ::std::move(from);
  }

  inline GetCatalogResponse& operator=(GetCatalogResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCatalogResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetCatalogResponse* internal_default_instance() {
    return reinterpret_cast<const GetCatalogResponse*>(
               &_GetCatalogResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  void Swap(GetCatalogResponse* other);
  friend void swap(GetCatalogResponse& a, GetCatalogResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetCatalogResponse* New() const final {
    return CreateMaybeMessage<GetCatalogResponse>(NULL);
  }

  GetCatalogResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetCatalogResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetCatalogResponse& from);
  void MergeFrom(const GetCatalogResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetCatalogResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 3;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 3;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional .openmldb.common.CatalogInfo catalog = 1;
  bool has_catalog() const;
  void clear_catalog();
  static const int kCatalogFieldNumber = 1;
  private:
  const ::openmldb::common::CatalogInfo& _internal_catalog() const;
  public:
  const ::openmldb::common::CatalogInfo& catalog() const;
  ::openmldb::common::CatalogInfo* release_catalog();
  ::openmldb::common::CatalogInfo* mutable_catalog();
  void set_allocated_catalog(::openmldb::common::CatalogInfo* catalog);

  // optional int32 code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.GetCatalogResponse)
 private:
  void set_has_catalog();
  void clear_has_catalog();
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::openmldb::common::CatalogInfo* catalog_;
  ::google::protobuf::int32 code_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataBlockInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.DataBlockInfo) */ {
 public:
  DataBlockInfo();
  virtual ~DataBlockInfo();

  DataBlockInfo(const DataBlockInfo& from);

  inline DataBlockInfo& operator=(const DataBlockInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataBlockInfo(DataBlockInfo&& from) noexcept
    : DataBlockInfo() {
    *this = ::std::move(from);
  }

  inline DataBlockInfo& operator=(DataBlockInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataBlockInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataBlockInfo* internal_default_instance() {
    return reinterpret_cast<const DataBlockInfo*>(
               &_DataBlockInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    85;

  void Swap(DataBlockInfo* other);
  friend void swap(DataBlockInfo& a, DataBlockInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataBlockInfo* New() const final {
    return CreateMaybeMessage<DataBlockInfo>(NULL);
  }

  DataBlockInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataBlockInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataBlockInfo& from);
  void MergeFrom(const DataBlockInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataBlockInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 offset = 2;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 2;
  ::google::protobuf::uint64 offset() const;
  void set_offset(::google::protobuf::uint64 value);

  // optional uint32 ref_cnt = 1;
  bool has_ref_cnt() const;
  void clear_ref_cnt();
  static const int kRefCntFieldNumber = 1;
  ::google::protobuf::uint32 ref_cnt() const;
  void set_ref_cnt(::google::protobuf::uint32 value);

  // optional uint32 length = 3;
  bool has_length() const;
  void clear_length();
  static const int kLengthFieldNumber = 3;
  ::google::protobuf::uint32 length() const;
  void set_length(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.DataBlockInfo)
 private:
  void set_has_ref_cnt();
  void clear_has_ref_cnt();
  void set_has_offset();
  void clear_has_offset();
  void set_has_length();
  void clear_has_length();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 offset_;
  ::google::protobuf::uint32 ref_cnt_;
  ::google::protobuf::uint32 length_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BinlogInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.BinlogInfo) */ {
 public:
  BinlogInfo();
  virtual ~BinlogInfo();

  BinlogInfo(const BinlogInfo& from);

  inline BinlogInfo& operator=(const BinlogInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BinlogInfo(BinlogInfo&& from) noexcept
    : BinlogInfo() {
    *this = ::std::move(from);
  }

  inline BinlogInfo& operator=(BinlogInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BinlogInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BinlogInfo* internal_default_instance() {
    return reinterpret_cast<const BinlogInfo*>(
               &_BinlogInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  void Swap(BinlogInfo* other);
  friend void swap(BinlogInfo& a, BinlogInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BinlogInfo* New() const final {
    return CreateMaybeMessage<BinlogInfo>(NULL);
  }

  BinlogInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BinlogInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BinlogInfo& from);
  void MergeFrom(const BinlogInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BinlogInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .openmldb.api.Dimension dimensions = 1;
  int dimensions_size() const;
  void clear_dimensions();
  static const int kDimensionsFieldNumber = 1;
  ::openmldb::api::Dimension* mutable_dimensions(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::Dimension >*
      mutable_dimensions();
  const ::openmldb::api::Dimension& dimensions(int index) const;
  ::openmldb::api::Dimension* add_dimensions();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::api::Dimension >&
      dimensions() const;

  // repeated .openmldb.api.TSDimension ts_dimensions = 2;
  int ts_dimensions_size() const;
  void clear_ts_dimensions();
  static const int kTsDimensionsFieldNumber = 2;
  ::openmldb::api::TSDimension* mutable_ts_dimensions(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::TSDimension >*
      mutable_ts_dimensions();
  const ::openmldb::api::TSDimension& ts_dimensions(int index) const;
  ::openmldb::api::TSDimension* add_ts_dimensions();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::api::TSDimension >&
      ts_dimensions() const;

  // optional int64 time = 3;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // optional uint32 block_id = 4;
  bool has_block_id() const;
  void clear_block_id();
  static const int kBlockIdFieldNumber = 4;
  ::google::protobuf::uint32 block_id() const;
  void set_block_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.BinlogInfo)
 private:
  void set_has_time();
  void clear_has_time();
  void set_has_block_id();
  void clear_has_block_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::Dimension > dimensions_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::TSDimension > ts_dimensions_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::uint32 block_id_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Segment_KeyEntries_KeyEntry_TimeEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry) */ {
 public:
  Segment_KeyEntries_KeyEntry_TimeEntry();
  virtual ~Segment_KeyEntries_KeyEntry_TimeEntry();

  Segment_KeyEntries_KeyEntry_TimeEntry(const Segment_KeyEntries_KeyEntry_TimeEntry& from);

  inline Segment_KeyEntries_KeyEntry_TimeEntry& operator=(const Segment_KeyEntries_KeyEntry_TimeEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Segment_KeyEntries_KeyEntry_TimeEntry(Segment_KeyEntries_KeyEntry_TimeEntry&& from) noexcept
    : Segment_KeyEntries_KeyEntry_TimeEntry() {
    *this = ::std::move(from);
  }

  inline Segment_KeyEntries_KeyEntry_TimeEntry& operator=(Segment_KeyEntries_KeyEntry_TimeEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Segment_KeyEntries_KeyEntry_TimeEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Segment_KeyEntries_KeyEntry_TimeEntry* internal_default_instance() {
    return reinterpret_cast<const Segment_KeyEntries_KeyEntry_TimeEntry*>(
               &_Segment_KeyEntries_KeyEntry_TimeEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    87;

  void Swap(Segment_KeyEntries_KeyEntry_TimeEntry* other);
  friend void swap(Segment_KeyEntries_KeyEntry_TimeEntry& a, Segment_KeyEntries_KeyEntry_TimeEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Segment_KeyEntries_KeyEntry_TimeEntry* New() const final {
    return CreateMaybeMessage<Segment_KeyEntries_KeyEntry_TimeEntry>(NULL);
  }

  Segment_KeyEntries_KeyEntry_TimeEntry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Segment_KeyEntries_KeyEntry_TimeEntry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Segment_KeyEntries_KeyEntry_TimeEntry& from);
  void MergeFrom(const Segment_KeyEntries_KeyEntry_TimeEntry& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Segment_KeyEntries_KeyEntry_TimeEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 time = 1;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // optional uint32 block_id = 2;
  bool has_block_id() const;
  void clear_block_id();
  static const int kBlockIdFieldNumber = 2;
  ::google::protobuf::uint32 block_id() const;
  void set_block_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry)
 private:
  void set_has_time();
  void clear_has_time();
  void set_has_block_id();
  void clear_has_block_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::uint32 block_id_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Segment_KeyEntries_KeyEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.Segment.KeyEntries.KeyEntry) */ {
 public:
  Segment_KeyEntries_KeyEntry();
  virtual ~Segment_KeyEntries_KeyEntry();

  Segment_KeyEntries_KeyEntry(const Segment_KeyEntries_KeyEntry& from);

  inline Segment_KeyEntries_KeyEntry& operator=(const Segment_KeyEntries_KeyEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Segment_KeyEntries_KeyEntry(Segment_KeyEntries_KeyEntry&& from) noexcept
    : Segment_KeyEntries_KeyEntry() {
    *this = ::std::move(from);
  }

  inline Segment_KeyEntries_KeyEntry& operator=(Segment_KeyEntries_KeyEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Segment_KeyEntries_KeyEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Segment_KeyEntries_KeyEntry* internal_default_instance() {
    return reinterpret_cast<const Segment_KeyEntries_KeyEntry*>(
               &_Segment_KeyEntries_KeyEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    88;

  void Swap(Segment_KeyEntries_KeyEntry* other);
  friend void swap(Segment_KeyEntries_KeyEntry& a, Segment_KeyEntries_KeyEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Segment_KeyEntries_KeyEntry* New() const final {
    return CreateMaybeMessage<Segment_KeyEntries_KeyEntry>(NULL);
  }

  Segment_KeyEntries_KeyEntry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Segment_KeyEntries_KeyEntry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Segment_KeyEntries_KeyEntry& from);
  void MergeFrom(const Segment_KeyEntries_KeyEntry& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Segment_KeyEntries_KeyEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Segment_KeyEntries_KeyEntry_TimeEntry TimeEntry;

  // accessors -------------------------------------------------------

  // repeated .openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry time_entry = 2;
  int time_entry_size() const;
  void clear_time_entry();
  static const int kTimeEntryFieldNumber = 2;
  ::openmldb::api::Segment_KeyEntries_KeyEntry_TimeEntry* mutable_time_entry(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::Segment_KeyEntries_KeyEntry_TimeEntry >*
      mutable_time_entry();
  const ::openmldb::api::Segment_KeyEntries_KeyEntry_TimeEntry& time_entry(int index) const;
  ::openmldb::api::Segment_KeyEntries_KeyEntry_TimeEntry* add_time_entry();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::api::Segment_KeyEntries_KeyEntry_TimeEntry >&
      time_entry() const;

  // optional uint32 key_entry_id = 1;
  bool has_key_entry_id() const;
  void clear_key_entry_id();
  static const int kKeyEntryIdFieldNumber = 1;
  ::google::protobuf::uint32 key_entry_id() const;
  void set_key_entry_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.Segment.KeyEntries.KeyEntry)
 private:
  void set_has_key_entry_id();
  void clear_has_key_entry_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::Segment_KeyEntries_KeyEntry_TimeEntry > time_entry_;
  ::google::protobuf::uint32 key_entry_id_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Segment_KeyEntries : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.Segment.KeyEntries) */ {
 public:
  Segment_KeyEntries();
  virtual ~Segment_KeyEntries();

  Segment_KeyEntries(const Segment_KeyEntries& from);

  inline Segment_KeyEntries& operator=(const Segment_KeyEntries& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Segment_KeyEntries(Segment_KeyEntries&& from) noexcept
    : Segment_KeyEntries() {
    *this = ::std::move(from);
  }

  inline Segment_KeyEntries& operator=(Segment_KeyEntries&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Segment_KeyEntries& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Segment_KeyEntries* internal_default_instance() {
    return reinterpret_cast<const Segment_KeyEntries*>(
               &_Segment_KeyEntries_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    89;

  void Swap(Segment_KeyEntries* other);
  friend void swap(Segment_KeyEntries& a, Segment_KeyEntries& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Segment_KeyEntries* New() const final {
    return CreateMaybeMessage<Segment_KeyEntries>(NULL);
  }

  Segment_KeyEntries* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Segment_KeyEntries>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Segment_KeyEntries& from);
  void MergeFrom(const Segment_KeyEntries& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Segment_KeyEntries* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Segment_KeyEntries_KeyEntry KeyEntry;

  // accessors -------------------------------------------------------

  // repeated .openmldb.api.Segment.KeyEntries.KeyEntry key_entry = 2;
  int key_entry_size() const;
  void clear_key_entry();
  static const int kKeyEntryFieldNumber = 2;
  ::openmldb::api::Segment_KeyEntries_KeyEntry* mutable_key_entry(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::Segment_KeyEntries_KeyEntry >*
      mutable_key_entry();
  const ::openmldb::api::Segment_KeyEntries_KeyEntry& key_entry(int index) const;
  ::openmldb::api::Segment_KeyEntries_KeyEntry* add_key_entry();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::api::Segment_KeyEntries_KeyEntry >&
      key_entry() const;

  // optional bytes key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:openmldb.api.Segment.KeyEntries)
 private:
  void set_has_key();
  void clear_has_key();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::Segment_KeyEntries_KeyEntry > key_entry_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Segment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.Segment) */ {
 public:
  Segment();
  virtual ~Segment();

  Segment(const Segment& from);

  inline Segment& operator=(const Segment& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Segment(Segment&& from) noexcept
    : Segment() {
    *this = ::std::move(from);
  }

  inline Segment& operator=(Segment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Segment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Segment* internal_default_instance() {
    return reinterpret_cast<const Segment*>(
               &_Segment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    90;

  void Swap(Segment* other);
  friend void swap(Segment& a, Segment& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Segment* New() const final {
    return CreateMaybeMessage<Segment>(NULL);
  }

  Segment* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Segment>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Segment& from);
  void MergeFrom(const Segment& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Segment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Segment_KeyEntries KeyEntries;

  // accessors -------------------------------------------------------

  // repeated .openmldb.api.Segment.KeyEntries key_entries = 2;
  int key_entries_size() const;
  void clear_key_entries();
  static const int kKeyEntriesFieldNumber = 2;
  ::openmldb::api::Segment_KeyEntries* mutable_key_entries(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::Segment_KeyEntries >*
      mutable_key_entries();
  const ::openmldb::api::Segment_KeyEntries& key_entries(int index) const;
  ::openmldb::api::Segment_KeyEntries* add_key_entries();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::api::Segment_KeyEntries >&
      key_entries() const;

  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.Segment)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::Segment_KeyEntries > key_entries_;
  ::google::protobuf::uint32 id_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BulkLoadIndex : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.BulkLoadIndex) */ {
 public:
  BulkLoadIndex();
  virtual ~BulkLoadIndex();

  BulkLoadIndex(const BulkLoadIndex& from);

  inline BulkLoadIndex& operator=(const BulkLoadIndex& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BulkLoadIndex(BulkLoadIndex&& from) noexcept
    : BulkLoadIndex() {
    *this = ::std::move(from);
  }

  inline BulkLoadIndex& operator=(BulkLoadIndex&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BulkLoadIndex& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BulkLoadIndex* internal_default_instance() {
    return reinterpret_cast<const BulkLoadIndex*>(
               &_BulkLoadIndex_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    91;

  void Swap(BulkLoadIndex* other);
  friend void swap(BulkLoadIndex& a, BulkLoadIndex& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BulkLoadIndex* New() const final {
    return CreateMaybeMessage<BulkLoadIndex>(NULL);
  }

  BulkLoadIndex* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BulkLoadIndex>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BulkLoadIndex& from);
  void MergeFrom(const BulkLoadIndex& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkLoadIndex* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .openmldb.api.Segment segment = 2;
  int segment_size() const;
  void clear_segment();
  static const int kSegmentFieldNumber = 2;
  ::openmldb::api::Segment* mutable_segment(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::Segment >*
      mutable_segment();
  const ::openmldb::api::Segment& segment(int index) const;
  ::openmldb::api::Segment* add_segment();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::api::Segment >&
      segment() const;

  // optional uint32 inner_index_id = 1;
  bool has_inner_index_id() const;
  void clear_inner_index_id();
  static const int kInnerIndexIdFieldNumber = 1;
  ::google::protobuf::uint32 inner_index_id() const;
  void set_inner_index_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.BulkLoadIndex)
 private:
  void set_has_inner_index_id();
  void clear_has_inner_index_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::Segment > segment_;
  ::google::protobuf::uint32 inner_index_id_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BulkLoadRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.BulkLoadRequest) */ {
 public:
  BulkLoadRequest();
  virtual ~BulkLoadRequest();

  BulkLoadRequest(const BulkLoadRequest& from);

  inline BulkLoadRequest& operator=(const BulkLoadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BulkLoadRequest(BulkLoadRequest&& from) noexcept
    : BulkLoadRequest() {
    *this = ::std::move(from);
  }

  inline BulkLoadRequest& operator=(BulkLoadRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BulkLoadRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BulkLoadRequest* internal_default_instance() {
    return reinterpret_cast<const BulkLoadRequest*>(
               &_BulkLoadRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    92;

  void Swap(BulkLoadRequest* other);
  friend void swap(BulkLoadRequest& a, BulkLoadRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BulkLoadRequest* New() const final {
    return CreateMaybeMessage<BulkLoadRequest>(NULL);
  }

  BulkLoadRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BulkLoadRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BulkLoadRequest& from);
  void MergeFrom(const BulkLoadRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkLoadRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .openmldb.api.DataBlockInfo block_info = 4;
  int block_info_size() const;
  void clear_block_info();
  static const int kBlockInfoFieldNumber = 4;
  ::openmldb::api::DataBlockInfo* mutable_block_info(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::DataBlockInfo >*
      mutable_block_info();
  const ::openmldb::api::DataBlockInfo& block_info(int index) const;
  ::openmldb::api::DataBlockInfo* add_block_info();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::api::DataBlockInfo >&
      block_info() const;

  // repeated .openmldb.api.BinlogInfo binlog_info = 5;
  int binlog_info_size() const;
  void clear_binlog_info();
  static const int kBinlogInfoFieldNumber = 5;
  ::openmldb::api::BinlogInfo* mutable_binlog_info(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::BinlogInfo >*
      mutable_binlog_info();
  const ::openmldb::api::BinlogInfo& binlog_info(int index) const;
  ::openmldb::api::BinlogInfo* add_binlog_info();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::api::BinlogInfo >&
      binlog_info() const;

  // repeated .openmldb.api.BulkLoadIndex index_region = 6;
  int index_region_size() const;
  void clear_index_region();
  static const int kIndexRegionFieldNumber = 6;
  ::openmldb::api::BulkLoadIndex* mutable_index_region(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadIndex >*
      mutable_index_region();
  const ::openmldb::api::BulkLoadIndex& index_region(int index) const;
  ::openmldb::api::BulkLoadIndex* add_index_region();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadIndex >&
      index_region() const;

  // optional uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // optional uint32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // optional int32 part_id = 3;
  bool has_part_id() const;
  void clear_part_id();
  static const int kPartIdFieldNumber = 3;
  ::google::protobuf::int32 part_id() const;
  void set_part_id(::google::protobuf::int32 value);

  // optional bool eof = 7 [default = false];
  bool has_eof() const;
  void clear_eof();
  static const int kEofFieldNumber = 7;
  bool eof() const;
  void set_eof(bool value);

  // @@protoc_insertion_point(class_scope:openmldb.api.BulkLoadRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_part_id();
  void clear_has_part_id();
  void set_has_eof();
  void clear_has_eof();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::DataBlockInfo > block_info_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::BinlogInfo > binlog_info_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadIndex > index_region_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  ::google::protobuf::int32 part_id_;
  bool eof_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BulkLoadInfoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.BulkLoadInfoRequest) */ {
 public:
  BulkLoadInfoRequest();
  virtual ~BulkLoadInfoRequest();

  BulkLoadInfoRequest(const BulkLoadInfoRequest& from);

  inline BulkLoadInfoRequest& operator=(const BulkLoadInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BulkLoadInfoRequest(BulkLoadInfoRequest&& from) noexcept
    : BulkLoadInfoRequest() {
    *this = ::std::move(from);
  }

  inline BulkLoadInfoRequest& operator=(BulkLoadInfoRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BulkLoadInfoRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BulkLoadInfoRequest* internal_default_instance() {
    return reinterpret_cast<const BulkLoadInfoRequest*>(
               &_BulkLoadInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    93;

  void Swap(BulkLoadInfoRequest* other);
  friend void swap(BulkLoadInfoRequest& a, BulkLoadInfoRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BulkLoadInfoRequest* New() const final {
    return CreateMaybeMessage<BulkLoadInfoRequest>(NULL);
  }

  BulkLoadInfoRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BulkLoadInfoRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BulkLoadInfoRequest& from);
  void MergeFrom(const BulkLoadInfoRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkLoadInfoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint32 tid() const;
  void set_tid(::google::protobuf::uint32 value);

  // optional uint32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.BulkLoadInfoRequest)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_pid();
  void clear_has_pid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 pid_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BulkLoadInfoResponse_InnerIndexSt_IndexDef : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef) */ {
 public:
  BulkLoadInfoResponse_InnerIndexSt_IndexDef();
  virtual ~BulkLoadInfoResponse_InnerIndexSt_IndexDef();

  BulkLoadInfoResponse_InnerIndexSt_IndexDef(const BulkLoadInfoResponse_InnerIndexSt_IndexDef& from);

  inline BulkLoadInfoResponse_InnerIndexSt_IndexDef& operator=(const BulkLoadInfoResponse_InnerIndexSt_IndexDef& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BulkLoadInfoResponse_InnerIndexSt_IndexDef(BulkLoadInfoResponse_InnerIndexSt_IndexDef&& from) noexcept
    : BulkLoadInfoResponse_InnerIndexSt_IndexDef() {
    *this = ::std::move(from);
  }

  inline BulkLoadInfoResponse_InnerIndexSt_IndexDef& operator=(BulkLoadInfoResponse_InnerIndexSt_IndexDef&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BulkLoadInfoResponse_InnerIndexSt_IndexDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BulkLoadInfoResponse_InnerIndexSt_IndexDef* internal_default_instance() {
    return reinterpret_cast<const BulkLoadInfoResponse_InnerIndexSt_IndexDef*>(
               &_BulkLoadInfoResponse_InnerIndexSt_IndexDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    94;

  void Swap(BulkLoadInfoResponse_InnerIndexSt_IndexDef* other);
  friend void swap(BulkLoadInfoResponse_InnerIndexSt_IndexDef& a, BulkLoadInfoResponse_InnerIndexSt_IndexDef& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BulkLoadInfoResponse_InnerIndexSt_IndexDef* New() const final {
    return CreateMaybeMessage<BulkLoadInfoResponse_InnerIndexSt_IndexDef>(NULL);
  }

  BulkLoadInfoResponse_InnerIndexSt_IndexDef* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BulkLoadInfoResponse_InnerIndexSt_IndexDef>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BulkLoadInfoResponse_InnerIndexSt_IndexDef& from);
  void MergeFrom(const BulkLoadInfoResponse_InnerIndexSt_IndexDef& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkLoadInfoResponse_InnerIndexSt_IndexDef* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool is_ready = 2;
  bool has_is_ready() const;
  void clear_is_ready();
  static const int kIsReadyFieldNumber = 2;
  bool is_ready() const;
  void set_is_ready(bool value);

  // optional int32 ts_idx = 1 [default = -1];
  bool has_ts_idx() const;
  void clear_ts_idx();
  static const int kTsIdxFieldNumber = 1;
  ::google::protobuf::int32 ts_idx() const;
  void set_ts_idx(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef)
 private:
  void set_has_ts_idx();
  void clear_has_ts_idx();
  void set_has_is_ready();
  void clear_has_is_ready();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool is_ready_;
  ::google::protobuf::int32 ts_idx_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BulkLoadInfoResponse_InnerIndexSt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.BulkLoadInfoResponse.InnerIndexSt) */ {
 public:
  BulkLoadInfoResponse_InnerIndexSt();
  virtual ~BulkLoadInfoResponse_InnerIndexSt();

  BulkLoadInfoResponse_InnerIndexSt(const BulkLoadInfoResponse_InnerIndexSt& from);

  inline BulkLoadInfoResponse_InnerIndexSt& operator=(const BulkLoadInfoResponse_InnerIndexSt& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BulkLoadInfoResponse_InnerIndexSt(BulkLoadInfoResponse_InnerIndexSt&& from) noexcept
    : BulkLoadInfoResponse_InnerIndexSt() {
    *this = ::std::move(from);
  }

  inline BulkLoadInfoResponse_InnerIndexSt& operator=(BulkLoadInfoResponse_InnerIndexSt&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BulkLoadInfoResponse_InnerIndexSt& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BulkLoadInfoResponse_InnerIndexSt* internal_default_instance() {
    return reinterpret_cast<const BulkLoadInfoResponse_InnerIndexSt*>(
               &_BulkLoadInfoResponse_InnerIndexSt_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    95;

  void Swap(BulkLoadInfoResponse_InnerIndexSt* other);
  friend void swap(BulkLoadInfoResponse_InnerIndexSt& a, BulkLoadInfoResponse_InnerIndexSt& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BulkLoadInfoResponse_InnerIndexSt* New() const final {
    return CreateMaybeMessage<BulkLoadInfoResponse_InnerIndexSt>(NULL);
  }

  BulkLoadInfoResponse_InnerIndexSt* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BulkLoadInfoResponse_InnerIndexSt>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BulkLoadInfoResponse_InnerIndexSt& from);
  void MergeFrom(const BulkLoadInfoResponse_InnerIndexSt& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkLoadInfoResponse_InnerIndexSt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef BulkLoadInfoResponse_InnerIndexSt_IndexDef IndexDef;

  // accessors -------------------------------------------------------

  // repeated .openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef index_def = 1;
  int index_def_size() const;
  void clear_index_def();
  static const int kIndexDefFieldNumber = 1;
  ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt_IndexDef* mutable_index_def(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt_IndexDef >*
      mutable_index_def();
  const ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt_IndexDef& index_def(int index) const;
  ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt_IndexDef* add_index_def();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt_IndexDef >&
      index_def() const;

  // @@protoc_insertion_point(class_scope:openmldb.api.BulkLoadInfoResponse.InnerIndexSt)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt_IndexDef > index_def_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry) */ {
 public:
  BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry();
  virtual ~BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry();

  BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry(const BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry& from);

  inline BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry& operator=(const BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry(BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry&& from) noexcept
    : BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry() {
    *this = ::std::move(from);
  }

  inline BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry& operator=(BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry* internal_default_instance() {
    return reinterpret_cast<const BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry*>(
               &_BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    96;

  void Swap(BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry* other);
  friend void swap(BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry& a, BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry* New() const final {
    return CreateMaybeMessage<BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry>(NULL);
  }

  BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry& from);
  void MergeFrom(const BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::uint32 key() const;
  void set_key(::google::protobuf::uint32 value);

  // required uint32 value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BulkLoadInfoResponse_InnerSegments_Segment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment) */ {
 public:
  BulkLoadInfoResponse_InnerSegments_Segment();
  virtual ~BulkLoadInfoResponse_InnerSegments_Segment();

  BulkLoadInfoResponse_InnerSegments_Segment(const BulkLoadInfoResponse_InnerSegments_Segment& from);

  inline BulkLoadInfoResponse_InnerSegments_Segment& operator=(const BulkLoadInfoResponse_InnerSegments_Segment& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BulkLoadInfoResponse_InnerSegments_Segment(BulkLoadInfoResponse_InnerSegments_Segment&& from) noexcept
    : BulkLoadInfoResponse_InnerSegments_Segment() {
    *this = ::std::move(from);
  }

  inline BulkLoadInfoResponse_InnerSegments_Segment& operator=(BulkLoadInfoResponse_InnerSegments_Segment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BulkLoadInfoResponse_InnerSegments_Segment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BulkLoadInfoResponse_InnerSegments_Segment* internal_default_instance() {
    return reinterpret_cast<const BulkLoadInfoResponse_InnerSegments_Segment*>(
               &_BulkLoadInfoResponse_InnerSegments_Segment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    97;

  void Swap(BulkLoadInfoResponse_InnerSegments_Segment* other);
  friend void swap(BulkLoadInfoResponse_InnerSegments_Segment& a, BulkLoadInfoResponse_InnerSegments_Segment& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BulkLoadInfoResponse_InnerSegments_Segment* New() const final {
    return CreateMaybeMessage<BulkLoadInfoResponse_InnerSegments_Segment>(NULL);
  }

  BulkLoadInfoResponse_InnerSegments_Segment* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BulkLoadInfoResponse_InnerSegments_Segment>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BulkLoadInfoResponse_InnerSegments_Segment& from);
  void MergeFrom(const BulkLoadInfoResponse_InnerSegments_Segment& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkLoadInfoResponse_InnerSegments_Segment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry MapFieldEntry;

  // accessors -------------------------------------------------------

  // repeated .openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry ts_idx_map = 2;
  int ts_idx_map_size() const;
  void clear_ts_idx_map();
  static const int kTsIdxMapFieldNumber = 2;
  ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry* mutable_ts_idx_map(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry >*
      mutable_ts_idx_map();
  const ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry& ts_idx_map(int index) const;
  ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry* add_ts_idx_map();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry >&
      ts_idx_map() const;

  // optional uint32 ts_cnt = 1;
  bool has_ts_cnt() const;
  void clear_ts_cnt();
  static const int kTsCntFieldNumber = 1;
  ::google::protobuf::uint32 ts_cnt() const;
  void set_ts_cnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment)
 private:
  void set_has_ts_cnt();
  void clear_has_ts_cnt();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry > ts_idx_map_;
  ::google::protobuf::uint32 ts_cnt_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BulkLoadInfoResponse_InnerSegments : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.BulkLoadInfoResponse.InnerSegments) */ {
 public:
  BulkLoadInfoResponse_InnerSegments();
  virtual ~BulkLoadInfoResponse_InnerSegments();

  BulkLoadInfoResponse_InnerSegments(const BulkLoadInfoResponse_InnerSegments& from);

  inline BulkLoadInfoResponse_InnerSegments& operator=(const BulkLoadInfoResponse_InnerSegments& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BulkLoadInfoResponse_InnerSegments(BulkLoadInfoResponse_InnerSegments&& from) noexcept
    : BulkLoadInfoResponse_InnerSegments() {
    *this = ::std::move(from);
  }

  inline BulkLoadInfoResponse_InnerSegments& operator=(BulkLoadInfoResponse_InnerSegments&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BulkLoadInfoResponse_InnerSegments& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BulkLoadInfoResponse_InnerSegments* internal_default_instance() {
    return reinterpret_cast<const BulkLoadInfoResponse_InnerSegments*>(
               &_BulkLoadInfoResponse_InnerSegments_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    98;

  void Swap(BulkLoadInfoResponse_InnerSegments* other);
  friend void swap(BulkLoadInfoResponse_InnerSegments& a, BulkLoadInfoResponse_InnerSegments& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BulkLoadInfoResponse_InnerSegments* New() const final {
    return CreateMaybeMessage<BulkLoadInfoResponse_InnerSegments>(NULL);
  }

  BulkLoadInfoResponse_InnerSegments* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BulkLoadInfoResponse_InnerSegments>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BulkLoadInfoResponse_InnerSegments& from);
  void MergeFrom(const BulkLoadInfoResponse_InnerSegments& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkLoadInfoResponse_InnerSegments* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef BulkLoadInfoResponse_InnerSegments_Segment Segment;

  // accessors -------------------------------------------------------

  // repeated .openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment segment = 1;
  int segment_size() const;
  void clear_segment();
  static const int kSegmentFieldNumber = 1;
  ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment* mutable_segment(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment >*
      mutable_segment();
  const ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment& segment(int index) const;
  ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment* add_segment();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment >&
      segment() const;

  // @@protoc_insertion_point(class_scope:openmldb.api.BulkLoadInfoResponse.InnerSegments)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment > segment_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BulkLoadInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.BulkLoadInfoResponse) */ {
 public:
  BulkLoadInfoResponse();
  virtual ~BulkLoadInfoResponse();

  BulkLoadInfoResponse(const BulkLoadInfoResponse& from);

  inline BulkLoadInfoResponse& operator=(const BulkLoadInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BulkLoadInfoResponse(BulkLoadInfoResponse&& from) noexcept
    : BulkLoadInfoResponse() {
    *this = ::std::move(from);
  }

  inline BulkLoadInfoResponse& operator=(BulkLoadInfoResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BulkLoadInfoResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BulkLoadInfoResponse* internal_default_instance() {
    return reinterpret_cast<const BulkLoadInfoResponse*>(
               &_BulkLoadInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    99;

  void Swap(BulkLoadInfoResponse* other);
  friend void swap(BulkLoadInfoResponse& a, BulkLoadInfoResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BulkLoadInfoResponse* New() const final {
    return CreateMaybeMessage<BulkLoadInfoResponse>(NULL);
  }

  BulkLoadInfoResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BulkLoadInfoResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BulkLoadInfoResponse& from);
  void MergeFrom(const BulkLoadInfoResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkLoadInfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef BulkLoadInfoResponse_InnerIndexSt InnerIndexSt;
  typedef BulkLoadInfoResponse_InnerSegments InnerSegments;

  // accessors -------------------------------------------------------

  // repeated int32 inner_index_pos = 4;
  int inner_index_pos_size() const;
  void clear_inner_index_pos();
  static const int kInnerIndexPosFieldNumber = 4;
  ::google::protobuf::int32 inner_index_pos(int index) const;
  void set_inner_index_pos(int index, ::google::protobuf::int32 value);
  void add_inner_index_pos(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      inner_index_pos() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_inner_index_pos();

  // repeated .openmldb.api.BulkLoadInfoResponse.InnerIndexSt inner_index = 5;
  int inner_index_size() const;
  void clear_inner_index();
  static const int kInnerIndexFieldNumber = 5;
  ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt* mutable_inner_index(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt >*
      mutable_inner_index();
  const ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt& inner_index(int index) const;
  ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt* add_inner_index();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt >&
      inner_index() const;

  // repeated .openmldb.api.BulkLoadInfoResponse.InnerSegments inner_segments = 6;
  int inner_segments_size() const;
  void clear_inner_segments();
  static const int kInnerSegmentsFieldNumber = 6;
  ::openmldb::api::BulkLoadInfoResponse_InnerSegments* mutable_inner_segments(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadInfoResponse_InnerSegments >*
      mutable_inner_segments();
  const ::openmldb::api::BulkLoadInfoResponse_InnerSegments& inner_segments(int index) const;
  ::openmldb::api::BulkLoadInfoResponse_InnerSegments* add_inner_segments();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadInfoResponse_InnerSegments >&
      inner_segments() const;

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // optional uint32 seg_cnt = 3;
  bool has_seg_cnt() const;
  void clear_seg_cnt();
  static const int kSegCntFieldNumber = 3;
  ::google::protobuf::uint32 seg_cnt() const;
  void set_seg_cnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.BulkLoadInfoResponse)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();
  void set_has_seg_cnt();
  void clear_has_seg_cnt();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > inner_index_pos_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt > inner_index_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadInfoResponse_InnerSegments > inner_segments_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::uint32 seg_cnt_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateFunctionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.CreateFunctionRequest) */ {
 public:
  CreateFunctionRequest();
  virtual ~CreateFunctionRequest();

  CreateFunctionRequest(const CreateFunctionRequest& from);

  inline CreateFunctionRequest& operator=(const CreateFunctionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateFunctionRequest(CreateFunctionRequest&& from) noexcept
    : CreateFunctionRequest() {
    *this = ::std::move(from);
  }

  inline CreateFunctionRequest& operator=(CreateFunctionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateFunctionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateFunctionRequest* internal_default_instance() {
    return reinterpret_cast<const CreateFunctionRequest*>(
               &_CreateFunctionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    100;

  void Swap(CreateFunctionRequest* other);
  friend void swap(CreateFunctionRequest& a, CreateFunctionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateFunctionRequest* New() const final {
    return CreateMaybeMessage<CreateFunctionRequest>(NULL);
  }

  CreateFunctionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateFunctionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateFunctionRequest& from);
  void MergeFrom(const CreateFunctionRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateFunctionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .openmldb.common.ExternalFun fun = 1;
  bool has_fun() const;
  void clear_fun();
  static const int kFunFieldNumber = 1;
  private:
  const ::openmldb::common::ExternalFun& _internal_fun() const;
  public:
  const ::openmldb::common::ExternalFun& fun() const;
  ::openmldb::common::ExternalFun* release_fun();
  ::openmldb::common::ExternalFun* mutable_fun();
  void set_allocated_fun(::openmldb::common::ExternalFun* fun);

  // @@protoc_insertion_point(class_scope:openmldb.api.CreateFunctionRequest)
 private:
  void set_has_fun();
  void clear_has_fun();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::openmldb::common::ExternalFun* fun_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateFunctionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.CreateFunctionResponse) */ {
 public:
  CreateFunctionResponse();
  virtual ~CreateFunctionResponse();

  CreateFunctionResponse(const CreateFunctionResponse& from);

  inline CreateFunctionResponse& operator=(const CreateFunctionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateFunctionResponse(CreateFunctionResponse&& from) noexcept
    : CreateFunctionResponse() {
    *this = ::std::move(from);
  }

  inline CreateFunctionResponse& operator=(CreateFunctionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateFunctionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateFunctionResponse* internal_default_instance() {
    return reinterpret_cast<const CreateFunctionResponse*>(
               &_CreateFunctionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    101;

  void Swap(CreateFunctionResponse* other);
  friend void swap(CreateFunctionResponse& a, CreateFunctionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateFunctionResponse* New() const final {
    return CreateMaybeMessage<CreateFunctionResponse>(NULL);
  }

  CreateFunctionResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateFunctionResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateFunctionResponse& from);
  void MergeFrom(const CreateFunctionResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateFunctionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.CreateFunctionResponse)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 code_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DropFunctionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.DropFunctionRequest) */ {
 public:
  DropFunctionRequest();
  virtual ~DropFunctionRequest();

  DropFunctionRequest(const DropFunctionRequest& from);

  inline DropFunctionRequest& operator=(const DropFunctionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DropFunctionRequest(DropFunctionRequest&& from) noexcept
    : DropFunctionRequest() {
    *this = ::std::move(from);
  }

  inline DropFunctionRequest& operator=(DropFunctionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DropFunctionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DropFunctionRequest* internal_default_instance() {
    return reinterpret_cast<const DropFunctionRequest*>(
               &_DropFunctionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    102;

  void Swap(DropFunctionRequest* other);
  friend void swap(DropFunctionRequest& a, DropFunctionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DropFunctionRequest* New() const final {
    return CreateMaybeMessage<DropFunctionRequest>(NULL);
  }

  DropFunctionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DropFunctionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DropFunctionRequest& from);
  void MergeFrom(const DropFunctionRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DropFunctionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .openmldb.common.ExternalFun fun = 1;
  bool has_fun() const;
  void clear_fun();
  static const int kFunFieldNumber = 1;
  private:
  const ::openmldb::common::ExternalFun& _internal_fun() const;
  public:
  const ::openmldb::common::ExternalFun& fun() const;
  ::openmldb::common::ExternalFun* release_fun();
  ::openmldb::common::ExternalFun* mutable_fun();
  void set_allocated_fun(::openmldb::common::ExternalFun* fun);

  // @@protoc_insertion_point(class_scope:openmldb.api.DropFunctionRequest)
 private:
  void set_has_fun();
  void clear_has_fun();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::openmldb::common::ExternalFun* fun_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DropFunctionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.DropFunctionResponse) */ {
 public:
  DropFunctionResponse();
  virtual ~DropFunctionResponse();

  DropFunctionResponse(const DropFunctionResponse& from);

  inline DropFunctionResponse& operator=(const DropFunctionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DropFunctionResponse(DropFunctionResponse&& from) noexcept
    : DropFunctionResponse() {
    *this = ::std::move(from);
  }

  inline DropFunctionResponse& operator=(DropFunctionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DropFunctionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DropFunctionResponse* internal_default_instance() {
    return reinterpret_cast<const DropFunctionResponse*>(
               &_DropFunctionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    103;

  void Swap(DropFunctionResponse* other);
  friend void swap(DropFunctionResponse& a, DropFunctionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DropFunctionResponse* New() const final {
    return CreateMaybeMessage<DropFunctionResponse>(NULL);
  }

  DropFunctionResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DropFunctionResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DropFunctionResponse& from);
  void MergeFrom(const DropFunctionResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DropFunctionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.DropFunctionResponse)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 code_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateAggregatorRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.CreateAggregatorRequest) */ {
 public:
  CreateAggregatorRequest();
  virtual ~CreateAggregatorRequest();

  CreateAggregatorRequest(const CreateAggregatorRequest& from);

  inline CreateAggregatorRequest& operator=(const CreateAggregatorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateAggregatorRequest(CreateAggregatorRequest&& from) noexcept
    : CreateAggregatorRequest() {
    *this = ::std::move(from);
  }

  inline CreateAggregatorRequest& operator=(CreateAggregatorRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateAggregatorRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateAggregatorRequest* internal_default_instance() {
    return reinterpret_cast<const CreateAggregatorRequest*>(
               &_CreateAggregatorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    104;

  void Swap(CreateAggregatorRequest* other);
  friend void swap(CreateAggregatorRequest& a, CreateAggregatorRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateAggregatorRequest* New() const final {
    return CreateMaybeMessage<CreateAggregatorRequest>(NULL);
  }

  CreateAggregatorRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateAggregatorRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateAggregatorRequest& from);
  void MergeFrom(const CreateAggregatorRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateAggregatorRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string aggr_func = 5;
  bool has_aggr_func() const;
  void clear_aggr_func();
  static const int kAggrFuncFieldNumber = 5;
  const ::std::string& aggr_func() const;
  void set_aggr_func(const ::std::string& value);
  #if LANG_CXX11
  void set_aggr_func(::std::string&& value);
  #endif
  void set_aggr_func(const char* value);
  void set_aggr_func(const char* value, size_t size);
  ::std::string* mutable_aggr_func();
  ::std::string* release_aggr_func();
  void set_allocated_aggr_func(::std::string* aggr_func);

  // optional string aggr_col = 6;
  bool has_aggr_col() const;
  void clear_aggr_col();
  static const int kAggrColFieldNumber = 6;
  const ::std::string& aggr_col() const;
  void set_aggr_col(const ::std::string& value);
  #if LANG_CXX11
  void set_aggr_col(::std::string&& value);
  #endif
  void set_aggr_col(const char* value);
  void set_aggr_col(const char* value, size_t size);
  ::std::string* mutable_aggr_col();
  ::std::string* release_aggr_col();
  void set_allocated_aggr_col(::std::string* aggr_col);

  // optional string order_by_col = 7;
  bool has_order_by_col() const;
  void clear_order_by_col();
  static const int kOrderByColFieldNumber = 7;
  const ::std::string& order_by_col() const;
  void set_order_by_col(const ::std::string& value);
  #if LANG_CXX11
  void set_order_by_col(::std::string&& value);
  #endif
  void set_order_by_col(const char* value);
  void set_order_by_col(const char* value, size_t size);
  ::std::string* mutable_order_by_col();
  ::std::string* release_order_by_col();
  void set_allocated_order_by_col(::std::string* order_by_col);

  // optional string bucket_size = 8;
  bool has_bucket_size() const;
  void clear_bucket_size();
  static const int kBucketSizeFieldNumber = 8;
  const ::std::string& bucket_size() const;
  void set_bucket_size(const ::std::string& value);
  #if LANG_CXX11
  void set_bucket_size(::std::string&& value);
  #endif
  void set_bucket_size(const char* value);
  void set_bucket_size(const char* value, size_t size);
  ::std::string* mutable_bucket_size();
  ::std::string* release_bucket_size();
  void set_allocated_bucket_size(::std::string* bucket_size);

  // optional string filter_col = 9;
  bool has_filter_col() const;
  void clear_filter_col();
  static const int kFilterColFieldNumber = 9;
  const ::std::string& filter_col() const;
  void set_filter_col(const ::std::string& value);
  #if LANG_CXX11
  void set_filter_col(::std::string&& value);
  #endif
  void set_filter_col(const char* value);
  void set_filter_col(const char* value, size_t size);
  ::std::string* mutable_filter_col();
  ::std::string* release_filter_col();
  void set_allocated_filter_col(::std::string* filter_col);

  // optional .openmldb.api.TableMeta base_table_meta = 1;
  bool has_base_table_meta() const;
  void clear_base_table_meta();
  static const int kBaseTableMetaFieldNumber = 1;
  private:
  const ::openmldb::api::TableMeta& _internal_base_table_meta() const;
  public:
  const ::openmldb::api::TableMeta& base_table_meta() const;
  ::openmldb::api::TableMeta* release_base_table_meta();
  ::openmldb::api::TableMeta* mutable_base_table_meta();
  void set_allocated_base_table_meta(::openmldb::api::TableMeta* base_table_meta);

  // optional uint32 aggr_table_tid = 2;
  bool has_aggr_table_tid() const;
  void clear_aggr_table_tid();
  static const int kAggrTableTidFieldNumber = 2;
  ::google::protobuf::uint32 aggr_table_tid() const;
  void set_aggr_table_tid(::google::protobuf::uint32 value);

  // optional uint32 aggr_table_pid = 3;
  bool has_aggr_table_pid() const;
  void clear_aggr_table_pid();
  static const int kAggrTablePidFieldNumber = 3;
  ::google::protobuf::uint32 aggr_table_pid() const;
  void set_aggr_table_pid(::google::protobuf::uint32 value);

  // optional uint32 index_pos = 4;
  bool has_index_pos() const;
  void clear_index_pos();
  static const int kIndexPosFieldNumber = 4;
  ::google::protobuf::uint32 index_pos() const;
  void set_index_pos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.CreateAggregatorRequest)
 private:
  void set_has_base_table_meta();
  void clear_has_base_table_meta();
  void set_has_aggr_table_tid();
  void clear_has_aggr_table_tid();
  void set_has_aggr_table_pid();
  void clear_has_aggr_table_pid();
  void set_has_index_pos();
  void clear_has_index_pos();
  void set_has_aggr_func();
  void clear_has_aggr_func();
  void set_has_aggr_col();
  void clear_has_aggr_col();
  void set_has_order_by_col();
  void clear_has_order_by_col();
  void set_has_bucket_size();
  void clear_has_bucket_size();
  void set_has_filter_col();
  void clear_has_filter_col();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr aggr_func_;
  ::google::protobuf::internal::ArenaStringPtr aggr_col_;
  ::google::protobuf::internal::ArenaStringPtr order_by_col_;
  ::google::protobuf::internal::ArenaStringPtr bucket_size_;
  ::google::protobuf::internal::ArenaStringPtr filter_col_;
  ::openmldb::api::TableMeta* base_table_meta_;
  ::google::protobuf::uint32 aggr_table_tid_;
  ::google::protobuf::uint32 aggr_table_pid_;
  ::google::protobuf::uint32 index_pos_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateAggregatorResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.CreateAggregatorResponse) */ {
 public:
  CreateAggregatorResponse();
  virtual ~CreateAggregatorResponse();

  CreateAggregatorResponse(const CreateAggregatorResponse& from);

  inline CreateAggregatorResponse& operator=(const CreateAggregatorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateAggregatorResponse(CreateAggregatorResponse&& from) noexcept
    : CreateAggregatorResponse() {
    *this = ::std::move(from);
  }

  inline CreateAggregatorResponse& operator=(CreateAggregatorResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateAggregatorResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateAggregatorResponse* internal_default_instance() {
    return reinterpret_cast<const CreateAggregatorResponse*>(
               &_CreateAggregatorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    105;

  void Swap(CreateAggregatorResponse* other);
  friend void swap(CreateAggregatorResponse& a, CreateAggregatorResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateAggregatorResponse* New() const final {
    return CreateMaybeMessage<CreateAggregatorResponse>(NULL);
  }

  CreateAggregatorResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateAggregatorResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateAggregatorResponse& from);
  void MergeFrom(const CreateAggregatorResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateAggregatorResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.CreateAggregatorResponse)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 code_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GAFDeployStatsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.GAFDeployStatsRequest) */ {
 public:
  GAFDeployStatsRequest();
  virtual ~GAFDeployStatsRequest();

  GAFDeployStatsRequest(const GAFDeployStatsRequest& from);

  inline GAFDeployStatsRequest& operator=(const GAFDeployStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GAFDeployStatsRequest(GAFDeployStatsRequest&& from) noexcept
    : GAFDeployStatsRequest() {
    *this = ::std::move(from);
  }

  inline GAFDeployStatsRequest& operator=(GAFDeployStatsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GAFDeployStatsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GAFDeployStatsRequest* internal_default_instance() {
    return reinterpret_cast<const GAFDeployStatsRequest*>(
               &_GAFDeployStatsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    106;

  void Swap(GAFDeployStatsRequest* other);
  friend void swap(GAFDeployStatsRequest& a, GAFDeployStatsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GAFDeployStatsRequest* New() const final {
    return CreateMaybeMessage<GAFDeployStatsRequest>(NULL);
  }

  GAFDeployStatsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GAFDeployStatsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GAFDeployStatsRequest& from);
  void MergeFrom(const GAFDeployStatsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GAFDeployStatsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openmldb.api.GAFDeployStatsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeployStatsResponse_DeployStat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.DeployStatsResponse.DeployStat) */ {
 public:
  DeployStatsResponse_DeployStat();
  virtual ~DeployStatsResponse_DeployStat();

  DeployStatsResponse_DeployStat(const DeployStatsResponse_DeployStat& from);

  inline DeployStatsResponse_DeployStat& operator=(const DeployStatsResponse_DeployStat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeployStatsResponse_DeployStat(DeployStatsResponse_DeployStat&& from) noexcept
    : DeployStatsResponse_DeployStat() {
    *this = ::std::move(from);
  }

  inline DeployStatsResponse_DeployStat& operator=(DeployStatsResponse_DeployStat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeployStatsResponse_DeployStat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeployStatsResponse_DeployStat* internal_default_instance() {
    return reinterpret_cast<const DeployStatsResponse_DeployStat*>(
               &_DeployStatsResponse_DeployStat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    107;

  void Swap(DeployStatsResponse_DeployStat* other);
  friend void swap(DeployStatsResponse_DeployStat& a, DeployStatsResponse_DeployStat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeployStatsResponse_DeployStat* New() const final {
    return CreateMaybeMessage<DeployStatsResponse_DeployStat>(NULL);
  }

  DeployStatsResponse_DeployStat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeployStatsResponse_DeployStat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeployStatsResponse_DeployStat& from);
  void MergeFrom(const DeployStatsResponse_DeployStat& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeployStatsResponse_DeployStat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string deploy_name = 1;
  bool has_deploy_name() const;
  void clear_deploy_name();
  static const int kDeployNameFieldNumber = 1;
  const ::std::string& deploy_name() const;
  void set_deploy_name(const ::std::string& value);
  #if LANG_CXX11
  void set_deploy_name(::std::string&& value);
  #endif
  void set_deploy_name(const char* value);
  void set_deploy_name(const char* value, size_t size);
  ::std::string* mutable_deploy_name();
  ::std::string* release_deploy_name();
  void set_allocated_deploy_name(::std::string* deploy_name);

  // required string time = 2;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  const ::std::string& time() const;
  void set_time(const ::std::string& value);
  #if LANG_CXX11
  void set_time(::std::string&& value);
  #endif
  void set_time(const char* value);
  void set_time(const char* value, size_t size);
  ::std::string* mutable_time();
  ::std::string* release_time();
  void set_allocated_time(::std::string* time);

  // required string total = 4;
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 4;
  const ::std::string& total() const;
  void set_total(const ::std::string& value);
  #if LANG_CXX11
  void set_total(::std::string&& value);
  #endif
  void set_total(const char* value);
  void set_total(const char* value, size_t size);
  ::std::string* mutable_total();
  ::std::string* release_total();
  void set_allocated_total(::std::string* total);

  // required uint32 count = 3;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.DeployStatsResponse.DeployStat)
 private:
  void set_has_deploy_name();
  void clear_has_deploy_name();
  void set_has_time();
  void clear_has_time();
  void set_has_count();
  void clear_has_count();
  void set_has_total();
  void clear_has_total();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr deploy_name_;
  ::google::protobuf::internal::ArenaStringPtr time_;
  ::google::protobuf::internal::ArenaStringPtr total_;
  ::google::protobuf::uint32 count_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeployStatsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openmldb.api.DeployStatsResponse) */ {
 public:
  DeployStatsResponse();
  virtual ~DeployStatsResponse();

  DeployStatsResponse(const DeployStatsResponse& from);

  inline DeployStatsResponse& operator=(const DeployStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeployStatsResponse(DeployStatsResponse&& from) noexcept
    : DeployStatsResponse() {
    *this = ::std::move(from);
  }

  inline DeployStatsResponse& operator=(DeployStatsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeployStatsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeployStatsResponse* internal_default_instance() {
    return reinterpret_cast<const DeployStatsResponse*>(
               &_DeployStatsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    108;

  void Swap(DeployStatsResponse* other);
  friend void swap(DeployStatsResponse& a, DeployStatsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeployStatsResponse* New() const final {
    return CreateMaybeMessage<DeployStatsResponse>(NULL);
  }

  DeployStatsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeployStatsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeployStatsResponse& from);
  void MergeFrom(const DeployStatsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeployStatsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DeployStatsResponse_DeployStat DeployStat;

  // accessors -------------------------------------------------------

  // repeated .openmldb.api.DeployStatsResponse.DeployStat rows = 3;
  int rows_size() const;
  void clear_rows();
  static const int kRowsFieldNumber = 3;
  ::openmldb::api::DeployStatsResponse_DeployStat* mutable_rows(int index);
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::DeployStatsResponse_DeployStat >*
      mutable_rows();
  const ::openmldb::api::DeployStatsResponse_DeployStat& rows(int index) const;
  ::openmldb::api::DeployStatsResponse_DeployStat* add_rows();
  const ::google::protobuf::RepeatedPtrField< ::openmldb::api::DeployStatsResponse_DeployStat >&
      rows() const;

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:openmldb.api.DeployStatsResponse)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::openmldb::api::DeployStatsResponse_DeployStat > rows_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 code_;
  friend struct ::protobuf_tablet_2eproto::TableStruct;
};
// ===================================================================

class TabletServer_Stub;

class TabletServer : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline TabletServer() {};
 public:
  virtual ~TabletServer();

  typedef TabletServer_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void Put(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::PutRequest* request,
                       ::openmldb::api::PutResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void Get(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::GetRequest* request,
                       ::openmldb::api::GetResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void Scan(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::ScanRequest* request,
                       ::openmldb::api::ScanResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void Delete(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::DeleteRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void Count(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::CountRequest* request,
                       ::openmldb::api::CountResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void Traverse(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::TraverseRequest* request,
                       ::openmldb::api::TraverseResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void Query(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::QueryRequest* request,
                       ::openmldb::api::QueryResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void SubQuery(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::QueryRequest* request,
                       ::openmldb::api::QueryResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void SQLBatchRequestQuery(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::SQLBatchRequestQueryRequest* request,
                       ::openmldb::api::SQLBatchRequestQueryResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void SubBatchRequestQuery(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::SQLBatchRequestQueryRequest* request,
                       ::openmldb::api::SQLBatchRequestQueryResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void CreateTable(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::CreateTableRequest* request,
                       ::openmldb::api::CreateTableResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void LoadTable(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::LoadTableRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void DropTable(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::DropTableRequest* request,
                       ::openmldb::api::DropTableResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void GetTableStatus(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::GetTableStatusRequest* request,
                       ::openmldb::api::GetTableStatusResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void GetTableSchema(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::GetTableSchemaRequest* request,
                       ::openmldb::api::GetTableSchemaResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void GetTableFollower(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::GetTableFollowerRequest* request,
                       ::openmldb::api::GetTableFollowerResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void UpdateTTL(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::UpdateTTLRequest* request,
                       ::openmldb::api::UpdateTTLResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void ExecuteGc(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::ExecuteGcRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void AppendEntries(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::AppendEntriesRequest* request,
                       ::openmldb::api::AppendEntriesResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void AddReplica(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::ReplicaRequest* request,
                       ::openmldb::api::AddReplicaResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void DelReplica(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::ReplicaRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void ChangeRole(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::ChangeRoleRequest* request,
                       ::openmldb::api::ChangeRoleResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void MakeSnapshot(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::GeneralRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void PauseSnapshot(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::GeneralRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void RecoverSnapshot(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::GeneralRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void SendSnapshot(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::SendSnapshotRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void SendData(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::SendDataRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void SetExpire(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::SetExpireRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void GetTaskStatus(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::TaskStatusRequest* request,
                       ::openmldb::api::TaskStatusResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void DeleteOPTask(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::DeleteTaskRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void GetTermPair(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::GetTermPairRequest* request,
                       ::openmldb::api::GetTermPairResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void GetManifest(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::GetManifestRequest* request,
                       ::openmldb::api::GetManifestResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void CheckFile(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::CheckFileRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void DeleteBinlog(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::GeneralRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void ShowMemPool(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::HttpRequest* request,
                       ::openmldb::api::HttpResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void GetCatalog(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::GetCatalogRequest* request,
                       ::openmldb::api::GetCatalogResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void ConnectZK(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::ConnectZKRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void DisConnectZK(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::DisConnectZKRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void UpdateTableMetaForAddField(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::UpdateTableMetaForAddFieldRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void SetMode(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::SetModeRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void GetAllSnapshotOffset(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::EmptyRequest* request,
                       ::openmldb::api::TableSnapshotOffsetResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void AddIndex(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::AddIndexRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void SendIndexData(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::SendIndexDataRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void DeleteIndex(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::DeleteIndexRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void DumpIndexData(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::DumpIndexDataRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void LoadIndexData(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::LoadIndexDataRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void ExtractIndexData(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::ExtractIndexDataRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void ExtractMultiIndexData(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::ExtractMultiIndexDataRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void CancelOP(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::CancelOPRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void UpdateRealEndpointMap(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::UpdateRealEndpointMapRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void CreateProcedure(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::CreateProcedureRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void DropProcedure(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::DropProcedureRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void Refresh(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::RefreshRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void GetBulkLoadInfo(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::BulkLoadInfoRequest* request,
                       ::openmldb::api::BulkLoadInfoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void BulkLoad(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::BulkLoadRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void CreateFunction(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::CreateFunctionRequest* request,
                       ::openmldb::api::CreateFunctionResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void DropFunction(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::DropFunctionRequest* request,
                       ::openmldb::api::DropFunctionResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void CreateAggregator(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::CreateAggregatorRequest* request,
                       ::openmldb::api::CreateAggregatorResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void GetAndFlushDeployStats(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::GAFDeployStatsRequest* request,
                       ::openmldb::api::DeployStatsResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(TabletServer);
};

class TabletServer_Stub : public TabletServer {
 public:
  TabletServer_Stub(::google::protobuf::RpcChannel* channel);
  TabletServer_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~TabletServer_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements TabletServer ------------------------------------------

  void Put(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::PutRequest* request,
                       ::openmldb::api::PutResponse* response,
                       ::google::protobuf::Closure* done);
  void Get(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::GetRequest* request,
                       ::openmldb::api::GetResponse* response,
                       ::google::protobuf::Closure* done);
  void Scan(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::ScanRequest* request,
                       ::openmldb::api::ScanResponse* response,
                       ::google::protobuf::Closure* done);
  void Delete(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::DeleteRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void Count(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::CountRequest* request,
                       ::openmldb::api::CountResponse* response,
                       ::google::protobuf::Closure* done);
  void Traverse(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::TraverseRequest* request,
                       ::openmldb::api::TraverseResponse* response,
                       ::google::protobuf::Closure* done);
  void Query(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::QueryRequest* request,
                       ::openmldb::api::QueryResponse* response,
                       ::google::protobuf::Closure* done);
  void SubQuery(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::QueryRequest* request,
                       ::openmldb::api::QueryResponse* response,
                       ::google::protobuf::Closure* done);
  void SQLBatchRequestQuery(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::SQLBatchRequestQueryRequest* request,
                       ::openmldb::api::SQLBatchRequestQueryResponse* response,
                       ::google::protobuf::Closure* done);
  void SubBatchRequestQuery(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::SQLBatchRequestQueryRequest* request,
                       ::openmldb::api::SQLBatchRequestQueryResponse* response,
                       ::google::protobuf::Closure* done);
  void CreateTable(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::CreateTableRequest* request,
                       ::openmldb::api::CreateTableResponse* response,
                       ::google::protobuf::Closure* done);
  void LoadTable(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::LoadTableRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void DropTable(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::DropTableRequest* request,
                       ::openmldb::api::DropTableResponse* response,
                       ::google::protobuf::Closure* done);
  void GetTableStatus(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::GetTableStatusRequest* request,
                       ::openmldb::api::GetTableStatusResponse* response,
                       ::google::protobuf::Closure* done);
  void GetTableSchema(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::GetTableSchemaRequest* request,
                       ::openmldb::api::GetTableSchemaResponse* response,
                       ::google::protobuf::Closure* done);
  void GetTableFollower(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::GetTableFollowerRequest* request,
                       ::openmldb::api::GetTableFollowerResponse* response,
                       ::google::protobuf::Closure* done);
  void UpdateTTL(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::UpdateTTLRequest* request,
                       ::openmldb::api::UpdateTTLResponse* response,
                       ::google::protobuf::Closure* done);
  void ExecuteGc(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::ExecuteGcRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void AppendEntries(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::AppendEntriesRequest* request,
                       ::openmldb::api::AppendEntriesResponse* response,
                       ::google::protobuf::Closure* done);
  void AddReplica(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::ReplicaRequest* request,
                       ::openmldb::api::AddReplicaResponse* response,
                       ::google::protobuf::Closure* done);
  void DelReplica(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::ReplicaRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void ChangeRole(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::ChangeRoleRequest* request,
                       ::openmldb::api::ChangeRoleResponse* response,
                       ::google::protobuf::Closure* done);
  void MakeSnapshot(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::GeneralRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void PauseSnapshot(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::GeneralRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void RecoverSnapshot(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::GeneralRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void SendSnapshot(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::SendSnapshotRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void SendData(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::SendDataRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void SetExpire(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::SetExpireRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void GetTaskStatus(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::TaskStatusRequest* request,
                       ::openmldb::api::TaskStatusResponse* response,
                       ::google::protobuf::Closure* done);
  void DeleteOPTask(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::DeleteTaskRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void GetTermPair(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::GetTermPairRequest* request,
                       ::openmldb::api::GetTermPairResponse* response,
                       ::google::protobuf::Closure* done);
  void GetManifest(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::GetManifestRequest* request,
                       ::openmldb::api::GetManifestResponse* response,
                       ::google::protobuf::Closure* done);
  void CheckFile(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::CheckFileRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void DeleteBinlog(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::GeneralRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void ShowMemPool(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::HttpRequest* request,
                       ::openmldb::api::HttpResponse* response,
                       ::google::protobuf::Closure* done);
  void GetCatalog(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::GetCatalogRequest* request,
                       ::openmldb::api::GetCatalogResponse* response,
                       ::google::protobuf::Closure* done);
  void ConnectZK(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::ConnectZKRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void DisConnectZK(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::DisConnectZKRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void UpdateTableMetaForAddField(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::UpdateTableMetaForAddFieldRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void SetMode(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::SetModeRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void GetAllSnapshotOffset(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::EmptyRequest* request,
                       ::openmldb::api::TableSnapshotOffsetResponse* response,
                       ::google::protobuf::Closure* done);
  void AddIndex(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::AddIndexRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void SendIndexData(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::SendIndexDataRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void DeleteIndex(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::DeleteIndexRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void DumpIndexData(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::DumpIndexDataRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void LoadIndexData(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::LoadIndexDataRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void ExtractIndexData(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::ExtractIndexDataRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void ExtractMultiIndexData(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::ExtractMultiIndexDataRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void CancelOP(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::CancelOPRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void UpdateRealEndpointMap(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::UpdateRealEndpointMapRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void CreateProcedure(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::CreateProcedureRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void DropProcedure(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::DropProcedureRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void Refresh(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::RefreshRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void GetBulkLoadInfo(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::BulkLoadInfoRequest* request,
                       ::openmldb::api::BulkLoadInfoResponse* response,
                       ::google::protobuf::Closure* done);
  void BulkLoad(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::BulkLoadRequest* request,
                       ::openmldb::api::GeneralResponse* response,
                       ::google::protobuf::Closure* done);
  void CreateFunction(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::CreateFunctionRequest* request,
                       ::openmldb::api::CreateFunctionResponse* response,
                       ::google::protobuf::Closure* done);
  void DropFunction(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::DropFunctionRequest* request,
                       ::openmldb::api::DropFunctionResponse* response,
                       ::google::protobuf::Closure* done);
  void CreateAggregator(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::CreateAggregatorRequest* request,
                       ::openmldb::api::CreateAggregatorResponse* response,
                       ::google::protobuf::Closure* done);
  void GetAndFlushDeployStats(::google::protobuf::RpcController* controller,
                       const ::openmldb::api::GAFDeployStatsRequest* request,
                       ::openmldb::api::DeployStatsResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(TabletServer_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TaskInfo

// required uint64 op_id = 1;
inline bool TaskInfo::has_op_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TaskInfo::set_has_op_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TaskInfo::clear_has_op_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TaskInfo::clear_op_id() {
  op_id_ = GOOGLE_ULONGLONG(0);
  clear_has_op_id();
}
inline ::google::protobuf::uint64 TaskInfo::op_id() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TaskInfo.op_id)
  return op_id_;
}
inline void TaskInfo::set_op_id(::google::protobuf::uint64 value) {
  set_has_op_id();
  op_id_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TaskInfo.op_id)
}

// required .openmldb.api.OPType op_type = 2;
inline bool TaskInfo::has_op_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TaskInfo::set_has_op_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TaskInfo::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TaskInfo::clear_op_type() {
  op_type_ = 1;
  clear_has_op_type();
}
inline ::openmldb::api::OPType TaskInfo::op_type() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TaskInfo.op_type)
  return static_cast< ::openmldb::api::OPType >(op_type_);
}
inline void TaskInfo::set_op_type(::openmldb::api::OPType value) {
  assert(::openmldb::api::OPType_IsValid(value));
  set_has_op_type();
  op_type_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TaskInfo.op_type)
}

// required .openmldb.api.TaskType task_type = 3;
inline bool TaskInfo::has_task_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TaskInfo::set_has_task_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TaskInfo::clear_has_task_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TaskInfo::clear_task_type() {
  task_type_ = 1;
  clear_has_task_type();
}
inline ::openmldb::api::TaskType TaskInfo::task_type() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TaskInfo.task_type)
  return static_cast< ::openmldb::api::TaskType >(task_type_);
}
inline void TaskInfo::set_task_type(::openmldb::api::TaskType value) {
  assert(::openmldb::api::TaskType_IsValid(value));
  set_has_task_type();
  task_type_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TaskInfo.task_type)
}

// required .openmldb.api.TaskStatus status = 4;
inline bool TaskInfo::has_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TaskInfo::set_has_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TaskInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TaskInfo::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::openmldb::api::TaskStatus TaskInfo::status() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TaskInfo.status)
  return static_cast< ::openmldb::api::TaskStatus >(status_);
}
inline void TaskInfo::set_status(::openmldb::api::TaskStatus value) {
  assert(::openmldb::api::TaskStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TaskInfo.status)
}

// optional string endpoint = 5;
inline bool TaskInfo::has_endpoint() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TaskInfo::set_has_endpoint() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TaskInfo::clear_has_endpoint() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TaskInfo::clear_endpoint() {
  endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_endpoint();
}
inline const ::std::string& TaskInfo::endpoint() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TaskInfo.endpoint)
  return endpoint_.GetNoArena();
}
inline void TaskInfo::set_endpoint(const ::std::string& value) {
  set_has_endpoint();
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.TaskInfo.endpoint)
}
#if LANG_CXX11
inline void TaskInfo::set_endpoint(::std::string&& value) {
  set_has_endpoint();
  endpoint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.TaskInfo.endpoint)
}
#endif
inline void TaskInfo::set_endpoint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_endpoint();
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.TaskInfo.endpoint)
}
inline void TaskInfo::set_endpoint(const char* value, size_t size) {
  set_has_endpoint();
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.TaskInfo.endpoint)
}
inline ::std::string* TaskInfo::mutable_endpoint() {
  set_has_endpoint();
  // @@protoc_insertion_point(field_mutable:openmldb.api.TaskInfo.endpoint)
  return endpoint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TaskInfo::release_endpoint() {
  // @@protoc_insertion_point(field_release:openmldb.api.TaskInfo.endpoint)
  if (!has_endpoint()) {
    return NULL;
  }
  clear_has_endpoint();
  return endpoint_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskInfo::set_allocated_endpoint(::std::string* endpoint) {
  if (endpoint != NULL) {
    set_has_endpoint();
  } else {
    clear_has_endpoint();
  }
  endpoint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), endpoint);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.TaskInfo.endpoint)
}

// optional bool is_rpc_send = 6 [default = false];
inline bool TaskInfo::has_is_rpc_send() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TaskInfo::set_has_is_rpc_send() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TaskInfo::clear_has_is_rpc_send() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TaskInfo::clear_is_rpc_send() {
  is_rpc_send_ = false;
  clear_has_is_rpc_send();
}
inline bool TaskInfo::is_rpc_send() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TaskInfo.is_rpc_send)
  return is_rpc_send_;
}
inline void TaskInfo::set_is_rpc_send(bool value) {
  set_has_is_rpc_send();
  is_rpc_send_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TaskInfo.is_rpc_send)
}

// repeated uint64 rep_cluster_op_id = 7;
inline int TaskInfo::rep_cluster_op_id_size() const {
  return rep_cluster_op_id_.size();
}
inline void TaskInfo::clear_rep_cluster_op_id() {
  rep_cluster_op_id_.Clear();
}
inline ::google::protobuf::uint64 TaskInfo::rep_cluster_op_id(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.TaskInfo.rep_cluster_op_id)
  return rep_cluster_op_id_.Get(index);
}
inline void TaskInfo::set_rep_cluster_op_id(int index, ::google::protobuf::uint64 value) {
  rep_cluster_op_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:openmldb.api.TaskInfo.rep_cluster_op_id)
}
inline void TaskInfo::add_rep_cluster_op_id(::google::protobuf::uint64 value) {
  rep_cluster_op_id_.Add(value);
  // @@protoc_insertion_point(field_add:openmldb.api.TaskInfo.rep_cluster_op_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TaskInfo::rep_cluster_op_id() const {
  // @@protoc_insertion_point(field_list:openmldb.api.TaskInfo.rep_cluster_op_id)
  return rep_cluster_op_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TaskInfo::mutable_rep_cluster_op_id() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.TaskInfo.rep_cluster_op_id)
  return &rep_cluster_op_id_;
}

// optional uint64 task_id = 8 [default = 0];
inline bool TaskInfo::has_task_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TaskInfo::set_has_task_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TaskInfo::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TaskInfo::clear_task_id() {
  task_id_ = GOOGLE_ULONGLONG(0);
  clear_has_task_id();
}
inline ::google::protobuf::uint64 TaskInfo::task_id() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TaskInfo.task_id)
  return task_id_;
}
inline void TaskInfo::set_task_id(::google::protobuf::uint64 value) {
  set_has_task_id();
  task_id_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TaskInfo.task_id)
}

// -------------------------------------------------------------------

// OPInfo

// required uint64 op_id = 1;
inline bool OPInfo::has_op_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OPInfo::set_has_op_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OPInfo::clear_has_op_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OPInfo::clear_op_id() {
  op_id_ = GOOGLE_ULONGLONG(0);
  clear_has_op_id();
}
inline ::google::protobuf::uint64 OPInfo::op_id() const {
  // @@protoc_insertion_point(field_get:openmldb.api.OPInfo.op_id)
  return op_id_;
}
inline void OPInfo::set_op_id(::google::protobuf::uint64 value) {
  set_has_op_id();
  op_id_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.OPInfo.op_id)
}

// required .openmldb.api.OPType op_type = 2;
inline bool OPInfo::has_op_type() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void OPInfo::set_has_op_type() {
  _has_bits_[0] |= 0x00001000u;
}
inline void OPInfo::clear_has_op_type() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void OPInfo::clear_op_type() {
  op_type_ = 1;
  clear_has_op_type();
}
inline ::openmldb::api::OPType OPInfo::op_type() const {
  // @@protoc_insertion_point(field_get:openmldb.api.OPInfo.op_type)
  return static_cast< ::openmldb::api::OPType >(op_type_);
}
inline void OPInfo::set_op_type(::openmldb::api::OPType value) {
  assert(::openmldb::api::OPType_IsValid(value));
  set_has_op_type();
  op_type_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.OPInfo.op_type)
}

// required uint32 task_index = 3;
inline bool OPInfo::has_task_index() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OPInfo::set_has_task_index() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OPInfo::clear_has_task_index() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OPInfo::clear_task_index() {
  task_index_ = 0u;
  clear_has_task_index();
}
inline ::google::protobuf::uint32 OPInfo::task_index() const {
  // @@protoc_insertion_point(field_get:openmldb.api.OPInfo.task_index)
  return task_index_;
}
inline void OPInfo::set_task_index(::google::protobuf::uint32 value) {
  set_has_task_index();
  task_index_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.OPInfo.task_index)
}

// required string data = 4;
inline bool OPInfo::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OPInfo::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OPInfo::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OPInfo::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& OPInfo::data() const {
  // @@protoc_insertion_point(field_get:openmldb.api.OPInfo.data)
  return data_.GetNoArena();
}
inline void OPInfo::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.OPInfo.data)
}
#if LANG_CXX11
inline void OPInfo::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.OPInfo.data)
}
#endif
inline void OPInfo::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.OPInfo.data)
}
inline void OPInfo::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.OPInfo.data)
}
inline ::std::string* OPInfo::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:openmldb.api.OPInfo.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OPInfo::release_data() {
  // @@protoc_insertion_point(field_release:openmldb.api.OPInfo.data)
  if (!has_data()) {
    return NULL;
  }
  clear_has_data();
  return data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OPInfo::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.OPInfo.data)
}

// optional .openmldb.api.TaskStatus task_status = 5;
inline bool OPInfo::has_task_status() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void OPInfo::set_has_task_status() {
  _has_bits_[0] |= 0x00002000u;
}
inline void OPInfo::clear_has_task_status() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void OPInfo::clear_task_status() {
  task_status_ = 1;
  clear_has_task_status();
}
inline ::openmldb::api::TaskStatus OPInfo::task_status() const {
  // @@protoc_insertion_point(field_get:openmldb.api.OPInfo.task_status)
  return static_cast< ::openmldb::api::TaskStatus >(task_status_);
}
inline void OPInfo::set_task_status(::openmldb::api::TaskStatus value) {
  assert(::openmldb::api::TaskStatus_IsValid(value));
  set_has_task_status();
  task_status_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.OPInfo.task_status)
}

// optional uint64 start_time = 6 [default = 0];
inline bool OPInfo::has_start_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OPInfo::set_has_start_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OPInfo::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OPInfo::clear_start_time() {
  start_time_ = GOOGLE_ULONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::uint64 OPInfo::start_time() const {
  // @@protoc_insertion_point(field_get:openmldb.api.OPInfo.start_time)
  return start_time_;
}
inline void OPInfo::set_start_time(::google::protobuf::uint64 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.OPInfo.start_time)
}

// optional uint64 end_time = 7 [default = 0];
inline bool OPInfo::has_end_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OPInfo::set_has_end_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OPInfo::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OPInfo::clear_end_time() {
  end_time_ = GOOGLE_ULONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::uint64 OPInfo::end_time() const {
  // @@protoc_insertion_point(field_get:openmldb.api.OPInfo.end_time)
  return end_time_;
}
inline void OPInfo::set_end_time(::google::protobuf::uint64 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.OPInfo.end_time)
}

// optional string name = 8;
inline bool OPInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OPInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OPInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OPInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& OPInfo::name() const {
  // @@protoc_insertion_point(field_get:openmldb.api.OPInfo.name)
  return name_.GetNoArena();
}
inline void OPInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.OPInfo.name)
}
#if LANG_CXX11
inline void OPInfo::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.OPInfo.name)
}
#endif
inline void OPInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.OPInfo.name)
}
inline void OPInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.OPInfo.name)
}
inline ::std::string* OPInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:openmldb.api.OPInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OPInfo::release_name() {
  // @@protoc_insertion_point(field_release:openmldb.api.OPInfo.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OPInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.OPInfo.name)
}

// optional uint32 pid = 9;
inline bool OPInfo::has_pid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OPInfo::set_has_pid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OPInfo::clear_has_pid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OPInfo::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 OPInfo::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.OPInfo.pid)
  return pid_;
}
inline void OPInfo::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.OPInfo.pid)
}

// optional uint64 parent_id = 10;
inline bool OPInfo::has_parent_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void OPInfo::set_has_parent_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void OPInfo::clear_has_parent_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void OPInfo::clear_parent_id() {
  parent_id_ = GOOGLE_ULONGLONG(0);
  clear_has_parent_id();
}
inline ::google::protobuf::uint64 OPInfo::parent_id() const {
  // @@protoc_insertion_point(field_get:openmldb.api.OPInfo.parent_id)
  return parent_id_;
}
inline void OPInfo::set_parent_id(::google::protobuf::uint64 value) {
  set_has_parent_id();
  parent_id_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.OPInfo.parent_id)
}

// optional uint32 vec_idx = 11;
inline bool OPInfo::has_vec_idx() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void OPInfo::set_has_vec_idx() {
  _has_bits_[0] |= 0x00000400u;
}
inline void OPInfo::clear_has_vec_idx() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void OPInfo::clear_vec_idx() {
  vec_idx_ = 0u;
  clear_has_vec_idx();
}
inline ::google::protobuf::uint32 OPInfo::vec_idx() const {
  // @@protoc_insertion_point(field_get:openmldb.api.OPInfo.vec_idx)
  return vec_idx_;
}
inline void OPInfo::set_vec_idx(::google::protobuf::uint32 value) {
  set_has_vec_idx();
  vec_idx_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.OPInfo.vec_idx)
}

// optional uint64 remote_op_id = 12;
inline bool OPInfo::has_remote_op_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void OPInfo::set_has_remote_op_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void OPInfo::clear_has_remote_op_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void OPInfo::clear_remote_op_id() {
  remote_op_id_ = GOOGLE_ULONGLONG(0);
  clear_has_remote_op_id();
}
inline ::google::protobuf::uint64 OPInfo::remote_op_id() const {
  // @@protoc_insertion_point(field_get:openmldb.api.OPInfo.remote_op_id)
  return remote_op_id_;
}
inline void OPInfo::set_remote_op_id(::google::protobuf::uint64 value) {
  set_has_remote_op_id();
  remote_op_id_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.OPInfo.remote_op_id)
}

// optional int32 for_replica_cluster = 13 [default = 0];
inline bool OPInfo::has_for_replica_cluster() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void OPInfo::set_has_for_replica_cluster() {
  _has_bits_[0] |= 0x00000800u;
}
inline void OPInfo::clear_has_for_replica_cluster() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void OPInfo::clear_for_replica_cluster() {
  for_replica_cluster_ = 0;
  clear_has_for_replica_cluster();
}
inline ::google::protobuf::int32 OPInfo::for_replica_cluster() const {
  // @@protoc_insertion_point(field_get:openmldb.api.OPInfo.for_replica_cluster)
  return for_replica_cluster_;
}
inline void OPInfo::set_for_replica_cluster(::google::protobuf::int32 value) {
  set_has_for_replica_cluster();
  for_replica_cluster_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.OPInfo.for_replica_cluster)
}

// optional string db = 14;
inline bool OPInfo::has_db() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OPInfo::set_has_db() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OPInfo::clear_has_db() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OPInfo::clear_db() {
  db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_db();
}
inline const ::std::string& OPInfo::db() const {
  // @@protoc_insertion_point(field_get:openmldb.api.OPInfo.db)
  return db_.GetNoArena();
}
inline void OPInfo::set_db(const ::std::string& value) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.OPInfo.db)
}
#if LANG_CXX11
inline void OPInfo::set_db(::std::string&& value) {
  set_has_db();
  db_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.OPInfo.db)
}
#endif
inline void OPInfo::set_db(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.OPInfo.db)
}
inline void OPInfo::set_db(const char* value, size_t size) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.OPInfo.db)
}
inline ::std::string* OPInfo::mutable_db() {
  set_has_db();
  // @@protoc_insertion_point(field_mutable:openmldb.api.OPInfo.db)
  return db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OPInfo::release_db() {
  // @@protoc_insertion_point(field_release:openmldb.api.OPInfo.db)
  if (!has_db()) {
    return NULL;
  }
  clear_has_db();
  return db_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OPInfo::set_allocated_db(::std::string* db) {
  if (db != NULL) {
    set_has_db();
  } else {
    clear_has_db();
  }
  db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.OPInfo.db)
}

// -------------------------------------------------------------------

// PartSnapshotOffset

// optional uint32 pid = 2;
inline bool PartSnapshotOffset::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PartSnapshotOffset::set_has_pid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PartSnapshotOffset::clear_has_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PartSnapshotOffset::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 PartSnapshotOffset::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.PartSnapshotOffset.pid)
  return pid_;
}
inline void PartSnapshotOffset::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.PartSnapshotOffset.pid)
}

// optional uint64 offset = 3;
inline bool PartSnapshotOffset::has_offset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PartSnapshotOffset::set_has_offset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PartSnapshotOffset::clear_has_offset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PartSnapshotOffset::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
  clear_has_offset();
}
inline ::google::protobuf::uint64 PartSnapshotOffset::offset() const {
  // @@protoc_insertion_point(field_get:openmldb.api.PartSnapshotOffset.offset)
  return offset_;
}
inline void PartSnapshotOffset::set_offset(::google::protobuf::uint64 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.PartSnapshotOffset.offset)
}

// -------------------------------------------------------------------

// TableSnapshotOffsetResponse_Table

// optional uint32 tid = 1;
inline bool TableSnapshotOffsetResponse_Table::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TableSnapshotOffsetResponse_Table::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TableSnapshotOffsetResponse_Table::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TableSnapshotOffsetResponse_Table::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 TableSnapshotOffsetResponse_Table::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableSnapshotOffsetResponse.Table.tid)
  return tid_;
}
inline void TableSnapshotOffsetResponse_Table::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableSnapshotOffsetResponse.Table.tid)
}

// repeated .openmldb.api.PartSnapshotOffset parts = 2;
inline int TableSnapshotOffsetResponse_Table::parts_size() const {
  return parts_.size();
}
inline void TableSnapshotOffsetResponse_Table::clear_parts() {
  parts_.Clear();
}
inline ::openmldb::api::PartSnapshotOffset* TableSnapshotOffsetResponse_Table::mutable_parts(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.TableSnapshotOffsetResponse.Table.parts)
  return parts_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::PartSnapshotOffset >*
TableSnapshotOffsetResponse_Table::mutable_parts() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.TableSnapshotOffsetResponse.Table.parts)
  return &parts_;
}
inline const ::openmldb::api::PartSnapshotOffset& TableSnapshotOffsetResponse_Table::parts(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableSnapshotOffsetResponse.Table.parts)
  return parts_.Get(index);
}
inline ::openmldb::api::PartSnapshotOffset* TableSnapshotOffsetResponse_Table::add_parts() {
  // @@protoc_insertion_point(field_add:openmldb.api.TableSnapshotOffsetResponse.Table.parts)
  return parts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::PartSnapshotOffset >&
TableSnapshotOffsetResponse_Table::parts() const {
  // @@protoc_insertion_point(field_list:openmldb.api.TableSnapshotOffsetResponse.Table.parts)
  return parts_;
}

// -------------------------------------------------------------------

// TableSnapshotOffsetResponse

// optional int32 code = 1;
inline bool TableSnapshotOffsetResponse::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TableSnapshotOffsetResponse::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TableSnapshotOffsetResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TableSnapshotOffsetResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 TableSnapshotOffsetResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableSnapshotOffsetResponse.code)
  return code_;
}
inline void TableSnapshotOffsetResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableSnapshotOffsetResponse.code)
}

// optional string msg = 2;
inline bool TableSnapshotOffsetResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TableSnapshotOffsetResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TableSnapshotOffsetResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TableSnapshotOffsetResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& TableSnapshotOffsetResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableSnapshotOffsetResponse.msg)
  return msg_.GetNoArena();
}
inline void TableSnapshotOffsetResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.TableSnapshotOffsetResponse.msg)
}
#if LANG_CXX11
inline void TableSnapshotOffsetResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.TableSnapshotOffsetResponse.msg)
}
#endif
inline void TableSnapshotOffsetResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.TableSnapshotOffsetResponse.msg)
}
inline void TableSnapshotOffsetResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.TableSnapshotOffsetResponse.msg)
}
inline ::std::string* TableSnapshotOffsetResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.TableSnapshotOffsetResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TableSnapshotOffsetResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.TableSnapshotOffsetResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TableSnapshotOffsetResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.TableSnapshotOffsetResponse.msg)
}

// repeated .openmldb.api.TableSnapshotOffsetResponse.Table tables = 3;
inline int TableSnapshotOffsetResponse::tables_size() const {
  return tables_.size();
}
inline void TableSnapshotOffsetResponse::clear_tables() {
  tables_.Clear();
}
inline ::openmldb::api::TableSnapshotOffsetResponse_Table* TableSnapshotOffsetResponse::mutable_tables(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.TableSnapshotOffsetResponse.tables)
  return tables_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::TableSnapshotOffsetResponse_Table >*
TableSnapshotOffsetResponse::mutable_tables() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.TableSnapshotOffsetResponse.tables)
  return &tables_;
}
inline const ::openmldb::api::TableSnapshotOffsetResponse_Table& TableSnapshotOffsetResponse::tables(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableSnapshotOffsetResponse.tables)
  return tables_.Get(index);
}
inline ::openmldb::api::TableSnapshotOffsetResponse_Table* TableSnapshotOffsetResponse::add_tables() {
  // @@protoc_insertion_point(field_add:openmldb.api.TableSnapshotOffsetResponse.tables)
  return tables_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::TableSnapshotOffsetResponse_Table >&
TableSnapshotOffsetResponse::tables() const {
  // @@protoc_insertion_point(field_list:openmldb.api.TableSnapshotOffsetResponse.tables)
  return tables_;
}

// -------------------------------------------------------------------

// Manifest

// optional uint64 offset = 1;
inline bool Manifest::has_offset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Manifest::set_has_offset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Manifest::clear_has_offset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Manifest::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
  clear_has_offset();
}
inline ::google::protobuf::uint64 Manifest::offset() const {
  // @@protoc_insertion_point(field_get:openmldb.api.Manifest.offset)
  return offset_;
}
inline void Manifest::set_offset(::google::protobuf::uint64 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.Manifest.offset)
}

// optional string name = 2;
inline bool Manifest::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Manifest::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Manifest::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Manifest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Manifest::name() const {
  // @@protoc_insertion_point(field_get:openmldb.api.Manifest.name)
  return name_.GetNoArena();
}
inline void Manifest::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.Manifest.name)
}
#if LANG_CXX11
inline void Manifest::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.Manifest.name)
}
#endif
inline void Manifest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.Manifest.name)
}
inline void Manifest::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.Manifest.name)
}
inline ::std::string* Manifest::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:openmldb.api.Manifest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Manifest::release_name() {
  // @@protoc_insertion_point(field_release:openmldb.api.Manifest.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Manifest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.Manifest.name)
}

// optional uint64 count = 3;
inline bool Manifest::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Manifest::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Manifest::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Manifest::clear_count() {
  count_ = GOOGLE_ULONGLONG(0);
  clear_has_count();
}
inline ::google::protobuf::uint64 Manifest::count() const {
  // @@protoc_insertion_point(field_get:openmldb.api.Manifest.count)
  return count_;
}
inline void Manifest::set_count(::google::protobuf::uint64 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.Manifest.count)
}

// optional uint64 term = 4;
inline bool Manifest::has_term() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Manifest::set_has_term() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Manifest::clear_has_term() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Manifest::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::uint64 Manifest::term() const {
  // @@protoc_insertion_point(field_get:openmldb.api.Manifest.term)
  return term_;
}
inline void Manifest::set_term(::google::protobuf::uint64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.Manifest.term)
}

// -------------------------------------------------------------------

// Dimension

// optional string key = 1;
inline bool Dimension::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Dimension::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Dimension::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Dimension::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& Dimension::key() const {
  // @@protoc_insertion_point(field_get:openmldb.api.Dimension.key)
  return key_.GetNoArena();
}
inline void Dimension::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.Dimension.key)
}
#if LANG_CXX11
inline void Dimension::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.Dimension.key)
}
#endif
inline void Dimension::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.Dimension.key)
}
inline void Dimension::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.Dimension.key)
}
inline ::std::string* Dimension::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:openmldb.api.Dimension.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Dimension::release_key() {
  // @@protoc_insertion_point(field_release:openmldb.api.Dimension.key)
  if (!has_key()) {
    return NULL;
  }
  clear_has_key();
  return key_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Dimension::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.Dimension.key)
}

// optional uint32 idx = 2;
inline bool Dimension::has_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Dimension::set_has_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Dimension::clear_has_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Dimension::clear_idx() {
  idx_ = 0u;
  clear_has_idx();
}
inline ::google::protobuf::uint32 Dimension::idx() const {
  // @@protoc_insertion_point(field_get:openmldb.api.Dimension.idx)
  return idx_;
}
inline void Dimension::set_idx(::google::protobuf::uint32 value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.Dimension.idx)
}

// -------------------------------------------------------------------

// TSDimension

// optional uint64 ts = 1;
inline bool TSDimension::has_ts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSDimension::set_has_ts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSDimension::clear_has_ts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSDimension::clear_ts() {
  ts_ = GOOGLE_ULONGLONG(0);
  clear_has_ts();
}
inline ::google::protobuf::uint64 TSDimension::ts() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TSDimension.ts)
  return ts_;
}
inline void TSDimension::set_ts(::google::protobuf::uint64 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TSDimension.ts)
}

// optional uint32 idx = 2;
inline bool TSDimension::has_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TSDimension::set_has_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TSDimension::clear_has_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TSDimension::clear_idx() {
  idx_ = 0u;
  clear_has_idx();
}
inline ::google::protobuf::uint32 TSDimension::idx() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TSDimension.idx)
  return idx_;
}
inline void TSDimension::set_idx(::google::protobuf::uint32 value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TSDimension.idx)
}

// -------------------------------------------------------------------

// PutRequest

// optional string pk = 1;
inline bool PutRequest::has_pk() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PutRequest::set_has_pk() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PutRequest::clear_has_pk() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PutRequest::clear_pk() {
  pk_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pk();
}
inline const ::std::string& PutRequest::pk() const {
  // @@protoc_insertion_point(field_get:openmldb.api.PutRequest.pk)
  return pk_.GetNoArena();
}
inline void PutRequest::set_pk(const ::std::string& value) {
  set_has_pk();
  pk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.PutRequest.pk)
}
#if LANG_CXX11
inline void PutRequest::set_pk(::std::string&& value) {
  set_has_pk();
  pk_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.PutRequest.pk)
}
#endif
inline void PutRequest::set_pk(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pk();
  pk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.PutRequest.pk)
}
inline void PutRequest::set_pk(const char* value, size_t size) {
  set_has_pk();
  pk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.PutRequest.pk)
}
inline ::std::string* PutRequest::mutable_pk() {
  set_has_pk();
  // @@protoc_insertion_point(field_mutable:openmldb.api.PutRequest.pk)
  return pk_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PutRequest::release_pk() {
  // @@protoc_insertion_point(field_release:openmldb.api.PutRequest.pk)
  if (!has_pk()) {
    return NULL;
  }
  clear_has_pk();
  return pk_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutRequest::set_allocated_pk(::std::string* pk) {
  if (pk != NULL) {
    set_has_pk();
  } else {
    clear_has_pk();
  }
  pk_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pk);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.PutRequest.pk)
}

// optional int64 time = 2;
inline bool PutRequest::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PutRequest::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PutRequest::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PutRequest::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 PutRequest::time() const {
  // @@protoc_insertion_point(field_get:openmldb.api.PutRequest.time)
  return time_;
}
inline void PutRequest::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.PutRequest.time)
}

// optional bytes value = 3;
inline bool PutRequest::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PutRequest::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PutRequest::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PutRequest::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& PutRequest::value() const {
  // @@protoc_insertion_point(field_get:openmldb.api.PutRequest.value)
  return value_.GetNoArena();
}
inline void PutRequest::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.PutRequest.value)
}
#if LANG_CXX11
inline void PutRequest::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.PutRequest.value)
}
#endif
inline void PutRequest::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.PutRequest.value)
}
inline void PutRequest::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.PutRequest.value)
}
inline ::std::string* PutRequest::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:openmldb.api.PutRequest.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PutRequest::release_value() {
  // @@protoc_insertion_point(field_release:openmldb.api.PutRequest.value)
  if (!has_value()) {
    return NULL;
  }
  clear_has_value();
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutRequest::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.PutRequest.value)
}

// optional uint32 tid = 4;
inline bool PutRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PutRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PutRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PutRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 PutRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.PutRequest.tid)
  return tid_;
}
inline void PutRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.PutRequest.tid)
}

// optional uint32 pid = 5;
inline bool PutRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PutRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PutRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PutRequest::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 PutRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.PutRequest.pid)
  return pid_;
}
inline void PutRequest::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.PutRequest.pid)
}

// repeated .openmldb.api.Dimension dimensions = 6;
inline int PutRequest::dimensions_size() const {
  return dimensions_.size();
}
inline void PutRequest::clear_dimensions() {
  dimensions_.Clear();
}
inline ::openmldb::api::Dimension* PutRequest::mutable_dimensions(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.PutRequest.dimensions)
  return dimensions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::Dimension >*
PutRequest::mutable_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.PutRequest.dimensions)
  return &dimensions_;
}
inline const ::openmldb::api::Dimension& PutRequest::dimensions(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.PutRequest.dimensions)
  return dimensions_.Get(index);
}
inline ::openmldb::api::Dimension* PutRequest::add_dimensions() {
  // @@protoc_insertion_point(field_add:openmldb.api.PutRequest.dimensions)
  return dimensions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::Dimension >&
PutRequest::dimensions() const {
  // @@protoc_insertion_point(field_list:openmldb.api.PutRequest.dimensions)
  return dimensions_;
}

// repeated .openmldb.api.TSDimension ts_dimensions = 7 [deprecated = true];
inline int PutRequest::ts_dimensions_size() const {
  return ts_dimensions_.size();
}
inline void PutRequest::clear_ts_dimensions() {
  ts_dimensions_.Clear();
}
inline ::openmldb::api::TSDimension* PutRequest::mutable_ts_dimensions(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.PutRequest.ts_dimensions)
  return ts_dimensions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::TSDimension >*
PutRequest::mutable_ts_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.PutRequest.ts_dimensions)
  return &ts_dimensions_;
}
inline const ::openmldb::api::TSDimension& PutRequest::ts_dimensions(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.PutRequest.ts_dimensions)
  return ts_dimensions_.Get(index);
}
inline ::openmldb::api::TSDimension* PutRequest::add_ts_dimensions() {
  // @@protoc_insertion_point(field_add:openmldb.api.PutRequest.ts_dimensions)
  return ts_dimensions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::TSDimension >&
PutRequest::ts_dimensions() const {
  // @@protoc_insertion_point(field_list:openmldb.api.PutRequest.ts_dimensions)
  return ts_dimensions_;
}

// optional uint32 format_version = 8 [default = 0];
inline bool PutRequest::has_format_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PutRequest::set_has_format_version() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PutRequest::clear_has_format_version() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PutRequest::clear_format_version() {
  format_version_ = 0u;
  clear_has_format_version();
}
inline ::google::protobuf::uint32 PutRequest::format_version() const {
  // @@protoc_insertion_point(field_get:openmldb.api.PutRequest.format_version)
  return format_version_;
}
inline void PutRequest::set_format_version(::google::protobuf::uint32 value) {
  set_has_format_version();
  format_version_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.PutRequest.format_version)
}

// -------------------------------------------------------------------

// PutResponse

// optional int32 code = 1;
inline bool PutResponse::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PutResponse::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PutResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PutResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 PutResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.PutResponse.code)
  return code_;
}
inline void PutResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.PutResponse.code)
}

// optional string msg = 2;
inline bool PutResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PutResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PutResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PutResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& PutResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.PutResponse.msg)
  return msg_.GetNoArena();
}
inline void PutResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.PutResponse.msg)
}
#if LANG_CXX11
inline void PutResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.PutResponse.msg)
}
#endif
inline void PutResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.PutResponse.msg)
}
inline void PutResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.PutResponse.msg)
}
inline ::std::string* PutResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.PutResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PutResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.PutResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.PutResponse.msg)
}

// -------------------------------------------------------------------

// DeleteRequest

// optional uint32 tid = 1;
inline bool DeleteRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeleteRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeleteRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeleteRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 DeleteRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.DeleteRequest.tid)
  return tid_;
}
inline void DeleteRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.DeleteRequest.tid)
}

// optional uint32 pid = 2;
inline bool DeleteRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DeleteRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DeleteRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DeleteRequest::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 DeleteRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.DeleteRequest.pid)
  return pid_;
}
inline void DeleteRequest::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.DeleteRequest.pid)
}

// optional string key = 3;
inline bool DeleteRequest::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteRequest::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteRequest::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& DeleteRequest::key() const {
  // @@protoc_insertion_point(field_get:openmldb.api.DeleteRequest.key)
  return key_.GetNoArena();
}
inline void DeleteRequest::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.DeleteRequest.key)
}
#if LANG_CXX11
inline void DeleteRequest::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.DeleteRequest.key)
}
#endif
inline void DeleteRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.DeleteRequest.key)
}
inline void DeleteRequest::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.DeleteRequest.key)
}
inline ::std::string* DeleteRequest::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:openmldb.api.DeleteRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteRequest::release_key() {
  // @@protoc_insertion_point(field_release:openmldb.api.DeleteRequest.key)
  if (!has_key()) {
    return NULL;
  }
  clear_has_key();
  return key_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.DeleteRequest.key)
}

// optional string idx_name = 4;
inline bool DeleteRequest::has_idx_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteRequest::set_has_idx_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteRequest::clear_has_idx_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteRequest::clear_idx_name() {
  idx_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_idx_name();
}
inline const ::std::string& DeleteRequest::idx_name() const {
  // @@protoc_insertion_point(field_get:openmldb.api.DeleteRequest.idx_name)
  return idx_name_.GetNoArena();
}
inline void DeleteRequest::set_idx_name(const ::std::string& value) {
  set_has_idx_name();
  idx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.DeleteRequest.idx_name)
}
#if LANG_CXX11
inline void DeleteRequest::set_idx_name(::std::string&& value) {
  set_has_idx_name();
  idx_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.DeleteRequest.idx_name)
}
#endif
inline void DeleteRequest::set_idx_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_idx_name();
  idx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.DeleteRequest.idx_name)
}
inline void DeleteRequest::set_idx_name(const char* value, size_t size) {
  set_has_idx_name();
  idx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.DeleteRequest.idx_name)
}
inline ::std::string* DeleteRequest::mutable_idx_name() {
  set_has_idx_name();
  // @@protoc_insertion_point(field_mutable:openmldb.api.DeleteRequest.idx_name)
  return idx_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteRequest::release_idx_name() {
  // @@protoc_insertion_point(field_release:openmldb.api.DeleteRequest.idx_name)
  if (!has_idx_name()) {
    return NULL;
  }
  clear_has_idx_name();
  return idx_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteRequest::set_allocated_idx_name(::std::string* idx_name) {
  if (idx_name != NULL) {
    set_has_idx_name();
  } else {
    clear_has_idx_name();
  }
  idx_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), idx_name);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.DeleteRequest.idx_name)
}

// -------------------------------------------------------------------

// ExecuteGcRequest

// optional uint32 tid = 1;
inline bool ExecuteGcRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExecuteGcRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExecuteGcRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExecuteGcRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 ExecuteGcRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ExecuteGcRequest.tid)
  return tid_;
}
inline void ExecuteGcRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ExecuteGcRequest.tid)
}

// optional uint32 pid = 2;
inline bool ExecuteGcRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExecuteGcRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExecuteGcRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExecuteGcRequest::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 ExecuteGcRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ExecuteGcRequest.pid)
  return pid_;
}
inline void ExecuteGcRequest::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ExecuteGcRequest.pid)
}

// -------------------------------------------------------------------

// GeneralRequest

// required int32 tid = 1;
inline bool GeneralRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GeneralRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GeneralRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GeneralRequest::clear_tid() {
  tid_ = 0;
  clear_has_tid();
}
inline ::google::protobuf::int32 GeneralRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GeneralRequest.tid)
  return tid_;
}
inline void GeneralRequest::set_tid(::google::protobuf::int32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GeneralRequest.tid)
}

// required int32 pid = 2;
inline bool GeneralRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GeneralRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GeneralRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GeneralRequest::clear_pid() {
  pid_ = 0;
  clear_has_pid();
}
inline ::google::protobuf::int32 GeneralRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GeneralRequest.pid)
  return pid_;
}
inline void GeneralRequest::set_pid(::google::protobuf::int32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GeneralRequest.pid)
}

// optional .openmldb.api.TaskInfo task_info = 3;
inline bool GeneralRequest::has_task_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GeneralRequest::set_has_task_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GeneralRequest::clear_has_task_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GeneralRequest::clear_task_info() {
  if (task_info_ != NULL) task_info_->Clear();
  clear_has_task_info();
}
inline const ::openmldb::api::TaskInfo& GeneralRequest::_internal_task_info() const {
  return *task_info_;
}
inline const ::openmldb::api::TaskInfo& GeneralRequest::task_info() const {
  const ::openmldb::api::TaskInfo* p = task_info_;
  // @@protoc_insertion_point(field_get:openmldb.api.GeneralRequest.task_info)
  return p != NULL ? *p : *reinterpret_cast<const ::openmldb::api::TaskInfo*>(
      &::openmldb::api::_TaskInfo_default_instance_);
}
inline ::openmldb::api::TaskInfo* GeneralRequest::release_task_info() {
  // @@protoc_insertion_point(field_release:openmldb.api.GeneralRequest.task_info)
  clear_has_task_info();
  ::openmldb::api::TaskInfo* temp = task_info_;
  task_info_ = NULL;
  return temp;
}
inline ::openmldb::api::TaskInfo* GeneralRequest::mutable_task_info() {
  set_has_task_info();
  if (task_info_ == NULL) {
    auto* p = CreateMaybeMessage<::openmldb::api::TaskInfo>(GetArenaNoVirtual());
    task_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:openmldb.api.GeneralRequest.task_info)
  return task_info_;
}
inline void GeneralRequest::set_allocated_task_info(::openmldb::api::TaskInfo* task_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete task_info_;
  }
  if (task_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      task_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, task_info, submessage_arena);
    }
    set_has_task_info();
  } else {
    clear_has_task_info();
  }
  task_info_ = task_info;
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.GeneralRequest.task_info)
}

// optional uint64 offset = 4;
inline bool GeneralRequest::has_offset() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GeneralRequest::set_has_offset() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GeneralRequest::clear_has_offset() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GeneralRequest::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
  clear_has_offset();
}
inline ::google::protobuf::uint64 GeneralRequest::offset() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GeneralRequest.offset)
  return offset_;
}
inline void GeneralRequest::set_offset(::google::protobuf::uint64 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GeneralRequest.offset)
}

// optional .openmldb.common.StorageMode storage_mode = 5 [default = kMemory];
inline bool GeneralRequest::has_storage_mode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GeneralRequest::set_has_storage_mode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GeneralRequest::clear_has_storage_mode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GeneralRequest::clear_storage_mode() {
  storage_mode_ = 1;
  clear_has_storage_mode();
}
inline ::openmldb::common::StorageMode GeneralRequest::storage_mode() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GeneralRequest.storage_mode)
  return static_cast< ::openmldb::common::StorageMode >(storage_mode_);
}
inline void GeneralRequest::set_storage_mode(::openmldb::common::StorageMode value) {
  assert(::openmldb::common::StorageMode_IsValid(value));
  set_has_storage_mode();
  storage_mode_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GeneralRequest.storage_mode)
}

// -------------------------------------------------------------------

// TaskStatusRequest

// -------------------------------------------------------------------

// TaskStatusResponse

// optional int32 code = 1;
inline bool TaskStatusResponse::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TaskStatusResponse::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TaskStatusResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TaskStatusResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 TaskStatusResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TaskStatusResponse.code)
  return code_;
}
inline void TaskStatusResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TaskStatusResponse.code)
}

// optional string msg = 2;
inline bool TaskStatusResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TaskStatusResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TaskStatusResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TaskStatusResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& TaskStatusResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TaskStatusResponse.msg)
  return msg_.GetNoArena();
}
inline void TaskStatusResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.TaskStatusResponse.msg)
}
#if LANG_CXX11
inline void TaskStatusResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.TaskStatusResponse.msg)
}
#endif
inline void TaskStatusResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.TaskStatusResponse.msg)
}
inline void TaskStatusResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.TaskStatusResponse.msg)
}
inline ::std::string* TaskStatusResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.TaskStatusResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TaskStatusResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.TaskStatusResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskStatusResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.TaskStatusResponse.msg)
}

// repeated .openmldb.api.TaskInfo task = 3;
inline int TaskStatusResponse::task_size() const {
  return task_.size();
}
inline void TaskStatusResponse::clear_task() {
  task_.Clear();
}
inline ::openmldb::api::TaskInfo* TaskStatusResponse::mutable_task(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.TaskStatusResponse.task)
  return task_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::TaskInfo >*
TaskStatusResponse::mutable_task() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.TaskStatusResponse.task)
  return &task_;
}
inline const ::openmldb::api::TaskInfo& TaskStatusResponse::task(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.TaskStatusResponse.task)
  return task_.Get(index);
}
inline ::openmldb::api::TaskInfo* TaskStatusResponse::add_task() {
  // @@protoc_insertion_point(field_add:openmldb.api.TaskStatusResponse.task)
  return task_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::TaskInfo >&
TaskStatusResponse::task() const {
  // @@protoc_insertion_point(field_list:openmldb.api.TaskStatusResponse.task)
  return task_;
}

// -------------------------------------------------------------------

// DeleteTaskRequest

// repeated uint64 op_id = 1;
inline int DeleteTaskRequest::op_id_size() const {
  return op_id_.size();
}
inline void DeleteTaskRequest::clear_op_id() {
  op_id_.Clear();
}
inline ::google::protobuf::uint64 DeleteTaskRequest::op_id(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.DeleteTaskRequest.op_id)
  return op_id_.Get(index);
}
inline void DeleteTaskRequest::set_op_id(int index, ::google::protobuf::uint64 value) {
  op_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:openmldb.api.DeleteTaskRequest.op_id)
}
inline void DeleteTaskRequest::add_op_id(::google::protobuf::uint64 value) {
  op_id_.Add(value);
  // @@protoc_insertion_point(field_add:openmldb.api.DeleteTaskRequest.op_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
DeleteTaskRequest::op_id() const {
  // @@protoc_insertion_point(field_list:openmldb.api.DeleteTaskRequest.op_id)
  return op_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
DeleteTaskRequest::mutable_op_id() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.DeleteTaskRequest.op_id)
  return &op_id_;
}

// -------------------------------------------------------------------

// GeneralResponse

// optional int32 code = 1;
inline bool GeneralResponse::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GeneralResponse::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GeneralResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GeneralResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 GeneralResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GeneralResponse.code)
  return code_;
}
inline void GeneralResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GeneralResponse.code)
}

// optional string msg = 2;
inline bool GeneralResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GeneralResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GeneralResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GeneralResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& GeneralResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GeneralResponse.msg)
  return msg_.GetNoArena();
}
inline void GeneralResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.GeneralResponse.msg)
}
#if LANG_CXX11
inline void GeneralResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.GeneralResponse.msg)
}
#endif
inline void GeneralResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.GeneralResponse.msg)
}
inline void GeneralResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.GeneralResponse.msg)
}
inline ::std::string* GeneralResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.GeneralResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GeneralResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.GeneralResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GeneralResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.GeneralResponse.msg)
}

// repeated int64 additional_ids = 3;
inline int GeneralResponse::additional_ids_size() const {
  return additional_ids_.size();
}
inline void GeneralResponse::clear_additional_ids() {
  additional_ids_.Clear();
}
inline ::google::protobuf::int64 GeneralResponse::additional_ids(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.GeneralResponse.additional_ids)
  return additional_ids_.Get(index);
}
inline void GeneralResponse::set_additional_ids(int index, ::google::protobuf::int64 value) {
  additional_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:openmldb.api.GeneralResponse.additional_ids)
}
inline void GeneralResponse::add_additional_ids(::google::protobuf::int64 value) {
  additional_ids_.Add(value);
  // @@protoc_insertion_point(field_add:openmldb.api.GeneralResponse.additional_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GeneralResponse::additional_ids() const {
  // @@protoc_insertion_point(field_list:openmldb.api.GeneralResponse.additional_ids)
  return additional_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GeneralResponse::mutable_additional_ids() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.GeneralResponse.additional_ids)
  return &additional_ids_;
}

// optional uint32 count = 4;
inline bool GeneralResponse::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GeneralResponse::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GeneralResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GeneralResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 GeneralResponse::count() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GeneralResponse.count)
  return count_;
}
inline void GeneralResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GeneralResponse.count)
}

// -------------------------------------------------------------------

// ScanRequest

// optional string pk = 1;
inline bool ScanRequest::has_pk() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScanRequest::set_has_pk() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScanRequest::clear_has_pk() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScanRequest::clear_pk() {
  pk_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pk();
}
inline const ::std::string& ScanRequest::pk() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ScanRequest.pk)
  return pk_.GetNoArena();
}
inline void ScanRequest::set_pk(const ::std::string& value) {
  set_has_pk();
  pk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.ScanRequest.pk)
}
#if LANG_CXX11
inline void ScanRequest::set_pk(::std::string&& value) {
  set_has_pk();
  pk_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.ScanRequest.pk)
}
#endif
inline void ScanRequest::set_pk(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pk();
  pk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.ScanRequest.pk)
}
inline void ScanRequest::set_pk(const char* value, size_t size) {
  set_has_pk();
  pk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.ScanRequest.pk)
}
inline ::std::string* ScanRequest::mutable_pk() {
  set_has_pk();
  // @@protoc_insertion_point(field_mutable:openmldb.api.ScanRequest.pk)
  return pk_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScanRequest::release_pk() {
  // @@protoc_insertion_point(field_release:openmldb.api.ScanRequest.pk)
  if (!has_pk()) {
    return NULL;
  }
  clear_has_pk();
  return pk_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScanRequest::set_allocated_pk(::std::string* pk) {
  if (pk != NULL) {
    set_has_pk();
  } else {
    clear_has_pk();
  }
  pk_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pk);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.ScanRequest.pk)
}

// optional uint64 st = 2;
inline bool ScanRequest::has_st() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ScanRequest::set_has_st() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ScanRequest::clear_has_st() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ScanRequest::clear_st() {
  st_ = GOOGLE_ULONGLONG(0);
  clear_has_st();
}
inline ::google::protobuf::uint64 ScanRequest::st() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ScanRequest.st)
  return st_;
}
inline void ScanRequest::set_st(::google::protobuf::uint64 value) {
  set_has_st();
  st_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ScanRequest.st)
}

// optional uint64 et = 3;
inline bool ScanRequest::has_et() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ScanRequest::set_has_et() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ScanRequest::clear_has_et() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ScanRequest::clear_et() {
  et_ = GOOGLE_ULONGLONG(0);
  clear_has_et();
}
inline ::google::protobuf::uint64 ScanRequest::et() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ScanRequest.et)
  return et_;
}
inline void ScanRequest::set_et(::google::protobuf::uint64 value) {
  set_has_et();
  et_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ScanRequest.et)
}

// optional uint32 limit = 4;
inline bool ScanRequest::has_limit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ScanRequest::set_has_limit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ScanRequest::clear_has_limit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ScanRequest::clear_limit() {
  limit_ = 0u;
  clear_has_limit();
}
inline ::google::protobuf::uint32 ScanRequest::limit() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ScanRequest.limit)
  return limit_;
}
inline void ScanRequest::set_limit(::google::protobuf::uint32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ScanRequest.limit)
}

// optional uint32 tid = 5;
inline bool ScanRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ScanRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ScanRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ScanRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 ScanRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ScanRequest.tid)
  return tid_;
}
inline void ScanRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ScanRequest.tid)
}

// optional uint32 pid = 6;
inline bool ScanRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ScanRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ScanRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ScanRequest::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 ScanRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ScanRequest.pid)
  return pid_;
}
inline void ScanRequest::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ScanRequest.pid)
}

// optional bool enable_remove_duplicated_record = 7 [default = false];
inline bool ScanRequest::has_enable_remove_duplicated_record() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ScanRequest::set_has_enable_remove_duplicated_record() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ScanRequest::clear_has_enable_remove_duplicated_record() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ScanRequest::clear_enable_remove_duplicated_record() {
  enable_remove_duplicated_record_ = false;
  clear_has_enable_remove_duplicated_record();
}
inline bool ScanRequest::enable_remove_duplicated_record() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ScanRequest.enable_remove_duplicated_record)
  return enable_remove_duplicated_record_;
}
inline void ScanRequest::set_enable_remove_duplicated_record(bool value) {
  set_has_enable_remove_duplicated_record();
  enable_remove_duplicated_record_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ScanRequest.enable_remove_duplicated_record)
}

// optional string idx_name = 8;
inline bool ScanRequest::has_idx_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScanRequest::set_has_idx_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScanRequest::clear_has_idx_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScanRequest::clear_idx_name() {
  idx_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_idx_name();
}
inline const ::std::string& ScanRequest::idx_name() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ScanRequest.idx_name)
  return idx_name_.GetNoArena();
}
inline void ScanRequest::set_idx_name(const ::std::string& value) {
  set_has_idx_name();
  idx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.ScanRequest.idx_name)
}
#if LANG_CXX11
inline void ScanRequest::set_idx_name(::std::string&& value) {
  set_has_idx_name();
  idx_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.ScanRequest.idx_name)
}
#endif
inline void ScanRequest::set_idx_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_idx_name();
  idx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.ScanRequest.idx_name)
}
inline void ScanRequest::set_idx_name(const char* value, size_t size) {
  set_has_idx_name();
  idx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.ScanRequest.idx_name)
}
inline ::std::string* ScanRequest::mutable_idx_name() {
  set_has_idx_name();
  // @@protoc_insertion_point(field_mutable:openmldb.api.ScanRequest.idx_name)
  return idx_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScanRequest::release_idx_name() {
  // @@protoc_insertion_point(field_release:openmldb.api.ScanRequest.idx_name)
  if (!has_idx_name()) {
    return NULL;
  }
  clear_has_idx_name();
  return idx_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScanRequest::set_allocated_idx_name(::std::string* idx_name) {
  if (idx_name != NULL) {
    set_has_idx_name();
  } else {
    clear_has_idx_name();
  }
  idx_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), idx_name);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.ScanRequest.idx_name)
}

// optional bool enable_remove_ts = 9 [default = false];
inline bool ScanRequest::has_enable_remove_ts() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ScanRequest::set_has_enable_remove_ts() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ScanRequest::clear_has_enable_remove_ts() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ScanRequest::clear_enable_remove_ts() {
  enable_remove_ts_ = false;
  clear_has_enable_remove_ts();
}
inline bool ScanRequest::enable_remove_ts() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ScanRequest.enable_remove_ts)
  return enable_remove_ts_;
}
inline void ScanRequest::set_enable_remove_ts(bool value) {
  set_has_enable_remove_ts();
  enable_remove_ts_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ScanRequest.enable_remove_ts)
}

// repeated uint32 projection = 10;
inline int ScanRequest::projection_size() const {
  return projection_.size();
}
inline void ScanRequest::clear_projection() {
  projection_.Clear();
}
inline ::google::protobuf::uint32 ScanRequest::projection(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.ScanRequest.projection)
  return projection_.Get(index);
}
inline void ScanRequest::set_projection(int index, ::google::protobuf::uint32 value) {
  projection_.Set(index, value);
  // @@protoc_insertion_point(field_set:openmldb.api.ScanRequest.projection)
}
inline void ScanRequest::add_projection(::google::protobuf::uint32 value) {
  projection_.Add(value);
  // @@protoc_insertion_point(field_add:openmldb.api.ScanRequest.projection)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ScanRequest::projection() const {
  // @@protoc_insertion_point(field_list:openmldb.api.ScanRequest.projection)
  return projection_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ScanRequest::mutable_projection() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.ScanRequest.projection)
  return &projection_;
}

// repeated uint32 pid_group = 11;
inline int ScanRequest::pid_group_size() const {
  return pid_group_.size();
}
inline void ScanRequest::clear_pid_group() {
  pid_group_.Clear();
}
inline ::google::protobuf::uint32 ScanRequest::pid_group(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.ScanRequest.pid_group)
  return pid_group_.Get(index);
}
inline void ScanRequest::set_pid_group(int index, ::google::protobuf::uint32 value) {
  pid_group_.Set(index, value);
  // @@protoc_insertion_point(field_set:openmldb.api.ScanRequest.pid_group)
}
inline void ScanRequest::add_pid_group(::google::protobuf::uint32 value) {
  pid_group_.Add(value);
  // @@protoc_insertion_point(field_add:openmldb.api.ScanRequest.pid_group)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ScanRequest::pid_group() const {
  // @@protoc_insertion_point(field_list:openmldb.api.ScanRequest.pid_group)
  return pid_group_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ScanRequest::mutable_pid_group() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.ScanRequest.pid_group)
  return &pid_group_;
}

// optional bool use_attachment = 12 [default = false];
inline bool ScanRequest::has_use_attachment() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ScanRequest::set_has_use_attachment() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ScanRequest::clear_has_use_attachment() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ScanRequest::clear_use_attachment() {
  use_attachment_ = false;
  clear_has_use_attachment();
}
inline bool ScanRequest::use_attachment() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ScanRequest.use_attachment)
  return use_attachment_;
}
inline void ScanRequest::set_use_attachment(bool value) {
  set_has_use_attachment();
  use_attachment_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ScanRequest.use_attachment)
}

// optional uint32 skip_record_num = 13 [default = 0];
inline bool ScanRequest::has_skip_record_num() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ScanRequest::set_has_skip_record_num() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ScanRequest::clear_has_skip_record_num() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ScanRequest::clear_skip_record_num() {
  skip_record_num_ = 0u;
  clear_has_skip_record_num();
}
inline ::google::protobuf::uint32 ScanRequest::skip_record_num() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ScanRequest.skip_record_num)
  return skip_record_num_;
}
inline void ScanRequest::set_skip_record_num(::google::protobuf::uint32 value) {
  set_has_skip_record_num();
  skip_record_num_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ScanRequest.skip_record_num)
}

// -------------------------------------------------------------------

// TraverseRequest

// optional uint32 tid = 1;
inline bool TraverseRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TraverseRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TraverseRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TraverseRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 TraverseRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TraverseRequest.tid)
  return tid_;
}
inline void TraverseRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TraverseRequest.tid)
}

// optional uint32 pid = 2;
inline bool TraverseRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TraverseRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TraverseRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TraverseRequest::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 TraverseRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TraverseRequest.pid)
  return pid_;
}
inline void TraverseRequest::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TraverseRequest.pid)
}

// optional string idx_name = 3;
inline bool TraverseRequest::has_idx_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TraverseRequest::set_has_idx_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TraverseRequest::clear_has_idx_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TraverseRequest::clear_idx_name() {
  idx_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_idx_name();
}
inline const ::std::string& TraverseRequest::idx_name() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TraverseRequest.idx_name)
  return idx_name_.GetNoArena();
}
inline void TraverseRequest::set_idx_name(const ::std::string& value) {
  set_has_idx_name();
  idx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.TraverseRequest.idx_name)
}
#if LANG_CXX11
inline void TraverseRequest::set_idx_name(::std::string&& value) {
  set_has_idx_name();
  idx_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.TraverseRequest.idx_name)
}
#endif
inline void TraverseRequest::set_idx_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_idx_name();
  idx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.TraverseRequest.idx_name)
}
inline void TraverseRequest::set_idx_name(const char* value, size_t size) {
  set_has_idx_name();
  idx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.TraverseRequest.idx_name)
}
inline ::std::string* TraverseRequest::mutable_idx_name() {
  set_has_idx_name();
  // @@protoc_insertion_point(field_mutable:openmldb.api.TraverseRequest.idx_name)
  return idx_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TraverseRequest::release_idx_name() {
  // @@protoc_insertion_point(field_release:openmldb.api.TraverseRequest.idx_name)
  if (!has_idx_name()) {
    return NULL;
  }
  clear_has_idx_name();
  return idx_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TraverseRequest::set_allocated_idx_name(::std::string* idx_name) {
  if (idx_name != NULL) {
    set_has_idx_name();
  } else {
    clear_has_idx_name();
  }
  idx_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), idx_name);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.TraverseRequest.idx_name)
}

// optional uint32 limit = 4 [default = 100];
inline bool TraverseRequest::has_limit() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TraverseRequest::set_has_limit() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TraverseRequest::clear_has_limit() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TraverseRequest::clear_limit() {
  limit_ = 100u;
  clear_has_limit();
}
inline ::google::protobuf::uint32 TraverseRequest::limit() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TraverseRequest.limit)
  return limit_;
}
inline void TraverseRequest::set_limit(::google::protobuf::uint32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TraverseRequest.limit)
}

// optional string pk = 5;
inline bool TraverseRequest::has_pk() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TraverseRequest::set_has_pk() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TraverseRequest::clear_has_pk() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TraverseRequest::clear_pk() {
  pk_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pk();
}
inline const ::std::string& TraverseRequest::pk() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TraverseRequest.pk)
  return pk_.GetNoArena();
}
inline void TraverseRequest::set_pk(const ::std::string& value) {
  set_has_pk();
  pk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.TraverseRequest.pk)
}
#if LANG_CXX11
inline void TraverseRequest::set_pk(::std::string&& value) {
  set_has_pk();
  pk_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.TraverseRequest.pk)
}
#endif
inline void TraverseRequest::set_pk(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pk();
  pk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.TraverseRequest.pk)
}
inline void TraverseRequest::set_pk(const char* value, size_t size) {
  set_has_pk();
  pk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.TraverseRequest.pk)
}
inline ::std::string* TraverseRequest::mutable_pk() {
  set_has_pk();
  // @@protoc_insertion_point(field_mutable:openmldb.api.TraverseRequest.pk)
  return pk_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TraverseRequest::release_pk() {
  // @@protoc_insertion_point(field_release:openmldb.api.TraverseRequest.pk)
  if (!has_pk()) {
    return NULL;
  }
  clear_has_pk();
  return pk_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TraverseRequest::set_allocated_pk(::std::string* pk) {
  if (pk != NULL) {
    set_has_pk();
  } else {
    clear_has_pk();
  }
  pk_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pk);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.TraverseRequest.pk)
}

// optional uint64 ts = 6;
inline bool TraverseRequest::has_ts() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TraverseRequest::set_has_ts() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TraverseRequest::clear_has_ts() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TraverseRequest::clear_ts() {
  ts_ = GOOGLE_ULONGLONG(0);
  clear_has_ts();
}
inline ::google::protobuf::uint64 TraverseRequest::ts() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TraverseRequest.ts)
  return ts_;
}
inline void TraverseRequest::set_ts(::google::protobuf::uint64 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TraverseRequest.ts)
}

// optional bool enable_remove_duplicated_record = 7 [default = false];
inline bool TraverseRequest::has_enable_remove_duplicated_record() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TraverseRequest::set_has_enable_remove_duplicated_record() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TraverseRequest::clear_has_enable_remove_duplicated_record() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TraverseRequest::clear_enable_remove_duplicated_record() {
  enable_remove_duplicated_record_ = false;
  clear_has_enable_remove_duplicated_record();
}
inline bool TraverseRequest::enable_remove_duplicated_record() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TraverseRequest.enable_remove_duplicated_record)
  return enable_remove_duplicated_record_;
}
inline void TraverseRequest::set_enable_remove_duplicated_record(bool value) {
  set_has_enable_remove_duplicated_record();
  enable_remove_duplicated_record_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TraverseRequest.enable_remove_duplicated_record)
}

// optional bool skip_current_pk = 8 [default = false];
inline bool TraverseRequest::has_skip_current_pk() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TraverseRequest::set_has_skip_current_pk() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TraverseRequest::clear_has_skip_current_pk() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TraverseRequest::clear_skip_current_pk() {
  skip_current_pk_ = false;
  clear_has_skip_current_pk();
}
inline bool TraverseRequest::skip_current_pk() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TraverseRequest.skip_current_pk)
  return skip_current_pk_;
}
inline void TraverseRequest::set_skip_current_pk(bool value) {
  set_has_skip_current_pk();
  skip_current_pk_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TraverseRequest.skip_current_pk)
}

// -------------------------------------------------------------------

// TraverseResponse

// optional bytes pairs = 1;
inline bool TraverseResponse::has_pairs() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TraverseResponse::set_has_pairs() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TraverseResponse::clear_has_pairs() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TraverseResponse::clear_pairs() {
  pairs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pairs();
}
inline const ::std::string& TraverseResponse::pairs() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TraverseResponse.pairs)
  return pairs_.GetNoArena();
}
inline void TraverseResponse::set_pairs(const ::std::string& value) {
  set_has_pairs();
  pairs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.TraverseResponse.pairs)
}
#if LANG_CXX11
inline void TraverseResponse::set_pairs(::std::string&& value) {
  set_has_pairs();
  pairs_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.TraverseResponse.pairs)
}
#endif
inline void TraverseResponse::set_pairs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pairs();
  pairs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.TraverseResponse.pairs)
}
inline void TraverseResponse::set_pairs(const void* value, size_t size) {
  set_has_pairs();
  pairs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.TraverseResponse.pairs)
}
inline ::std::string* TraverseResponse::mutable_pairs() {
  set_has_pairs();
  // @@protoc_insertion_point(field_mutable:openmldb.api.TraverseResponse.pairs)
  return pairs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TraverseResponse::release_pairs() {
  // @@protoc_insertion_point(field_release:openmldb.api.TraverseResponse.pairs)
  if (!has_pairs()) {
    return NULL;
  }
  clear_has_pairs();
  return pairs_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TraverseResponse::set_allocated_pairs(::std::string* pairs) {
  if (pairs != NULL) {
    set_has_pairs();
  } else {
    clear_has_pairs();
  }
  pairs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pairs);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.TraverseResponse.pairs)
}

// optional string msg = 2;
inline bool TraverseResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TraverseResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TraverseResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TraverseResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& TraverseResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TraverseResponse.msg)
  return msg_.GetNoArena();
}
inline void TraverseResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.TraverseResponse.msg)
}
#if LANG_CXX11
inline void TraverseResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.TraverseResponse.msg)
}
#endif
inline void TraverseResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.TraverseResponse.msg)
}
inline void TraverseResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.TraverseResponse.msg)
}
inline ::std::string* TraverseResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.TraverseResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TraverseResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.TraverseResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TraverseResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.TraverseResponse.msg)
}

// optional int32 code = 3;
inline bool TraverseResponse::has_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TraverseResponse::set_has_code() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TraverseResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TraverseResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 TraverseResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TraverseResponse.code)
  return code_;
}
inline void TraverseResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TraverseResponse.code)
}

// optional uint32 count = 4;
inline bool TraverseResponse::has_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TraverseResponse::set_has_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TraverseResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TraverseResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 TraverseResponse::count() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TraverseResponse.count)
  return count_;
}
inline void TraverseResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TraverseResponse.count)
}

// optional string pk = 5;
inline bool TraverseResponse::has_pk() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TraverseResponse::set_has_pk() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TraverseResponse::clear_has_pk() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TraverseResponse::clear_pk() {
  pk_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pk();
}
inline const ::std::string& TraverseResponse::pk() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TraverseResponse.pk)
  return pk_.GetNoArena();
}
inline void TraverseResponse::set_pk(const ::std::string& value) {
  set_has_pk();
  pk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.TraverseResponse.pk)
}
#if LANG_CXX11
inline void TraverseResponse::set_pk(::std::string&& value) {
  set_has_pk();
  pk_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.TraverseResponse.pk)
}
#endif
inline void TraverseResponse::set_pk(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pk();
  pk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.TraverseResponse.pk)
}
inline void TraverseResponse::set_pk(const char* value, size_t size) {
  set_has_pk();
  pk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.TraverseResponse.pk)
}
inline ::std::string* TraverseResponse::mutable_pk() {
  set_has_pk();
  // @@protoc_insertion_point(field_mutable:openmldb.api.TraverseResponse.pk)
  return pk_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TraverseResponse::release_pk() {
  // @@protoc_insertion_point(field_release:openmldb.api.TraverseResponse.pk)
  if (!has_pk()) {
    return NULL;
  }
  clear_has_pk();
  return pk_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TraverseResponse::set_allocated_pk(::std::string* pk) {
  if (pk != NULL) {
    set_has_pk();
  } else {
    clear_has_pk();
  }
  pk_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pk);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.TraverseResponse.pk)
}

// optional uint64 ts = 6;
inline bool TraverseResponse::has_ts() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TraverseResponse::set_has_ts() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TraverseResponse::clear_has_ts() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TraverseResponse::clear_ts() {
  ts_ = GOOGLE_ULONGLONG(0);
  clear_has_ts();
}
inline ::google::protobuf::uint64 TraverseResponse::ts() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TraverseResponse.ts)
  return ts_;
}
inline void TraverseResponse::set_ts(::google::protobuf::uint64 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TraverseResponse.ts)
}

// optional bool is_finish = 7;
inline bool TraverseResponse::has_is_finish() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TraverseResponse::set_has_is_finish() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TraverseResponse::clear_has_is_finish() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TraverseResponse::clear_is_finish() {
  is_finish_ = false;
  clear_has_is_finish();
}
inline bool TraverseResponse::is_finish() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TraverseResponse.is_finish)
  return is_finish_;
}
inline void TraverseResponse::set_is_finish(bool value) {
  set_has_is_finish();
  is_finish_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TraverseResponse.is_finish)
}

// optional uint64 snapshot_id = 8;
inline bool TraverseResponse::has_snapshot_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TraverseResponse::set_has_snapshot_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TraverseResponse::clear_has_snapshot_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TraverseResponse::clear_snapshot_id() {
  snapshot_id_ = GOOGLE_ULONGLONG(0);
  clear_has_snapshot_id();
}
inline ::google::protobuf::uint64 TraverseResponse::snapshot_id() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TraverseResponse.snapshot_id)
  return snapshot_id_;
}
inline void TraverseResponse::set_snapshot_id(::google::protobuf::uint64 value) {
  set_has_snapshot_id();
  snapshot_id_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TraverseResponse.snapshot_id)
}

// -------------------------------------------------------------------

// ScanResponse

// optional bytes pairs = 1;
inline bool ScanResponse::has_pairs() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScanResponse::set_has_pairs() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScanResponse::clear_has_pairs() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScanResponse::clear_pairs() {
  pairs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pairs();
}
inline const ::std::string& ScanResponse::pairs() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ScanResponse.pairs)
  return pairs_.GetNoArena();
}
inline void ScanResponse::set_pairs(const ::std::string& value) {
  set_has_pairs();
  pairs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.ScanResponse.pairs)
}
#if LANG_CXX11
inline void ScanResponse::set_pairs(::std::string&& value) {
  set_has_pairs();
  pairs_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.ScanResponse.pairs)
}
#endif
inline void ScanResponse::set_pairs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pairs();
  pairs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.ScanResponse.pairs)
}
inline void ScanResponse::set_pairs(const void* value, size_t size) {
  set_has_pairs();
  pairs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.ScanResponse.pairs)
}
inline ::std::string* ScanResponse::mutable_pairs() {
  set_has_pairs();
  // @@protoc_insertion_point(field_mutable:openmldb.api.ScanResponse.pairs)
  return pairs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScanResponse::release_pairs() {
  // @@protoc_insertion_point(field_release:openmldb.api.ScanResponse.pairs)
  if (!has_pairs()) {
    return NULL;
  }
  clear_has_pairs();
  return pairs_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScanResponse::set_allocated_pairs(::std::string* pairs) {
  if (pairs != NULL) {
    set_has_pairs();
  } else {
    clear_has_pairs();
  }
  pairs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pairs);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.ScanResponse.pairs)
}

// optional string msg = 2;
inline bool ScanResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScanResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScanResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScanResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& ScanResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ScanResponse.msg)
  return msg_.GetNoArena();
}
inline void ScanResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.ScanResponse.msg)
}
#if LANG_CXX11
inline void ScanResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.ScanResponse.msg)
}
#endif
inline void ScanResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.ScanResponse.msg)
}
inline void ScanResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.ScanResponse.msg)
}
inline ::std::string* ScanResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.ScanResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScanResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.ScanResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScanResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.ScanResponse.msg)
}

// optional int32 code = 3;
inline bool ScanResponse::has_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ScanResponse::set_has_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ScanResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ScanResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 ScanResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ScanResponse.code)
  return code_;
}
inline void ScanResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ScanResponse.code)
}

// optional uint32 count = 4;
inline bool ScanResponse::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ScanResponse::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ScanResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ScanResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 ScanResponse::count() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ScanResponse.count)
  return count_;
}
inline void ScanResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ScanResponse.count)
}

// optional uint32 buf_size = 5;
inline bool ScanResponse::has_buf_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ScanResponse::set_has_buf_size() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ScanResponse::clear_has_buf_size() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ScanResponse::clear_buf_size() {
  buf_size_ = 0u;
  clear_has_buf_size();
}
inline ::google::protobuf::uint32 ScanResponse::buf_size() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ScanResponse.buf_size)
  return buf_size_;
}
inline void ScanResponse::set_buf_size(::google::protobuf::uint32 value) {
  set_has_buf_size();
  buf_size_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ScanResponse.buf_size)
}

// optional bool is_finish = 6 [default = true];
inline bool ScanResponse::has_is_finish() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ScanResponse::set_has_is_finish() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ScanResponse::clear_has_is_finish() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ScanResponse::clear_is_finish() {
  is_finish_ = true;
  clear_has_is_finish();
}
inline bool ScanResponse::is_finish() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ScanResponse.is_finish)
  return is_finish_;
}
inline void ScanResponse::set_is_finish(bool value) {
  set_has_is_finish();
  is_finish_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ScanResponse.is_finish)
}

// -------------------------------------------------------------------

// ReplicaRequest

// optional uint32 tid = 1;
inline bool ReplicaRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplicaRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplicaRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplicaRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 ReplicaRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ReplicaRequest.tid)
  return tid_;
}
inline void ReplicaRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ReplicaRequest.tid)
}

// optional uint32 pid = 2;
inline bool ReplicaRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReplicaRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReplicaRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReplicaRequest::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 ReplicaRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ReplicaRequest.pid)
  return pid_;
}
inline void ReplicaRequest::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ReplicaRequest.pid)
}

// optional string endpoint = 3;
inline bool ReplicaRequest::has_endpoint() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplicaRequest::set_has_endpoint() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplicaRequest::clear_has_endpoint() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplicaRequest::clear_endpoint() {
  endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_endpoint();
}
inline const ::std::string& ReplicaRequest::endpoint() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ReplicaRequest.endpoint)
  return endpoint_.GetNoArena();
}
inline void ReplicaRequest::set_endpoint(const ::std::string& value) {
  set_has_endpoint();
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.ReplicaRequest.endpoint)
}
#if LANG_CXX11
inline void ReplicaRequest::set_endpoint(::std::string&& value) {
  set_has_endpoint();
  endpoint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.ReplicaRequest.endpoint)
}
#endif
inline void ReplicaRequest::set_endpoint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_endpoint();
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.ReplicaRequest.endpoint)
}
inline void ReplicaRequest::set_endpoint(const char* value, size_t size) {
  set_has_endpoint();
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.ReplicaRequest.endpoint)
}
inline ::std::string* ReplicaRequest::mutable_endpoint() {
  set_has_endpoint();
  // @@protoc_insertion_point(field_mutable:openmldb.api.ReplicaRequest.endpoint)
  return endpoint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReplicaRequest::release_endpoint() {
  // @@protoc_insertion_point(field_release:openmldb.api.ReplicaRequest.endpoint)
  if (!has_endpoint()) {
    return NULL;
  }
  clear_has_endpoint();
  return endpoint_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReplicaRequest::set_allocated_endpoint(::std::string* endpoint) {
  if (endpoint != NULL) {
    set_has_endpoint();
  } else {
    clear_has_endpoint();
  }
  endpoint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), endpoint);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.ReplicaRequest.endpoint)
}

// optional .openmldb.api.TaskInfo task_info = 4;
inline bool ReplicaRequest::has_task_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplicaRequest::set_has_task_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplicaRequest::clear_has_task_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplicaRequest::clear_task_info() {
  if (task_info_ != NULL) task_info_->Clear();
  clear_has_task_info();
}
inline const ::openmldb::api::TaskInfo& ReplicaRequest::_internal_task_info() const {
  return *task_info_;
}
inline const ::openmldb::api::TaskInfo& ReplicaRequest::task_info() const {
  const ::openmldb::api::TaskInfo* p = task_info_;
  // @@protoc_insertion_point(field_get:openmldb.api.ReplicaRequest.task_info)
  return p != NULL ? *p : *reinterpret_cast<const ::openmldb::api::TaskInfo*>(
      &::openmldb::api::_TaskInfo_default_instance_);
}
inline ::openmldb::api::TaskInfo* ReplicaRequest::release_task_info() {
  // @@protoc_insertion_point(field_release:openmldb.api.ReplicaRequest.task_info)
  clear_has_task_info();
  ::openmldb::api::TaskInfo* temp = task_info_;
  task_info_ = NULL;
  return temp;
}
inline ::openmldb::api::TaskInfo* ReplicaRequest::mutable_task_info() {
  set_has_task_info();
  if (task_info_ == NULL) {
    auto* p = CreateMaybeMessage<::openmldb::api::TaskInfo>(GetArenaNoVirtual());
    task_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:openmldb.api.ReplicaRequest.task_info)
  return task_info_;
}
inline void ReplicaRequest::set_allocated_task_info(::openmldb::api::TaskInfo* task_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete task_info_;
  }
  if (task_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      task_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, task_info, submessage_arena);
    }
    set_has_task_info();
  } else {
    clear_has_task_info();
  }
  task_info_ = task_info;
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.ReplicaRequest.task_info)
}

// optional uint32 remote_tid = 5;
inline bool ReplicaRequest::has_remote_tid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReplicaRequest::set_has_remote_tid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReplicaRequest::clear_has_remote_tid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReplicaRequest::clear_remote_tid() {
  remote_tid_ = 0u;
  clear_has_remote_tid();
}
inline ::google::protobuf::uint32 ReplicaRequest::remote_tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ReplicaRequest.remote_tid)
  return remote_tid_;
}
inline void ReplicaRequest::set_remote_tid(::google::protobuf::uint32 value) {
  set_has_remote_tid();
  remote_tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ReplicaRequest.remote_tid)
}

// -------------------------------------------------------------------

// AddReplicaResponse

// optional int32 code = 1;
inline bool AddReplicaResponse::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddReplicaResponse::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddReplicaResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddReplicaResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 AddReplicaResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.AddReplicaResponse.code)
  return code_;
}
inline void AddReplicaResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.AddReplicaResponse.code)
}

// optional string msg = 2;
inline bool AddReplicaResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddReplicaResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddReplicaResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddReplicaResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& AddReplicaResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.AddReplicaResponse.msg)
  return msg_.GetNoArena();
}
inline void AddReplicaResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.AddReplicaResponse.msg)
}
#if LANG_CXX11
inline void AddReplicaResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.AddReplicaResponse.msg)
}
#endif
inline void AddReplicaResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.AddReplicaResponse.msg)
}
inline void AddReplicaResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.AddReplicaResponse.msg)
}
inline ::std::string* AddReplicaResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.AddReplicaResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddReplicaResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.AddReplicaResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddReplicaResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.AddReplicaResponse.msg)
}

// -------------------------------------------------------------------

// TableMeta

// optional int32 tid = 1;
inline bool TableMeta::has_tid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TableMeta::set_has_tid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TableMeta::clear_has_tid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TableMeta::clear_tid() {
  tid_ = 0;
  clear_has_tid();
}
inline ::google::protobuf::int32 TableMeta::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableMeta.tid)
  return tid_;
}
inline void TableMeta::set_tid(::google::protobuf::int32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableMeta.tid)
}

// optional string name = 2;
inline bool TableMeta::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TableMeta::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TableMeta::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TableMeta::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& TableMeta::name() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableMeta.name)
  return name_.GetNoArena();
}
inline void TableMeta::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.TableMeta.name)
}
#if LANG_CXX11
inline void TableMeta::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.TableMeta.name)
}
#endif
inline void TableMeta::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.TableMeta.name)
}
inline void TableMeta::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.TableMeta.name)
}
inline ::std::string* TableMeta::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:openmldb.api.TableMeta.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TableMeta::release_name() {
  // @@protoc_insertion_point(field_release:openmldb.api.TableMeta.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TableMeta::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.TableMeta.name)
}

// optional int32 pid = 3;
inline bool TableMeta::has_pid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TableMeta::set_has_pid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TableMeta::clear_has_pid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TableMeta::clear_pid() {
  pid_ = 0;
  clear_has_pid();
}
inline ::google::protobuf::int32 TableMeta::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableMeta.pid)
  return pid_;
}
inline void TableMeta::set_pid(::google::protobuf::int32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableMeta.pid)
}

// optional int32 seg_cnt = 4;
inline bool TableMeta::has_seg_cnt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TableMeta::set_has_seg_cnt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TableMeta::clear_has_seg_cnt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TableMeta::clear_seg_cnt() {
  seg_cnt_ = 0;
  clear_has_seg_cnt();
}
inline ::google::protobuf::int32 TableMeta::seg_cnt() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableMeta.seg_cnt)
  return seg_cnt_;
}
inline void TableMeta::set_seg_cnt(::google::protobuf::int32 value) {
  set_has_seg_cnt();
  seg_cnt_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableMeta.seg_cnt)
}

// repeated string replicas = 5;
inline int TableMeta::replicas_size() const {
  return replicas_.size();
}
inline void TableMeta::clear_replicas() {
  replicas_.Clear();
}
inline const ::std::string& TableMeta::replicas(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableMeta.replicas)
  return replicas_.Get(index);
}
inline ::std::string* TableMeta::mutable_replicas(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.TableMeta.replicas)
  return replicas_.Mutable(index);
}
inline void TableMeta::set_replicas(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:openmldb.api.TableMeta.replicas)
  replicas_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void TableMeta::set_replicas(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:openmldb.api.TableMeta.replicas)
  replicas_.Mutable(index)->assign(std::move(value));
}
#endif
inline void TableMeta::set_replicas(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  replicas_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:openmldb.api.TableMeta.replicas)
}
inline void TableMeta::set_replicas(int index, const char* value, size_t size) {
  replicas_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.TableMeta.replicas)
}
inline ::std::string* TableMeta::add_replicas() {
  // @@protoc_insertion_point(field_add_mutable:openmldb.api.TableMeta.replicas)
  return replicas_.Add();
}
inline void TableMeta::add_replicas(const ::std::string& value) {
  replicas_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:openmldb.api.TableMeta.replicas)
}
#if LANG_CXX11
inline void TableMeta::add_replicas(::std::string&& value) {
  replicas_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:openmldb.api.TableMeta.replicas)
}
#endif
inline void TableMeta::add_replicas(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  replicas_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:openmldb.api.TableMeta.replicas)
}
inline void TableMeta::add_replicas(const char* value, size_t size) {
  replicas_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:openmldb.api.TableMeta.replicas)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TableMeta::replicas() const {
  // @@protoc_insertion_point(field_list:openmldb.api.TableMeta.replicas)
  return replicas_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TableMeta::mutable_replicas() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.TableMeta.replicas)
  return &replicas_;
}

// optional .openmldb.api.TableMode mode = 6;
inline bool TableMeta::has_mode() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TableMeta::set_has_mode() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TableMeta::clear_has_mode() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TableMeta::clear_mode() {
  mode_ = 1;
  clear_has_mode();
}
inline ::openmldb::api::TableMode TableMeta::mode() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableMeta.mode)
  return static_cast< ::openmldb::api::TableMode >(mode_);
}
inline void TableMeta::set_mode(::openmldb::api::TableMode value) {
  assert(::openmldb::api::TableMode_IsValid(value));
  set_has_mode();
  mode_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableMeta.mode)
}

// optional uint64 term = 7 [default = 0];
inline bool TableMeta::has_term() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TableMeta::set_has_term() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TableMeta::clear_has_term() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TableMeta::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::uint64 TableMeta::term() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableMeta.term)
  return term_;
}
inline void TableMeta::set_term(::google::protobuf::uint64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableMeta.term)
}

// optional .openmldb.type.CompressType compress_type = 8;
inline bool TableMeta::has_compress_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TableMeta::set_has_compress_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TableMeta::clear_has_compress_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TableMeta::clear_compress_type() {
  compress_type_ = 0;
  clear_has_compress_type();
}
inline ::openmldb::type::CompressType TableMeta::compress_type() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableMeta.compress_type)
  return static_cast< ::openmldb::type::CompressType >(compress_type_);
}
inline void TableMeta::set_compress_type(::openmldb::type::CompressType value) {
  assert(::openmldb::type::CompressType_IsValid(value));
  set_has_compress_type();
  compress_type_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableMeta.compress_type)
}

// optional uint32 key_entry_max_height = 9;
inline bool TableMeta::has_key_entry_max_height() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TableMeta::set_has_key_entry_max_height() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TableMeta::clear_has_key_entry_max_height() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TableMeta::clear_key_entry_max_height() {
  key_entry_max_height_ = 0u;
  clear_has_key_entry_max_height();
}
inline ::google::protobuf::uint32 TableMeta::key_entry_max_height() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableMeta.key_entry_max_height)
  return key_entry_max_height_;
}
inline void TableMeta::set_key_entry_max_height(::google::protobuf::uint32 value) {
  set_has_key_entry_max_height();
  key_entry_max_height_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableMeta.key_entry_max_height)
}

// repeated .openmldb.common.ColumnDesc column_desc = 10;
inline int TableMeta::column_desc_size() const {
  return column_desc_.size();
}
inline ::openmldb::common::ColumnDesc* TableMeta::mutable_column_desc(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.TableMeta.column_desc)
  return column_desc_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnDesc >*
TableMeta::mutable_column_desc() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.TableMeta.column_desc)
  return &column_desc_;
}
inline const ::openmldb::common::ColumnDesc& TableMeta::column_desc(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableMeta.column_desc)
  return column_desc_.Get(index);
}
inline ::openmldb::common::ColumnDesc* TableMeta::add_column_desc() {
  // @@protoc_insertion_point(field_add:openmldb.api.TableMeta.column_desc)
  return column_desc_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnDesc >&
TableMeta::column_desc() const {
  // @@protoc_insertion_point(field_list:openmldb.api.TableMeta.column_desc)
  return column_desc_;
}

// repeated .openmldb.common.ColumnKey column_key = 11;
inline int TableMeta::column_key_size() const {
  return column_key_.size();
}
inline ::openmldb::common::ColumnKey* TableMeta::mutable_column_key(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.TableMeta.column_key)
  return column_key_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnKey >*
TableMeta::mutable_column_key() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.TableMeta.column_key)
  return &column_key_;
}
inline const ::openmldb::common::ColumnKey& TableMeta::column_key(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableMeta.column_key)
  return column_key_.Get(index);
}
inline ::openmldb::common::ColumnKey* TableMeta::add_column_key() {
  // @@protoc_insertion_point(field_add:openmldb.api.TableMeta.column_key)
  return column_key_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnKey >&
TableMeta::column_key() const {
  // @@protoc_insertion_point(field_list:openmldb.api.TableMeta.column_key)
  return column_key_;
}

// repeated .openmldb.common.ColumnDesc added_column_desc = 12;
inline int TableMeta::added_column_desc_size() const {
  return added_column_desc_.size();
}
inline ::openmldb::common::ColumnDesc* TableMeta::mutable_added_column_desc(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.TableMeta.added_column_desc)
  return added_column_desc_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnDesc >*
TableMeta::mutable_added_column_desc() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.TableMeta.added_column_desc)
  return &added_column_desc_;
}
inline const ::openmldb::common::ColumnDesc& TableMeta::added_column_desc(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableMeta.added_column_desc)
  return added_column_desc_.Get(index);
}
inline ::openmldb::common::ColumnDesc* TableMeta::add_added_column_desc() {
  // @@protoc_insertion_point(field_add:openmldb.api.TableMeta.added_column_desc)
  return added_column_desc_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnDesc >&
TableMeta::added_column_desc() const {
  // @@protoc_insertion_point(field_list:openmldb.api.TableMeta.added_column_desc)
  return added_column_desc_;
}

// optional uint32 format_version = 13 [default = 0];
inline bool TableMeta::has_format_version() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TableMeta::set_has_format_version() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TableMeta::clear_has_format_version() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TableMeta::clear_format_version() {
  format_version_ = 0u;
  clear_has_format_version();
}
inline ::google::protobuf::uint32 TableMeta::format_version() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableMeta.format_version)
  return format_version_;
}
inline void TableMeta::set_format_version(::google::protobuf::uint32 value) {
  set_has_format_version();
  format_version_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableMeta.format_version)
}

// optional string db = 14 [default = ""];
inline bool TableMeta::has_db() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TableMeta::set_has_db() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TableMeta::clear_has_db() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TableMeta::clear_db() {
  db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_db();
}
inline const ::std::string& TableMeta::db() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableMeta.db)
  return db_.GetNoArena();
}
inline void TableMeta::set_db(const ::std::string& value) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.TableMeta.db)
}
#if LANG_CXX11
inline void TableMeta::set_db(::std::string&& value) {
  set_has_db();
  db_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.TableMeta.db)
}
#endif
inline void TableMeta::set_db(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.TableMeta.db)
}
inline void TableMeta::set_db(const char* value, size_t size) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.TableMeta.db)
}
inline ::std::string* TableMeta::mutable_db() {
  set_has_db();
  // @@protoc_insertion_point(field_mutable:openmldb.api.TableMeta.db)
  return db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TableMeta::release_db() {
  // @@protoc_insertion_point(field_release:openmldb.api.TableMeta.db)
  if (!has_db()) {
    return NULL;
  }
  clear_has_db();
  return db_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TableMeta::set_allocated_db(::std::string* db) {
  if (db != NULL) {
    set_has_db();
  } else {
    clear_has_db();
  }
  db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.TableMeta.db)
}

// repeated .openmldb.common.VersionPair schema_versions = 15;
inline int TableMeta::schema_versions_size() const {
  return schema_versions_.size();
}
inline ::openmldb::common::VersionPair* TableMeta::mutable_schema_versions(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.TableMeta.schema_versions)
  return schema_versions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::common::VersionPair >*
TableMeta::mutable_schema_versions() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.TableMeta.schema_versions)
  return &schema_versions_;
}
inline const ::openmldb::common::VersionPair& TableMeta::schema_versions(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableMeta.schema_versions)
  return schema_versions_.Get(index);
}
inline ::openmldb::common::VersionPair* TableMeta::add_schema_versions() {
  // @@protoc_insertion_point(field_add:openmldb.api.TableMeta.schema_versions)
  return schema_versions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::common::VersionPair >&
TableMeta::schema_versions() const {
  // @@protoc_insertion_point(field_list:openmldb.api.TableMeta.schema_versions)
  return schema_versions_;
}

// repeated .openmldb.common.TablePartition table_partition = 16;
inline int TableMeta::table_partition_size() const {
  return table_partition_.size();
}
inline ::openmldb::common::TablePartition* TableMeta::mutable_table_partition(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.TableMeta.table_partition)
  return table_partition_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::common::TablePartition >*
TableMeta::mutable_table_partition() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.TableMeta.table_partition)
  return &table_partition_;
}
inline const ::openmldb::common::TablePartition& TableMeta::table_partition(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableMeta.table_partition)
  return table_partition_.Get(index);
}
inline ::openmldb::common::TablePartition* TableMeta::add_table_partition() {
  // @@protoc_insertion_point(field_add:openmldb.api.TableMeta.table_partition)
  return table_partition_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::common::TablePartition >&
TableMeta::table_partition() const {
  // @@protoc_insertion_point(field_list:openmldb.api.TableMeta.table_partition)
  return table_partition_;
}

// optional .openmldb.common.StorageMode storage_mode = 17 [default = kMemory];
inline bool TableMeta::has_storage_mode() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void TableMeta::set_has_storage_mode() {
  _has_bits_[0] |= 0x00000800u;
}
inline void TableMeta::clear_has_storage_mode() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void TableMeta::clear_storage_mode() {
  storage_mode_ = 1;
  clear_has_storage_mode();
}
inline ::openmldb::common::StorageMode TableMeta::storage_mode() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableMeta.storage_mode)
  return static_cast< ::openmldb::common::StorageMode >(storage_mode_);
}
inline void TableMeta::set_storage_mode(::openmldb::common::StorageMode value) {
  assert(::openmldb::common::StorageMode_IsValid(value));
  set_has_storage_mode();
  storage_mode_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableMeta.storage_mode)
}

// optional uint32 base_table_tid = 18 [default = 0];
inline bool TableMeta::has_base_table_tid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TableMeta::set_has_base_table_tid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TableMeta::clear_has_base_table_tid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TableMeta::clear_base_table_tid() {
  base_table_tid_ = 0u;
  clear_has_base_table_tid();
}
inline ::google::protobuf::uint32 TableMeta::base_table_tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableMeta.base_table_tid)
  return base_table_tid_;
}
inline void TableMeta::set_base_table_tid(::google::protobuf::uint32 value) {
  set_has_base_table_tid();
  base_table_tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableMeta.base_table_tid)
}

// -------------------------------------------------------------------

// CreateTableRequest

// optional .openmldb.api.TableMeta table_meta = 1;
inline bool CreateTableRequest::has_table_meta() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateTableRequest::set_has_table_meta() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateTableRequest::clear_has_table_meta() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateTableRequest::clear_table_meta() {
  if (table_meta_ != NULL) table_meta_->Clear();
  clear_has_table_meta();
}
inline const ::openmldb::api::TableMeta& CreateTableRequest::_internal_table_meta() const {
  return *table_meta_;
}
inline const ::openmldb::api::TableMeta& CreateTableRequest::table_meta() const {
  const ::openmldb::api::TableMeta* p = table_meta_;
  // @@protoc_insertion_point(field_get:openmldb.api.CreateTableRequest.table_meta)
  return p != NULL ? *p : *reinterpret_cast<const ::openmldb::api::TableMeta*>(
      &::openmldb::api::_TableMeta_default_instance_);
}
inline ::openmldb::api::TableMeta* CreateTableRequest::release_table_meta() {
  // @@protoc_insertion_point(field_release:openmldb.api.CreateTableRequest.table_meta)
  clear_has_table_meta();
  ::openmldb::api::TableMeta* temp = table_meta_;
  table_meta_ = NULL;
  return temp;
}
inline ::openmldb::api::TableMeta* CreateTableRequest::mutable_table_meta() {
  set_has_table_meta();
  if (table_meta_ == NULL) {
    auto* p = CreateMaybeMessage<::openmldb::api::TableMeta>(GetArenaNoVirtual());
    table_meta_ = p;
  }
  // @@protoc_insertion_point(field_mutable:openmldb.api.CreateTableRequest.table_meta)
  return table_meta_;
}
inline void CreateTableRequest::set_allocated_table_meta(::openmldb::api::TableMeta* table_meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete table_meta_;
  }
  if (table_meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      table_meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, table_meta, submessage_arena);
    }
    set_has_table_meta();
  } else {
    clear_has_table_meta();
  }
  table_meta_ = table_meta;
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.CreateTableRequest.table_meta)
}

// -------------------------------------------------------------------

// UpdateTableMetaForAddFieldRequest

// optional uint32 tid = 1;
inline bool UpdateTableMetaForAddFieldRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateTableMetaForAddFieldRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateTableMetaForAddFieldRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateTableMetaForAddFieldRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 UpdateTableMetaForAddFieldRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.UpdateTableMetaForAddFieldRequest.tid)
  return tid_;
}
inline void UpdateTableMetaForAddFieldRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.UpdateTableMetaForAddFieldRequest.tid)
}

// optional .openmldb.common.ColumnDesc column_desc = 2;
inline bool UpdateTableMetaForAddFieldRequest::has_column_desc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateTableMetaForAddFieldRequest::set_has_column_desc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateTableMetaForAddFieldRequest::clear_has_column_desc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::openmldb::common::ColumnDesc& UpdateTableMetaForAddFieldRequest::_internal_column_desc() const {
  return *column_desc_;
}
inline const ::openmldb::common::ColumnDesc& UpdateTableMetaForAddFieldRequest::column_desc() const {
  const ::openmldb::common::ColumnDesc* p = column_desc_;
  // @@protoc_insertion_point(field_get:openmldb.api.UpdateTableMetaForAddFieldRequest.column_desc)
  return p != NULL ? *p : *reinterpret_cast<const ::openmldb::common::ColumnDesc*>(
      &::openmldb::common::_ColumnDesc_default_instance_);
}
inline ::openmldb::common::ColumnDesc* UpdateTableMetaForAddFieldRequest::release_column_desc() {
  // @@protoc_insertion_point(field_release:openmldb.api.UpdateTableMetaForAddFieldRequest.column_desc)
  clear_has_column_desc();
  ::openmldb::common::ColumnDesc* temp = column_desc_;
  column_desc_ = NULL;
  return temp;
}
inline ::openmldb::common::ColumnDesc* UpdateTableMetaForAddFieldRequest::mutable_column_desc() {
  set_has_column_desc();
  if (column_desc_ == NULL) {
    auto* p = CreateMaybeMessage<::openmldb::common::ColumnDesc>(GetArenaNoVirtual());
    column_desc_ = p;
  }
  // @@protoc_insertion_point(field_mutable:openmldb.api.UpdateTableMetaForAddFieldRequest.column_desc)
  return column_desc_;
}
inline void UpdateTableMetaForAddFieldRequest::set_allocated_column_desc(::openmldb::common::ColumnDesc* column_desc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(column_desc_);
  }
  if (column_desc) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      column_desc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, column_desc, submessage_arena);
    }
    set_has_column_desc();
  } else {
    clear_has_column_desc();
  }
  column_desc_ = column_desc;
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.UpdateTableMetaForAddFieldRequest.column_desc)
}

// repeated .openmldb.common.ColumnDesc column_descs = 3;
inline int UpdateTableMetaForAddFieldRequest::column_descs_size() const {
  return column_descs_.size();
}
inline ::openmldb::common::ColumnDesc* UpdateTableMetaForAddFieldRequest::mutable_column_descs(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.UpdateTableMetaForAddFieldRequest.column_descs)
  return column_descs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnDesc >*
UpdateTableMetaForAddFieldRequest::mutable_column_descs() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.UpdateTableMetaForAddFieldRequest.column_descs)
  return &column_descs_;
}
inline const ::openmldb::common::ColumnDesc& UpdateTableMetaForAddFieldRequest::column_descs(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.UpdateTableMetaForAddFieldRequest.column_descs)
  return column_descs_.Get(index);
}
inline ::openmldb::common::ColumnDesc* UpdateTableMetaForAddFieldRequest::add_column_descs() {
  // @@protoc_insertion_point(field_add:openmldb.api.UpdateTableMetaForAddFieldRequest.column_descs)
  return column_descs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnDesc >&
UpdateTableMetaForAddFieldRequest::column_descs() const {
  // @@protoc_insertion_point(field_list:openmldb.api.UpdateTableMetaForAddFieldRequest.column_descs)
  return column_descs_;
}

// optional .openmldb.common.VersionPair version_pair = 4;
inline bool UpdateTableMetaForAddFieldRequest::has_version_pair() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateTableMetaForAddFieldRequest::set_has_version_pair() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateTableMetaForAddFieldRequest::clear_has_version_pair() {
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::openmldb::common::VersionPair& UpdateTableMetaForAddFieldRequest::_internal_version_pair() const {
  return *version_pair_;
}
inline const ::openmldb::common::VersionPair& UpdateTableMetaForAddFieldRequest::version_pair() const {
  const ::openmldb::common::VersionPair* p = version_pair_;
  // @@protoc_insertion_point(field_get:openmldb.api.UpdateTableMetaForAddFieldRequest.version_pair)
  return p != NULL ? *p : *reinterpret_cast<const ::openmldb::common::VersionPair*>(
      &::openmldb::common::_VersionPair_default_instance_);
}
inline ::openmldb::common::VersionPair* UpdateTableMetaForAddFieldRequest::release_version_pair() {
  // @@protoc_insertion_point(field_release:openmldb.api.UpdateTableMetaForAddFieldRequest.version_pair)
  clear_has_version_pair();
  ::openmldb::common::VersionPair* temp = version_pair_;
  version_pair_ = NULL;
  return temp;
}
inline ::openmldb::common::VersionPair* UpdateTableMetaForAddFieldRequest::mutable_version_pair() {
  set_has_version_pair();
  if (version_pair_ == NULL) {
    auto* p = CreateMaybeMessage<::openmldb::common::VersionPair>(GetArenaNoVirtual());
    version_pair_ = p;
  }
  // @@protoc_insertion_point(field_mutable:openmldb.api.UpdateTableMetaForAddFieldRequest.version_pair)
  return version_pair_;
}
inline void UpdateTableMetaForAddFieldRequest::set_allocated_version_pair(::openmldb::common::VersionPair* version_pair) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(version_pair_);
  }
  if (version_pair) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      version_pair = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, version_pair, submessage_arena);
    }
    set_has_version_pair();
  } else {
    clear_has_version_pair();
  }
  version_pair_ = version_pair;
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.UpdateTableMetaForAddFieldRequest.version_pair)
}

// -------------------------------------------------------------------

// CreateTableResponse

// optional int32 code = 1;
inline bool CreateTableResponse::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateTableResponse::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateTableResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateTableResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 CreateTableResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CreateTableResponse.code)
  return code_;
}
inline void CreateTableResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.CreateTableResponse.code)
}

// optional string msg = 2;
inline bool CreateTableResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateTableResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateTableResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateTableResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& CreateTableResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CreateTableResponse.msg)
  return msg_.GetNoArena();
}
inline void CreateTableResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.CreateTableResponse.msg)
}
#if LANG_CXX11
inline void CreateTableResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.CreateTableResponse.msg)
}
#endif
inline void CreateTableResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.CreateTableResponse.msg)
}
inline void CreateTableResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.CreateTableResponse.msg)
}
inline ::std::string* CreateTableResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.CreateTableResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateTableResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.CreateTableResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateTableResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.CreateTableResponse.msg)
}

// -------------------------------------------------------------------

// LoadTableRequest

// optional .openmldb.api.TableMeta table_meta = 1;
inline bool LoadTableRequest::has_table_meta() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoadTableRequest::set_has_table_meta() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoadTableRequest::clear_has_table_meta() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoadTableRequest::clear_table_meta() {
  if (table_meta_ != NULL) table_meta_->Clear();
  clear_has_table_meta();
}
inline const ::openmldb::api::TableMeta& LoadTableRequest::_internal_table_meta() const {
  return *table_meta_;
}
inline const ::openmldb::api::TableMeta& LoadTableRequest::table_meta() const {
  const ::openmldb::api::TableMeta* p = table_meta_;
  // @@protoc_insertion_point(field_get:openmldb.api.LoadTableRequest.table_meta)
  return p != NULL ? *p : *reinterpret_cast<const ::openmldb::api::TableMeta*>(
      &::openmldb::api::_TableMeta_default_instance_);
}
inline ::openmldb::api::TableMeta* LoadTableRequest::release_table_meta() {
  // @@protoc_insertion_point(field_release:openmldb.api.LoadTableRequest.table_meta)
  clear_has_table_meta();
  ::openmldb::api::TableMeta* temp = table_meta_;
  table_meta_ = NULL;
  return temp;
}
inline ::openmldb::api::TableMeta* LoadTableRequest::mutable_table_meta() {
  set_has_table_meta();
  if (table_meta_ == NULL) {
    auto* p = CreateMaybeMessage<::openmldb::api::TableMeta>(GetArenaNoVirtual());
    table_meta_ = p;
  }
  // @@protoc_insertion_point(field_mutable:openmldb.api.LoadTableRequest.table_meta)
  return table_meta_;
}
inline void LoadTableRequest::set_allocated_table_meta(::openmldb::api::TableMeta* table_meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete table_meta_;
  }
  if (table_meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      table_meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, table_meta, submessage_arena);
    }
    set_has_table_meta();
  } else {
    clear_has_table_meta();
  }
  table_meta_ = table_meta;
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.LoadTableRequest.table_meta)
}

// optional .openmldb.api.TaskInfo task_info = 2;
inline bool LoadTableRequest::has_task_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoadTableRequest::set_has_task_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoadTableRequest::clear_has_task_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoadTableRequest::clear_task_info() {
  if (task_info_ != NULL) task_info_->Clear();
  clear_has_task_info();
}
inline const ::openmldb::api::TaskInfo& LoadTableRequest::_internal_task_info() const {
  return *task_info_;
}
inline const ::openmldb::api::TaskInfo& LoadTableRequest::task_info() const {
  const ::openmldb::api::TaskInfo* p = task_info_;
  // @@protoc_insertion_point(field_get:openmldb.api.LoadTableRequest.task_info)
  return p != NULL ? *p : *reinterpret_cast<const ::openmldb::api::TaskInfo*>(
      &::openmldb::api::_TaskInfo_default_instance_);
}
inline ::openmldb::api::TaskInfo* LoadTableRequest::release_task_info() {
  // @@protoc_insertion_point(field_release:openmldb.api.LoadTableRequest.task_info)
  clear_has_task_info();
  ::openmldb::api::TaskInfo* temp = task_info_;
  task_info_ = NULL;
  return temp;
}
inline ::openmldb::api::TaskInfo* LoadTableRequest::mutable_task_info() {
  set_has_task_info();
  if (task_info_ == NULL) {
    auto* p = CreateMaybeMessage<::openmldb::api::TaskInfo>(GetArenaNoVirtual());
    task_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:openmldb.api.LoadTableRequest.task_info)
  return task_info_;
}
inline void LoadTableRequest::set_allocated_task_info(::openmldb::api::TaskInfo* task_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete task_info_;
  }
  if (task_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      task_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, task_info, submessage_arena);
    }
    set_has_task_info();
  } else {
    clear_has_task_info();
  }
  task_info_ = task_info;
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.LoadTableRequest.task_info)
}

// -------------------------------------------------------------------

// DropTableRequest

// optional int32 tid = 1;
inline bool DropTableRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DropTableRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DropTableRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DropTableRequest::clear_tid() {
  tid_ = 0;
  clear_has_tid();
}
inline ::google::protobuf::int32 DropTableRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.DropTableRequest.tid)
  return tid_;
}
inline void DropTableRequest::set_tid(::google::protobuf::int32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.DropTableRequest.tid)
}

// optional int32 pid = 2;
inline bool DropTableRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DropTableRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DropTableRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DropTableRequest::clear_pid() {
  pid_ = 0;
  clear_has_pid();
}
inline ::google::protobuf::int32 DropTableRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.DropTableRequest.pid)
  return pid_;
}
inline void DropTableRequest::set_pid(::google::protobuf::int32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.DropTableRequest.pid)
}

// optional .openmldb.api.TaskInfo task_info = 3;
inline bool DropTableRequest::has_task_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DropTableRequest::set_has_task_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DropTableRequest::clear_has_task_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DropTableRequest::clear_task_info() {
  if (task_info_ != NULL) task_info_->Clear();
  clear_has_task_info();
}
inline const ::openmldb::api::TaskInfo& DropTableRequest::_internal_task_info() const {
  return *task_info_;
}
inline const ::openmldb::api::TaskInfo& DropTableRequest::task_info() const {
  const ::openmldb::api::TaskInfo* p = task_info_;
  // @@protoc_insertion_point(field_get:openmldb.api.DropTableRequest.task_info)
  return p != NULL ? *p : *reinterpret_cast<const ::openmldb::api::TaskInfo*>(
      &::openmldb::api::_TaskInfo_default_instance_);
}
inline ::openmldb::api::TaskInfo* DropTableRequest::release_task_info() {
  // @@protoc_insertion_point(field_release:openmldb.api.DropTableRequest.task_info)
  clear_has_task_info();
  ::openmldb::api::TaskInfo* temp = task_info_;
  task_info_ = NULL;
  return temp;
}
inline ::openmldb::api::TaskInfo* DropTableRequest::mutable_task_info() {
  set_has_task_info();
  if (task_info_ == NULL) {
    auto* p = CreateMaybeMessage<::openmldb::api::TaskInfo>(GetArenaNoVirtual());
    task_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:openmldb.api.DropTableRequest.task_info)
  return task_info_;
}
inline void DropTableRequest::set_allocated_task_info(::openmldb::api::TaskInfo* task_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete task_info_;
  }
  if (task_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      task_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, task_info, submessage_arena);
    }
    set_has_task_info();
  } else {
    clear_has_task_info();
  }
  task_info_ = task_info;
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.DropTableRequest.task_info)
}

// -------------------------------------------------------------------

// DropTableResponse

// optional int32 code = 1;
inline bool DropTableResponse::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DropTableResponse::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DropTableResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DropTableResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 DropTableResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.DropTableResponse.code)
  return code_;
}
inline void DropTableResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.DropTableResponse.code)
}

// optional string msg = 2;
inline bool DropTableResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DropTableResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DropTableResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DropTableResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& DropTableResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.DropTableResponse.msg)
  return msg_.GetNoArena();
}
inline void DropTableResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.DropTableResponse.msg)
}
#if LANG_CXX11
inline void DropTableResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.DropTableResponse.msg)
}
#endif
inline void DropTableResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.DropTableResponse.msg)
}
inline void DropTableResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.DropTableResponse.msg)
}
inline ::std::string* DropTableResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.DropTableResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DropTableResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.DropTableResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DropTableResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.DropTableResponse.msg)
}

// -------------------------------------------------------------------

// GetTableSchemaRequest

// optional int32 tid = 1;
inline bool GetTableSchemaRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetTableSchemaRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetTableSchemaRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetTableSchemaRequest::clear_tid() {
  tid_ = 0;
  clear_has_tid();
}
inline ::google::protobuf::int32 GetTableSchemaRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetTableSchemaRequest.tid)
  return tid_;
}
inline void GetTableSchemaRequest::set_tid(::google::protobuf::int32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetTableSchemaRequest.tid)
}

// optional int32 pid = 2;
inline bool GetTableSchemaRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetTableSchemaRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetTableSchemaRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetTableSchemaRequest::clear_pid() {
  pid_ = 0;
  clear_has_pid();
}
inline ::google::protobuf::int32 GetTableSchemaRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetTableSchemaRequest.pid)
  return pid_;
}
inline void GetTableSchemaRequest::set_pid(::google::protobuf::int32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetTableSchemaRequest.pid)
}

// -------------------------------------------------------------------

// SetExpireRequest

// optional int32 tid = 1;
inline bool SetExpireRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetExpireRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetExpireRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetExpireRequest::clear_tid() {
  tid_ = 0;
  clear_has_tid();
}
inline ::google::protobuf::int32 SetExpireRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SetExpireRequest.tid)
  return tid_;
}
inline void SetExpireRequest::set_tid(::google::protobuf::int32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.SetExpireRequest.tid)
}

// optional int32 pid = 2;
inline bool SetExpireRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetExpireRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetExpireRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetExpireRequest::clear_pid() {
  pid_ = 0;
  clear_has_pid();
}
inline ::google::protobuf::int32 SetExpireRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SetExpireRequest.pid)
  return pid_;
}
inline void SetExpireRequest::set_pid(::google::protobuf::int32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.SetExpireRequest.pid)
}

// optional bool is_expire = 3;
inline bool SetExpireRequest::has_is_expire() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetExpireRequest::set_has_is_expire() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetExpireRequest::clear_has_is_expire() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetExpireRequest::clear_is_expire() {
  is_expire_ = false;
  clear_has_is_expire();
}
inline bool SetExpireRequest::is_expire() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SetExpireRequest.is_expire)
  return is_expire_;
}
inline void SetExpireRequest::set_is_expire(bool value) {
  set_has_is_expire();
  is_expire_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.SetExpireRequest.is_expire)
}

// -------------------------------------------------------------------

// GetTableSchemaResponse

// optional int32 code = 1;
inline bool GetTableSchemaResponse::has_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetTableSchemaResponse::set_has_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetTableSchemaResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetTableSchemaResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 GetTableSchemaResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetTableSchemaResponse.code)
  return code_;
}
inline void GetTableSchemaResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetTableSchemaResponse.code)
}

// optional string msg = 2;
inline bool GetTableSchemaResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetTableSchemaResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetTableSchemaResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetTableSchemaResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& GetTableSchemaResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetTableSchemaResponse.msg)
  return msg_.GetNoArena();
}
inline void GetTableSchemaResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.GetTableSchemaResponse.msg)
}
#if LANG_CXX11
inline void GetTableSchemaResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.GetTableSchemaResponse.msg)
}
#endif
inline void GetTableSchemaResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.GetTableSchemaResponse.msg)
}
inline void GetTableSchemaResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.GetTableSchemaResponse.msg)
}
inline ::std::string* GetTableSchemaResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.GetTableSchemaResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetTableSchemaResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.GetTableSchemaResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetTableSchemaResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.GetTableSchemaResponse.msg)
}

// optional .openmldb.api.TableMeta table_meta = 3;
inline bool GetTableSchemaResponse::has_table_meta() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetTableSchemaResponse::set_has_table_meta() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetTableSchemaResponse::clear_has_table_meta() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetTableSchemaResponse::clear_table_meta() {
  if (table_meta_ != NULL) table_meta_->Clear();
  clear_has_table_meta();
}
inline const ::openmldb::api::TableMeta& GetTableSchemaResponse::_internal_table_meta() const {
  return *table_meta_;
}
inline const ::openmldb::api::TableMeta& GetTableSchemaResponse::table_meta() const {
  const ::openmldb::api::TableMeta* p = table_meta_;
  // @@protoc_insertion_point(field_get:openmldb.api.GetTableSchemaResponse.table_meta)
  return p != NULL ? *p : *reinterpret_cast<const ::openmldb::api::TableMeta*>(
      &::openmldb::api::_TableMeta_default_instance_);
}
inline ::openmldb::api::TableMeta* GetTableSchemaResponse::release_table_meta() {
  // @@protoc_insertion_point(field_release:openmldb.api.GetTableSchemaResponse.table_meta)
  clear_has_table_meta();
  ::openmldb::api::TableMeta* temp = table_meta_;
  table_meta_ = NULL;
  return temp;
}
inline ::openmldb::api::TableMeta* GetTableSchemaResponse::mutable_table_meta() {
  set_has_table_meta();
  if (table_meta_ == NULL) {
    auto* p = CreateMaybeMessage<::openmldb::api::TableMeta>(GetArenaNoVirtual());
    table_meta_ = p;
  }
  // @@protoc_insertion_point(field_mutable:openmldb.api.GetTableSchemaResponse.table_meta)
  return table_meta_;
}
inline void GetTableSchemaResponse::set_allocated_table_meta(::openmldb::api::TableMeta* table_meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete table_meta_;
  }
  if (table_meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      table_meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, table_meta, submessage_arena);
    }
    set_has_table_meta();
  } else {
    clear_has_table_meta();
  }
  table_meta_ = table_meta;
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.GetTableSchemaResponse.table_meta)
}

// -------------------------------------------------------------------

// UpdateTTLRequest

// optional int32 tid = 1;
inline bool UpdateTTLRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateTTLRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateTTLRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateTTLRequest::clear_tid() {
  tid_ = 0;
  clear_has_tid();
}
inline ::google::protobuf::int32 UpdateTTLRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.UpdateTTLRequest.tid)
  return tid_;
}
inline void UpdateTTLRequest::set_tid(::google::protobuf::int32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.UpdateTTLRequest.tid)
}

// optional int32 pid = 2;
inline bool UpdateTTLRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateTTLRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateTTLRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateTTLRequest::clear_pid() {
  pid_ = 0;
  clear_has_pid();
}
inline ::google::protobuf::int32 UpdateTTLRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.UpdateTTLRequest.pid)
  return pid_;
}
inline void UpdateTTLRequest::set_pid(::google::protobuf::int32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.UpdateTTLRequest.pid)
}

// optional .openmldb.common.TTLSt ttl = 3;
inline bool UpdateTTLRequest::has_ttl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateTTLRequest::set_has_ttl() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateTTLRequest::clear_has_ttl() {
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::openmldb::common::TTLSt& UpdateTTLRequest::_internal_ttl() const {
  return *ttl_;
}
inline const ::openmldb::common::TTLSt& UpdateTTLRequest::ttl() const {
  const ::openmldb::common::TTLSt* p = ttl_;
  // @@protoc_insertion_point(field_get:openmldb.api.UpdateTTLRequest.ttl)
  return p != NULL ? *p : *reinterpret_cast<const ::openmldb::common::TTLSt*>(
      &::openmldb::common::_TTLSt_default_instance_);
}
inline ::openmldb::common::TTLSt* UpdateTTLRequest::release_ttl() {
  // @@protoc_insertion_point(field_release:openmldb.api.UpdateTTLRequest.ttl)
  clear_has_ttl();
  ::openmldb::common::TTLSt* temp = ttl_;
  ttl_ = NULL;
  return temp;
}
inline ::openmldb::common::TTLSt* UpdateTTLRequest::mutable_ttl() {
  set_has_ttl();
  if (ttl_ == NULL) {
    auto* p = CreateMaybeMessage<::openmldb::common::TTLSt>(GetArenaNoVirtual());
    ttl_ = p;
  }
  // @@protoc_insertion_point(field_mutable:openmldb.api.UpdateTTLRequest.ttl)
  return ttl_;
}
inline void UpdateTTLRequest::set_allocated_ttl(::openmldb::common::TTLSt* ttl) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ttl_);
  }
  if (ttl) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ttl = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ttl, submessage_arena);
    }
    set_has_ttl();
  } else {
    clear_has_ttl();
  }
  ttl_ = ttl;
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.UpdateTTLRequest.ttl)
}

// optional string index_name = 5;
inline bool UpdateTTLRequest::has_index_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateTTLRequest::set_has_index_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateTTLRequest::clear_has_index_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateTTLRequest::clear_index_name() {
  index_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_index_name();
}
inline const ::std::string& UpdateTTLRequest::index_name() const {
  // @@protoc_insertion_point(field_get:openmldb.api.UpdateTTLRequest.index_name)
  return index_name_.GetNoArena();
}
inline void UpdateTTLRequest::set_index_name(const ::std::string& value) {
  set_has_index_name();
  index_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.UpdateTTLRequest.index_name)
}
#if LANG_CXX11
inline void UpdateTTLRequest::set_index_name(::std::string&& value) {
  set_has_index_name();
  index_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.UpdateTTLRequest.index_name)
}
#endif
inline void UpdateTTLRequest::set_index_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_index_name();
  index_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.UpdateTTLRequest.index_name)
}
inline void UpdateTTLRequest::set_index_name(const char* value, size_t size) {
  set_has_index_name();
  index_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.UpdateTTLRequest.index_name)
}
inline ::std::string* UpdateTTLRequest::mutable_index_name() {
  set_has_index_name();
  // @@protoc_insertion_point(field_mutable:openmldb.api.UpdateTTLRequest.index_name)
  return index_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateTTLRequest::release_index_name() {
  // @@protoc_insertion_point(field_release:openmldb.api.UpdateTTLRequest.index_name)
  if (!has_index_name()) {
    return NULL;
  }
  clear_has_index_name();
  return index_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateTTLRequest::set_allocated_index_name(::std::string* index_name) {
  if (index_name != NULL) {
    set_has_index_name();
  } else {
    clear_has_index_name();
  }
  index_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), index_name);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.UpdateTTLRequest.index_name)
}

// -------------------------------------------------------------------

// UpdateTTLResponse

// optional int32 code = 1;
inline bool UpdateTTLResponse::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateTTLResponse::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateTTLResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateTTLResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 UpdateTTLResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.UpdateTTLResponse.code)
  return code_;
}
inline void UpdateTTLResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.UpdateTTLResponse.code)
}

// optional string msg = 2;
inline bool UpdateTTLResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateTTLResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateTTLResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateTTLResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& UpdateTTLResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.UpdateTTLResponse.msg)
  return msg_.GetNoArena();
}
inline void UpdateTTLResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.UpdateTTLResponse.msg)
}
#if LANG_CXX11
inline void UpdateTTLResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.UpdateTTLResponse.msg)
}
#endif
inline void UpdateTTLResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.UpdateTTLResponse.msg)
}
inline void UpdateTTLResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.UpdateTTLResponse.msg)
}
inline ::std::string* UpdateTTLResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.UpdateTTLResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateTTLResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.UpdateTTLResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateTTLResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.UpdateTTLResponse.msg)
}

// -------------------------------------------------------------------

// LogEntry

// optional uint64 term = 1;
inline bool LogEntry::has_term() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LogEntry::set_has_term() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LogEntry::clear_has_term() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LogEntry::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::uint64 LogEntry::term() const {
  // @@protoc_insertion_point(field_get:openmldb.api.LogEntry.term)
  return term_;
}
inline void LogEntry::set_term(::google::protobuf::uint64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.LogEntry.term)
}

// optional uint64 log_index = 2;
inline bool LogEntry::has_log_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LogEntry::set_has_log_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LogEntry::clear_has_log_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LogEntry::clear_log_index() {
  log_index_ = GOOGLE_ULONGLONG(0);
  clear_has_log_index();
}
inline ::google::protobuf::uint64 LogEntry::log_index() const {
  // @@protoc_insertion_point(field_get:openmldb.api.LogEntry.log_index)
  return log_index_;
}
inline void LogEntry::set_log_index(::google::protobuf::uint64 value) {
  set_has_log_index();
  log_index_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.LogEntry.log_index)
}

// optional string pk = 3;
inline bool LogEntry::has_pk() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogEntry::set_has_pk() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogEntry::clear_has_pk() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogEntry::clear_pk() {
  pk_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pk();
}
inline const ::std::string& LogEntry::pk() const {
  // @@protoc_insertion_point(field_get:openmldb.api.LogEntry.pk)
  return pk_.GetNoArena();
}
inline void LogEntry::set_pk(const ::std::string& value) {
  set_has_pk();
  pk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.LogEntry.pk)
}
#if LANG_CXX11
inline void LogEntry::set_pk(::std::string&& value) {
  set_has_pk();
  pk_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.LogEntry.pk)
}
#endif
inline void LogEntry::set_pk(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pk();
  pk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.LogEntry.pk)
}
inline void LogEntry::set_pk(const char* value, size_t size) {
  set_has_pk();
  pk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.LogEntry.pk)
}
inline ::std::string* LogEntry::mutable_pk() {
  set_has_pk();
  // @@protoc_insertion_point(field_mutable:openmldb.api.LogEntry.pk)
  return pk_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogEntry::release_pk() {
  // @@protoc_insertion_point(field_release:openmldb.api.LogEntry.pk)
  if (!has_pk()) {
    return NULL;
  }
  clear_has_pk();
  return pk_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogEntry::set_allocated_pk(::std::string* pk) {
  if (pk != NULL) {
    set_has_pk();
  } else {
    clear_has_pk();
  }
  pk_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pk);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.LogEntry.pk)
}

// optional bytes value = 4;
inline bool LogEntry::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogEntry::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogEntry::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogEntry::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& LogEntry::value() const {
  // @@protoc_insertion_point(field_get:openmldb.api.LogEntry.value)
  return value_.GetNoArena();
}
inline void LogEntry::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.LogEntry.value)
}
#if LANG_CXX11
inline void LogEntry::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.LogEntry.value)
}
#endif
inline void LogEntry::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.LogEntry.value)
}
inline void LogEntry::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.LogEntry.value)
}
inline ::std::string* LogEntry::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:openmldb.api.LogEntry.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogEntry::release_value() {
  // @@protoc_insertion_point(field_release:openmldb.api.LogEntry.value)
  if (!has_value()) {
    return NULL;
  }
  clear_has_value();
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogEntry::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.LogEntry.value)
}

// optional uint64 ts = 5;
inline bool LogEntry::has_ts() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LogEntry::set_has_ts() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LogEntry::clear_has_ts() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LogEntry::clear_ts() {
  ts_ = GOOGLE_ULONGLONG(0);
  clear_has_ts();
}
inline ::google::protobuf::uint64 LogEntry::ts() const {
  // @@protoc_insertion_point(field_get:openmldb.api.LogEntry.ts)
  return ts_;
}
inline void LogEntry::set_ts(::google::protobuf::uint64 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.LogEntry.ts)
}

// repeated .openmldb.api.Dimension dimensions = 6;
inline int LogEntry::dimensions_size() const {
  return dimensions_.size();
}
inline void LogEntry::clear_dimensions() {
  dimensions_.Clear();
}
inline ::openmldb::api::Dimension* LogEntry::mutable_dimensions(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.LogEntry.dimensions)
  return dimensions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::Dimension >*
LogEntry::mutable_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.LogEntry.dimensions)
  return &dimensions_;
}
inline const ::openmldb::api::Dimension& LogEntry::dimensions(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.LogEntry.dimensions)
  return dimensions_.Get(index);
}
inline ::openmldb::api::Dimension* LogEntry::add_dimensions() {
  // @@protoc_insertion_point(field_add:openmldb.api.LogEntry.dimensions)
  return dimensions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::Dimension >&
LogEntry::dimensions() const {
  // @@protoc_insertion_point(field_list:openmldb.api.LogEntry.dimensions)
  return dimensions_;
}

// optional .openmldb.api.MethodType method_type = 7;
inline bool LogEntry::has_method_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LogEntry::set_has_method_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LogEntry::clear_has_method_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LogEntry::clear_method_type() {
  method_type_ = 1;
  clear_has_method_type();
}
inline ::openmldb::api::MethodType LogEntry::method_type() const {
  // @@protoc_insertion_point(field_get:openmldb.api.LogEntry.method_type)
  return static_cast< ::openmldb::api::MethodType >(method_type_);
}
inline void LogEntry::set_method_type(::openmldb::api::MethodType value) {
  assert(::openmldb::api::MethodType_IsValid(value));
  set_has_method_type();
  method_type_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.LogEntry.method_type)
}

// repeated .openmldb.api.TSDimension ts_dimensions = 8 [deprecated = true];
inline int LogEntry::ts_dimensions_size() const {
  return ts_dimensions_.size();
}
inline void LogEntry::clear_ts_dimensions() {
  ts_dimensions_.Clear();
}
inline ::openmldb::api::TSDimension* LogEntry::mutable_ts_dimensions(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.LogEntry.ts_dimensions)
  return ts_dimensions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::TSDimension >*
LogEntry::mutable_ts_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.LogEntry.ts_dimensions)
  return &ts_dimensions_;
}
inline const ::openmldb::api::TSDimension& LogEntry::ts_dimensions(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.LogEntry.ts_dimensions)
  return ts_dimensions_.Get(index);
}
inline ::openmldb::api::TSDimension* LogEntry::add_ts_dimensions() {
  // @@protoc_insertion_point(field_add:openmldb.api.LogEntry.ts_dimensions)
  return ts_dimensions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::TSDimension >&
LogEntry::ts_dimensions() const {
  // @@protoc_insertion_point(field_list:openmldb.api.LogEntry.ts_dimensions)
  return ts_dimensions_;
}

// -------------------------------------------------------------------

// AppendEntriesRequest

// optional uint64 pre_log_index = 2;
inline bool AppendEntriesRequest::has_pre_log_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppendEntriesRequest::set_has_pre_log_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppendEntriesRequest::clear_has_pre_log_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppendEntriesRequest::clear_pre_log_index() {
  pre_log_index_ = GOOGLE_ULONGLONG(0);
  clear_has_pre_log_index();
}
inline ::google::protobuf::uint64 AppendEntriesRequest::pre_log_index() const {
  // @@protoc_insertion_point(field_get:openmldb.api.AppendEntriesRequest.pre_log_index)
  return pre_log_index_;
}
inline void AppendEntriesRequest::set_pre_log_index(::google::protobuf::uint64 value) {
  set_has_pre_log_index();
  pre_log_index_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.AppendEntriesRequest.pre_log_index)
}

// repeated .openmldb.api.LogEntry entries = 4;
inline int AppendEntriesRequest::entries_size() const {
  return entries_.size();
}
inline void AppendEntriesRequest::clear_entries() {
  entries_.Clear();
}
inline ::openmldb::api::LogEntry* AppendEntriesRequest::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.AppendEntriesRequest.entries)
  return entries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::LogEntry >*
AppendEntriesRequest::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.AppendEntriesRequest.entries)
  return &entries_;
}
inline const ::openmldb::api::LogEntry& AppendEntriesRequest::entries(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.AppendEntriesRequest.entries)
  return entries_.Get(index);
}
inline ::openmldb::api::LogEntry* AppendEntriesRequest::add_entries() {
  // @@protoc_insertion_point(field_add:openmldb.api.AppendEntriesRequest.entries)
  return entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::LogEntry >&
AppendEntriesRequest::entries() const {
  // @@protoc_insertion_point(field_list:openmldb.api.AppendEntriesRequest.entries)
  return entries_;
}

// optional uint32 tid = 6;
inline bool AppendEntriesRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppendEntriesRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppendEntriesRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppendEntriesRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 AppendEntriesRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.AppendEntriesRequest.tid)
  return tid_;
}
inline void AppendEntriesRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.AppendEntriesRequest.tid)
}

// optional uint32 pid = 7;
inline bool AppendEntriesRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppendEntriesRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppendEntriesRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppendEntriesRequest::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 AppendEntriesRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.AppendEntriesRequest.pid)
  return pid_;
}
inline void AppendEntriesRequest::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.AppendEntriesRequest.pid)
}

// optional uint64 term = 8;
inline bool AppendEntriesRequest::has_term() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AppendEntriesRequest::set_has_term() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AppendEntriesRequest::clear_has_term() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AppendEntriesRequest::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::uint64 AppendEntriesRequest::term() const {
  // @@protoc_insertion_point(field_get:openmldb.api.AppendEntriesRequest.term)
  return term_;
}
inline void AppendEntriesRequest::set_term(::google::protobuf::uint64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.AppendEntriesRequest.term)
}

// -------------------------------------------------------------------

// AppendEntriesResponse

// optional uint64 log_offset = 1;
inline bool AppendEntriesResponse::has_log_offset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppendEntriesResponse::set_has_log_offset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppendEntriesResponse::clear_has_log_offset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppendEntriesResponse::clear_log_offset() {
  log_offset_ = GOOGLE_ULONGLONG(0);
  clear_has_log_offset();
}
inline ::google::protobuf::uint64 AppendEntriesResponse::log_offset() const {
  // @@protoc_insertion_point(field_get:openmldb.api.AppendEntriesResponse.log_offset)
  return log_offset_;
}
inline void AppendEntriesResponse::set_log_offset(::google::protobuf::uint64 value) {
  set_has_log_offset();
  log_offset_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.AppendEntriesResponse.log_offset)
}

// optional int32 code = 2;
inline bool AppendEntriesResponse::has_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AppendEntriesResponse::set_has_code() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AppendEntriesResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AppendEntriesResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 AppendEntriesResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.AppendEntriesResponse.code)
  return code_;
}
inline void AppendEntriesResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.AppendEntriesResponse.code)
}

// optional string msg = 3;
inline bool AppendEntriesResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppendEntriesResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppendEntriesResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppendEntriesResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& AppendEntriesResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.AppendEntriesResponse.msg)
  return msg_.GetNoArena();
}
inline void AppendEntriesResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.AppendEntriesResponse.msg)
}
#if LANG_CXX11
inline void AppendEntriesResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.AppendEntriesResponse.msg)
}
#endif
inline void AppendEntriesResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.AppendEntriesResponse.msg)
}
inline void AppendEntriesResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.AppendEntriesResponse.msg)
}
inline ::std::string* AppendEntriesResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.AppendEntriesResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppendEntriesResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.AppendEntriesResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppendEntriesResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.AppendEntriesResponse.msg)
}

// optional uint64 term = 4;
inline bool AppendEntriesResponse::has_term() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppendEntriesResponse::set_has_term() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppendEntriesResponse::clear_has_term() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppendEntriesResponse::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::uint64 AppendEntriesResponse::term() const {
  // @@protoc_insertion_point(field_get:openmldb.api.AppendEntriesResponse.term)
  return term_;
}
inline void AppendEntriesResponse::set_term(::google::protobuf::uint64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.AppendEntriesResponse.term)
}

// -------------------------------------------------------------------

// ChangeRoleRequest

// optional uint32 tid = 1;
inline bool ChangeRoleRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeRoleRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeRoleRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeRoleRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 ChangeRoleRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ChangeRoleRequest.tid)
  return tid_;
}
inline void ChangeRoleRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ChangeRoleRequest.tid)
}

// optional uint32 pid = 2;
inline bool ChangeRoleRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeRoleRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeRoleRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeRoleRequest::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 ChangeRoleRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ChangeRoleRequest.pid)
  return pid_;
}
inline void ChangeRoleRequest::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ChangeRoleRequest.pid)
}

// optional uint64 term = 3;
inline bool ChangeRoleRequest::has_term() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeRoleRequest::set_has_term() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeRoleRequest::clear_has_term() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeRoleRequest::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::uint64 ChangeRoleRequest::term() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ChangeRoleRequest.term)
  return term_;
}
inline void ChangeRoleRequest::set_term(::google::protobuf::uint64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ChangeRoleRequest.term)
}

// optional .openmldb.api.TableMode mode = 4;
inline bool ChangeRoleRequest::has_mode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChangeRoleRequest::set_has_mode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChangeRoleRequest::clear_has_mode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChangeRoleRequest::clear_mode() {
  mode_ = 1;
  clear_has_mode();
}
inline ::openmldb::api::TableMode ChangeRoleRequest::mode() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ChangeRoleRequest.mode)
  return static_cast< ::openmldb::api::TableMode >(mode_);
}
inline void ChangeRoleRequest::set_mode(::openmldb::api::TableMode value) {
  assert(::openmldb::api::TableMode_IsValid(value));
  set_has_mode();
  mode_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ChangeRoleRequest.mode)
}

// repeated string replicas = 5;
inline int ChangeRoleRequest::replicas_size() const {
  return replicas_.size();
}
inline void ChangeRoleRequest::clear_replicas() {
  replicas_.Clear();
}
inline const ::std::string& ChangeRoleRequest::replicas(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.ChangeRoleRequest.replicas)
  return replicas_.Get(index);
}
inline ::std::string* ChangeRoleRequest::mutable_replicas(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.ChangeRoleRequest.replicas)
  return replicas_.Mutable(index);
}
inline void ChangeRoleRequest::set_replicas(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:openmldb.api.ChangeRoleRequest.replicas)
  replicas_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ChangeRoleRequest::set_replicas(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:openmldb.api.ChangeRoleRequest.replicas)
  replicas_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ChangeRoleRequest::set_replicas(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  replicas_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:openmldb.api.ChangeRoleRequest.replicas)
}
inline void ChangeRoleRequest::set_replicas(int index, const char* value, size_t size) {
  replicas_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.ChangeRoleRequest.replicas)
}
inline ::std::string* ChangeRoleRequest::add_replicas() {
  // @@protoc_insertion_point(field_add_mutable:openmldb.api.ChangeRoleRequest.replicas)
  return replicas_.Add();
}
inline void ChangeRoleRequest::add_replicas(const ::std::string& value) {
  replicas_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:openmldb.api.ChangeRoleRequest.replicas)
}
#if LANG_CXX11
inline void ChangeRoleRequest::add_replicas(::std::string&& value) {
  replicas_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:openmldb.api.ChangeRoleRequest.replicas)
}
#endif
inline void ChangeRoleRequest::add_replicas(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  replicas_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:openmldb.api.ChangeRoleRequest.replicas)
}
inline void ChangeRoleRequest::add_replicas(const char* value, size_t size) {
  replicas_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:openmldb.api.ChangeRoleRequest.replicas)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ChangeRoleRequest::replicas() const {
  // @@protoc_insertion_point(field_list:openmldb.api.ChangeRoleRequest.replicas)
  return replicas_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ChangeRoleRequest::mutable_replicas() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.ChangeRoleRequest.replicas)
  return &replicas_;
}

// repeated .openmldb.common.EndpointAndTid endpoint_tid = 6;
inline int ChangeRoleRequest::endpoint_tid_size() const {
  return endpoint_tid_.size();
}
inline ::openmldb::common::EndpointAndTid* ChangeRoleRequest::mutable_endpoint_tid(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.ChangeRoleRequest.endpoint_tid)
  return endpoint_tid_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::common::EndpointAndTid >*
ChangeRoleRequest::mutable_endpoint_tid() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.ChangeRoleRequest.endpoint_tid)
  return &endpoint_tid_;
}
inline const ::openmldb::common::EndpointAndTid& ChangeRoleRequest::endpoint_tid(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.ChangeRoleRequest.endpoint_tid)
  return endpoint_tid_.Get(index);
}
inline ::openmldb::common::EndpointAndTid* ChangeRoleRequest::add_endpoint_tid() {
  // @@protoc_insertion_point(field_add:openmldb.api.ChangeRoleRequest.endpoint_tid)
  return endpoint_tid_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::common::EndpointAndTid >&
ChangeRoleRequest::endpoint_tid() const {
  // @@protoc_insertion_point(field_list:openmldb.api.ChangeRoleRequest.endpoint_tid)
  return endpoint_tid_;
}

// -------------------------------------------------------------------

// SendSnapshotRequest

// required uint32 tid = 1;
inline bool SendSnapshotRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendSnapshotRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendSnapshotRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendSnapshotRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 SendSnapshotRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SendSnapshotRequest.tid)
  return tid_;
}
inline void SendSnapshotRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.SendSnapshotRequest.tid)
}

// required uint32 pid = 2;
inline bool SendSnapshotRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SendSnapshotRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SendSnapshotRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SendSnapshotRequest::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 SendSnapshotRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SendSnapshotRequest.pid)
  return pid_;
}
inline void SendSnapshotRequest::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.SendSnapshotRequest.pid)
}

// required string endpoint = 3;
inline bool SendSnapshotRequest::has_endpoint() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendSnapshotRequest::set_has_endpoint() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendSnapshotRequest::clear_has_endpoint() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendSnapshotRequest::clear_endpoint() {
  endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_endpoint();
}
inline const ::std::string& SendSnapshotRequest::endpoint() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SendSnapshotRequest.endpoint)
  return endpoint_.GetNoArena();
}
inline void SendSnapshotRequest::set_endpoint(const ::std::string& value) {
  set_has_endpoint();
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.SendSnapshotRequest.endpoint)
}
#if LANG_CXX11
inline void SendSnapshotRequest::set_endpoint(::std::string&& value) {
  set_has_endpoint();
  endpoint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.SendSnapshotRequest.endpoint)
}
#endif
inline void SendSnapshotRequest::set_endpoint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_endpoint();
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.SendSnapshotRequest.endpoint)
}
inline void SendSnapshotRequest::set_endpoint(const char* value, size_t size) {
  set_has_endpoint();
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.SendSnapshotRequest.endpoint)
}
inline ::std::string* SendSnapshotRequest::mutable_endpoint() {
  set_has_endpoint();
  // @@protoc_insertion_point(field_mutable:openmldb.api.SendSnapshotRequest.endpoint)
  return endpoint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendSnapshotRequest::release_endpoint() {
  // @@protoc_insertion_point(field_release:openmldb.api.SendSnapshotRequest.endpoint)
  if (!has_endpoint()) {
    return NULL;
  }
  clear_has_endpoint();
  return endpoint_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendSnapshotRequest::set_allocated_endpoint(::std::string* endpoint) {
  if (endpoint != NULL) {
    set_has_endpoint();
  } else {
    clear_has_endpoint();
  }
  endpoint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), endpoint);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.SendSnapshotRequest.endpoint)
}

// optional .openmldb.api.TaskInfo task_info = 4;
inline bool SendSnapshotRequest::has_task_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendSnapshotRequest::set_has_task_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendSnapshotRequest::clear_has_task_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendSnapshotRequest::clear_task_info() {
  if (task_info_ != NULL) task_info_->Clear();
  clear_has_task_info();
}
inline const ::openmldb::api::TaskInfo& SendSnapshotRequest::_internal_task_info() const {
  return *task_info_;
}
inline const ::openmldb::api::TaskInfo& SendSnapshotRequest::task_info() const {
  const ::openmldb::api::TaskInfo* p = task_info_;
  // @@protoc_insertion_point(field_get:openmldb.api.SendSnapshotRequest.task_info)
  return p != NULL ? *p : *reinterpret_cast<const ::openmldb::api::TaskInfo*>(
      &::openmldb::api::_TaskInfo_default_instance_);
}
inline ::openmldb::api::TaskInfo* SendSnapshotRequest::release_task_info() {
  // @@protoc_insertion_point(field_release:openmldb.api.SendSnapshotRequest.task_info)
  clear_has_task_info();
  ::openmldb::api::TaskInfo* temp = task_info_;
  task_info_ = NULL;
  return temp;
}
inline ::openmldb::api::TaskInfo* SendSnapshotRequest::mutable_task_info() {
  set_has_task_info();
  if (task_info_ == NULL) {
    auto* p = CreateMaybeMessage<::openmldb::api::TaskInfo>(GetArenaNoVirtual());
    task_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:openmldb.api.SendSnapshotRequest.task_info)
  return task_info_;
}
inline void SendSnapshotRequest::set_allocated_task_info(::openmldb::api::TaskInfo* task_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete task_info_;
  }
  if (task_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      task_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, task_info, submessage_arena);
    }
    set_has_task_info();
  } else {
    clear_has_task_info();
  }
  task_info_ = task_info;
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.SendSnapshotRequest.task_info)
}

// optional uint32 remote_tid = 5;
inline bool SendSnapshotRequest::has_remote_tid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SendSnapshotRequest::set_has_remote_tid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SendSnapshotRequest::clear_has_remote_tid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SendSnapshotRequest::clear_remote_tid() {
  remote_tid_ = 0u;
  clear_has_remote_tid();
}
inline ::google::protobuf::uint32 SendSnapshotRequest::remote_tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SendSnapshotRequest.remote_tid)
  return remote_tid_;
}
inline void SendSnapshotRequest::set_remote_tid(::google::protobuf::uint32 value) {
  set_has_remote_tid();
  remote_tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.SendSnapshotRequest.remote_tid)
}

// -------------------------------------------------------------------

// SendIndexDataRequest_EndpointPair

// optional uint32 pid = 1;
inline bool SendIndexDataRequest_EndpointPair::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendIndexDataRequest_EndpointPair::set_has_pid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendIndexDataRequest_EndpointPair::clear_has_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendIndexDataRequest_EndpointPair::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 SendIndexDataRequest_EndpointPair::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SendIndexDataRequest.EndpointPair.pid)
  return pid_;
}
inline void SendIndexDataRequest_EndpointPair::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.SendIndexDataRequest.EndpointPair.pid)
}

// optional string endpoint = 2;
inline bool SendIndexDataRequest_EndpointPair::has_endpoint() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendIndexDataRequest_EndpointPair::set_has_endpoint() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendIndexDataRequest_EndpointPair::clear_has_endpoint() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendIndexDataRequest_EndpointPair::clear_endpoint() {
  endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_endpoint();
}
inline const ::std::string& SendIndexDataRequest_EndpointPair::endpoint() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SendIndexDataRequest.EndpointPair.endpoint)
  return endpoint_.GetNoArena();
}
inline void SendIndexDataRequest_EndpointPair::set_endpoint(const ::std::string& value) {
  set_has_endpoint();
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.SendIndexDataRequest.EndpointPair.endpoint)
}
#if LANG_CXX11
inline void SendIndexDataRequest_EndpointPair::set_endpoint(::std::string&& value) {
  set_has_endpoint();
  endpoint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.SendIndexDataRequest.EndpointPair.endpoint)
}
#endif
inline void SendIndexDataRequest_EndpointPair::set_endpoint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_endpoint();
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.SendIndexDataRequest.EndpointPair.endpoint)
}
inline void SendIndexDataRequest_EndpointPair::set_endpoint(const char* value, size_t size) {
  set_has_endpoint();
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.SendIndexDataRequest.EndpointPair.endpoint)
}
inline ::std::string* SendIndexDataRequest_EndpointPair::mutable_endpoint() {
  set_has_endpoint();
  // @@protoc_insertion_point(field_mutable:openmldb.api.SendIndexDataRequest.EndpointPair.endpoint)
  return endpoint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendIndexDataRequest_EndpointPair::release_endpoint() {
  // @@protoc_insertion_point(field_release:openmldb.api.SendIndexDataRequest.EndpointPair.endpoint)
  if (!has_endpoint()) {
    return NULL;
  }
  clear_has_endpoint();
  return endpoint_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendIndexDataRequest_EndpointPair::set_allocated_endpoint(::std::string* endpoint) {
  if (endpoint != NULL) {
    set_has_endpoint();
  } else {
    clear_has_endpoint();
  }
  endpoint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), endpoint);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.SendIndexDataRequest.EndpointPair.endpoint)
}

// -------------------------------------------------------------------

// SendIndexDataRequest

// optional uint32 tid = 1;
inline bool SendIndexDataRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendIndexDataRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendIndexDataRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendIndexDataRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 SendIndexDataRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SendIndexDataRequest.tid)
  return tid_;
}
inline void SendIndexDataRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.SendIndexDataRequest.tid)
}

// optional uint32 pid = 2;
inline bool SendIndexDataRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendIndexDataRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendIndexDataRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendIndexDataRequest::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 SendIndexDataRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SendIndexDataRequest.pid)
  return pid_;
}
inline void SendIndexDataRequest::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.SendIndexDataRequest.pid)
}

// repeated .openmldb.api.SendIndexDataRequest.EndpointPair pairs = 3;
inline int SendIndexDataRequest::pairs_size() const {
  return pairs_.size();
}
inline void SendIndexDataRequest::clear_pairs() {
  pairs_.Clear();
}
inline ::openmldb::api::SendIndexDataRequest_EndpointPair* SendIndexDataRequest::mutable_pairs(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.SendIndexDataRequest.pairs)
  return pairs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::SendIndexDataRequest_EndpointPair >*
SendIndexDataRequest::mutable_pairs() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.SendIndexDataRequest.pairs)
  return &pairs_;
}
inline const ::openmldb::api::SendIndexDataRequest_EndpointPair& SendIndexDataRequest::pairs(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.SendIndexDataRequest.pairs)
  return pairs_.Get(index);
}
inline ::openmldb::api::SendIndexDataRequest_EndpointPair* SendIndexDataRequest::add_pairs() {
  // @@protoc_insertion_point(field_add:openmldb.api.SendIndexDataRequest.pairs)
  return pairs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::SendIndexDataRequest_EndpointPair >&
SendIndexDataRequest::pairs() const {
  // @@protoc_insertion_point(field_list:openmldb.api.SendIndexDataRequest.pairs)
  return pairs_;
}

// optional .openmldb.api.TaskInfo task_info = 4;
inline bool SendIndexDataRequest::has_task_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendIndexDataRequest::set_has_task_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendIndexDataRequest::clear_has_task_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendIndexDataRequest::clear_task_info() {
  if (task_info_ != NULL) task_info_->Clear();
  clear_has_task_info();
}
inline const ::openmldb::api::TaskInfo& SendIndexDataRequest::_internal_task_info() const {
  return *task_info_;
}
inline const ::openmldb::api::TaskInfo& SendIndexDataRequest::task_info() const {
  const ::openmldb::api::TaskInfo* p = task_info_;
  // @@protoc_insertion_point(field_get:openmldb.api.SendIndexDataRequest.task_info)
  return p != NULL ? *p : *reinterpret_cast<const ::openmldb::api::TaskInfo*>(
      &::openmldb::api::_TaskInfo_default_instance_);
}
inline ::openmldb::api::TaskInfo* SendIndexDataRequest::release_task_info() {
  // @@protoc_insertion_point(field_release:openmldb.api.SendIndexDataRequest.task_info)
  clear_has_task_info();
  ::openmldb::api::TaskInfo* temp = task_info_;
  task_info_ = NULL;
  return temp;
}
inline ::openmldb::api::TaskInfo* SendIndexDataRequest::mutable_task_info() {
  set_has_task_info();
  if (task_info_ == NULL) {
    auto* p = CreateMaybeMessage<::openmldb::api::TaskInfo>(GetArenaNoVirtual());
    task_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:openmldb.api.SendIndexDataRequest.task_info)
  return task_info_;
}
inline void SendIndexDataRequest::set_allocated_task_info(::openmldb::api::TaskInfo* task_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete task_info_;
  }
  if (task_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      task_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, task_info, submessage_arena);
    }
    set_has_task_info();
  } else {
    clear_has_task_info();
  }
  task_info_ = task_info;
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.SendIndexDataRequest.task_info)
}

// -------------------------------------------------------------------

// SendDataRequest

// required uint32 tid = 1;
inline bool SendDataRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendDataRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendDataRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendDataRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 SendDataRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SendDataRequest.tid)
  return tid_;
}
inline void SendDataRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.SendDataRequest.tid)
}

// required uint32 pid = 2;
inline bool SendDataRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SendDataRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SendDataRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SendDataRequest::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 SendDataRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SendDataRequest.pid)
  return pid_;
}
inline void SendDataRequest::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.SendDataRequest.pid)
}

// required string file_name = 3;
inline bool SendDataRequest::has_file_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendDataRequest::set_has_file_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendDataRequest::clear_has_file_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendDataRequest::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file_name();
}
inline const ::std::string& SendDataRequest::file_name() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SendDataRequest.file_name)
  return file_name_.GetNoArena();
}
inline void SendDataRequest::set_file_name(const ::std::string& value) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.SendDataRequest.file_name)
}
#if LANG_CXX11
inline void SendDataRequest::set_file_name(::std::string&& value) {
  set_has_file_name();
  file_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.SendDataRequest.file_name)
}
#endif
inline void SendDataRequest::set_file_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.SendDataRequest.file_name)
}
inline void SendDataRequest::set_file_name(const char* value, size_t size) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.SendDataRequest.file_name)
}
inline ::std::string* SendDataRequest::mutable_file_name() {
  set_has_file_name();
  // @@protoc_insertion_point(field_mutable:openmldb.api.SendDataRequest.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendDataRequest::release_file_name() {
  // @@protoc_insertion_point(field_release:openmldb.api.SendDataRequest.file_name)
  if (!has_file_name()) {
    return NULL;
  }
  clear_has_file_name();
  return file_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendDataRequest::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    set_has_file_name();
  } else {
    clear_has_file_name();
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.SendDataRequest.file_name)
}

// required uint64 block_id = 4;
inline bool SendDataRequest::has_block_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SendDataRequest::set_has_block_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SendDataRequest::clear_has_block_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SendDataRequest::clear_block_id() {
  block_id_ = GOOGLE_ULONGLONG(0);
  clear_has_block_id();
}
inline ::google::protobuf::uint64 SendDataRequest::block_id() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SendDataRequest.block_id)
  return block_id_;
}
inline void SendDataRequest::set_block_id(::google::protobuf::uint64 value) {
  set_has_block_id();
  block_id_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.SendDataRequest.block_id)
}

// optional uint32 block_size = 5;
inline bool SendDataRequest::has_block_size() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SendDataRequest::set_has_block_size() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SendDataRequest::clear_has_block_size() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SendDataRequest::clear_block_size() {
  block_size_ = 0u;
  clear_has_block_size();
}
inline ::google::protobuf::uint32 SendDataRequest::block_size() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SendDataRequest.block_size)
  return block_size_;
}
inline void SendDataRequest::set_block_size(::google::protobuf::uint32 value) {
  set_has_block_size();
  block_size_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.SendDataRequest.block_size)
}

// optional bool eof = 6 [default = false];
inline bool SendDataRequest::has_eof() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SendDataRequest::set_has_eof() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SendDataRequest::clear_has_eof() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SendDataRequest::clear_eof() {
  eof_ = false;
  clear_has_eof();
}
inline bool SendDataRequest::eof() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SendDataRequest.eof)
  return eof_;
}
inline void SendDataRequest::set_eof(bool value) {
  set_has_eof();
  eof_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.SendDataRequest.eof)
}

// optional string dir_name = 7;
inline bool SendDataRequest::has_dir_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendDataRequest::set_has_dir_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendDataRequest::clear_has_dir_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendDataRequest::clear_dir_name() {
  dir_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dir_name();
}
inline const ::std::string& SendDataRequest::dir_name() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SendDataRequest.dir_name)
  return dir_name_.GetNoArena();
}
inline void SendDataRequest::set_dir_name(const ::std::string& value) {
  set_has_dir_name();
  dir_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.SendDataRequest.dir_name)
}
#if LANG_CXX11
inline void SendDataRequest::set_dir_name(::std::string&& value) {
  set_has_dir_name();
  dir_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.SendDataRequest.dir_name)
}
#endif
inline void SendDataRequest::set_dir_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_dir_name();
  dir_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.SendDataRequest.dir_name)
}
inline void SendDataRequest::set_dir_name(const char* value, size_t size) {
  set_has_dir_name();
  dir_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.SendDataRequest.dir_name)
}
inline ::std::string* SendDataRequest::mutable_dir_name() {
  set_has_dir_name();
  // @@protoc_insertion_point(field_mutable:openmldb.api.SendDataRequest.dir_name)
  return dir_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendDataRequest::release_dir_name() {
  // @@protoc_insertion_point(field_release:openmldb.api.SendDataRequest.dir_name)
  if (!has_dir_name()) {
    return NULL;
  }
  clear_has_dir_name();
  return dir_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendDataRequest::set_allocated_dir_name(::std::string* dir_name) {
  if (dir_name != NULL) {
    set_has_dir_name();
  } else {
    clear_has_dir_name();
  }
  dir_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dir_name);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.SendDataRequest.dir_name)
}

// optional .openmldb.common.StorageMode storage_mode = 8 [default = kMemory];
inline bool SendDataRequest::has_storage_mode() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SendDataRequest::set_has_storage_mode() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SendDataRequest::clear_has_storage_mode() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SendDataRequest::clear_storage_mode() {
  storage_mode_ = 1;
  clear_has_storage_mode();
}
inline ::openmldb::common::StorageMode SendDataRequest::storage_mode() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SendDataRequest.storage_mode)
  return static_cast< ::openmldb::common::StorageMode >(storage_mode_);
}
inline void SendDataRequest::set_storage_mode(::openmldb::common::StorageMode value) {
  assert(::openmldb::common::StorageMode_IsValid(value));
  set_has_storage_mode();
  storage_mode_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.SendDataRequest.storage_mode)
}

// -------------------------------------------------------------------

// ChangeRoleResponse

// optional int32 code = 1;
inline bool ChangeRoleResponse::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeRoleResponse::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeRoleResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeRoleResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 ChangeRoleResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ChangeRoleResponse.code)
  return code_;
}
inline void ChangeRoleResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ChangeRoleResponse.code)
}

// optional string msg = 2;
inline bool ChangeRoleResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeRoleResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeRoleResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeRoleResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& ChangeRoleResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ChangeRoleResponse.msg)
  return msg_.GetNoArena();
}
inline void ChangeRoleResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.ChangeRoleResponse.msg)
}
#if LANG_CXX11
inline void ChangeRoleResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.ChangeRoleResponse.msg)
}
#endif
inline void ChangeRoleResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.ChangeRoleResponse.msg)
}
inline void ChangeRoleResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.ChangeRoleResponse.msg)
}
inline ::std::string* ChangeRoleResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.ChangeRoleResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChangeRoleResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.ChangeRoleResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChangeRoleResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.ChangeRoleResponse.msg)
}

// -------------------------------------------------------------------

// GetTableStatusRequest

// optional uint32 tid = 1;
inline bool GetTableStatusRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetTableStatusRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetTableStatusRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetTableStatusRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 GetTableStatusRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetTableStatusRequest.tid)
  return tid_;
}
inline void GetTableStatusRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetTableStatusRequest.tid)
}

// optional uint32 pid = 2;
inline bool GetTableStatusRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetTableStatusRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetTableStatusRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetTableStatusRequest::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 GetTableStatusRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetTableStatusRequest.pid)
  return pid_;
}
inline void GetTableStatusRequest::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetTableStatusRequest.pid)
}

// optional bool need_schema = 3 [default = false];
inline bool GetTableStatusRequest::has_need_schema() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetTableStatusRequest::set_has_need_schema() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetTableStatusRequest::clear_has_need_schema() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetTableStatusRequest::clear_need_schema() {
  need_schema_ = false;
  clear_has_need_schema();
}
inline bool GetTableStatusRequest::need_schema() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetTableStatusRequest.need_schema)
  return need_schema_;
}
inline void GetTableStatusRequest::set_need_schema(bool value) {
  set_has_need_schema();
  need_schema_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetTableStatusRequest.need_schema)
}

// -------------------------------------------------------------------

// TsIdxStatus

// optional string idx_name = 1;
inline bool TsIdxStatus::has_idx_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TsIdxStatus::set_has_idx_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TsIdxStatus::clear_has_idx_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TsIdxStatus::clear_idx_name() {
  idx_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_idx_name();
}
inline const ::std::string& TsIdxStatus::idx_name() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TsIdxStatus.idx_name)
  return idx_name_.GetNoArena();
}
inline void TsIdxStatus::set_idx_name(const ::std::string& value) {
  set_has_idx_name();
  idx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.TsIdxStatus.idx_name)
}
#if LANG_CXX11
inline void TsIdxStatus::set_idx_name(::std::string&& value) {
  set_has_idx_name();
  idx_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.TsIdxStatus.idx_name)
}
#endif
inline void TsIdxStatus::set_idx_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_idx_name();
  idx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.TsIdxStatus.idx_name)
}
inline void TsIdxStatus::set_idx_name(const char* value, size_t size) {
  set_has_idx_name();
  idx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.TsIdxStatus.idx_name)
}
inline ::std::string* TsIdxStatus::mutable_idx_name() {
  set_has_idx_name();
  // @@protoc_insertion_point(field_mutable:openmldb.api.TsIdxStatus.idx_name)
  return idx_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TsIdxStatus::release_idx_name() {
  // @@protoc_insertion_point(field_release:openmldb.api.TsIdxStatus.idx_name)
  if (!has_idx_name()) {
    return NULL;
  }
  clear_has_idx_name();
  return idx_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TsIdxStatus::set_allocated_idx_name(::std::string* idx_name) {
  if (idx_name != NULL) {
    set_has_idx_name();
  } else {
    clear_has_idx_name();
  }
  idx_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), idx_name);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.TsIdxStatus.idx_name)
}

// repeated uint64 seg_cnts = 2;
inline int TsIdxStatus::seg_cnts_size() const {
  return seg_cnts_.size();
}
inline void TsIdxStatus::clear_seg_cnts() {
  seg_cnts_.Clear();
}
inline ::google::protobuf::uint64 TsIdxStatus::seg_cnts(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.TsIdxStatus.seg_cnts)
  return seg_cnts_.Get(index);
}
inline void TsIdxStatus::set_seg_cnts(int index, ::google::protobuf::uint64 value) {
  seg_cnts_.Set(index, value);
  // @@protoc_insertion_point(field_set:openmldb.api.TsIdxStatus.seg_cnts)
}
inline void TsIdxStatus::add_seg_cnts(::google::protobuf::uint64 value) {
  seg_cnts_.Add(value);
  // @@protoc_insertion_point(field_add:openmldb.api.TsIdxStatus.seg_cnts)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TsIdxStatus::seg_cnts() const {
  // @@protoc_insertion_point(field_list:openmldb.api.TsIdxStatus.seg_cnts)
  return seg_cnts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TsIdxStatus::mutable_seg_cnts() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.TsIdxStatus.seg_cnts)
  return &seg_cnts_;
}

// -------------------------------------------------------------------

// TableStatus

// optional uint32 tid = 1;
inline bool TableStatus::has_tid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TableStatus::set_has_tid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TableStatus::clear_has_tid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TableStatus::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 TableStatus::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableStatus.tid)
  return tid_;
}
inline void TableStatus::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableStatus.tid)
}

// optional uint32 pid = 2;
inline bool TableStatus::has_pid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TableStatus::set_has_pid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TableStatus::clear_has_pid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TableStatus::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 TableStatus::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableStatus.pid)
  return pid_;
}
inline void TableStatus::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableStatus.pid)
}

// optional uint64 offset = 3;
inline bool TableStatus::has_offset() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TableStatus::set_has_offset() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TableStatus::clear_has_offset() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TableStatus::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
  clear_has_offset();
}
inline ::google::protobuf::uint64 TableStatus::offset() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableStatus.offset)
  return offset_;
}
inline void TableStatus::set_offset(::google::protobuf::uint64 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableStatus.offset)
}

// optional .openmldb.api.TableMode mode = 4;
inline bool TableStatus::has_mode() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void TableStatus::set_has_mode() {
  _has_bits_[0] |= 0x00008000u;
}
inline void TableStatus::clear_has_mode() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void TableStatus::clear_mode() {
  mode_ = 1;
  clear_has_mode();
}
inline ::openmldb::api::TableMode TableStatus::mode() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableStatus.mode)
  return static_cast< ::openmldb::api::TableMode >(mode_);
}
inline void TableStatus::set_mode(::openmldb::api::TableMode value) {
  assert(::openmldb::api::TableMode_IsValid(value));
  set_has_mode();
  mode_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableStatus.mode)
}

// optional .openmldb.api.TableState state = 5;
inline bool TableStatus::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TableStatus::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TableStatus::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TableStatus::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::openmldb::api::TableState TableStatus::state() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableStatus.state)
  return static_cast< ::openmldb::api::TableState >(state_);
}
inline void TableStatus::set_state(::openmldb::api::TableState value) {
  assert(::openmldb::api::TableState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableStatus.state)
}

// optional bool is_expire = 7;
inline bool TableStatus::has_is_expire() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TableStatus::set_has_is_expire() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TableStatus::clear_has_is_expire() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TableStatus::clear_is_expire() {
  is_expire_ = false;
  clear_has_is_expire();
}
inline bool TableStatus::is_expire() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableStatus.is_expire)
  return is_expire_;
}
inline void TableStatus::set_is_expire(bool value) {
  set_has_is_expire();
  is_expire_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableStatus.is_expire)
}

// optional int64 time_offset = 8;
inline bool TableStatus::has_time_offset() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TableStatus::set_has_time_offset() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TableStatus::clear_has_time_offset() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TableStatus::clear_time_offset() {
  time_offset_ = GOOGLE_LONGLONG(0);
  clear_has_time_offset();
}
inline ::google::protobuf::int64 TableStatus::time_offset() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableStatus.time_offset)
  return time_offset_;
}
inline void TableStatus::set_time_offset(::google::protobuf::int64 value) {
  set_has_time_offset();
  time_offset_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableStatus.time_offset)
}

// optional uint64 record_cnt = 9;
inline bool TableStatus::has_record_cnt() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TableStatus::set_has_record_cnt() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TableStatus::clear_has_record_cnt() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TableStatus::clear_record_cnt() {
  record_cnt_ = GOOGLE_ULONGLONG(0);
  clear_has_record_cnt();
}
inline ::google::protobuf::uint64 TableStatus::record_cnt() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableStatus.record_cnt)
  return record_cnt_;
}
inline void TableStatus::set_record_cnt(::google::protobuf::uint64 value) {
  set_has_record_cnt();
  record_cnt_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableStatus.record_cnt)
}

// optional uint64 idx_cnt = 10;
inline bool TableStatus::has_idx_cnt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TableStatus::set_has_idx_cnt() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TableStatus::clear_has_idx_cnt() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TableStatus::clear_idx_cnt() {
  idx_cnt_ = GOOGLE_ULONGLONG(0);
  clear_has_idx_cnt();
}
inline ::google::protobuf::uint64 TableStatus::idx_cnt() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableStatus.idx_cnt)
  return idx_cnt_;
}
inline void TableStatus::set_idx_cnt(::google::protobuf::uint64 value) {
  set_has_idx_cnt();
  idx_cnt_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableStatus.idx_cnt)
}

// repeated .openmldb.api.TsIdxStatus ts_idx_status = 11;
inline int TableStatus::ts_idx_status_size() const {
  return ts_idx_status_.size();
}
inline void TableStatus::clear_ts_idx_status() {
  ts_idx_status_.Clear();
}
inline ::openmldb::api::TsIdxStatus* TableStatus::mutable_ts_idx_status(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.TableStatus.ts_idx_status)
  return ts_idx_status_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::TsIdxStatus >*
TableStatus::mutable_ts_idx_status() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.TableStatus.ts_idx_status)
  return &ts_idx_status_;
}
inline const ::openmldb::api::TsIdxStatus& TableStatus::ts_idx_status(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableStatus.ts_idx_status)
  return ts_idx_status_.Get(index);
}
inline ::openmldb::api::TsIdxStatus* TableStatus::add_ts_idx_status() {
  // @@protoc_insertion_point(field_add:openmldb.api.TableStatus.ts_idx_status)
  return ts_idx_status_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::TsIdxStatus >&
TableStatus::ts_idx_status() const {
  // @@protoc_insertion_point(field_list:openmldb.api.TableStatus.ts_idx_status)
  return ts_idx_status_;
}

// optional string name = 12;
inline bool TableStatus::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TableStatus::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TableStatus::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TableStatus::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& TableStatus::name() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableStatus.name)
  return name_.GetNoArena();
}
inline void TableStatus::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.TableStatus.name)
}
#if LANG_CXX11
inline void TableStatus::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.TableStatus.name)
}
#endif
inline void TableStatus::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.TableStatus.name)
}
inline void TableStatus::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.TableStatus.name)
}
inline ::std::string* TableStatus::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:openmldb.api.TableStatus.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TableStatus::release_name() {
  // @@protoc_insertion_point(field_release:openmldb.api.TableStatus.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TableStatus::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.TableStatus.name)
}

// optional uint64 record_byte_size = 13;
inline bool TableStatus::has_record_byte_size() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TableStatus::set_has_record_byte_size() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TableStatus::clear_has_record_byte_size() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TableStatus::clear_record_byte_size() {
  record_byte_size_ = GOOGLE_ULONGLONG(0);
  clear_has_record_byte_size();
}
inline ::google::protobuf::uint64 TableStatus::record_byte_size() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableStatus.record_byte_size)
  return record_byte_size_;
}
inline void TableStatus::set_record_byte_size(::google::protobuf::uint64 value) {
  set_has_record_byte_size();
  record_byte_size_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableStatus.record_byte_size)
}

// optional uint64 record_idx_byte_size = 14;
inline bool TableStatus::has_record_idx_byte_size() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TableStatus::set_has_record_idx_byte_size() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TableStatus::clear_has_record_idx_byte_size() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TableStatus::clear_record_idx_byte_size() {
  record_idx_byte_size_ = GOOGLE_ULONGLONG(0);
  clear_has_record_idx_byte_size();
}
inline ::google::protobuf::uint64 TableStatus::record_idx_byte_size() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableStatus.record_idx_byte_size)
  return record_idx_byte_size_;
}
inline void TableStatus::set_record_idx_byte_size(::google::protobuf::uint64 value) {
  set_has_record_idx_byte_size();
  record_idx_byte_size_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableStatus.record_idx_byte_size)
}

// optional uint64 record_pk_cnt = 15;
inline bool TableStatus::has_record_pk_cnt() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void TableStatus::set_has_record_pk_cnt() {
  _has_bits_[0] |= 0x00000800u;
}
inline void TableStatus::clear_has_record_pk_cnt() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void TableStatus::clear_record_pk_cnt() {
  record_pk_cnt_ = GOOGLE_ULONGLONG(0);
  clear_has_record_pk_cnt();
}
inline ::google::protobuf::uint64 TableStatus::record_pk_cnt() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableStatus.record_pk_cnt)
  return record_pk_cnt_;
}
inline void TableStatus::set_record_pk_cnt(::google::protobuf::uint64 value) {
  set_has_record_pk_cnt();
  record_pk_cnt_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableStatus.record_pk_cnt)
}

// optional .openmldb.type.CompressType compress_type = 17;
inline bool TableStatus::has_compress_type() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void TableStatus::set_has_compress_type() {
  _has_bits_[0] |= 0x00001000u;
}
inline void TableStatus::clear_has_compress_type() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void TableStatus::clear_compress_type() {
  compress_type_ = 0;
  clear_has_compress_type();
}
inline ::openmldb::type::CompressType TableStatus::compress_type() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableStatus.compress_type)
  return static_cast< ::openmldb::type::CompressType >(compress_type_);
}
inline void TableStatus::set_compress_type(::openmldb::type::CompressType value) {
  assert(::openmldb::type::CompressType_IsValid(value));
  set_has_compress_type();
  compress_type_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableStatus.compress_type)
}

// optional uint32 skiplist_height = 18;
inline bool TableStatus::has_skiplist_height() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void TableStatus::set_has_skiplist_height() {
  _has_bits_[0] |= 0x00002000u;
}
inline void TableStatus::clear_has_skiplist_height() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void TableStatus::clear_skiplist_height() {
  skiplist_height_ = 0u;
  clear_has_skiplist_height();
}
inline ::google::protobuf::uint32 TableStatus::skiplist_height() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableStatus.skiplist_height)
  return skiplist_height_;
}
inline void TableStatus::set_skiplist_height(::google::protobuf::uint32 value) {
  set_has_skiplist_height();
  skiplist_height_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableStatus.skiplist_height)
}

// optional uint64 diskused = 19 [default = 0];
inline bool TableStatus::has_diskused() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void TableStatus::set_has_diskused() {
  _has_bits_[0] |= 0x00004000u;
}
inline void TableStatus::clear_has_diskused() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void TableStatus::clear_diskused() {
  diskused_ = GOOGLE_ULONGLONG(0);
  clear_has_diskused();
}
inline ::google::protobuf::uint64 TableStatus::diskused() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableStatus.diskused)
  return diskused_;
}
inline void TableStatus::set_diskused(::google::protobuf::uint64 value) {
  set_has_diskused();
  diskused_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableStatus.diskused)
}

// optional .openmldb.common.StorageMode storage_mode = 20 [default = kMemory];
inline bool TableStatus::has_storage_mode() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void TableStatus::set_has_storage_mode() {
  _has_bits_[0] |= 0x00010000u;
}
inline void TableStatus::clear_has_storage_mode() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void TableStatus::clear_storage_mode() {
  storage_mode_ = 1;
  clear_has_storage_mode();
}
inline ::openmldb::common::StorageMode TableStatus::storage_mode() const {
  // @@protoc_insertion_point(field_get:openmldb.api.TableStatus.storage_mode)
  return static_cast< ::openmldb::common::StorageMode >(storage_mode_);
}
inline void TableStatus::set_storage_mode(::openmldb::common::StorageMode value) {
  assert(::openmldb::common::StorageMode_IsValid(value));
  set_has_storage_mode();
  storage_mode_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.TableStatus.storage_mode)
}

// -------------------------------------------------------------------

// GetTableStatusResponse

// repeated .openmldb.api.TableStatus all_table_status = 1;
inline int GetTableStatusResponse::all_table_status_size() const {
  return all_table_status_.size();
}
inline void GetTableStatusResponse::clear_all_table_status() {
  all_table_status_.Clear();
}
inline ::openmldb::api::TableStatus* GetTableStatusResponse::mutable_all_table_status(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.GetTableStatusResponse.all_table_status)
  return all_table_status_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::TableStatus >*
GetTableStatusResponse::mutable_all_table_status() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.GetTableStatusResponse.all_table_status)
  return &all_table_status_;
}
inline const ::openmldb::api::TableStatus& GetTableStatusResponse::all_table_status(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetTableStatusResponse.all_table_status)
  return all_table_status_.Get(index);
}
inline ::openmldb::api::TableStatus* GetTableStatusResponse::add_all_table_status() {
  // @@protoc_insertion_point(field_add:openmldb.api.GetTableStatusResponse.all_table_status)
  return all_table_status_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::TableStatus >&
GetTableStatusResponse::all_table_status() const {
  // @@protoc_insertion_point(field_list:openmldb.api.GetTableStatusResponse.all_table_status)
  return all_table_status_;
}

// optional int32 code = 2;
inline bool GetTableStatusResponse::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetTableStatusResponse::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetTableStatusResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetTableStatusResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 GetTableStatusResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetTableStatusResponse.code)
  return code_;
}
inline void GetTableStatusResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetTableStatusResponse.code)
}

// optional string msg = 3;
inline bool GetTableStatusResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetTableStatusResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetTableStatusResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetTableStatusResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& GetTableStatusResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetTableStatusResponse.msg)
  return msg_.GetNoArena();
}
inline void GetTableStatusResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.GetTableStatusResponse.msg)
}
#if LANG_CXX11
inline void GetTableStatusResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.GetTableStatusResponse.msg)
}
#endif
inline void GetTableStatusResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.GetTableStatusResponse.msg)
}
inline void GetTableStatusResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.GetTableStatusResponse.msg)
}
inline ::std::string* GetTableStatusResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.GetTableStatusResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetTableStatusResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.GetTableStatusResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetTableStatusResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.GetTableStatusResponse.msg)
}

// -------------------------------------------------------------------

// GetRequest

// optional uint32 tid = 1;
inline bool GetRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 GetRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetRequest.tid)
  return tid_;
}
inline void GetRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetRequest.tid)
}

// optional uint32 pid = 2;
inline bool GetRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetRequest::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 GetRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetRequest.pid)
  return pid_;
}
inline void GetRequest::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetRequest.pid)
}

// optional string key = 3;
inline bool GetRequest::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRequest::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRequest::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& GetRequest::key() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetRequest.key)
  return key_.GetNoArena();
}
inline void GetRequest::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.GetRequest.key)
}
#if LANG_CXX11
inline void GetRequest::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.GetRequest.key)
}
#endif
inline void GetRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.GetRequest.key)
}
inline void GetRequest::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.GetRequest.key)
}
inline ::std::string* GetRequest::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:openmldb.api.GetRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetRequest::release_key() {
  // @@protoc_insertion_point(field_release:openmldb.api.GetRequest.key)
  if (!has_key()) {
    return NULL;
  }
  clear_has_key();
  return key_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.GetRequest.key)
}

// optional uint64 ts = 4 [default = 0];
inline bool GetRequest::has_ts() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetRequest::set_has_ts() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetRequest::clear_has_ts() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetRequest::clear_ts() {
  ts_ = GOOGLE_ULONGLONG(0);
  clear_has_ts();
}
inline ::google::protobuf::uint64 GetRequest::ts() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetRequest.ts)
  return ts_;
}
inline void GetRequest::set_ts(::google::protobuf::uint64 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetRequest.ts)
}

// optional string idx_name = 5;
inline bool GetRequest::has_idx_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetRequest::set_has_idx_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetRequest::clear_has_idx_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetRequest::clear_idx_name() {
  idx_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_idx_name();
}
inline const ::std::string& GetRequest::idx_name() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetRequest.idx_name)
  return idx_name_.GetNoArena();
}
inline void GetRequest::set_idx_name(const ::std::string& value) {
  set_has_idx_name();
  idx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.GetRequest.idx_name)
}
#if LANG_CXX11
inline void GetRequest::set_idx_name(::std::string&& value) {
  set_has_idx_name();
  idx_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.GetRequest.idx_name)
}
#endif
inline void GetRequest::set_idx_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_idx_name();
  idx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.GetRequest.idx_name)
}
inline void GetRequest::set_idx_name(const char* value, size_t size) {
  set_has_idx_name();
  idx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.GetRequest.idx_name)
}
inline ::std::string* GetRequest::mutable_idx_name() {
  set_has_idx_name();
  // @@protoc_insertion_point(field_mutable:openmldb.api.GetRequest.idx_name)
  return idx_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetRequest::release_idx_name() {
  // @@protoc_insertion_point(field_release:openmldb.api.GetRequest.idx_name)
  if (!has_idx_name()) {
    return NULL;
  }
  clear_has_idx_name();
  return idx_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRequest::set_allocated_idx_name(::std::string* idx_name) {
  if (idx_name != NULL) {
    set_has_idx_name();
  } else {
    clear_has_idx_name();
  }
  idx_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), idx_name);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.GetRequest.idx_name)
}

// optional .openmldb.api.GetType type = 6 [default = kSubKeyEq];
inline bool GetRequest::has_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetRequest::set_has_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetRequest::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::openmldb::api::GetType GetRequest::type() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetRequest.type)
  return static_cast< ::openmldb::api::GetType >(type_);
}
inline void GetRequest::set_type(::openmldb::api::GetType value) {
  assert(::openmldb::api::GetType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetRequest.type)
}

// optional uint64 et = 7;
inline bool GetRequest::has_et() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetRequest::set_has_et() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetRequest::clear_has_et() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetRequest::clear_et() {
  et_ = GOOGLE_ULONGLONG(0);
  clear_has_et();
}
inline ::google::protobuf::uint64 GetRequest::et() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetRequest.et)
  return et_;
}
inline void GetRequest::set_et(::google::protobuf::uint64 value) {
  set_has_et();
  et_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetRequest.et)
}

// optional .openmldb.api.GetType et_type = 8 [default = kSubKeyGe];
inline bool GetRequest::has_et_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GetRequest::set_has_et_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GetRequest::clear_has_et_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GetRequest::clear_et_type() {
  et_type_ = 5;
  clear_has_et_type();
}
inline ::openmldb::api::GetType GetRequest::et_type() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetRequest.et_type)
  return static_cast< ::openmldb::api::GetType >(et_type_);
}
inline void GetRequest::set_et_type(::openmldb::api::GetType value) {
  assert(::openmldb::api::GetType_IsValid(value));
  set_has_et_type();
  et_type_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetRequest.et_type)
}

// repeated uint32 projection = 9;
inline int GetRequest::projection_size() const {
  return projection_.size();
}
inline void GetRequest::clear_projection() {
  projection_.Clear();
}
inline ::google::protobuf::uint32 GetRequest::projection(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetRequest.projection)
  return projection_.Get(index);
}
inline void GetRequest::set_projection(int index, ::google::protobuf::uint32 value) {
  projection_.Set(index, value);
  // @@protoc_insertion_point(field_set:openmldb.api.GetRequest.projection)
}
inline void GetRequest::add_projection(::google::protobuf::uint32 value) {
  projection_.Add(value);
  // @@protoc_insertion_point(field_add:openmldb.api.GetRequest.projection)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetRequest::projection() const {
  // @@protoc_insertion_point(field_list:openmldb.api.GetRequest.projection)
  return projection_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetRequest::mutable_projection() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.GetRequest.projection)
  return &projection_;
}

// repeated uint32 pid_group = 10;
inline int GetRequest::pid_group_size() const {
  return pid_group_.size();
}
inline void GetRequest::clear_pid_group() {
  pid_group_.Clear();
}
inline ::google::protobuf::uint32 GetRequest::pid_group(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetRequest.pid_group)
  return pid_group_.Get(index);
}
inline void GetRequest::set_pid_group(int index, ::google::protobuf::uint32 value) {
  pid_group_.Set(index, value);
  // @@protoc_insertion_point(field_set:openmldb.api.GetRequest.pid_group)
}
inline void GetRequest::add_pid_group(::google::protobuf::uint32 value) {
  pid_group_.Add(value);
  // @@protoc_insertion_point(field_add:openmldb.api.GetRequest.pid_group)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetRequest::pid_group() const {
  // @@protoc_insertion_point(field_list:openmldb.api.GetRequest.pid_group)
  return pid_group_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetRequest::mutable_pid_group() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.GetRequest.pid_group)
  return &pid_group_;
}

// -------------------------------------------------------------------

// GetResponse

// optional int32 code = 1;
inline bool GetResponse::has_code() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetResponse::set_has_code() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 GetResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetResponse.code)
  return code_;
}
inline void GetResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetResponse.code)
}

// optional string msg = 2;
inline bool GetResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& GetResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetResponse.msg)
  return msg_.GetNoArena();
}
inline void GetResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.GetResponse.msg)
}
#if LANG_CXX11
inline void GetResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.GetResponse.msg)
}
#endif
inline void GetResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.GetResponse.msg)
}
inline void GetResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.GetResponse.msg)
}
inline ::std::string* GetResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.GetResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.GetResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.GetResponse.msg)
}

// optional string key = 3;
inline bool GetResponse::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetResponse::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetResponse::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetResponse::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& GetResponse::key() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetResponse.key)
  return key_.GetNoArena();
}
inline void GetResponse::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.GetResponse.key)
}
#if LANG_CXX11
inline void GetResponse::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.GetResponse.key)
}
#endif
inline void GetResponse::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.GetResponse.key)
}
inline void GetResponse::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.GetResponse.key)
}
inline ::std::string* GetResponse::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:openmldb.api.GetResponse.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetResponse::release_key() {
  // @@protoc_insertion_point(field_release:openmldb.api.GetResponse.key)
  if (!has_key()) {
    return NULL;
  }
  clear_has_key();
  return key_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetResponse::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.GetResponse.key)
}

// optional uint64 ts = 4;
inline bool GetResponse::has_ts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetResponse::set_has_ts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetResponse::clear_has_ts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetResponse::clear_ts() {
  ts_ = GOOGLE_ULONGLONG(0);
  clear_has_ts();
}
inline ::google::protobuf::uint64 GetResponse::ts() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetResponse.ts)
  return ts_;
}
inline void GetResponse::set_ts(::google::protobuf::uint64 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetResponse.ts)
}

// optional bytes value = 5;
inline bool GetResponse::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetResponse::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetResponse::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetResponse::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& GetResponse::value() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetResponse.value)
  return value_.GetNoArena();
}
inline void GetResponse::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.GetResponse.value)
}
#if LANG_CXX11
inline void GetResponse::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.GetResponse.value)
}
#endif
inline void GetResponse::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.GetResponse.value)
}
inline void GetResponse::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.GetResponse.value)
}
inline ::std::string* GetResponse::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:openmldb.api.GetResponse.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetResponse::release_value() {
  // @@protoc_insertion_point(field_release:openmldb.api.GetResponse.value)
  if (!has_value()) {
    return NULL;
  }
  clear_has_value();
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetResponse::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.GetResponse.value)
}

// -------------------------------------------------------------------

// CountRequest

// optional uint32 tid = 1;
inline bool CountRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CountRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CountRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CountRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 CountRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CountRequest.tid)
  return tid_;
}
inline void CountRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.CountRequest.tid)
}

// optional uint32 pid = 2;
inline bool CountRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CountRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CountRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CountRequest::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 CountRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CountRequest.pid)
  return pid_;
}
inline void CountRequest::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.CountRequest.pid)
}

// optional string idx_name = 3;
inline bool CountRequest::has_idx_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CountRequest::set_has_idx_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CountRequest::clear_has_idx_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CountRequest::clear_idx_name() {
  idx_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_idx_name();
}
inline const ::std::string& CountRequest::idx_name() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CountRequest.idx_name)
  return idx_name_.GetNoArena();
}
inline void CountRequest::set_idx_name(const ::std::string& value) {
  set_has_idx_name();
  idx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.CountRequest.idx_name)
}
#if LANG_CXX11
inline void CountRequest::set_idx_name(::std::string&& value) {
  set_has_idx_name();
  idx_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.CountRequest.idx_name)
}
#endif
inline void CountRequest::set_idx_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_idx_name();
  idx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.CountRequest.idx_name)
}
inline void CountRequest::set_idx_name(const char* value, size_t size) {
  set_has_idx_name();
  idx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.CountRequest.idx_name)
}
inline ::std::string* CountRequest::mutable_idx_name() {
  set_has_idx_name();
  // @@protoc_insertion_point(field_mutable:openmldb.api.CountRequest.idx_name)
  return idx_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CountRequest::release_idx_name() {
  // @@protoc_insertion_point(field_release:openmldb.api.CountRequest.idx_name)
  if (!has_idx_name()) {
    return NULL;
  }
  clear_has_idx_name();
  return idx_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CountRequest::set_allocated_idx_name(::std::string* idx_name) {
  if (idx_name != NULL) {
    set_has_idx_name();
  } else {
    clear_has_idx_name();
  }
  idx_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), idx_name);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.CountRequest.idx_name)
}

// optional string key = 4;
inline bool CountRequest::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CountRequest::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CountRequest::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CountRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& CountRequest::key() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CountRequest.key)
  return key_.GetNoArena();
}
inline void CountRequest::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.CountRequest.key)
}
#if LANG_CXX11
inline void CountRequest::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.CountRequest.key)
}
#endif
inline void CountRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.CountRequest.key)
}
inline void CountRequest::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.CountRequest.key)
}
inline ::std::string* CountRequest::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:openmldb.api.CountRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CountRequest::release_key() {
  // @@protoc_insertion_point(field_release:openmldb.api.CountRequest.key)
  if (!has_key()) {
    return NULL;
  }
  clear_has_key();
  return key_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CountRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.CountRequest.key)
}

// optional bool filter_expired_data = 5 [default = false];
inline bool CountRequest::has_filter_expired_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CountRequest::set_has_filter_expired_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CountRequest::clear_has_filter_expired_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CountRequest::clear_filter_expired_data() {
  filter_expired_data_ = false;
  clear_has_filter_expired_data();
}
inline bool CountRequest::filter_expired_data() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CountRequest.filter_expired_data)
  return filter_expired_data_;
}
inline void CountRequest::set_filter_expired_data(bool value) {
  set_has_filter_expired_data();
  filter_expired_data_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.CountRequest.filter_expired_data)
}

// optional bool enable_remove_duplicated_record = 6 [default = false];
inline bool CountRequest::has_enable_remove_duplicated_record() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CountRequest::set_has_enable_remove_duplicated_record() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CountRequest::clear_has_enable_remove_duplicated_record() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CountRequest::clear_enable_remove_duplicated_record() {
  enable_remove_duplicated_record_ = false;
  clear_has_enable_remove_duplicated_record();
}
inline bool CountRequest::enable_remove_duplicated_record() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CountRequest.enable_remove_duplicated_record)
  return enable_remove_duplicated_record_;
}
inline void CountRequest::set_enable_remove_duplicated_record(bool value) {
  set_has_enable_remove_duplicated_record();
  enable_remove_duplicated_record_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.CountRequest.enable_remove_duplicated_record)
}

// optional uint64 st = 7 [default = 0];
inline bool CountRequest::has_st() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CountRequest::set_has_st() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CountRequest::clear_has_st() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CountRequest::clear_st() {
  st_ = GOOGLE_ULONGLONG(0);
  clear_has_st();
}
inline ::google::protobuf::uint64 CountRequest::st() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CountRequest.st)
  return st_;
}
inline void CountRequest::set_st(::google::protobuf::uint64 value) {
  set_has_st();
  st_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.CountRequest.st)
}

// optional .openmldb.api.GetType st_type = 8 [default = kSubKeyLe];
inline bool CountRequest::has_st_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CountRequest::set_has_st_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CountRequest::clear_has_st_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CountRequest::clear_st_type() {
  st_type_ = 3;
  clear_has_st_type();
}
inline ::openmldb::api::GetType CountRequest::st_type() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CountRequest.st_type)
  return static_cast< ::openmldb::api::GetType >(st_type_);
}
inline void CountRequest::set_st_type(::openmldb::api::GetType value) {
  assert(::openmldb::api::GetType_IsValid(value));
  set_has_st_type();
  st_type_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.CountRequest.st_type)
}

// optional uint64 et = 9 [default = 0];
inline bool CountRequest::has_et() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CountRequest::set_has_et() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CountRequest::clear_has_et() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CountRequest::clear_et() {
  et_ = GOOGLE_ULONGLONG(0);
  clear_has_et();
}
inline ::google::protobuf::uint64 CountRequest::et() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CountRequest.et)
  return et_;
}
inline void CountRequest::set_et(::google::protobuf::uint64 value) {
  set_has_et();
  et_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.CountRequest.et)
}

// optional .openmldb.api.GetType et_type = 10 [default = kSubKeyGt];
inline bool CountRequest::has_et_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CountRequest::set_has_et_type() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CountRequest::clear_has_et_type() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CountRequest::clear_et_type() {
  et_type_ = 4;
  clear_has_et_type();
}
inline ::openmldb::api::GetType CountRequest::et_type() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CountRequest.et_type)
  return static_cast< ::openmldb::api::GetType >(et_type_);
}
inline void CountRequest::set_et_type(::openmldb::api::GetType value) {
  assert(::openmldb::api::GetType_IsValid(value));
  set_has_et_type();
  et_type_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.CountRequest.et_type)
}

// -------------------------------------------------------------------

// CountResponse

// optional int32 code = 1;
inline bool CountResponse::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CountResponse::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CountResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CountResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 CountResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CountResponse.code)
  return code_;
}
inline void CountResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.CountResponse.code)
}

// optional string msg = 2;
inline bool CountResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CountResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CountResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CountResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& CountResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CountResponse.msg)
  return msg_.GetNoArena();
}
inline void CountResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.CountResponse.msg)
}
#if LANG_CXX11
inline void CountResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.CountResponse.msg)
}
#endif
inline void CountResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.CountResponse.msg)
}
inline void CountResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.CountResponse.msg)
}
inline ::std::string* CountResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.CountResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CountResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.CountResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CountResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.CountResponse.msg)
}

// optional uint32 count = 3;
inline bool CountResponse::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CountResponse::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CountResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CountResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 CountResponse::count() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CountResponse.count)
  return count_;
}
inline void CountResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.CountResponse.count)
}

// -------------------------------------------------------------------

// GetTermPairRequest

// optional uint32 tid = 1;
inline bool GetTermPairRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetTermPairRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetTermPairRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetTermPairRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 GetTermPairRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetTermPairRequest.tid)
  return tid_;
}
inline void GetTermPairRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetTermPairRequest.tid)
}

// optional uint32 pid = 2;
inline bool GetTermPairRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetTermPairRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetTermPairRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetTermPairRequest::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 GetTermPairRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetTermPairRequest.pid)
  return pid_;
}
inline void GetTermPairRequest::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetTermPairRequest.pid)
}

// optional .openmldb.common.StorageMode storage_mode = 3 [default = kMemory];
inline bool GetTermPairRequest::has_storage_mode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetTermPairRequest::set_has_storage_mode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetTermPairRequest::clear_has_storage_mode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetTermPairRequest::clear_storage_mode() {
  storage_mode_ = 1;
  clear_has_storage_mode();
}
inline ::openmldb::common::StorageMode GetTermPairRequest::storage_mode() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetTermPairRequest.storage_mode)
  return static_cast< ::openmldb::common::StorageMode >(storage_mode_);
}
inline void GetTermPairRequest::set_storage_mode(::openmldb::common::StorageMode value) {
  assert(::openmldb::common::StorageMode_IsValid(value));
  set_has_storage_mode();
  storage_mode_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetTermPairRequest.storage_mode)
}

// -------------------------------------------------------------------

// GetTermPairResponse

// optional int32 code = 1;
inline bool GetTermPairResponse::has_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetTermPairResponse::set_has_code() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetTermPairResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetTermPairResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 GetTermPairResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetTermPairResponse.code)
  return code_;
}
inline void GetTermPairResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetTermPairResponse.code)
}

// optional string msg = 2;
inline bool GetTermPairResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetTermPairResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetTermPairResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetTermPairResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& GetTermPairResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetTermPairResponse.msg)
  return msg_.GetNoArena();
}
inline void GetTermPairResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.GetTermPairResponse.msg)
}
#if LANG_CXX11
inline void GetTermPairResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.GetTermPairResponse.msg)
}
#endif
inline void GetTermPairResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.GetTermPairResponse.msg)
}
inline void GetTermPairResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.GetTermPairResponse.msg)
}
inline ::std::string* GetTermPairResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.GetTermPairResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetTermPairResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.GetTermPairResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetTermPairResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.GetTermPairResponse.msg)
}

// optional uint64 term = 3;
inline bool GetTermPairResponse::has_term() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetTermPairResponse::set_has_term() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetTermPairResponse::clear_has_term() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetTermPairResponse::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::uint64 GetTermPairResponse::term() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetTermPairResponse.term)
  return term_;
}
inline void GetTermPairResponse::set_term(::google::protobuf::uint64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetTermPairResponse.term)
}

// optional uint64 offset = 4;
inline bool GetTermPairResponse::has_offset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetTermPairResponse::set_has_offset() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetTermPairResponse::clear_has_offset() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetTermPairResponse::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
  clear_has_offset();
}
inline ::google::protobuf::uint64 GetTermPairResponse::offset() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetTermPairResponse.offset)
  return offset_;
}
inline void GetTermPairResponse::set_offset(::google::protobuf::uint64 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetTermPairResponse.offset)
}

// optional bool has_table = 5;
inline bool GetTermPairResponse::has_has_table() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetTermPairResponse::set_has_has_table() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetTermPairResponse::clear_has_has_table() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetTermPairResponse::clear_has_table() {
  has_table_ = false;
  clear_has_has_table();
}
inline bool GetTermPairResponse::has_table() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetTermPairResponse.has_table)
  return has_table_;
}
inline void GetTermPairResponse::set_has_table(bool value) {
  set_has_has_table();
  has_table_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetTermPairResponse.has_table)
}

// optional bool is_leader = 6;
inline bool GetTermPairResponse::has_is_leader() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetTermPairResponse::set_has_is_leader() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetTermPairResponse::clear_has_is_leader() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetTermPairResponse::clear_is_leader() {
  is_leader_ = false;
  clear_has_is_leader();
}
inline bool GetTermPairResponse::is_leader() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetTermPairResponse.is_leader)
  return is_leader_;
}
inline void GetTermPairResponse::set_is_leader(bool value) {
  set_has_is_leader();
  is_leader_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetTermPairResponse.is_leader)
}

// -------------------------------------------------------------------

// GetManifestRequest

// optional uint32 tid = 1;
inline bool GetManifestRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetManifestRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetManifestRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetManifestRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 GetManifestRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetManifestRequest.tid)
  return tid_;
}
inline void GetManifestRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetManifestRequest.tid)
}

// optional uint32 pid = 2;
inline bool GetManifestRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetManifestRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetManifestRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetManifestRequest::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 GetManifestRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetManifestRequest.pid)
  return pid_;
}
inline void GetManifestRequest::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetManifestRequest.pid)
}

// optional .openmldb.common.StorageMode storage_mode = 3 [default = kMemory];
inline bool GetManifestRequest::has_storage_mode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetManifestRequest::set_has_storage_mode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetManifestRequest::clear_has_storage_mode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetManifestRequest::clear_storage_mode() {
  storage_mode_ = 1;
  clear_has_storage_mode();
}
inline ::openmldb::common::StorageMode GetManifestRequest::storage_mode() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetManifestRequest.storage_mode)
  return static_cast< ::openmldb::common::StorageMode >(storage_mode_);
}
inline void GetManifestRequest::set_storage_mode(::openmldb::common::StorageMode value) {
  assert(::openmldb::common::StorageMode_IsValid(value));
  set_has_storage_mode();
  storage_mode_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetManifestRequest.storage_mode)
}

// -------------------------------------------------------------------

// GetManifestResponse

// optional int32 code = 1;
inline bool GetManifestResponse::has_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetManifestResponse::set_has_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetManifestResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetManifestResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 GetManifestResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetManifestResponse.code)
  return code_;
}
inline void GetManifestResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetManifestResponse.code)
}

// optional string msg = 2;
inline bool GetManifestResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetManifestResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetManifestResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetManifestResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& GetManifestResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetManifestResponse.msg)
  return msg_.GetNoArena();
}
inline void GetManifestResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.GetManifestResponse.msg)
}
#if LANG_CXX11
inline void GetManifestResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.GetManifestResponse.msg)
}
#endif
inline void GetManifestResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.GetManifestResponse.msg)
}
inline void GetManifestResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.GetManifestResponse.msg)
}
inline ::std::string* GetManifestResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.GetManifestResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetManifestResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.GetManifestResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetManifestResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.GetManifestResponse.msg)
}

// optional .openmldb.api.Manifest manifest = 3;
inline bool GetManifestResponse::has_manifest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetManifestResponse::set_has_manifest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetManifestResponse::clear_has_manifest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetManifestResponse::clear_manifest() {
  if (manifest_ != NULL) manifest_->Clear();
  clear_has_manifest();
}
inline const ::openmldb::api::Manifest& GetManifestResponse::_internal_manifest() const {
  return *manifest_;
}
inline const ::openmldb::api::Manifest& GetManifestResponse::manifest() const {
  const ::openmldb::api::Manifest* p = manifest_;
  // @@protoc_insertion_point(field_get:openmldb.api.GetManifestResponse.manifest)
  return p != NULL ? *p : *reinterpret_cast<const ::openmldb::api::Manifest*>(
      &::openmldb::api::_Manifest_default_instance_);
}
inline ::openmldb::api::Manifest* GetManifestResponse::release_manifest() {
  // @@protoc_insertion_point(field_release:openmldb.api.GetManifestResponse.manifest)
  clear_has_manifest();
  ::openmldb::api::Manifest* temp = manifest_;
  manifest_ = NULL;
  return temp;
}
inline ::openmldb::api::Manifest* GetManifestResponse::mutable_manifest() {
  set_has_manifest();
  if (manifest_ == NULL) {
    auto* p = CreateMaybeMessage<::openmldb::api::Manifest>(GetArenaNoVirtual());
    manifest_ = p;
  }
  // @@protoc_insertion_point(field_mutable:openmldb.api.GetManifestResponse.manifest)
  return manifest_;
}
inline void GetManifestResponse::set_allocated_manifest(::openmldb::api::Manifest* manifest) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete manifest_;
  }
  if (manifest) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      manifest = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, manifest, submessage_arena);
    }
    set_has_manifest();
  } else {
    clear_has_manifest();
  }
  manifest_ = manifest;
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.GetManifestResponse.manifest)
}

// -------------------------------------------------------------------

// GetTableFollowerRequest

// optional uint32 tid = 1;
inline bool GetTableFollowerRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetTableFollowerRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetTableFollowerRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetTableFollowerRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 GetTableFollowerRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetTableFollowerRequest.tid)
  return tid_;
}
inline void GetTableFollowerRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetTableFollowerRequest.tid)
}

// optional uint32 pid = 2;
inline bool GetTableFollowerRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetTableFollowerRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetTableFollowerRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetTableFollowerRequest::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 GetTableFollowerRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetTableFollowerRequest.pid)
  return pid_;
}
inline void GetTableFollowerRequest::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetTableFollowerRequest.pid)
}

// -------------------------------------------------------------------

// FollowerInfo

// optional string endpoint = 1;
inline bool FollowerInfo::has_endpoint() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FollowerInfo::set_has_endpoint() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FollowerInfo::clear_has_endpoint() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FollowerInfo::clear_endpoint() {
  endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_endpoint();
}
inline const ::std::string& FollowerInfo::endpoint() const {
  // @@protoc_insertion_point(field_get:openmldb.api.FollowerInfo.endpoint)
  return endpoint_.GetNoArena();
}
inline void FollowerInfo::set_endpoint(const ::std::string& value) {
  set_has_endpoint();
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.FollowerInfo.endpoint)
}
#if LANG_CXX11
inline void FollowerInfo::set_endpoint(::std::string&& value) {
  set_has_endpoint();
  endpoint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.FollowerInfo.endpoint)
}
#endif
inline void FollowerInfo::set_endpoint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_endpoint();
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.FollowerInfo.endpoint)
}
inline void FollowerInfo::set_endpoint(const char* value, size_t size) {
  set_has_endpoint();
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.FollowerInfo.endpoint)
}
inline ::std::string* FollowerInfo::mutable_endpoint() {
  set_has_endpoint();
  // @@protoc_insertion_point(field_mutable:openmldb.api.FollowerInfo.endpoint)
  return endpoint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FollowerInfo::release_endpoint() {
  // @@protoc_insertion_point(field_release:openmldb.api.FollowerInfo.endpoint)
  if (!has_endpoint()) {
    return NULL;
  }
  clear_has_endpoint();
  return endpoint_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FollowerInfo::set_allocated_endpoint(::std::string* endpoint) {
  if (endpoint != NULL) {
    set_has_endpoint();
  } else {
    clear_has_endpoint();
  }
  endpoint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), endpoint);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.FollowerInfo.endpoint)
}

// optional uint64 offset = 2;
inline bool FollowerInfo::has_offset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FollowerInfo::set_has_offset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FollowerInfo::clear_has_offset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FollowerInfo::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
  clear_has_offset();
}
inline ::google::protobuf::uint64 FollowerInfo::offset() const {
  // @@protoc_insertion_point(field_get:openmldb.api.FollowerInfo.offset)
  return offset_;
}
inline void FollowerInfo::set_offset(::google::protobuf::uint64 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.FollowerInfo.offset)
}

// -------------------------------------------------------------------

// GetTableFollowerResponse

// optional int32 code = 1;
inline bool GetTableFollowerResponse::has_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetTableFollowerResponse::set_has_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetTableFollowerResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetTableFollowerResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 GetTableFollowerResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetTableFollowerResponse.code)
  return code_;
}
inline void GetTableFollowerResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetTableFollowerResponse.code)
}

// optional string msg = 2;
inline bool GetTableFollowerResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetTableFollowerResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetTableFollowerResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetTableFollowerResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& GetTableFollowerResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetTableFollowerResponse.msg)
  return msg_.GetNoArena();
}
inline void GetTableFollowerResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.GetTableFollowerResponse.msg)
}
#if LANG_CXX11
inline void GetTableFollowerResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.GetTableFollowerResponse.msg)
}
#endif
inline void GetTableFollowerResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.GetTableFollowerResponse.msg)
}
inline void GetTableFollowerResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.GetTableFollowerResponse.msg)
}
inline ::std::string* GetTableFollowerResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.GetTableFollowerResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetTableFollowerResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.GetTableFollowerResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetTableFollowerResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.GetTableFollowerResponse.msg)
}

// optional uint64 offset = 3;
inline bool GetTableFollowerResponse::has_offset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetTableFollowerResponse::set_has_offset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetTableFollowerResponse::clear_has_offset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetTableFollowerResponse::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
  clear_has_offset();
}
inline ::google::protobuf::uint64 GetTableFollowerResponse::offset() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetTableFollowerResponse.offset)
  return offset_;
}
inline void GetTableFollowerResponse::set_offset(::google::protobuf::uint64 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetTableFollowerResponse.offset)
}

// repeated .openmldb.api.FollowerInfo follower_info = 4;
inline int GetTableFollowerResponse::follower_info_size() const {
  return follower_info_.size();
}
inline void GetTableFollowerResponse::clear_follower_info() {
  follower_info_.Clear();
}
inline ::openmldb::api::FollowerInfo* GetTableFollowerResponse::mutable_follower_info(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.GetTableFollowerResponse.follower_info)
  return follower_info_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::FollowerInfo >*
GetTableFollowerResponse::mutable_follower_info() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.GetTableFollowerResponse.follower_info)
  return &follower_info_;
}
inline const ::openmldb::api::FollowerInfo& GetTableFollowerResponse::follower_info(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetTableFollowerResponse.follower_info)
  return follower_info_.Get(index);
}
inline ::openmldb::api::FollowerInfo* GetTableFollowerResponse::add_follower_info() {
  // @@protoc_insertion_point(field_add:openmldb.api.GetTableFollowerResponse.follower_info)
  return follower_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::FollowerInfo >&
GetTableFollowerResponse::follower_info() const {
  // @@protoc_insertion_point(field_list:openmldb.api.GetTableFollowerResponse.follower_info)
  return follower_info_;
}

// -------------------------------------------------------------------

// CheckFileRequest

// optional uint32 tid = 1;
inline bool CheckFileRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CheckFileRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CheckFileRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CheckFileRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 CheckFileRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CheckFileRequest.tid)
  return tid_;
}
inline void CheckFileRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.CheckFileRequest.tid)
}

// optional uint32 pid = 2;
inline bool CheckFileRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CheckFileRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CheckFileRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CheckFileRequest::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 CheckFileRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CheckFileRequest.pid)
  return pid_;
}
inline void CheckFileRequest::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.CheckFileRequest.pid)
}

// optional string file = 3;
inline bool CheckFileRequest::has_file() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckFileRequest::set_has_file() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckFileRequest::clear_has_file() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckFileRequest::clear_file() {
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file();
}
inline const ::std::string& CheckFileRequest::file() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CheckFileRequest.file)
  return file_.GetNoArena();
}
inline void CheckFileRequest::set_file(const ::std::string& value) {
  set_has_file();
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.CheckFileRequest.file)
}
#if LANG_CXX11
inline void CheckFileRequest::set_file(::std::string&& value) {
  set_has_file();
  file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.CheckFileRequest.file)
}
#endif
inline void CheckFileRequest::set_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_file();
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.CheckFileRequest.file)
}
inline void CheckFileRequest::set_file(const char* value, size_t size) {
  set_has_file();
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.CheckFileRequest.file)
}
inline ::std::string* CheckFileRequest::mutable_file() {
  set_has_file();
  // @@protoc_insertion_point(field_mutable:openmldb.api.CheckFileRequest.file)
  return file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckFileRequest::release_file() {
  // @@protoc_insertion_point(field_release:openmldb.api.CheckFileRequest.file)
  if (!has_file()) {
    return NULL;
  }
  clear_has_file();
  return file_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckFileRequest::set_allocated_file(::std::string* file) {
  if (file != NULL) {
    set_has_file();
  } else {
    clear_has_file();
  }
  file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.CheckFileRequest.file)
}

// optional uint64 size = 4;
inline bool CheckFileRequest::has_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CheckFileRequest::set_has_size() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CheckFileRequest::clear_has_size() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CheckFileRequest::clear_size() {
  size_ = GOOGLE_ULONGLONG(0);
  clear_has_size();
}
inline ::google::protobuf::uint64 CheckFileRequest::size() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CheckFileRequest.size)
  return size_;
}
inline void CheckFileRequest::set_size(::google::protobuf::uint64 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.CheckFileRequest.size)
}

// optional string dir_name = 5;
inline bool CheckFileRequest::has_dir_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CheckFileRequest::set_has_dir_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CheckFileRequest::clear_has_dir_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CheckFileRequest::clear_dir_name() {
  dir_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dir_name();
}
inline const ::std::string& CheckFileRequest::dir_name() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CheckFileRequest.dir_name)
  return dir_name_.GetNoArena();
}
inline void CheckFileRequest::set_dir_name(const ::std::string& value) {
  set_has_dir_name();
  dir_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.CheckFileRequest.dir_name)
}
#if LANG_CXX11
inline void CheckFileRequest::set_dir_name(::std::string&& value) {
  set_has_dir_name();
  dir_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.CheckFileRequest.dir_name)
}
#endif
inline void CheckFileRequest::set_dir_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_dir_name();
  dir_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.CheckFileRequest.dir_name)
}
inline void CheckFileRequest::set_dir_name(const char* value, size_t size) {
  set_has_dir_name();
  dir_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.CheckFileRequest.dir_name)
}
inline ::std::string* CheckFileRequest::mutable_dir_name() {
  set_has_dir_name();
  // @@protoc_insertion_point(field_mutable:openmldb.api.CheckFileRequest.dir_name)
  return dir_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckFileRequest::release_dir_name() {
  // @@protoc_insertion_point(field_release:openmldb.api.CheckFileRequest.dir_name)
  if (!has_dir_name()) {
    return NULL;
  }
  clear_has_dir_name();
  return dir_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckFileRequest::set_allocated_dir_name(::std::string* dir_name) {
  if (dir_name != NULL) {
    set_has_dir_name();
  } else {
    clear_has_dir_name();
  }
  dir_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dir_name);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.CheckFileRequest.dir_name)
}

// optional .openmldb.common.StorageMode storage_mode = 6 [default = kMemory];
inline bool CheckFileRequest::has_storage_mode() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CheckFileRequest::set_has_storage_mode() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CheckFileRequest::clear_has_storage_mode() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CheckFileRequest::clear_storage_mode() {
  storage_mode_ = 1;
  clear_has_storage_mode();
}
inline ::openmldb::common::StorageMode CheckFileRequest::storage_mode() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CheckFileRequest.storage_mode)
  return static_cast< ::openmldb::common::StorageMode >(storage_mode_);
}
inline void CheckFileRequest::set_storage_mode(::openmldb::common::StorageMode value) {
  assert(::openmldb::common::StorageMode_IsValid(value));
  set_has_storage_mode();
  storage_mode_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.CheckFileRequest.storage_mode)
}

// -------------------------------------------------------------------

// AddIndexRequest

// optional uint32 tid = 1;
inline bool AddIndexRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddIndexRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddIndexRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddIndexRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 AddIndexRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.AddIndexRequest.tid)
  return tid_;
}
inline void AddIndexRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.AddIndexRequest.tid)
}

// optional uint32 pid = 2;
inline bool AddIndexRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddIndexRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddIndexRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddIndexRequest::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 AddIndexRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.AddIndexRequest.pid)
  return pid_;
}
inline void AddIndexRequest::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.AddIndexRequest.pid)
}

// optional .openmldb.common.ColumnKey column_key = 3;
inline bool AddIndexRequest::has_column_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddIndexRequest::set_has_column_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddIndexRequest::clear_has_column_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::openmldb::common::ColumnKey& AddIndexRequest::_internal_column_key() const {
  return *column_key_;
}
inline const ::openmldb::common::ColumnKey& AddIndexRequest::column_key() const {
  const ::openmldb::common::ColumnKey* p = column_key_;
  // @@protoc_insertion_point(field_get:openmldb.api.AddIndexRequest.column_key)
  return p != NULL ? *p : *reinterpret_cast<const ::openmldb::common::ColumnKey*>(
      &::openmldb::common::_ColumnKey_default_instance_);
}
inline ::openmldb::common::ColumnKey* AddIndexRequest::release_column_key() {
  // @@protoc_insertion_point(field_release:openmldb.api.AddIndexRequest.column_key)
  clear_has_column_key();
  ::openmldb::common::ColumnKey* temp = column_key_;
  column_key_ = NULL;
  return temp;
}
inline ::openmldb::common::ColumnKey* AddIndexRequest::mutable_column_key() {
  set_has_column_key();
  if (column_key_ == NULL) {
    auto* p = CreateMaybeMessage<::openmldb::common::ColumnKey>(GetArenaNoVirtual());
    column_key_ = p;
  }
  // @@protoc_insertion_point(field_mutable:openmldb.api.AddIndexRequest.column_key)
  return column_key_;
}
inline void AddIndexRequest::set_allocated_column_key(::openmldb::common::ColumnKey* column_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(column_key_);
  }
  if (column_key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      column_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, column_key, submessage_arena);
    }
    set_has_column_key();
  } else {
    clear_has_column_key();
  }
  column_key_ = column_key;
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.AddIndexRequest.column_key)
}

// repeated .openmldb.common.ColumnKey column_keys = 4;
inline int AddIndexRequest::column_keys_size() const {
  return column_keys_.size();
}
inline ::openmldb::common::ColumnKey* AddIndexRequest::mutable_column_keys(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.AddIndexRequest.column_keys)
  return column_keys_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnKey >*
AddIndexRequest::mutable_column_keys() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.AddIndexRequest.column_keys)
  return &column_keys_;
}
inline const ::openmldb::common::ColumnKey& AddIndexRequest::column_keys(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.AddIndexRequest.column_keys)
  return column_keys_.Get(index);
}
inline ::openmldb::common::ColumnKey* AddIndexRequest::add_column_keys() {
  // @@protoc_insertion_point(field_add:openmldb.api.AddIndexRequest.column_keys)
  return column_keys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnKey >&
AddIndexRequest::column_keys() const {
  // @@protoc_insertion_point(field_list:openmldb.api.AddIndexRequest.column_keys)
  return column_keys_;
}

// -------------------------------------------------------------------

// SetModeRequest

// optional bool follower = 1;
inline bool SetModeRequest::has_follower() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetModeRequest::set_has_follower() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetModeRequest::clear_has_follower() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetModeRequest::clear_follower() {
  follower_ = false;
  clear_has_follower();
}
inline bool SetModeRequest::follower() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SetModeRequest.follower)
  return follower_;
}
inline void SetModeRequest::set_follower(bool value) {
  set_has_follower();
  follower_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.SetModeRequest.follower)
}

// -------------------------------------------------------------------

// EmptyRequest

// -------------------------------------------------------------------

// ConnectZKRequest

// -------------------------------------------------------------------

// DisConnectZKRequest

// -------------------------------------------------------------------

// HttpRequest

// -------------------------------------------------------------------

// HttpResponse

// -------------------------------------------------------------------

// DeleteIndexRequest

// optional uint32 tid = 1;
inline bool DeleteIndexRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteIndexRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteIndexRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteIndexRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 DeleteIndexRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.DeleteIndexRequest.tid)
  return tid_;
}
inline void DeleteIndexRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.DeleteIndexRequest.tid)
}

// optional uint32 pid = 2;
inline bool DeleteIndexRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeleteIndexRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeleteIndexRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeleteIndexRequest::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 DeleteIndexRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.DeleteIndexRequest.pid)
  return pid_;
}
inline void DeleteIndexRequest::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.DeleteIndexRequest.pid)
}

// optional string idx_name = 3;
inline bool DeleteIndexRequest::has_idx_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteIndexRequest::set_has_idx_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteIndexRequest::clear_has_idx_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteIndexRequest::clear_idx_name() {
  idx_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_idx_name();
}
inline const ::std::string& DeleteIndexRequest::idx_name() const {
  // @@protoc_insertion_point(field_get:openmldb.api.DeleteIndexRequest.idx_name)
  return idx_name_.GetNoArena();
}
inline void DeleteIndexRequest::set_idx_name(const ::std::string& value) {
  set_has_idx_name();
  idx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.DeleteIndexRequest.idx_name)
}
#if LANG_CXX11
inline void DeleteIndexRequest::set_idx_name(::std::string&& value) {
  set_has_idx_name();
  idx_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.DeleteIndexRequest.idx_name)
}
#endif
inline void DeleteIndexRequest::set_idx_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_idx_name();
  idx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.DeleteIndexRequest.idx_name)
}
inline void DeleteIndexRequest::set_idx_name(const char* value, size_t size) {
  set_has_idx_name();
  idx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.DeleteIndexRequest.idx_name)
}
inline ::std::string* DeleteIndexRequest::mutable_idx_name() {
  set_has_idx_name();
  // @@protoc_insertion_point(field_mutable:openmldb.api.DeleteIndexRequest.idx_name)
  return idx_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteIndexRequest::release_idx_name() {
  // @@protoc_insertion_point(field_release:openmldb.api.DeleteIndexRequest.idx_name)
  if (!has_idx_name()) {
    return NULL;
  }
  clear_has_idx_name();
  return idx_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteIndexRequest::set_allocated_idx_name(::std::string* idx_name) {
  if (idx_name != NULL) {
    set_has_idx_name();
  } else {
    clear_has_idx_name();
  }
  idx_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), idx_name);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.DeleteIndexRequest.idx_name)
}

// -------------------------------------------------------------------

// DumpIndexDataRequest

// optional uint32 tid = 1;
inline bool DumpIndexDataRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DumpIndexDataRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DumpIndexDataRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DumpIndexDataRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 DumpIndexDataRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.DumpIndexDataRequest.tid)
  return tid_;
}
inline void DumpIndexDataRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.DumpIndexDataRequest.tid)
}

// optional uint32 pid = 2;
inline bool DumpIndexDataRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DumpIndexDataRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DumpIndexDataRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DumpIndexDataRequest::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 DumpIndexDataRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.DumpIndexDataRequest.pid)
  return pid_;
}
inline void DumpIndexDataRequest::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.DumpIndexDataRequest.pid)
}

// optional uint32 partition_num = 3;
inline bool DumpIndexDataRequest::has_partition_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DumpIndexDataRequest::set_has_partition_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DumpIndexDataRequest::clear_has_partition_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DumpIndexDataRequest::clear_partition_num() {
  partition_num_ = 0u;
  clear_has_partition_num();
}
inline ::google::protobuf::uint32 DumpIndexDataRequest::partition_num() const {
  // @@protoc_insertion_point(field_get:openmldb.api.DumpIndexDataRequest.partition_num)
  return partition_num_;
}
inline void DumpIndexDataRequest::set_partition_num(::google::protobuf::uint32 value) {
  set_has_partition_num();
  partition_num_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.DumpIndexDataRequest.partition_num)
}

// optional uint32 idx = 4;
inline bool DumpIndexDataRequest::has_idx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DumpIndexDataRequest::set_has_idx() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DumpIndexDataRequest::clear_has_idx() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DumpIndexDataRequest::clear_idx() {
  idx_ = 0u;
  clear_has_idx();
}
inline ::google::protobuf::uint32 DumpIndexDataRequest::idx() const {
  // @@protoc_insertion_point(field_get:openmldb.api.DumpIndexDataRequest.idx)
  return idx_;
}
inline void DumpIndexDataRequest::set_idx(::google::protobuf::uint32 value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.DumpIndexDataRequest.idx)
}

// optional .openmldb.common.ColumnKey column_key = 5;
inline bool DumpIndexDataRequest::has_column_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DumpIndexDataRequest::set_has_column_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DumpIndexDataRequest::clear_has_column_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::openmldb::common::ColumnKey& DumpIndexDataRequest::_internal_column_key() const {
  return *column_key_;
}
inline const ::openmldb::common::ColumnKey& DumpIndexDataRequest::column_key() const {
  const ::openmldb::common::ColumnKey* p = column_key_;
  // @@protoc_insertion_point(field_get:openmldb.api.DumpIndexDataRequest.column_key)
  return p != NULL ? *p : *reinterpret_cast<const ::openmldb::common::ColumnKey*>(
      &::openmldb::common::_ColumnKey_default_instance_);
}
inline ::openmldb::common::ColumnKey* DumpIndexDataRequest::release_column_key() {
  // @@protoc_insertion_point(field_release:openmldb.api.DumpIndexDataRequest.column_key)
  clear_has_column_key();
  ::openmldb::common::ColumnKey* temp = column_key_;
  column_key_ = NULL;
  return temp;
}
inline ::openmldb::common::ColumnKey* DumpIndexDataRequest::mutable_column_key() {
  set_has_column_key();
  if (column_key_ == NULL) {
    auto* p = CreateMaybeMessage<::openmldb::common::ColumnKey>(GetArenaNoVirtual());
    column_key_ = p;
  }
  // @@protoc_insertion_point(field_mutable:openmldb.api.DumpIndexDataRequest.column_key)
  return column_key_;
}
inline void DumpIndexDataRequest::set_allocated_column_key(::openmldb::common::ColumnKey* column_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(column_key_);
  }
  if (column_key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      column_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, column_key, submessage_arena);
    }
    set_has_column_key();
  } else {
    clear_has_column_key();
  }
  column_key_ = column_key;
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.DumpIndexDataRequest.column_key)
}

// optional .openmldb.api.TaskInfo task_info = 6;
inline bool DumpIndexDataRequest::has_task_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DumpIndexDataRequest::set_has_task_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DumpIndexDataRequest::clear_has_task_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DumpIndexDataRequest::clear_task_info() {
  if (task_info_ != NULL) task_info_->Clear();
  clear_has_task_info();
}
inline const ::openmldb::api::TaskInfo& DumpIndexDataRequest::_internal_task_info() const {
  return *task_info_;
}
inline const ::openmldb::api::TaskInfo& DumpIndexDataRequest::task_info() const {
  const ::openmldb::api::TaskInfo* p = task_info_;
  // @@protoc_insertion_point(field_get:openmldb.api.DumpIndexDataRequest.task_info)
  return p != NULL ? *p : *reinterpret_cast<const ::openmldb::api::TaskInfo*>(
      &::openmldb::api::_TaskInfo_default_instance_);
}
inline ::openmldb::api::TaskInfo* DumpIndexDataRequest::release_task_info() {
  // @@protoc_insertion_point(field_release:openmldb.api.DumpIndexDataRequest.task_info)
  clear_has_task_info();
  ::openmldb::api::TaskInfo* temp = task_info_;
  task_info_ = NULL;
  return temp;
}
inline ::openmldb::api::TaskInfo* DumpIndexDataRequest::mutable_task_info() {
  set_has_task_info();
  if (task_info_ == NULL) {
    auto* p = CreateMaybeMessage<::openmldb::api::TaskInfo>(GetArenaNoVirtual());
    task_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:openmldb.api.DumpIndexDataRequest.task_info)
  return task_info_;
}
inline void DumpIndexDataRequest::set_allocated_task_info(::openmldb::api::TaskInfo* task_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete task_info_;
  }
  if (task_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      task_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, task_info, submessage_arena);
    }
    set_has_task_info();
  } else {
    clear_has_task_info();
  }
  task_info_ = task_info;
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.DumpIndexDataRequest.task_info)
}

// -------------------------------------------------------------------

// LoadIndexDataRequest

// optional uint32 tid = 1;
inline bool LoadIndexDataRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoadIndexDataRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoadIndexDataRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoadIndexDataRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 LoadIndexDataRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.LoadIndexDataRequest.tid)
  return tid_;
}
inline void LoadIndexDataRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.LoadIndexDataRequest.tid)
}

// optional uint32 pid = 2;
inline bool LoadIndexDataRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoadIndexDataRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoadIndexDataRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoadIndexDataRequest::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 LoadIndexDataRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.LoadIndexDataRequest.pid)
  return pid_;
}
inline void LoadIndexDataRequest::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.LoadIndexDataRequest.pid)
}

// optional uint32 partition_num = 3;
inline bool LoadIndexDataRequest::has_partition_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoadIndexDataRequest::set_has_partition_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoadIndexDataRequest::clear_has_partition_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoadIndexDataRequest::clear_partition_num() {
  partition_num_ = 0u;
  clear_has_partition_num();
}
inline ::google::protobuf::uint32 LoadIndexDataRequest::partition_num() const {
  // @@protoc_insertion_point(field_get:openmldb.api.LoadIndexDataRequest.partition_num)
  return partition_num_;
}
inline void LoadIndexDataRequest::set_partition_num(::google::protobuf::uint32 value) {
  set_has_partition_num();
  partition_num_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.LoadIndexDataRequest.partition_num)
}

// optional .openmldb.api.TaskInfo task_info = 4;
inline bool LoadIndexDataRequest::has_task_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoadIndexDataRequest::set_has_task_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoadIndexDataRequest::clear_has_task_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoadIndexDataRequest::clear_task_info() {
  if (task_info_ != NULL) task_info_->Clear();
  clear_has_task_info();
}
inline const ::openmldb::api::TaskInfo& LoadIndexDataRequest::_internal_task_info() const {
  return *task_info_;
}
inline const ::openmldb::api::TaskInfo& LoadIndexDataRequest::task_info() const {
  const ::openmldb::api::TaskInfo* p = task_info_;
  // @@protoc_insertion_point(field_get:openmldb.api.LoadIndexDataRequest.task_info)
  return p != NULL ? *p : *reinterpret_cast<const ::openmldb::api::TaskInfo*>(
      &::openmldb::api::_TaskInfo_default_instance_);
}
inline ::openmldb::api::TaskInfo* LoadIndexDataRequest::release_task_info() {
  // @@protoc_insertion_point(field_release:openmldb.api.LoadIndexDataRequest.task_info)
  clear_has_task_info();
  ::openmldb::api::TaskInfo* temp = task_info_;
  task_info_ = NULL;
  return temp;
}
inline ::openmldb::api::TaskInfo* LoadIndexDataRequest::mutable_task_info() {
  set_has_task_info();
  if (task_info_ == NULL) {
    auto* p = CreateMaybeMessage<::openmldb::api::TaskInfo>(GetArenaNoVirtual());
    task_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:openmldb.api.LoadIndexDataRequest.task_info)
  return task_info_;
}
inline void LoadIndexDataRequest::set_allocated_task_info(::openmldb::api::TaskInfo* task_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete task_info_;
  }
  if (task_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      task_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, task_info, submessage_arena);
    }
    set_has_task_info();
  } else {
    clear_has_task_info();
  }
  task_info_ = task_info;
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.LoadIndexDataRequest.task_info)
}

// -------------------------------------------------------------------

// ExtractMultiIndexDataRequest

// optional uint32 tid = 1;
inline bool ExtractMultiIndexDataRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExtractMultiIndexDataRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExtractMultiIndexDataRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExtractMultiIndexDataRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 ExtractMultiIndexDataRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ExtractMultiIndexDataRequest.tid)
  return tid_;
}
inline void ExtractMultiIndexDataRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ExtractMultiIndexDataRequest.tid)
}

// optional uint32 pid = 2;
inline bool ExtractMultiIndexDataRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExtractMultiIndexDataRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExtractMultiIndexDataRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExtractMultiIndexDataRequest::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 ExtractMultiIndexDataRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ExtractMultiIndexDataRequest.pid)
  return pid_;
}
inline void ExtractMultiIndexDataRequest::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ExtractMultiIndexDataRequest.pid)
}

// optional uint32 partition_num = 3;
inline bool ExtractMultiIndexDataRequest::has_partition_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExtractMultiIndexDataRequest::set_has_partition_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExtractMultiIndexDataRequest::clear_has_partition_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExtractMultiIndexDataRequest::clear_partition_num() {
  partition_num_ = 0u;
  clear_has_partition_num();
}
inline ::google::protobuf::uint32 ExtractMultiIndexDataRequest::partition_num() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ExtractMultiIndexDataRequest.partition_num)
  return partition_num_;
}
inline void ExtractMultiIndexDataRequest::set_partition_num(::google::protobuf::uint32 value) {
  set_has_partition_num();
  partition_num_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ExtractMultiIndexDataRequest.partition_num)
}

// repeated .openmldb.common.ColumnKey column_key = 4;
inline int ExtractMultiIndexDataRequest::column_key_size() const {
  return column_key_.size();
}
inline ::openmldb::common::ColumnKey* ExtractMultiIndexDataRequest::mutable_column_key(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.ExtractMultiIndexDataRequest.column_key)
  return column_key_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnKey >*
ExtractMultiIndexDataRequest::mutable_column_key() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.ExtractMultiIndexDataRequest.column_key)
  return &column_key_;
}
inline const ::openmldb::common::ColumnKey& ExtractMultiIndexDataRequest::column_key(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.ExtractMultiIndexDataRequest.column_key)
  return column_key_.Get(index);
}
inline ::openmldb::common::ColumnKey* ExtractMultiIndexDataRequest::add_column_key() {
  // @@protoc_insertion_point(field_add:openmldb.api.ExtractMultiIndexDataRequest.column_key)
  return column_key_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::common::ColumnKey >&
ExtractMultiIndexDataRequest::column_key() const {
  // @@protoc_insertion_point(field_list:openmldb.api.ExtractMultiIndexDataRequest.column_key)
  return column_key_;
}

// -------------------------------------------------------------------

// ExtractIndexDataRequest

// optional uint32 tid = 1;
inline bool ExtractIndexDataRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExtractIndexDataRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExtractIndexDataRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExtractIndexDataRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 ExtractIndexDataRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ExtractIndexDataRequest.tid)
  return tid_;
}
inline void ExtractIndexDataRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ExtractIndexDataRequest.tid)
}

// optional uint32 pid = 2;
inline bool ExtractIndexDataRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExtractIndexDataRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ExtractIndexDataRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ExtractIndexDataRequest::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 ExtractIndexDataRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ExtractIndexDataRequest.pid)
  return pid_;
}
inline void ExtractIndexDataRequest::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ExtractIndexDataRequest.pid)
}

// optional uint32 partition_num = 3;
inline bool ExtractIndexDataRequest::has_partition_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ExtractIndexDataRequest::set_has_partition_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ExtractIndexDataRequest::clear_has_partition_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ExtractIndexDataRequest::clear_partition_num() {
  partition_num_ = 0u;
  clear_has_partition_num();
}
inline ::google::protobuf::uint32 ExtractIndexDataRequest::partition_num() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ExtractIndexDataRequest.partition_num)
  return partition_num_;
}
inline void ExtractIndexDataRequest::set_partition_num(::google::protobuf::uint32 value) {
  set_has_partition_num();
  partition_num_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ExtractIndexDataRequest.partition_num)
}

// optional uint32 idx = 4;
inline bool ExtractIndexDataRequest::has_idx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ExtractIndexDataRequest::set_has_idx() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ExtractIndexDataRequest::clear_has_idx() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ExtractIndexDataRequest::clear_idx() {
  idx_ = 0u;
  clear_has_idx();
}
inline ::google::protobuf::uint32 ExtractIndexDataRequest::idx() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ExtractIndexDataRequest.idx)
  return idx_;
}
inline void ExtractIndexDataRequest::set_idx(::google::protobuf::uint32 value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ExtractIndexDataRequest.idx)
}

// optional .openmldb.common.ColumnKey column_key = 5;
inline bool ExtractIndexDataRequest::has_column_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExtractIndexDataRequest::set_has_column_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExtractIndexDataRequest::clear_has_column_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::openmldb::common::ColumnKey& ExtractIndexDataRequest::_internal_column_key() const {
  return *column_key_;
}
inline const ::openmldb::common::ColumnKey& ExtractIndexDataRequest::column_key() const {
  const ::openmldb::common::ColumnKey* p = column_key_;
  // @@protoc_insertion_point(field_get:openmldb.api.ExtractIndexDataRequest.column_key)
  return p != NULL ? *p : *reinterpret_cast<const ::openmldb::common::ColumnKey*>(
      &::openmldb::common::_ColumnKey_default_instance_);
}
inline ::openmldb::common::ColumnKey* ExtractIndexDataRequest::release_column_key() {
  // @@protoc_insertion_point(field_release:openmldb.api.ExtractIndexDataRequest.column_key)
  clear_has_column_key();
  ::openmldb::common::ColumnKey* temp = column_key_;
  column_key_ = NULL;
  return temp;
}
inline ::openmldb::common::ColumnKey* ExtractIndexDataRequest::mutable_column_key() {
  set_has_column_key();
  if (column_key_ == NULL) {
    auto* p = CreateMaybeMessage<::openmldb::common::ColumnKey>(GetArenaNoVirtual());
    column_key_ = p;
  }
  // @@protoc_insertion_point(field_mutable:openmldb.api.ExtractIndexDataRequest.column_key)
  return column_key_;
}
inline void ExtractIndexDataRequest::set_allocated_column_key(::openmldb::common::ColumnKey* column_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(column_key_);
  }
  if (column_key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      column_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, column_key, submessage_arena);
    }
    set_has_column_key();
  } else {
    clear_has_column_key();
  }
  column_key_ = column_key;
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.ExtractIndexDataRequest.column_key)
}

// optional .openmldb.api.TaskInfo task_info = 6;
inline bool ExtractIndexDataRequest::has_task_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExtractIndexDataRequest::set_has_task_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExtractIndexDataRequest::clear_has_task_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExtractIndexDataRequest::clear_task_info() {
  if (task_info_ != NULL) task_info_->Clear();
  clear_has_task_info();
}
inline const ::openmldb::api::TaskInfo& ExtractIndexDataRequest::_internal_task_info() const {
  return *task_info_;
}
inline const ::openmldb::api::TaskInfo& ExtractIndexDataRequest::task_info() const {
  const ::openmldb::api::TaskInfo* p = task_info_;
  // @@protoc_insertion_point(field_get:openmldb.api.ExtractIndexDataRequest.task_info)
  return p != NULL ? *p : *reinterpret_cast<const ::openmldb::api::TaskInfo*>(
      &::openmldb::api::_TaskInfo_default_instance_);
}
inline ::openmldb::api::TaskInfo* ExtractIndexDataRequest::release_task_info() {
  // @@protoc_insertion_point(field_release:openmldb.api.ExtractIndexDataRequest.task_info)
  clear_has_task_info();
  ::openmldb::api::TaskInfo* temp = task_info_;
  task_info_ = NULL;
  return temp;
}
inline ::openmldb::api::TaskInfo* ExtractIndexDataRequest::mutable_task_info() {
  set_has_task_info();
  if (task_info_ == NULL) {
    auto* p = CreateMaybeMessage<::openmldb::api::TaskInfo>(GetArenaNoVirtual());
    task_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:openmldb.api.ExtractIndexDataRequest.task_info)
  return task_info_;
}
inline void ExtractIndexDataRequest::set_allocated_task_info(::openmldb::api::TaskInfo* task_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete task_info_;
  }
  if (task_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      task_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, task_info, submessage_arena);
    }
    set_has_task_info();
  } else {
    clear_has_task_info();
  }
  task_info_ = task_info;
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.ExtractIndexDataRequest.task_info)
}

// -------------------------------------------------------------------

// Columns

// repeated string name = 1;
inline int Columns::name_size() const {
  return name_.size();
}
inline void Columns::clear_name() {
  name_.Clear();
}
inline const ::std::string& Columns::name(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.Columns.name)
  return name_.Get(index);
}
inline ::std::string* Columns::mutable_name(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.Columns.name)
  return name_.Mutable(index);
}
inline void Columns::set_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:openmldb.api.Columns.name)
  name_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Columns::set_name(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:openmldb.api.Columns.name)
  name_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Columns::set_name(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:openmldb.api.Columns.name)
}
inline void Columns::set_name(int index, const char* value, size_t size) {
  name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.Columns.name)
}
inline ::std::string* Columns::add_name() {
  // @@protoc_insertion_point(field_add_mutable:openmldb.api.Columns.name)
  return name_.Add();
}
inline void Columns::add_name(const ::std::string& value) {
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:openmldb.api.Columns.name)
}
#if LANG_CXX11
inline void Columns::add_name(::std::string&& value) {
  name_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:openmldb.api.Columns.name)
}
#endif
inline void Columns::add_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:openmldb.api.Columns.name)
}
inline void Columns::add_name(const char* value, size_t size) {
  name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:openmldb.api.Columns.name)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Columns::name() const {
  // @@protoc_insertion_point(field_list:openmldb.api.Columns.name)
  return name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Columns::mutable_name() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.Columns.name)
  return &name_;
}

// optional bytes value = 2 [default = ""];
inline bool Columns::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Columns::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Columns::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Columns::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& Columns::value() const {
  // @@protoc_insertion_point(field_get:openmldb.api.Columns.value)
  return value_.GetNoArena();
}
inline void Columns::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.Columns.value)
}
#if LANG_CXX11
inline void Columns::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.Columns.value)
}
#endif
inline void Columns::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.Columns.value)
}
inline void Columns::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.Columns.value)
}
inline ::std::string* Columns::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:openmldb.api.Columns.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Columns::release_value() {
  // @@protoc_insertion_point(field_release:openmldb.api.Columns.value)
  if (!has_value()) {
    return NULL;
  }
  clear_has_value();
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Columns::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.Columns.value)
}

// optional .openmldb.api.GetType type = 3 [default = kSubKeyEq];
inline bool Columns::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Columns::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Columns::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Columns::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::openmldb::api::GetType Columns::type() const {
  // @@protoc_insertion_point(field_get:openmldb.api.Columns.type)
  return static_cast< ::openmldb::api::GetType >(type_);
}
inline void Columns::set_type(::openmldb::api::GetType value) {
  assert(::openmldb::api::GetType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.Columns.type)
}

// -------------------------------------------------------------------

// CancelOPRequest

// optional uint64 op_id = 1;
inline bool CancelOPRequest::has_op_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CancelOPRequest::set_has_op_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CancelOPRequest::clear_has_op_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CancelOPRequest::clear_op_id() {
  op_id_ = GOOGLE_ULONGLONG(0);
  clear_has_op_id();
}
inline ::google::protobuf::uint64 CancelOPRequest::op_id() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CancelOPRequest.op_id)
  return op_id_;
}
inline void CancelOPRequest::set_op_id(::google::protobuf::uint64 value) {
  set_has_op_id();
  op_id_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.CancelOPRequest.op_id)
}

// -------------------------------------------------------------------

// RealEndpointPair

// optional string name = 1;
inline bool RealEndpointPair::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RealEndpointPair::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RealEndpointPair::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RealEndpointPair::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& RealEndpointPair::name() const {
  // @@protoc_insertion_point(field_get:openmldb.api.RealEndpointPair.name)
  return name_.GetNoArena();
}
inline void RealEndpointPair::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.RealEndpointPair.name)
}
#if LANG_CXX11
inline void RealEndpointPair::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.RealEndpointPair.name)
}
#endif
inline void RealEndpointPair::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.RealEndpointPair.name)
}
inline void RealEndpointPair::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.RealEndpointPair.name)
}
inline ::std::string* RealEndpointPair::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:openmldb.api.RealEndpointPair.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RealEndpointPair::release_name() {
  // @@protoc_insertion_point(field_release:openmldb.api.RealEndpointPair.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RealEndpointPair::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.RealEndpointPair.name)
}

// optional string real_endpoint = 2;
inline bool RealEndpointPair::has_real_endpoint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RealEndpointPair::set_has_real_endpoint() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RealEndpointPair::clear_has_real_endpoint() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RealEndpointPair::clear_real_endpoint() {
  real_endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_real_endpoint();
}
inline const ::std::string& RealEndpointPair::real_endpoint() const {
  // @@protoc_insertion_point(field_get:openmldb.api.RealEndpointPair.real_endpoint)
  return real_endpoint_.GetNoArena();
}
inline void RealEndpointPair::set_real_endpoint(const ::std::string& value) {
  set_has_real_endpoint();
  real_endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.RealEndpointPair.real_endpoint)
}
#if LANG_CXX11
inline void RealEndpointPair::set_real_endpoint(::std::string&& value) {
  set_has_real_endpoint();
  real_endpoint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.RealEndpointPair.real_endpoint)
}
#endif
inline void RealEndpointPair::set_real_endpoint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_real_endpoint();
  real_endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.RealEndpointPair.real_endpoint)
}
inline void RealEndpointPair::set_real_endpoint(const char* value, size_t size) {
  set_has_real_endpoint();
  real_endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.RealEndpointPair.real_endpoint)
}
inline ::std::string* RealEndpointPair::mutable_real_endpoint() {
  set_has_real_endpoint();
  // @@protoc_insertion_point(field_mutable:openmldb.api.RealEndpointPair.real_endpoint)
  return real_endpoint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RealEndpointPair::release_real_endpoint() {
  // @@protoc_insertion_point(field_release:openmldb.api.RealEndpointPair.real_endpoint)
  if (!has_real_endpoint()) {
    return NULL;
  }
  clear_has_real_endpoint();
  return real_endpoint_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RealEndpointPair::set_allocated_real_endpoint(::std::string* real_endpoint) {
  if (real_endpoint != NULL) {
    set_has_real_endpoint();
  } else {
    clear_has_real_endpoint();
  }
  real_endpoint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), real_endpoint);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.RealEndpointPair.real_endpoint)
}

// -------------------------------------------------------------------

// UpdateRealEndpointMapRequest

// repeated .openmldb.api.RealEndpointPair real_endpoint_map = 1;
inline int UpdateRealEndpointMapRequest::real_endpoint_map_size() const {
  return real_endpoint_map_.size();
}
inline void UpdateRealEndpointMapRequest::clear_real_endpoint_map() {
  real_endpoint_map_.Clear();
}
inline ::openmldb::api::RealEndpointPair* UpdateRealEndpointMapRequest::mutable_real_endpoint_map(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.UpdateRealEndpointMapRequest.real_endpoint_map)
  return real_endpoint_map_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::RealEndpointPair >*
UpdateRealEndpointMapRequest::mutable_real_endpoint_map() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.UpdateRealEndpointMapRequest.real_endpoint_map)
  return &real_endpoint_map_;
}
inline const ::openmldb::api::RealEndpointPair& UpdateRealEndpointMapRequest::real_endpoint_map(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.UpdateRealEndpointMapRequest.real_endpoint_map)
  return real_endpoint_map_.Get(index);
}
inline ::openmldb::api::RealEndpointPair* UpdateRealEndpointMapRequest::add_real_endpoint_map() {
  // @@protoc_insertion_point(field_add:openmldb.api.UpdateRealEndpointMapRequest.real_endpoint_map)
  return real_endpoint_map_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::RealEndpointPair >&
UpdateRealEndpointMapRequest::real_endpoint_map() const {
  // @@protoc_insertion_point(field_list:openmldb.api.UpdateRealEndpointMapRequest.real_endpoint_map)
  return real_endpoint_map_;
}

// -------------------------------------------------------------------

// QueryRequest

// optional string sql = 1;
inline bool QueryRequest::has_sql() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryRequest::set_has_sql() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryRequest::clear_has_sql() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryRequest::clear_sql() {
  sql_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sql();
}
inline const ::std::string& QueryRequest::sql() const {
  // @@protoc_insertion_point(field_get:openmldb.api.QueryRequest.sql)
  return sql_.GetNoArena();
}
inline void QueryRequest::set_sql(const ::std::string& value) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.QueryRequest.sql)
}
#if LANG_CXX11
inline void QueryRequest::set_sql(::std::string&& value) {
  set_has_sql();
  sql_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.QueryRequest.sql)
}
#endif
inline void QueryRequest::set_sql(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.QueryRequest.sql)
}
inline void QueryRequest::set_sql(const char* value, size_t size) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.QueryRequest.sql)
}
inline ::std::string* QueryRequest::mutable_sql() {
  set_has_sql();
  // @@protoc_insertion_point(field_mutable:openmldb.api.QueryRequest.sql)
  return sql_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryRequest::release_sql() {
  // @@protoc_insertion_point(field_release:openmldb.api.QueryRequest.sql)
  if (!has_sql()) {
    return NULL;
  }
  clear_has_sql();
  return sql_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryRequest::set_allocated_sql(::std::string* sql) {
  if (sql != NULL) {
    set_has_sql();
  } else {
    clear_has_sql();
  }
  sql_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sql);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.QueryRequest.sql)
}

// optional string db = 2;
inline bool QueryRequest::has_db() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryRequest::set_has_db() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryRequest::clear_has_db() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryRequest::clear_db() {
  db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_db();
}
inline const ::std::string& QueryRequest::db() const {
  // @@protoc_insertion_point(field_get:openmldb.api.QueryRequest.db)
  return db_.GetNoArena();
}
inline void QueryRequest::set_db(const ::std::string& value) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.QueryRequest.db)
}
#if LANG_CXX11
inline void QueryRequest::set_db(::std::string&& value) {
  set_has_db();
  db_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.QueryRequest.db)
}
#endif
inline void QueryRequest::set_db(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.QueryRequest.db)
}
inline void QueryRequest::set_db(const char* value, size_t size) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.QueryRequest.db)
}
inline ::std::string* QueryRequest::mutable_db() {
  set_has_db();
  // @@protoc_insertion_point(field_mutable:openmldb.api.QueryRequest.db)
  return db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryRequest::release_db() {
  // @@protoc_insertion_point(field_release:openmldb.api.QueryRequest.db)
  if (!has_db()) {
    return NULL;
  }
  clear_has_db();
  return db_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryRequest::set_allocated_db(::std::string* db) {
  if (db != NULL) {
    set_has_db();
  } else {
    clear_has_db();
  }
  db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.QueryRequest.db)
}

// optional bool is_batch = 3;
inline bool QueryRequest::has_is_batch() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryRequest::set_has_is_batch() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryRequest::clear_has_is_batch() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryRequest::clear_is_batch() {
  is_batch_ = false;
  clear_has_is_batch();
}
inline bool QueryRequest::is_batch() const {
  // @@protoc_insertion_point(field_get:openmldb.api.QueryRequest.is_batch)
  return is_batch_;
}
inline void QueryRequest::set_is_batch(bool value) {
  set_has_is_batch();
  is_batch_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.QueryRequest.is_batch)
}

// optional bool is_debug = 4 [default = false];
inline bool QueryRequest::has_is_debug() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QueryRequest::set_has_is_debug() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QueryRequest::clear_has_is_debug() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QueryRequest::clear_is_debug() {
  is_debug_ = false;
  clear_has_is_debug();
}
inline bool QueryRequest::is_debug() const {
  // @@protoc_insertion_point(field_get:openmldb.api.QueryRequest.is_debug)
  return is_debug_;
}
inline void QueryRequest::set_is_debug(bool value) {
  set_has_is_debug();
  is_debug_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.QueryRequest.is_debug)
}

// optional string sp_name = 5;
inline bool QueryRequest::has_sp_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryRequest::set_has_sp_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryRequest::clear_has_sp_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryRequest::clear_sp_name() {
  sp_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sp_name();
}
inline const ::std::string& QueryRequest::sp_name() const {
  // @@protoc_insertion_point(field_get:openmldb.api.QueryRequest.sp_name)
  return sp_name_.GetNoArena();
}
inline void QueryRequest::set_sp_name(const ::std::string& value) {
  set_has_sp_name();
  sp_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.QueryRequest.sp_name)
}
#if LANG_CXX11
inline void QueryRequest::set_sp_name(::std::string&& value) {
  set_has_sp_name();
  sp_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.QueryRequest.sp_name)
}
#endif
inline void QueryRequest::set_sp_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sp_name();
  sp_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.QueryRequest.sp_name)
}
inline void QueryRequest::set_sp_name(const char* value, size_t size) {
  set_has_sp_name();
  sp_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.QueryRequest.sp_name)
}
inline ::std::string* QueryRequest::mutable_sp_name() {
  set_has_sp_name();
  // @@protoc_insertion_point(field_mutable:openmldb.api.QueryRequest.sp_name)
  return sp_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryRequest::release_sp_name() {
  // @@protoc_insertion_point(field_release:openmldb.api.QueryRequest.sp_name)
  if (!has_sp_name()) {
    return NULL;
  }
  clear_has_sp_name();
  return sp_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryRequest::set_allocated_sp_name(::std::string* sp_name) {
  if (sp_name != NULL) {
    set_has_sp_name();
  } else {
    clear_has_sp_name();
  }
  sp_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sp_name);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.QueryRequest.sp_name)
}

// optional bool is_procedure = 6 [default = false];
inline bool QueryRequest::has_is_procedure() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QueryRequest::set_has_is_procedure() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QueryRequest::clear_has_is_procedure() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QueryRequest::clear_is_procedure() {
  is_procedure_ = false;
  clear_has_is_procedure();
}
inline bool QueryRequest::is_procedure() const {
  // @@protoc_insertion_point(field_get:openmldb.api.QueryRequest.is_procedure)
  return is_procedure_;
}
inline void QueryRequest::set_is_procedure(bool value) {
  set_has_is_procedure();
  is_procedure_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.QueryRequest.is_procedure)
}

// optional uint64 task_id = 7;
inline bool QueryRequest::has_task_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void QueryRequest::set_has_task_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void QueryRequest::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void QueryRequest::clear_task_id() {
  task_id_ = GOOGLE_ULONGLONG(0);
  clear_has_task_id();
}
inline ::google::protobuf::uint64 QueryRequest::task_id() const {
  // @@protoc_insertion_point(field_get:openmldb.api.QueryRequest.task_id)
  return task_id_;
}
inline void QueryRequest::set_task_id(::google::protobuf::uint64 value) {
  set_has_task_id();
  task_id_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.QueryRequest.task_id)
}

// optional uint32 row_size = 8;
inline bool QueryRequest::has_row_size() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void QueryRequest::set_has_row_size() {
  _has_bits_[0] |= 0x00000040u;
}
inline void QueryRequest::clear_has_row_size() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void QueryRequest::clear_row_size() {
  row_size_ = 0u;
  clear_has_row_size();
}
inline ::google::protobuf::uint32 QueryRequest::row_size() const {
  // @@protoc_insertion_point(field_get:openmldb.api.QueryRequest.row_size)
  return row_size_;
}
inline void QueryRequest::set_row_size(::google::protobuf::uint32 value) {
  set_has_row_size();
  row_size_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.QueryRequest.row_size)
}

// optional uint32 row_slices = 9;
inline bool QueryRequest::has_row_slices() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void QueryRequest::set_has_row_slices() {
  _has_bits_[0] |= 0x00000100u;
}
inline void QueryRequest::clear_has_row_slices() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void QueryRequest::clear_row_slices() {
  row_slices_ = 0u;
  clear_has_row_slices();
}
inline ::google::protobuf::uint32 QueryRequest::row_slices() const {
  // @@protoc_insertion_point(field_get:openmldb.api.QueryRequest.row_slices)
  return row_slices_;
}
inline void QueryRequest::set_row_slices(::google::protobuf::uint32 value) {
  set_has_row_slices();
  row_slices_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.QueryRequest.row_slices)
}

// optional uint32 parameter_row_size = 10;
inline bool QueryRequest::has_parameter_row_size() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void QueryRequest::set_has_parameter_row_size() {
  _has_bits_[0] |= 0x00000200u;
}
inline void QueryRequest::clear_has_parameter_row_size() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void QueryRequest::clear_parameter_row_size() {
  parameter_row_size_ = 0u;
  clear_has_parameter_row_size();
}
inline ::google::protobuf::uint32 QueryRequest::parameter_row_size() const {
  // @@protoc_insertion_point(field_get:openmldb.api.QueryRequest.parameter_row_size)
  return parameter_row_size_;
}
inline void QueryRequest::set_parameter_row_size(::google::protobuf::uint32 value) {
  set_has_parameter_row_size();
  parameter_row_size_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.QueryRequest.parameter_row_size)
}

// optional uint32 parameter_row_slices = 11;
inline bool QueryRequest::has_parameter_row_slices() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void QueryRequest::set_has_parameter_row_slices() {
  _has_bits_[0] |= 0x00000400u;
}
inline void QueryRequest::clear_has_parameter_row_slices() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void QueryRequest::clear_parameter_row_slices() {
  parameter_row_slices_ = 0u;
  clear_has_parameter_row_slices();
}
inline ::google::protobuf::uint32 QueryRequest::parameter_row_slices() const {
  // @@protoc_insertion_point(field_get:openmldb.api.QueryRequest.parameter_row_slices)
  return parameter_row_slices_;
}
inline void QueryRequest::set_parameter_row_slices(::google::protobuf::uint32 value) {
  set_has_parameter_row_slices();
  parameter_row_slices_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.QueryRequest.parameter_row_slices)
}

// repeated .openmldb.type.DataType parameter_types = 12;
inline int QueryRequest::parameter_types_size() const {
  return parameter_types_.size();
}
inline void QueryRequest::clear_parameter_types() {
  parameter_types_.Clear();
}
inline ::openmldb::type::DataType QueryRequest::parameter_types(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.QueryRequest.parameter_types)
  return static_cast< ::openmldb::type::DataType >(parameter_types_.Get(index));
}
inline void QueryRequest::set_parameter_types(int index, ::openmldb::type::DataType value) {
  assert(::openmldb::type::DataType_IsValid(value));
  parameter_types_.Set(index, value);
  // @@protoc_insertion_point(field_set:openmldb.api.QueryRequest.parameter_types)
}
inline void QueryRequest::add_parameter_types(::openmldb::type::DataType value) {
  assert(::openmldb::type::DataType_IsValid(value));
  parameter_types_.Add(value);
  // @@protoc_insertion_point(field_add:openmldb.api.QueryRequest.parameter_types)
}
inline const ::google::protobuf::RepeatedField<int>&
QueryRequest::parameter_types() const {
  // @@protoc_insertion_point(field_list:openmldb.api.QueryRequest.parameter_types)
  return parameter_types_;
}
inline ::google::protobuf::RepeatedField<int>*
QueryRequest::mutable_parameter_types() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.QueryRequest.parameter_types)
  return &parameter_types_;
}

// -------------------------------------------------------------------

// QueryResponse

// optional int32 code = 1;
inline bool QueryResponse::has_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryResponse::set_has_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 QueryResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.QueryResponse.code)
  return code_;
}
inline void QueryResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.QueryResponse.code)
}

// optional string msg = 2;
inline bool QueryResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& QueryResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.QueryResponse.msg)
  return msg_.GetNoArena();
}
inline void QueryResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.QueryResponse.msg)
}
#if LANG_CXX11
inline void QueryResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.QueryResponse.msg)
}
#endif
inline void QueryResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.QueryResponse.msg)
}
inline void QueryResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.QueryResponse.msg)
}
inline ::std::string* QueryResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.QueryResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.QueryResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.QueryResponse.msg)
}

// optional uint32 count = 3;
inline bool QueryResponse::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryResponse::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 QueryResponse::count() const {
  // @@protoc_insertion_point(field_get:openmldb.api.QueryResponse.count)
  return count_;
}
inline void QueryResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.QueryResponse.count)
}

// optional uint32 byte_size = 4;
inline bool QueryResponse::has_byte_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QueryResponse::set_has_byte_size() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QueryResponse::clear_has_byte_size() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QueryResponse::clear_byte_size() {
  byte_size_ = 0u;
  clear_has_byte_size();
}
inline ::google::protobuf::uint32 QueryResponse::byte_size() const {
  // @@protoc_insertion_point(field_get:openmldb.api.QueryResponse.byte_size)
  return byte_size_;
}
inline void QueryResponse::set_byte_size(::google::protobuf::uint32 value) {
  set_has_byte_size();
  byte_size_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.QueryResponse.byte_size)
}

// optional bytes schema = 5;
inline bool QueryResponse::has_schema() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryResponse::set_has_schema() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryResponse::clear_has_schema() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryResponse::clear_schema() {
  schema_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_schema();
}
inline const ::std::string& QueryResponse::schema() const {
  // @@protoc_insertion_point(field_get:openmldb.api.QueryResponse.schema)
  return schema_.GetNoArena();
}
inline void QueryResponse::set_schema(const ::std::string& value) {
  set_has_schema();
  schema_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.QueryResponse.schema)
}
#if LANG_CXX11
inline void QueryResponse::set_schema(::std::string&& value) {
  set_has_schema();
  schema_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.QueryResponse.schema)
}
#endif
inline void QueryResponse::set_schema(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_schema();
  schema_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.QueryResponse.schema)
}
inline void QueryResponse::set_schema(const void* value, size_t size) {
  set_has_schema();
  schema_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.QueryResponse.schema)
}
inline ::std::string* QueryResponse::mutable_schema() {
  set_has_schema();
  // @@protoc_insertion_point(field_mutable:openmldb.api.QueryResponse.schema)
  return schema_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryResponse::release_schema() {
  // @@protoc_insertion_point(field_release:openmldb.api.QueryResponse.schema)
  if (!has_schema()) {
    return NULL;
  }
  clear_has_schema();
  return schema_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryResponse::set_allocated_schema(::std::string* schema) {
  if (schema != NULL) {
    set_has_schema();
  } else {
    clear_has_schema();
  }
  schema_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), schema);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.QueryResponse.schema)
}

// optional uint32 row_slices = 6;
inline bool QueryResponse::has_row_slices() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QueryResponse::set_has_row_slices() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QueryResponse::clear_has_row_slices() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QueryResponse::clear_row_slices() {
  row_slices_ = 0u;
  clear_has_row_slices();
}
inline ::google::protobuf::uint32 QueryResponse::row_slices() const {
  // @@protoc_insertion_point(field_get:openmldb.api.QueryResponse.row_slices)
  return row_slices_;
}
inline void QueryResponse::set_row_slices(::google::protobuf::uint32 value) {
  set_has_row_slices();
  row_slices_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.QueryResponse.row_slices)
}

// -------------------------------------------------------------------

// SQLBatchRequestQueryRequest

// optional string sql = 1;
inline bool SQLBatchRequestQueryRequest::has_sql() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SQLBatchRequestQueryRequest::set_has_sql() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SQLBatchRequestQueryRequest::clear_has_sql() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SQLBatchRequestQueryRequest::clear_sql() {
  sql_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sql();
}
inline const ::std::string& SQLBatchRequestQueryRequest::sql() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SQLBatchRequestQueryRequest.sql)
  return sql_.GetNoArena();
}
inline void SQLBatchRequestQueryRequest::set_sql(const ::std::string& value) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.SQLBatchRequestQueryRequest.sql)
}
#if LANG_CXX11
inline void SQLBatchRequestQueryRequest::set_sql(::std::string&& value) {
  set_has_sql();
  sql_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.SQLBatchRequestQueryRequest.sql)
}
#endif
inline void SQLBatchRequestQueryRequest::set_sql(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.SQLBatchRequestQueryRequest.sql)
}
inline void SQLBatchRequestQueryRequest::set_sql(const char* value, size_t size) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.SQLBatchRequestQueryRequest.sql)
}
inline ::std::string* SQLBatchRequestQueryRequest::mutable_sql() {
  set_has_sql();
  // @@protoc_insertion_point(field_mutable:openmldb.api.SQLBatchRequestQueryRequest.sql)
  return sql_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SQLBatchRequestQueryRequest::release_sql() {
  // @@protoc_insertion_point(field_release:openmldb.api.SQLBatchRequestQueryRequest.sql)
  if (!has_sql()) {
    return NULL;
  }
  clear_has_sql();
  return sql_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SQLBatchRequestQueryRequest::set_allocated_sql(::std::string* sql) {
  if (sql != NULL) {
    set_has_sql();
  } else {
    clear_has_sql();
  }
  sql_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sql);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.SQLBatchRequestQueryRequest.sql)
}

// optional string db = 2;
inline bool SQLBatchRequestQueryRequest::has_db() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SQLBatchRequestQueryRequest::set_has_db() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SQLBatchRequestQueryRequest::clear_has_db() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SQLBatchRequestQueryRequest::clear_db() {
  db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_db();
}
inline const ::std::string& SQLBatchRequestQueryRequest::db() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SQLBatchRequestQueryRequest.db)
  return db_.GetNoArena();
}
inline void SQLBatchRequestQueryRequest::set_db(const ::std::string& value) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.SQLBatchRequestQueryRequest.db)
}
#if LANG_CXX11
inline void SQLBatchRequestQueryRequest::set_db(::std::string&& value) {
  set_has_db();
  db_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.SQLBatchRequestQueryRequest.db)
}
#endif
inline void SQLBatchRequestQueryRequest::set_db(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.SQLBatchRequestQueryRequest.db)
}
inline void SQLBatchRequestQueryRequest::set_db(const char* value, size_t size) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.SQLBatchRequestQueryRequest.db)
}
inline ::std::string* SQLBatchRequestQueryRequest::mutable_db() {
  set_has_db();
  // @@protoc_insertion_point(field_mutable:openmldb.api.SQLBatchRequestQueryRequest.db)
  return db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SQLBatchRequestQueryRequest::release_db() {
  // @@protoc_insertion_point(field_release:openmldb.api.SQLBatchRequestQueryRequest.db)
  if (!has_db()) {
    return NULL;
  }
  clear_has_db();
  return db_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SQLBatchRequestQueryRequest::set_allocated_db(::std::string* db) {
  if (db != NULL) {
    set_has_db();
  } else {
    clear_has_db();
  }
  db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.SQLBatchRequestQueryRequest.db)
}

// repeated uint32 common_column_indices = 3;
inline int SQLBatchRequestQueryRequest::common_column_indices_size() const {
  return common_column_indices_.size();
}
inline void SQLBatchRequestQueryRequest::clear_common_column_indices() {
  common_column_indices_.Clear();
}
inline ::google::protobuf::uint32 SQLBatchRequestQueryRequest::common_column_indices(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.SQLBatchRequestQueryRequest.common_column_indices)
  return common_column_indices_.Get(index);
}
inline void SQLBatchRequestQueryRequest::set_common_column_indices(int index, ::google::protobuf::uint32 value) {
  common_column_indices_.Set(index, value);
  // @@protoc_insertion_point(field_set:openmldb.api.SQLBatchRequestQueryRequest.common_column_indices)
}
inline void SQLBatchRequestQueryRequest::add_common_column_indices(::google::protobuf::uint32 value) {
  common_column_indices_.Add(value);
  // @@protoc_insertion_point(field_add:openmldb.api.SQLBatchRequestQueryRequest.common_column_indices)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SQLBatchRequestQueryRequest::common_column_indices() const {
  // @@protoc_insertion_point(field_list:openmldb.api.SQLBatchRequestQueryRequest.common_column_indices)
  return common_column_indices_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SQLBatchRequestQueryRequest::mutable_common_column_indices() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.SQLBatchRequestQueryRequest.common_column_indices)
  return &common_column_indices_;
}

// optional bool is_debug = 4 [default = false];
inline bool SQLBatchRequestQueryRequest::has_is_debug() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SQLBatchRequestQueryRequest::set_has_is_debug() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SQLBatchRequestQueryRequest::clear_has_is_debug() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SQLBatchRequestQueryRequest::clear_is_debug() {
  is_debug_ = false;
  clear_has_is_debug();
}
inline bool SQLBatchRequestQueryRequest::is_debug() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SQLBatchRequestQueryRequest.is_debug)
  return is_debug_;
}
inline void SQLBatchRequestQueryRequest::set_is_debug(bool value) {
  set_has_is_debug();
  is_debug_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.SQLBatchRequestQueryRequest.is_debug)
}

// optional string sp_name = 5;
inline bool SQLBatchRequestQueryRequest::has_sp_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SQLBatchRequestQueryRequest::set_has_sp_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SQLBatchRequestQueryRequest::clear_has_sp_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SQLBatchRequestQueryRequest::clear_sp_name() {
  sp_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sp_name();
}
inline const ::std::string& SQLBatchRequestQueryRequest::sp_name() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SQLBatchRequestQueryRequest.sp_name)
  return sp_name_.GetNoArena();
}
inline void SQLBatchRequestQueryRequest::set_sp_name(const ::std::string& value) {
  set_has_sp_name();
  sp_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.SQLBatchRequestQueryRequest.sp_name)
}
#if LANG_CXX11
inline void SQLBatchRequestQueryRequest::set_sp_name(::std::string&& value) {
  set_has_sp_name();
  sp_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.SQLBatchRequestQueryRequest.sp_name)
}
#endif
inline void SQLBatchRequestQueryRequest::set_sp_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sp_name();
  sp_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.SQLBatchRequestQueryRequest.sp_name)
}
inline void SQLBatchRequestQueryRequest::set_sp_name(const char* value, size_t size) {
  set_has_sp_name();
  sp_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.SQLBatchRequestQueryRequest.sp_name)
}
inline ::std::string* SQLBatchRequestQueryRequest::mutable_sp_name() {
  set_has_sp_name();
  // @@protoc_insertion_point(field_mutable:openmldb.api.SQLBatchRequestQueryRequest.sp_name)
  return sp_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SQLBatchRequestQueryRequest::release_sp_name() {
  // @@protoc_insertion_point(field_release:openmldb.api.SQLBatchRequestQueryRequest.sp_name)
  if (!has_sp_name()) {
    return NULL;
  }
  clear_has_sp_name();
  return sp_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SQLBatchRequestQueryRequest::set_allocated_sp_name(::std::string* sp_name) {
  if (sp_name != NULL) {
    set_has_sp_name();
  } else {
    clear_has_sp_name();
  }
  sp_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sp_name);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.SQLBatchRequestQueryRequest.sp_name)
}

// optional bool is_procedure = 6 [default = false];
inline bool SQLBatchRequestQueryRequest::has_is_procedure() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SQLBatchRequestQueryRequest::set_has_is_procedure() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SQLBatchRequestQueryRequest::clear_has_is_procedure() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SQLBatchRequestQueryRequest::clear_is_procedure() {
  is_procedure_ = false;
  clear_has_is_procedure();
}
inline bool SQLBatchRequestQueryRequest::is_procedure() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SQLBatchRequestQueryRequest.is_procedure)
  return is_procedure_;
}
inline void SQLBatchRequestQueryRequest::set_is_procedure(bool value) {
  set_has_is_procedure();
  is_procedure_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.SQLBatchRequestQueryRequest.is_procedure)
}

// repeated uint32 row_sizes = 7;
inline int SQLBatchRequestQueryRequest::row_sizes_size() const {
  return row_sizes_.size();
}
inline void SQLBatchRequestQueryRequest::clear_row_sizes() {
  row_sizes_.Clear();
}
inline ::google::protobuf::uint32 SQLBatchRequestQueryRequest::row_sizes(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.SQLBatchRequestQueryRequest.row_sizes)
  return row_sizes_.Get(index);
}
inline void SQLBatchRequestQueryRequest::set_row_sizes(int index, ::google::protobuf::uint32 value) {
  row_sizes_.Set(index, value);
  // @@protoc_insertion_point(field_set:openmldb.api.SQLBatchRequestQueryRequest.row_sizes)
}
inline void SQLBatchRequestQueryRequest::add_row_sizes(::google::protobuf::uint32 value) {
  row_sizes_.Add(value);
  // @@protoc_insertion_point(field_add:openmldb.api.SQLBatchRequestQueryRequest.row_sizes)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SQLBatchRequestQueryRequest::row_sizes() const {
  // @@protoc_insertion_point(field_list:openmldb.api.SQLBatchRequestQueryRequest.row_sizes)
  return row_sizes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SQLBatchRequestQueryRequest::mutable_row_sizes() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.SQLBatchRequestQueryRequest.row_sizes)
  return &row_sizes_;
}

// optional uint32 common_slices = 8;
inline bool SQLBatchRequestQueryRequest::has_common_slices() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SQLBatchRequestQueryRequest::set_has_common_slices() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SQLBatchRequestQueryRequest::clear_has_common_slices() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SQLBatchRequestQueryRequest::clear_common_slices() {
  common_slices_ = 0u;
  clear_has_common_slices();
}
inline ::google::protobuf::uint32 SQLBatchRequestQueryRequest::common_slices() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SQLBatchRequestQueryRequest.common_slices)
  return common_slices_;
}
inline void SQLBatchRequestQueryRequest::set_common_slices(::google::protobuf::uint32 value) {
  set_has_common_slices();
  common_slices_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.SQLBatchRequestQueryRequest.common_slices)
}

// optional uint32 non_common_slices = 9;
inline bool SQLBatchRequestQueryRequest::has_non_common_slices() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SQLBatchRequestQueryRequest::set_has_non_common_slices() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SQLBatchRequestQueryRequest::clear_has_non_common_slices() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SQLBatchRequestQueryRequest::clear_non_common_slices() {
  non_common_slices_ = 0u;
  clear_has_non_common_slices();
}
inline ::google::protobuf::uint32 SQLBatchRequestQueryRequest::non_common_slices() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SQLBatchRequestQueryRequest.non_common_slices)
  return non_common_slices_;
}
inline void SQLBatchRequestQueryRequest::set_non_common_slices(::google::protobuf::uint32 value) {
  set_has_non_common_slices();
  non_common_slices_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.SQLBatchRequestQueryRequest.non_common_slices)
}

// optional uint64 task_id = 10;
inline bool SQLBatchRequestQueryRequest::has_task_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SQLBatchRequestQueryRequest::set_has_task_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SQLBatchRequestQueryRequest::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SQLBatchRequestQueryRequest::clear_task_id() {
  task_id_ = GOOGLE_ULONGLONG(0);
  clear_has_task_id();
}
inline ::google::protobuf::uint64 SQLBatchRequestQueryRequest::task_id() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SQLBatchRequestQueryRequest.task_id)
  return task_id_;
}
inline void SQLBatchRequestQueryRequest::set_task_id(::google::protobuf::uint64 value) {
  set_has_task_id();
  task_id_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.SQLBatchRequestQueryRequest.task_id)
}

// -------------------------------------------------------------------

// SQLBatchRequestQueryResponse

// optional int32 code = 1;
inline bool SQLBatchRequestQueryResponse::has_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SQLBatchRequestQueryResponse::set_has_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SQLBatchRequestQueryResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SQLBatchRequestQueryResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 SQLBatchRequestQueryResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SQLBatchRequestQueryResponse.code)
  return code_;
}
inline void SQLBatchRequestQueryResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.SQLBatchRequestQueryResponse.code)
}

// optional string msg = 2;
inline bool SQLBatchRequestQueryResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SQLBatchRequestQueryResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SQLBatchRequestQueryResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SQLBatchRequestQueryResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& SQLBatchRequestQueryResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SQLBatchRequestQueryResponse.msg)
  return msg_.GetNoArena();
}
inline void SQLBatchRequestQueryResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.SQLBatchRequestQueryResponse.msg)
}
#if LANG_CXX11
inline void SQLBatchRequestQueryResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.SQLBatchRequestQueryResponse.msg)
}
#endif
inline void SQLBatchRequestQueryResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.SQLBatchRequestQueryResponse.msg)
}
inline void SQLBatchRequestQueryResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.SQLBatchRequestQueryResponse.msg)
}
inline ::std::string* SQLBatchRequestQueryResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.SQLBatchRequestQueryResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SQLBatchRequestQueryResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.SQLBatchRequestQueryResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SQLBatchRequestQueryResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.SQLBatchRequestQueryResponse.msg)
}

// optional uint32 count = 3;
inline bool SQLBatchRequestQueryResponse::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SQLBatchRequestQueryResponse::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SQLBatchRequestQueryResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SQLBatchRequestQueryResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 SQLBatchRequestQueryResponse::count() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SQLBatchRequestQueryResponse.count)
  return count_;
}
inline void SQLBatchRequestQueryResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.SQLBatchRequestQueryResponse.count)
}

// optional bytes schema = 4;
inline bool SQLBatchRequestQueryResponse::has_schema() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SQLBatchRequestQueryResponse::set_has_schema() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SQLBatchRequestQueryResponse::clear_has_schema() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SQLBatchRequestQueryResponse::clear_schema() {
  schema_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_schema();
}
inline const ::std::string& SQLBatchRequestQueryResponse::schema() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SQLBatchRequestQueryResponse.schema)
  return schema_.GetNoArena();
}
inline void SQLBatchRequestQueryResponse::set_schema(const ::std::string& value) {
  set_has_schema();
  schema_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.SQLBatchRequestQueryResponse.schema)
}
#if LANG_CXX11
inline void SQLBatchRequestQueryResponse::set_schema(::std::string&& value) {
  set_has_schema();
  schema_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.SQLBatchRequestQueryResponse.schema)
}
#endif
inline void SQLBatchRequestQueryResponse::set_schema(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_schema();
  schema_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.SQLBatchRequestQueryResponse.schema)
}
inline void SQLBatchRequestQueryResponse::set_schema(const void* value, size_t size) {
  set_has_schema();
  schema_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.SQLBatchRequestQueryResponse.schema)
}
inline ::std::string* SQLBatchRequestQueryResponse::mutable_schema() {
  set_has_schema();
  // @@protoc_insertion_point(field_mutable:openmldb.api.SQLBatchRequestQueryResponse.schema)
  return schema_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SQLBatchRequestQueryResponse::release_schema() {
  // @@protoc_insertion_point(field_release:openmldb.api.SQLBatchRequestQueryResponse.schema)
  if (!has_schema()) {
    return NULL;
  }
  clear_has_schema();
  return schema_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SQLBatchRequestQueryResponse::set_allocated_schema(::std::string* schema) {
  if (schema != NULL) {
    set_has_schema();
  } else {
    clear_has_schema();
  }
  schema_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), schema);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.SQLBatchRequestQueryResponse.schema)
}

// repeated uint32 common_column_indices = 5;
inline int SQLBatchRequestQueryResponse::common_column_indices_size() const {
  return common_column_indices_.size();
}
inline void SQLBatchRequestQueryResponse::clear_common_column_indices() {
  common_column_indices_.Clear();
}
inline ::google::protobuf::uint32 SQLBatchRequestQueryResponse::common_column_indices(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.SQLBatchRequestQueryResponse.common_column_indices)
  return common_column_indices_.Get(index);
}
inline void SQLBatchRequestQueryResponse::set_common_column_indices(int index, ::google::protobuf::uint32 value) {
  common_column_indices_.Set(index, value);
  // @@protoc_insertion_point(field_set:openmldb.api.SQLBatchRequestQueryResponse.common_column_indices)
}
inline void SQLBatchRequestQueryResponse::add_common_column_indices(::google::protobuf::uint32 value) {
  common_column_indices_.Add(value);
  // @@protoc_insertion_point(field_add:openmldb.api.SQLBatchRequestQueryResponse.common_column_indices)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SQLBatchRequestQueryResponse::common_column_indices() const {
  // @@protoc_insertion_point(field_list:openmldb.api.SQLBatchRequestQueryResponse.common_column_indices)
  return common_column_indices_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SQLBatchRequestQueryResponse::mutable_common_column_indices() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.SQLBatchRequestQueryResponse.common_column_indices)
  return &common_column_indices_;
}

// repeated uint32 row_sizes = 6;
inline int SQLBatchRequestQueryResponse::row_sizes_size() const {
  return row_sizes_.size();
}
inline void SQLBatchRequestQueryResponse::clear_row_sizes() {
  row_sizes_.Clear();
}
inline ::google::protobuf::uint32 SQLBatchRequestQueryResponse::row_sizes(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.SQLBatchRequestQueryResponse.row_sizes)
  return row_sizes_.Get(index);
}
inline void SQLBatchRequestQueryResponse::set_row_sizes(int index, ::google::protobuf::uint32 value) {
  row_sizes_.Set(index, value);
  // @@protoc_insertion_point(field_set:openmldb.api.SQLBatchRequestQueryResponse.row_sizes)
}
inline void SQLBatchRequestQueryResponse::add_row_sizes(::google::protobuf::uint32 value) {
  row_sizes_.Add(value);
  // @@protoc_insertion_point(field_add:openmldb.api.SQLBatchRequestQueryResponse.row_sizes)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SQLBatchRequestQueryResponse::row_sizes() const {
  // @@protoc_insertion_point(field_list:openmldb.api.SQLBatchRequestQueryResponse.row_sizes)
  return row_sizes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SQLBatchRequestQueryResponse::mutable_row_sizes() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.SQLBatchRequestQueryResponse.row_sizes)
  return &row_sizes_;
}

// optional uint32 common_slices = 7;
inline bool SQLBatchRequestQueryResponse::has_common_slices() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SQLBatchRequestQueryResponse::set_has_common_slices() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SQLBatchRequestQueryResponse::clear_has_common_slices() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SQLBatchRequestQueryResponse::clear_common_slices() {
  common_slices_ = 0u;
  clear_has_common_slices();
}
inline ::google::protobuf::uint32 SQLBatchRequestQueryResponse::common_slices() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SQLBatchRequestQueryResponse.common_slices)
  return common_slices_;
}
inline void SQLBatchRequestQueryResponse::set_common_slices(::google::protobuf::uint32 value) {
  set_has_common_slices();
  common_slices_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.SQLBatchRequestQueryResponse.common_slices)
}

// optional uint32 non_common_slices = 8;
inline bool SQLBatchRequestQueryResponse::has_non_common_slices() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SQLBatchRequestQueryResponse::set_has_non_common_slices() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SQLBatchRequestQueryResponse::clear_has_non_common_slices() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SQLBatchRequestQueryResponse::clear_non_common_slices() {
  non_common_slices_ = 0u;
  clear_has_non_common_slices();
}
inline ::google::protobuf::uint32 SQLBatchRequestQueryResponse::non_common_slices() const {
  // @@protoc_insertion_point(field_get:openmldb.api.SQLBatchRequestQueryResponse.non_common_slices)
  return non_common_slices_;
}
inline void SQLBatchRequestQueryResponse::set_non_common_slices(::google::protobuf::uint32 value) {
  set_has_non_common_slices();
  non_common_slices_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.SQLBatchRequestQueryResponse.non_common_slices)
}

// -------------------------------------------------------------------

// ExplainRequest

// optional string sql = 1;
inline bool ExplainRequest::has_sql() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExplainRequest::set_has_sql() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExplainRequest::clear_has_sql() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExplainRequest::clear_sql() {
  sql_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sql();
}
inline const ::std::string& ExplainRequest::sql() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ExplainRequest.sql)
  return sql_.GetNoArena();
}
inline void ExplainRequest::set_sql(const ::std::string& value) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.ExplainRequest.sql)
}
#if LANG_CXX11
inline void ExplainRequest::set_sql(::std::string&& value) {
  set_has_sql();
  sql_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.ExplainRequest.sql)
}
#endif
inline void ExplainRequest::set_sql(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.ExplainRequest.sql)
}
inline void ExplainRequest::set_sql(const char* value, size_t size) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.ExplainRequest.sql)
}
inline ::std::string* ExplainRequest::mutable_sql() {
  set_has_sql();
  // @@protoc_insertion_point(field_mutable:openmldb.api.ExplainRequest.sql)
  return sql_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExplainRequest::release_sql() {
  // @@protoc_insertion_point(field_release:openmldb.api.ExplainRequest.sql)
  if (!has_sql()) {
    return NULL;
  }
  clear_has_sql();
  return sql_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExplainRequest::set_allocated_sql(::std::string* sql) {
  if (sql != NULL) {
    set_has_sql();
  } else {
    clear_has_sql();
  }
  sql_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sql);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.ExplainRequest.sql)
}

// optional string db = 2;
inline bool ExplainRequest::has_db() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExplainRequest::set_has_db() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExplainRequest::clear_has_db() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExplainRequest::clear_db() {
  db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_db();
}
inline const ::std::string& ExplainRequest::db() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ExplainRequest.db)
  return db_.GetNoArena();
}
inline void ExplainRequest::set_db(const ::std::string& value) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.ExplainRequest.db)
}
#if LANG_CXX11
inline void ExplainRequest::set_db(::std::string&& value) {
  set_has_db();
  db_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.ExplainRequest.db)
}
#endif
inline void ExplainRequest::set_db(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.ExplainRequest.db)
}
inline void ExplainRequest::set_db(const char* value, size_t size) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.ExplainRequest.db)
}
inline ::std::string* ExplainRequest::mutable_db() {
  set_has_db();
  // @@protoc_insertion_point(field_mutable:openmldb.api.ExplainRequest.db)
  return db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExplainRequest::release_db() {
  // @@protoc_insertion_point(field_release:openmldb.api.ExplainRequest.db)
  if (!has_db()) {
    return NULL;
  }
  clear_has_db();
  return db_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExplainRequest::set_allocated_db(::std::string* db) {
  if (db != NULL) {
    set_has_db();
  } else {
    clear_has_db();
  }
  db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.ExplainRequest.db)
}

// optional bool is_batch = 3;
inline bool ExplainRequest::has_is_batch() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExplainRequest::set_has_is_batch() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExplainRequest::clear_has_is_batch() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExplainRequest::clear_is_batch() {
  is_batch_ = false;
  clear_has_is_batch();
}
inline bool ExplainRequest::is_batch() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ExplainRequest.is_batch)
  return is_batch_;
}
inline void ExplainRequest::set_is_batch(bool value) {
  set_has_is_batch();
  is_batch_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ExplainRequest.is_batch)
}

// -------------------------------------------------------------------

// ExplainResponse

// optional bytes input_schema = 1;
inline bool ExplainResponse::has_input_schema() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExplainResponse::set_has_input_schema() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExplainResponse::clear_has_input_schema() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExplainResponse::clear_input_schema() {
  input_schema_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_input_schema();
}
inline const ::std::string& ExplainResponse::input_schema() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ExplainResponse.input_schema)
  return input_schema_.GetNoArena();
}
inline void ExplainResponse::set_input_schema(const ::std::string& value) {
  set_has_input_schema();
  input_schema_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.ExplainResponse.input_schema)
}
#if LANG_CXX11
inline void ExplainResponse::set_input_schema(::std::string&& value) {
  set_has_input_schema();
  input_schema_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.ExplainResponse.input_schema)
}
#endif
inline void ExplainResponse::set_input_schema(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_input_schema();
  input_schema_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.ExplainResponse.input_schema)
}
inline void ExplainResponse::set_input_schema(const void* value, size_t size) {
  set_has_input_schema();
  input_schema_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.ExplainResponse.input_schema)
}
inline ::std::string* ExplainResponse::mutable_input_schema() {
  set_has_input_schema();
  // @@protoc_insertion_point(field_mutable:openmldb.api.ExplainResponse.input_schema)
  return input_schema_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExplainResponse::release_input_schema() {
  // @@protoc_insertion_point(field_release:openmldb.api.ExplainResponse.input_schema)
  if (!has_input_schema()) {
    return NULL;
  }
  clear_has_input_schema();
  return input_schema_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExplainResponse::set_allocated_input_schema(::std::string* input_schema) {
  if (input_schema != NULL) {
    set_has_input_schema();
  } else {
    clear_has_input_schema();
  }
  input_schema_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_schema);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.ExplainResponse.input_schema)
}

// optional string logical_plan = 3;
inline bool ExplainResponse::has_logical_plan() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExplainResponse::set_has_logical_plan() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExplainResponse::clear_has_logical_plan() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExplainResponse::clear_logical_plan() {
  logical_plan_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_logical_plan();
}
inline const ::std::string& ExplainResponse::logical_plan() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ExplainResponse.logical_plan)
  return logical_plan_.GetNoArena();
}
inline void ExplainResponse::set_logical_plan(const ::std::string& value) {
  set_has_logical_plan();
  logical_plan_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.ExplainResponse.logical_plan)
}
#if LANG_CXX11
inline void ExplainResponse::set_logical_plan(::std::string&& value) {
  set_has_logical_plan();
  logical_plan_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.ExplainResponse.logical_plan)
}
#endif
inline void ExplainResponse::set_logical_plan(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_logical_plan();
  logical_plan_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.ExplainResponse.logical_plan)
}
inline void ExplainResponse::set_logical_plan(const char* value, size_t size) {
  set_has_logical_plan();
  logical_plan_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.ExplainResponse.logical_plan)
}
inline ::std::string* ExplainResponse::mutable_logical_plan() {
  set_has_logical_plan();
  // @@protoc_insertion_point(field_mutable:openmldb.api.ExplainResponse.logical_plan)
  return logical_plan_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExplainResponse::release_logical_plan() {
  // @@protoc_insertion_point(field_release:openmldb.api.ExplainResponse.logical_plan)
  if (!has_logical_plan()) {
    return NULL;
  }
  clear_has_logical_plan();
  return logical_plan_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExplainResponse::set_allocated_logical_plan(::std::string* logical_plan) {
  if (logical_plan != NULL) {
    set_has_logical_plan();
  } else {
    clear_has_logical_plan();
  }
  logical_plan_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logical_plan);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.ExplainResponse.logical_plan)
}

// optional string physical_plan = 4;
inline bool ExplainResponse::has_physical_plan() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExplainResponse::set_has_physical_plan() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExplainResponse::clear_has_physical_plan() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExplainResponse::clear_physical_plan() {
  physical_plan_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_physical_plan();
}
inline const ::std::string& ExplainResponse::physical_plan() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ExplainResponse.physical_plan)
  return physical_plan_.GetNoArena();
}
inline void ExplainResponse::set_physical_plan(const ::std::string& value) {
  set_has_physical_plan();
  physical_plan_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.ExplainResponse.physical_plan)
}
#if LANG_CXX11
inline void ExplainResponse::set_physical_plan(::std::string&& value) {
  set_has_physical_plan();
  physical_plan_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.ExplainResponse.physical_plan)
}
#endif
inline void ExplainResponse::set_physical_plan(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_physical_plan();
  physical_plan_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.ExplainResponse.physical_plan)
}
inline void ExplainResponse::set_physical_plan(const char* value, size_t size) {
  set_has_physical_plan();
  physical_plan_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.ExplainResponse.physical_plan)
}
inline ::std::string* ExplainResponse::mutable_physical_plan() {
  set_has_physical_plan();
  // @@protoc_insertion_point(field_mutable:openmldb.api.ExplainResponse.physical_plan)
  return physical_plan_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExplainResponse::release_physical_plan() {
  // @@protoc_insertion_point(field_release:openmldb.api.ExplainResponse.physical_plan)
  if (!has_physical_plan()) {
    return NULL;
  }
  clear_has_physical_plan();
  return physical_plan_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExplainResponse::set_allocated_physical_plan(::std::string* physical_plan) {
  if (physical_plan != NULL) {
    set_has_physical_plan();
  } else {
    clear_has_physical_plan();
  }
  physical_plan_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), physical_plan);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.ExplainResponse.physical_plan)
}

// optional string ir = 5;
inline bool ExplainResponse::has_ir() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExplainResponse::set_has_ir() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ExplainResponse::clear_has_ir() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ExplainResponse::clear_ir() {
  ir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ir();
}
inline const ::std::string& ExplainResponse::ir() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ExplainResponse.ir)
  return ir_.GetNoArena();
}
inline void ExplainResponse::set_ir(const ::std::string& value) {
  set_has_ir();
  ir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.ExplainResponse.ir)
}
#if LANG_CXX11
inline void ExplainResponse::set_ir(::std::string&& value) {
  set_has_ir();
  ir_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.ExplainResponse.ir)
}
#endif
inline void ExplainResponse::set_ir(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ir();
  ir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.ExplainResponse.ir)
}
inline void ExplainResponse::set_ir(const char* value, size_t size) {
  set_has_ir();
  ir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.ExplainResponse.ir)
}
inline ::std::string* ExplainResponse::mutable_ir() {
  set_has_ir();
  // @@protoc_insertion_point(field_mutable:openmldb.api.ExplainResponse.ir)
  return ir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExplainResponse::release_ir() {
  // @@protoc_insertion_point(field_release:openmldb.api.ExplainResponse.ir)
  if (!has_ir()) {
    return NULL;
  }
  clear_has_ir();
  return ir_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExplainResponse::set_allocated_ir(::std::string* ir) {
  if (ir != NULL) {
    set_has_ir();
  } else {
    clear_has_ir();
  }
  ir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ir);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.ExplainResponse.ir)
}

// optional bytes output_schema = 6;
inline bool ExplainResponse::has_output_schema() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ExplainResponse::set_has_output_schema() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ExplainResponse::clear_has_output_schema() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ExplainResponse::clear_output_schema() {
  output_schema_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_output_schema();
}
inline const ::std::string& ExplainResponse::output_schema() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ExplainResponse.output_schema)
  return output_schema_.GetNoArena();
}
inline void ExplainResponse::set_output_schema(const ::std::string& value) {
  set_has_output_schema();
  output_schema_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.ExplainResponse.output_schema)
}
#if LANG_CXX11
inline void ExplainResponse::set_output_schema(::std::string&& value) {
  set_has_output_schema();
  output_schema_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.ExplainResponse.output_schema)
}
#endif
inline void ExplainResponse::set_output_schema(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_output_schema();
  output_schema_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.ExplainResponse.output_schema)
}
inline void ExplainResponse::set_output_schema(const void* value, size_t size) {
  set_has_output_schema();
  output_schema_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.ExplainResponse.output_schema)
}
inline ::std::string* ExplainResponse::mutable_output_schema() {
  set_has_output_schema();
  // @@protoc_insertion_point(field_mutable:openmldb.api.ExplainResponse.output_schema)
  return output_schema_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExplainResponse::release_output_schema() {
  // @@protoc_insertion_point(field_release:openmldb.api.ExplainResponse.output_schema)
  if (!has_output_schema()) {
    return NULL;
  }
  clear_has_output_schema();
  return output_schema_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExplainResponse::set_allocated_output_schema(::std::string* output_schema) {
  if (output_schema != NULL) {
    set_has_output_schema();
  } else {
    clear_has_output_schema();
  }
  output_schema_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output_schema);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.ExplainResponse.output_schema)
}

// optional bool is_batch = 7;
inline bool ExplainResponse::has_is_batch() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ExplainResponse::set_has_is_batch() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ExplainResponse::clear_has_is_batch() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ExplainResponse::clear_is_batch() {
  is_batch_ = false;
  clear_has_is_batch();
}
inline bool ExplainResponse::is_batch() const {
  // @@protoc_insertion_point(field_get:openmldb.api.ExplainResponse.is_batch)
  return is_batch_;
}
inline void ExplainResponse::set_is_batch(bool value) {
  set_has_is_batch();
  is_batch_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.ExplainResponse.is_batch)
}

// -------------------------------------------------------------------

// RefreshRequest

// optional uint32 tid = 1;
inline bool RefreshRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RefreshRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RefreshRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RefreshRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 RefreshRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.RefreshRequest.tid)
  return tid_;
}
inline void RefreshRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.RefreshRequest.tid)
}

// -------------------------------------------------------------------

// GetCatalogRequest

// -------------------------------------------------------------------

// GetCatalogResponse

// optional .openmldb.common.CatalogInfo catalog = 1;
inline bool GetCatalogResponse::has_catalog() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetCatalogResponse::set_has_catalog() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetCatalogResponse::clear_has_catalog() {
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::openmldb::common::CatalogInfo& GetCatalogResponse::_internal_catalog() const {
  return *catalog_;
}
inline const ::openmldb::common::CatalogInfo& GetCatalogResponse::catalog() const {
  const ::openmldb::common::CatalogInfo* p = catalog_;
  // @@protoc_insertion_point(field_get:openmldb.api.GetCatalogResponse.catalog)
  return p != NULL ? *p : *reinterpret_cast<const ::openmldb::common::CatalogInfo*>(
      &::openmldb::common::_CatalogInfo_default_instance_);
}
inline ::openmldb::common::CatalogInfo* GetCatalogResponse::release_catalog() {
  // @@protoc_insertion_point(field_release:openmldb.api.GetCatalogResponse.catalog)
  clear_has_catalog();
  ::openmldb::common::CatalogInfo* temp = catalog_;
  catalog_ = NULL;
  return temp;
}
inline ::openmldb::common::CatalogInfo* GetCatalogResponse::mutable_catalog() {
  set_has_catalog();
  if (catalog_ == NULL) {
    auto* p = CreateMaybeMessage<::openmldb::common::CatalogInfo>(GetArenaNoVirtual());
    catalog_ = p;
  }
  // @@protoc_insertion_point(field_mutable:openmldb.api.GetCatalogResponse.catalog)
  return catalog_;
}
inline void GetCatalogResponse::set_allocated_catalog(::openmldb::common::CatalogInfo* catalog) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(catalog_);
  }
  if (catalog) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      catalog = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, catalog, submessage_arena);
    }
    set_has_catalog();
  } else {
    clear_has_catalog();
  }
  catalog_ = catalog;
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.GetCatalogResponse.catalog)
}

// optional int32 code = 2;
inline bool GetCatalogResponse::has_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetCatalogResponse::set_has_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetCatalogResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetCatalogResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 GetCatalogResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetCatalogResponse.code)
  return code_;
}
inline void GetCatalogResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.GetCatalogResponse.code)
}

// optional string msg = 3;
inline bool GetCatalogResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCatalogResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCatalogResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCatalogResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& GetCatalogResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.GetCatalogResponse.msg)
  return msg_.GetNoArena();
}
inline void GetCatalogResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.GetCatalogResponse.msg)
}
#if LANG_CXX11
inline void GetCatalogResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.GetCatalogResponse.msg)
}
#endif
inline void GetCatalogResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.GetCatalogResponse.msg)
}
inline void GetCatalogResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.GetCatalogResponse.msg)
}
inline ::std::string* GetCatalogResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.GetCatalogResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCatalogResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.GetCatalogResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCatalogResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.GetCatalogResponse.msg)
}

// -------------------------------------------------------------------

// DataBlockInfo

// optional uint32 ref_cnt = 1;
inline bool DataBlockInfo::has_ref_cnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataBlockInfo::set_has_ref_cnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataBlockInfo::clear_has_ref_cnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataBlockInfo::clear_ref_cnt() {
  ref_cnt_ = 0u;
  clear_has_ref_cnt();
}
inline ::google::protobuf::uint32 DataBlockInfo::ref_cnt() const {
  // @@protoc_insertion_point(field_get:openmldb.api.DataBlockInfo.ref_cnt)
  return ref_cnt_;
}
inline void DataBlockInfo::set_ref_cnt(::google::protobuf::uint32 value) {
  set_has_ref_cnt();
  ref_cnt_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.DataBlockInfo.ref_cnt)
}

// optional uint64 offset = 2;
inline bool DataBlockInfo::has_offset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataBlockInfo::set_has_offset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataBlockInfo::clear_has_offset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataBlockInfo::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
  clear_has_offset();
}
inline ::google::protobuf::uint64 DataBlockInfo::offset() const {
  // @@protoc_insertion_point(field_get:openmldb.api.DataBlockInfo.offset)
  return offset_;
}
inline void DataBlockInfo::set_offset(::google::protobuf::uint64 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.DataBlockInfo.offset)
}

// optional uint32 length = 3;
inline bool DataBlockInfo::has_length() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DataBlockInfo::set_has_length() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DataBlockInfo::clear_has_length() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DataBlockInfo::clear_length() {
  length_ = 0u;
  clear_has_length();
}
inline ::google::protobuf::uint32 DataBlockInfo::length() const {
  // @@protoc_insertion_point(field_get:openmldb.api.DataBlockInfo.length)
  return length_;
}
inline void DataBlockInfo::set_length(::google::protobuf::uint32 value) {
  set_has_length();
  length_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.DataBlockInfo.length)
}

// -------------------------------------------------------------------

// BinlogInfo

// repeated .openmldb.api.Dimension dimensions = 1;
inline int BinlogInfo::dimensions_size() const {
  return dimensions_.size();
}
inline void BinlogInfo::clear_dimensions() {
  dimensions_.Clear();
}
inline ::openmldb::api::Dimension* BinlogInfo::mutable_dimensions(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.BinlogInfo.dimensions)
  return dimensions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::Dimension >*
BinlogInfo::mutable_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.BinlogInfo.dimensions)
  return &dimensions_;
}
inline const ::openmldb::api::Dimension& BinlogInfo::dimensions(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.BinlogInfo.dimensions)
  return dimensions_.Get(index);
}
inline ::openmldb::api::Dimension* BinlogInfo::add_dimensions() {
  // @@protoc_insertion_point(field_add:openmldb.api.BinlogInfo.dimensions)
  return dimensions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::Dimension >&
BinlogInfo::dimensions() const {
  // @@protoc_insertion_point(field_list:openmldb.api.BinlogInfo.dimensions)
  return dimensions_;
}

// repeated .openmldb.api.TSDimension ts_dimensions = 2;
inline int BinlogInfo::ts_dimensions_size() const {
  return ts_dimensions_.size();
}
inline void BinlogInfo::clear_ts_dimensions() {
  ts_dimensions_.Clear();
}
inline ::openmldb::api::TSDimension* BinlogInfo::mutable_ts_dimensions(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.BinlogInfo.ts_dimensions)
  return ts_dimensions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::TSDimension >*
BinlogInfo::mutable_ts_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.BinlogInfo.ts_dimensions)
  return &ts_dimensions_;
}
inline const ::openmldb::api::TSDimension& BinlogInfo::ts_dimensions(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.BinlogInfo.ts_dimensions)
  return ts_dimensions_.Get(index);
}
inline ::openmldb::api::TSDimension* BinlogInfo::add_ts_dimensions() {
  // @@protoc_insertion_point(field_add:openmldb.api.BinlogInfo.ts_dimensions)
  return ts_dimensions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::TSDimension >&
BinlogInfo::ts_dimensions() const {
  // @@protoc_insertion_point(field_list:openmldb.api.BinlogInfo.ts_dimensions)
  return ts_dimensions_;
}

// optional int64 time = 3;
inline bool BinlogInfo::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BinlogInfo::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BinlogInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BinlogInfo::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 BinlogInfo::time() const {
  // @@protoc_insertion_point(field_get:openmldb.api.BinlogInfo.time)
  return time_;
}
inline void BinlogInfo::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.BinlogInfo.time)
}

// optional uint32 block_id = 4;
inline bool BinlogInfo::has_block_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BinlogInfo::set_has_block_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BinlogInfo::clear_has_block_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BinlogInfo::clear_block_id() {
  block_id_ = 0u;
  clear_has_block_id();
}
inline ::google::protobuf::uint32 BinlogInfo::block_id() const {
  // @@protoc_insertion_point(field_get:openmldb.api.BinlogInfo.block_id)
  return block_id_;
}
inline void BinlogInfo::set_block_id(::google::protobuf::uint32 value) {
  set_has_block_id();
  block_id_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.BinlogInfo.block_id)
}

// -------------------------------------------------------------------

// Segment_KeyEntries_KeyEntry_TimeEntry

// optional uint64 time = 1;
inline bool Segment_KeyEntries_KeyEntry_TimeEntry::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Segment_KeyEntries_KeyEntry_TimeEntry::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Segment_KeyEntries_KeyEntry_TimeEntry::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Segment_KeyEntries_KeyEntry_TimeEntry::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 Segment_KeyEntries_KeyEntry_TimeEntry::time() const {
  // @@protoc_insertion_point(field_get:openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry.time)
  return time_;
}
inline void Segment_KeyEntries_KeyEntry_TimeEntry::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry.time)
}

// optional uint32 block_id = 2;
inline bool Segment_KeyEntries_KeyEntry_TimeEntry::has_block_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Segment_KeyEntries_KeyEntry_TimeEntry::set_has_block_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Segment_KeyEntries_KeyEntry_TimeEntry::clear_has_block_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Segment_KeyEntries_KeyEntry_TimeEntry::clear_block_id() {
  block_id_ = 0u;
  clear_has_block_id();
}
inline ::google::protobuf::uint32 Segment_KeyEntries_KeyEntry_TimeEntry::block_id() const {
  // @@protoc_insertion_point(field_get:openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry.block_id)
  return block_id_;
}
inline void Segment_KeyEntries_KeyEntry_TimeEntry::set_block_id(::google::protobuf::uint32 value) {
  set_has_block_id();
  block_id_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry.block_id)
}

// -------------------------------------------------------------------

// Segment_KeyEntries_KeyEntry

// optional uint32 key_entry_id = 1;
inline bool Segment_KeyEntries_KeyEntry::has_key_entry_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Segment_KeyEntries_KeyEntry::set_has_key_entry_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Segment_KeyEntries_KeyEntry::clear_has_key_entry_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Segment_KeyEntries_KeyEntry::clear_key_entry_id() {
  key_entry_id_ = 0u;
  clear_has_key_entry_id();
}
inline ::google::protobuf::uint32 Segment_KeyEntries_KeyEntry::key_entry_id() const {
  // @@protoc_insertion_point(field_get:openmldb.api.Segment.KeyEntries.KeyEntry.key_entry_id)
  return key_entry_id_;
}
inline void Segment_KeyEntries_KeyEntry::set_key_entry_id(::google::protobuf::uint32 value) {
  set_has_key_entry_id();
  key_entry_id_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.Segment.KeyEntries.KeyEntry.key_entry_id)
}

// repeated .openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry time_entry = 2;
inline int Segment_KeyEntries_KeyEntry::time_entry_size() const {
  return time_entry_.size();
}
inline void Segment_KeyEntries_KeyEntry::clear_time_entry() {
  time_entry_.Clear();
}
inline ::openmldb::api::Segment_KeyEntries_KeyEntry_TimeEntry* Segment_KeyEntries_KeyEntry::mutable_time_entry(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.Segment.KeyEntries.KeyEntry.time_entry)
  return time_entry_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::Segment_KeyEntries_KeyEntry_TimeEntry >*
Segment_KeyEntries_KeyEntry::mutable_time_entry() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.Segment.KeyEntries.KeyEntry.time_entry)
  return &time_entry_;
}
inline const ::openmldb::api::Segment_KeyEntries_KeyEntry_TimeEntry& Segment_KeyEntries_KeyEntry::time_entry(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.Segment.KeyEntries.KeyEntry.time_entry)
  return time_entry_.Get(index);
}
inline ::openmldb::api::Segment_KeyEntries_KeyEntry_TimeEntry* Segment_KeyEntries_KeyEntry::add_time_entry() {
  // @@protoc_insertion_point(field_add:openmldb.api.Segment.KeyEntries.KeyEntry.time_entry)
  return time_entry_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::Segment_KeyEntries_KeyEntry_TimeEntry >&
Segment_KeyEntries_KeyEntry::time_entry() const {
  // @@protoc_insertion_point(field_list:openmldb.api.Segment.KeyEntries.KeyEntry.time_entry)
  return time_entry_;
}

// -------------------------------------------------------------------

// Segment_KeyEntries

// optional bytes key = 1;
inline bool Segment_KeyEntries::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Segment_KeyEntries::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Segment_KeyEntries::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Segment_KeyEntries::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& Segment_KeyEntries::key() const {
  // @@protoc_insertion_point(field_get:openmldb.api.Segment.KeyEntries.key)
  return key_.GetNoArena();
}
inline void Segment_KeyEntries::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.Segment.KeyEntries.key)
}
#if LANG_CXX11
inline void Segment_KeyEntries::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.Segment.KeyEntries.key)
}
#endif
inline void Segment_KeyEntries::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.Segment.KeyEntries.key)
}
inline void Segment_KeyEntries::set_key(const void* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.Segment.KeyEntries.key)
}
inline ::std::string* Segment_KeyEntries::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:openmldb.api.Segment.KeyEntries.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Segment_KeyEntries::release_key() {
  // @@protoc_insertion_point(field_release:openmldb.api.Segment.KeyEntries.key)
  if (!has_key()) {
    return NULL;
  }
  clear_has_key();
  return key_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Segment_KeyEntries::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.Segment.KeyEntries.key)
}

// repeated .openmldb.api.Segment.KeyEntries.KeyEntry key_entry = 2;
inline int Segment_KeyEntries::key_entry_size() const {
  return key_entry_.size();
}
inline void Segment_KeyEntries::clear_key_entry() {
  key_entry_.Clear();
}
inline ::openmldb::api::Segment_KeyEntries_KeyEntry* Segment_KeyEntries::mutable_key_entry(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.Segment.KeyEntries.key_entry)
  return key_entry_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::Segment_KeyEntries_KeyEntry >*
Segment_KeyEntries::mutable_key_entry() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.Segment.KeyEntries.key_entry)
  return &key_entry_;
}
inline const ::openmldb::api::Segment_KeyEntries_KeyEntry& Segment_KeyEntries::key_entry(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.Segment.KeyEntries.key_entry)
  return key_entry_.Get(index);
}
inline ::openmldb::api::Segment_KeyEntries_KeyEntry* Segment_KeyEntries::add_key_entry() {
  // @@protoc_insertion_point(field_add:openmldb.api.Segment.KeyEntries.key_entry)
  return key_entry_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::Segment_KeyEntries_KeyEntry >&
Segment_KeyEntries::key_entry() const {
  // @@protoc_insertion_point(field_list:openmldb.api.Segment.KeyEntries.key_entry)
  return key_entry_;
}

// -------------------------------------------------------------------

// Segment

// optional uint32 id = 1;
inline bool Segment::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Segment::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Segment::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Segment::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Segment::id() const {
  // @@protoc_insertion_point(field_get:openmldb.api.Segment.id)
  return id_;
}
inline void Segment::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.Segment.id)
}

// repeated .openmldb.api.Segment.KeyEntries key_entries = 2;
inline int Segment::key_entries_size() const {
  return key_entries_.size();
}
inline void Segment::clear_key_entries() {
  key_entries_.Clear();
}
inline ::openmldb::api::Segment_KeyEntries* Segment::mutable_key_entries(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.Segment.key_entries)
  return key_entries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::Segment_KeyEntries >*
Segment::mutable_key_entries() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.Segment.key_entries)
  return &key_entries_;
}
inline const ::openmldb::api::Segment_KeyEntries& Segment::key_entries(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.Segment.key_entries)
  return key_entries_.Get(index);
}
inline ::openmldb::api::Segment_KeyEntries* Segment::add_key_entries() {
  // @@protoc_insertion_point(field_add:openmldb.api.Segment.key_entries)
  return key_entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::Segment_KeyEntries >&
Segment::key_entries() const {
  // @@protoc_insertion_point(field_list:openmldb.api.Segment.key_entries)
  return key_entries_;
}

// -------------------------------------------------------------------

// BulkLoadIndex

// optional uint32 inner_index_id = 1;
inline bool BulkLoadIndex::has_inner_index_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BulkLoadIndex::set_has_inner_index_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BulkLoadIndex::clear_has_inner_index_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BulkLoadIndex::clear_inner_index_id() {
  inner_index_id_ = 0u;
  clear_has_inner_index_id();
}
inline ::google::protobuf::uint32 BulkLoadIndex::inner_index_id() const {
  // @@protoc_insertion_point(field_get:openmldb.api.BulkLoadIndex.inner_index_id)
  return inner_index_id_;
}
inline void BulkLoadIndex::set_inner_index_id(::google::protobuf::uint32 value) {
  set_has_inner_index_id();
  inner_index_id_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.BulkLoadIndex.inner_index_id)
}

// repeated .openmldb.api.Segment segment = 2;
inline int BulkLoadIndex::segment_size() const {
  return segment_.size();
}
inline void BulkLoadIndex::clear_segment() {
  segment_.Clear();
}
inline ::openmldb::api::Segment* BulkLoadIndex::mutable_segment(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.BulkLoadIndex.segment)
  return segment_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::Segment >*
BulkLoadIndex::mutable_segment() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.BulkLoadIndex.segment)
  return &segment_;
}
inline const ::openmldb::api::Segment& BulkLoadIndex::segment(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.BulkLoadIndex.segment)
  return segment_.Get(index);
}
inline ::openmldb::api::Segment* BulkLoadIndex::add_segment() {
  // @@protoc_insertion_point(field_add:openmldb.api.BulkLoadIndex.segment)
  return segment_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::Segment >&
BulkLoadIndex::segment() const {
  // @@protoc_insertion_point(field_list:openmldb.api.BulkLoadIndex.segment)
  return segment_;
}

// -------------------------------------------------------------------

// BulkLoadRequest

// optional uint32 tid = 1;
inline bool BulkLoadRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BulkLoadRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BulkLoadRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BulkLoadRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 BulkLoadRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.BulkLoadRequest.tid)
  return tid_;
}
inline void BulkLoadRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.BulkLoadRequest.tid)
}

// optional uint32 pid = 2;
inline bool BulkLoadRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BulkLoadRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BulkLoadRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BulkLoadRequest::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 BulkLoadRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.BulkLoadRequest.pid)
  return pid_;
}
inline void BulkLoadRequest::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.BulkLoadRequest.pid)
}

// optional int32 part_id = 3;
inline bool BulkLoadRequest::has_part_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BulkLoadRequest::set_has_part_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BulkLoadRequest::clear_has_part_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BulkLoadRequest::clear_part_id() {
  part_id_ = 0;
  clear_has_part_id();
}
inline ::google::protobuf::int32 BulkLoadRequest::part_id() const {
  // @@protoc_insertion_point(field_get:openmldb.api.BulkLoadRequest.part_id)
  return part_id_;
}
inline void BulkLoadRequest::set_part_id(::google::protobuf::int32 value) {
  set_has_part_id();
  part_id_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.BulkLoadRequest.part_id)
}

// repeated .openmldb.api.DataBlockInfo block_info = 4;
inline int BulkLoadRequest::block_info_size() const {
  return block_info_.size();
}
inline void BulkLoadRequest::clear_block_info() {
  block_info_.Clear();
}
inline ::openmldb::api::DataBlockInfo* BulkLoadRequest::mutable_block_info(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.BulkLoadRequest.block_info)
  return block_info_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::DataBlockInfo >*
BulkLoadRequest::mutable_block_info() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.BulkLoadRequest.block_info)
  return &block_info_;
}
inline const ::openmldb::api::DataBlockInfo& BulkLoadRequest::block_info(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.BulkLoadRequest.block_info)
  return block_info_.Get(index);
}
inline ::openmldb::api::DataBlockInfo* BulkLoadRequest::add_block_info() {
  // @@protoc_insertion_point(field_add:openmldb.api.BulkLoadRequest.block_info)
  return block_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::DataBlockInfo >&
BulkLoadRequest::block_info() const {
  // @@protoc_insertion_point(field_list:openmldb.api.BulkLoadRequest.block_info)
  return block_info_;
}

// repeated .openmldb.api.BinlogInfo binlog_info = 5;
inline int BulkLoadRequest::binlog_info_size() const {
  return binlog_info_.size();
}
inline void BulkLoadRequest::clear_binlog_info() {
  binlog_info_.Clear();
}
inline ::openmldb::api::BinlogInfo* BulkLoadRequest::mutable_binlog_info(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.BulkLoadRequest.binlog_info)
  return binlog_info_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::BinlogInfo >*
BulkLoadRequest::mutable_binlog_info() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.BulkLoadRequest.binlog_info)
  return &binlog_info_;
}
inline const ::openmldb::api::BinlogInfo& BulkLoadRequest::binlog_info(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.BulkLoadRequest.binlog_info)
  return binlog_info_.Get(index);
}
inline ::openmldb::api::BinlogInfo* BulkLoadRequest::add_binlog_info() {
  // @@protoc_insertion_point(field_add:openmldb.api.BulkLoadRequest.binlog_info)
  return binlog_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::BinlogInfo >&
BulkLoadRequest::binlog_info() const {
  // @@protoc_insertion_point(field_list:openmldb.api.BulkLoadRequest.binlog_info)
  return binlog_info_;
}

// repeated .openmldb.api.BulkLoadIndex index_region = 6;
inline int BulkLoadRequest::index_region_size() const {
  return index_region_.size();
}
inline void BulkLoadRequest::clear_index_region() {
  index_region_.Clear();
}
inline ::openmldb::api::BulkLoadIndex* BulkLoadRequest::mutable_index_region(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.BulkLoadRequest.index_region)
  return index_region_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadIndex >*
BulkLoadRequest::mutable_index_region() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.BulkLoadRequest.index_region)
  return &index_region_;
}
inline const ::openmldb::api::BulkLoadIndex& BulkLoadRequest::index_region(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.BulkLoadRequest.index_region)
  return index_region_.Get(index);
}
inline ::openmldb::api::BulkLoadIndex* BulkLoadRequest::add_index_region() {
  // @@protoc_insertion_point(field_add:openmldb.api.BulkLoadRequest.index_region)
  return index_region_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadIndex >&
BulkLoadRequest::index_region() const {
  // @@protoc_insertion_point(field_list:openmldb.api.BulkLoadRequest.index_region)
  return index_region_;
}

// optional bool eof = 7 [default = false];
inline bool BulkLoadRequest::has_eof() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BulkLoadRequest::set_has_eof() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BulkLoadRequest::clear_has_eof() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BulkLoadRequest::clear_eof() {
  eof_ = false;
  clear_has_eof();
}
inline bool BulkLoadRequest::eof() const {
  // @@protoc_insertion_point(field_get:openmldb.api.BulkLoadRequest.eof)
  return eof_;
}
inline void BulkLoadRequest::set_eof(bool value) {
  set_has_eof();
  eof_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.BulkLoadRequest.eof)
}

// -------------------------------------------------------------------

// BulkLoadInfoRequest

// optional uint32 tid = 1;
inline bool BulkLoadInfoRequest::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BulkLoadInfoRequest::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BulkLoadInfoRequest::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BulkLoadInfoRequest::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 BulkLoadInfoRequest::tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.BulkLoadInfoRequest.tid)
  return tid_;
}
inline void BulkLoadInfoRequest::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.BulkLoadInfoRequest.tid)
}

// optional uint32 pid = 2;
inline bool BulkLoadInfoRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BulkLoadInfoRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BulkLoadInfoRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BulkLoadInfoRequest::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 BulkLoadInfoRequest::pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.BulkLoadInfoRequest.pid)
  return pid_;
}
inline void BulkLoadInfoRequest::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.BulkLoadInfoRequest.pid)
}

// -------------------------------------------------------------------

// BulkLoadInfoResponse_InnerIndexSt_IndexDef

// optional int32 ts_idx = 1 [default = -1];
inline bool BulkLoadInfoResponse_InnerIndexSt_IndexDef::has_ts_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BulkLoadInfoResponse_InnerIndexSt_IndexDef::set_has_ts_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BulkLoadInfoResponse_InnerIndexSt_IndexDef::clear_has_ts_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BulkLoadInfoResponse_InnerIndexSt_IndexDef::clear_ts_idx() {
  ts_idx_ = -1;
  clear_has_ts_idx();
}
inline ::google::protobuf::int32 BulkLoadInfoResponse_InnerIndexSt_IndexDef::ts_idx() const {
  // @@protoc_insertion_point(field_get:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef.ts_idx)
  return ts_idx_;
}
inline void BulkLoadInfoResponse_InnerIndexSt_IndexDef::set_ts_idx(::google::protobuf::int32 value) {
  set_has_ts_idx();
  ts_idx_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef.ts_idx)
}

// optional bool is_ready = 2;
inline bool BulkLoadInfoResponse_InnerIndexSt_IndexDef::has_is_ready() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BulkLoadInfoResponse_InnerIndexSt_IndexDef::set_has_is_ready() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BulkLoadInfoResponse_InnerIndexSt_IndexDef::clear_has_is_ready() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BulkLoadInfoResponse_InnerIndexSt_IndexDef::clear_is_ready() {
  is_ready_ = false;
  clear_has_is_ready();
}
inline bool BulkLoadInfoResponse_InnerIndexSt_IndexDef::is_ready() const {
  // @@protoc_insertion_point(field_get:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef.is_ready)
  return is_ready_;
}
inline void BulkLoadInfoResponse_InnerIndexSt_IndexDef::set_is_ready(bool value) {
  set_has_is_ready();
  is_ready_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef.is_ready)
}

// -------------------------------------------------------------------

// BulkLoadInfoResponse_InnerIndexSt

// repeated .openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef index_def = 1;
inline int BulkLoadInfoResponse_InnerIndexSt::index_def_size() const {
  return index_def_.size();
}
inline void BulkLoadInfoResponse_InnerIndexSt::clear_index_def() {
  index_def_.Clear();
}
inline ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt_IndexDef* BulkLoadInfoResponse_InnerIndexSt::mutable_index_def(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.index_def)
  return index_def_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt_IndexDef >*
BulkLoadInfoResponse_InnerIndexSt::mutable_index_def() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.index_def)
  return &index_def_;
}
inline const ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt_IndexDef& BulkLoadInfoResponse_InnerIndexSt::index_def(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.index_def)
  return index_def_.Get(index);
}
inline ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt_IndexDef* BulkLoadInfoResponse_InnerIndexSt::add_index_def() {
  // @@protoc_insertion_point(field_add:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.index_def)
  return index_def_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt_IndexDef >&
BulkLoadInfoResponse_InnerIndexSt::index_def() const {
  // @@protoc_insertion_point(field_list:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.index_def)
  return index_def_;
}

// -------------------------------------------------------------------

// BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry

// required uint32 key = 1;
inline bool BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::key() const {
  // @@protoc_insertion_point(field_get:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry.key)
  return key_;
}
inline void BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry.key)
}

// required uint32 value = 2;
inline bool BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::value() const {
  // @@protoc_insertion_point(field_get:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry.value)
  return value_;
}
inline void BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry.value)
}

// -------------------------------------------------------------------

// BulkLoadInfoResponse_InnerSegments_Segment

// optional uint32 ts_cnt = 1;
inline bool BulkLoadInfoResponse_InnerSegments_Segment::has_ts_cnt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BulkLoadInfoResponse_InnerSegments_Segment::set_has_ts_cnt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BulkLoadInfoResponse_InnerSegments_Segment::clear_has_ts_cnt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BulkLoadInfoResponse_InnerSegments_Segment::clear_ts_cnt() {
  ts_cnt_ = 0u;
  clear_has_ts_cnt();
}
inline ::google::protobuf::uint32 BulkLoadInfoResponse_InnerSegments_Segment::ts_cnt() const {
  // @@protoc_insertion_point(field_get:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.ts_cnt)
  return ts_cnt_;
}
inline void BulkLoadInfoResponse_InnerSegments_Segment::set_ts_cnt(::google::protobuf::uint32 value) {
  set_has_ts_cnt();
  ts_cnt_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.ts_cnt)
}

// repeated .openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry ts_idx_map = 2;
inline int BulkLoadInfoResponse_InnerSegments_Segment::ts_idx_map_size() const {
  return ts_idx_map_.size();
}
inline void BulkLoadInfoResponse_InnerSegments_Segment::clear_ts_idx_map() {
  ts_idx_map_.Clear();
}
inline ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry* BulkLoadInfoResponse_InnerSegments_Segment::mutable_ts_idx_map(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.ts_idx_map)
  return ts_idx_map_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry >*
BulkLoadInfoResponse_InnerSegments_Segment::mutable_ts_idx_map() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.ts_idx_map)
  return &ts_idx_map_;
}
inline const ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry& BulkLoadInfoResponse_InnerSegments_Segment::ts_idx_map(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.ts_idx_map)
  return ts_idx_map_.Get(index);
}
inline ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry* BulkLoadInfoResponse_InnerSegments_Segment::add_ts_idx_map() {
  // @@protoc_insertion_point(field_add:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.ts_idx_map)
  return ts_idx_map_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry >&
BulkLoadInfoResponse_InnerSegments_Segment::ts_idx_map() const {
  // @@protoc_insertion_point(field_list:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.ts_idx_map)
  return ts_idx_map_;
}

// -------------------------------------------------------------------

// BulkLoadInfoResponse_InnerSegments

// repeated .openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment segment = 1;
inline int BulkLoadInfoResponse_InnerSegments::segment_size() const {
  return segment_.size();
}
inline void BulkLoadInfoResponse_InnerSegments::clear_segment() {
  segment_.Clear();
}
inline ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment* BulkLoadInfoResponse_InnerSegments::mutable_segment(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.BulkLoadInfoResponse.InnerSegments.segment)
  return segment_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment >*
BulkLoadInfoResponse_InnerSegments::mutable_segment() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.BulkLoadInfoResponse.InnerSegments.segment)
  return &segment_;
}
inline const ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment& BulkLoadInfoResponse_InnerSegments::segment(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.BulkLoadInfoResponse.InnerSegments.segment)
  return segment_.Get(index);
}
inline ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment* BulkLoadInfoResponse_InnerSegments::add_segment() {
  // @@protoc_insertion_point(field_add:openmldb.api.BulkLoadInfoResponse.InnerSegments.segment)
  return segment_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment >&
BulkLoadInfoResponse_InnerSegments::segment() const {
  // @@protoc_insertion_point(field_list:openmldb.api.BulkLoadInfoResponse.InnerSegments.segment)
  return segment_;
}

// -------------------------------------------------------------------

// BulkLoadInfoResponse

// optional int32 code = 1;
inline bool BulkLoadInfoResponse::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BulkLoadInfoResponse::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BulkLoadInfoResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BulkLoadInfoResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 BulkLoadInfoResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.BulkLoadInfoResponse.code)
  return code_;
}
inline void BulkLoadInfoResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.BulkLoadInfoResponse.code)
}

// optional string msg = 2;
inline bool BulkLoadInfoResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BulkLoadInfoResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BulkLoadInfoResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BulkLoadInfoResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& BulkLoadInfoResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.BulkLoadInfoResponse.msg)
  return msg_.GetNoArena();
}
inline void BulkLoadInfoResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.BulkLoadInfoResponse.msg)
}
#if LANG_CXX11
inline void BulkLoadInfoResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.BulkLoadInfoResponse.msg)
}
#endif
inline void BulkLoadInfoResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.BulkLoadInfoResponse.msg)
}
inline void BulkLoadInfoResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.BulkLoadInfoResponse.msg)
}
inline ::std::string* BulkLoadInfoResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.BulkLoadInfoResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulkLoadInfoResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.BulkLoadInfoResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulkLoadInfoResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.BulkLoadInfoResponse.msg)
}

// optional uint32 seg_cnt = 3;
inline bool BulkLoadInfoResponse::has_seg_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BulkLoadInfoResponse::set_has_seg_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BulkLoadInfoResponse::clear_has_seg_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BulkLoadInfoResponse::clear_seg_cnt() {
  seg_cnt_ = 0u;
  clear_has_seg_cnt();
}
inline ::google::protobuf::uint32 BulkLoadInfoResponse::seg_cnt() const {
  // @@protoc_insertion_point(field_get:openmldb.api.BulkLoadInfoResponse.seg_cnt)
  return seg_cnt_;
}
inline void BulkLoadInfoResponse::set_seg_cnt(::google::protobuf::uint32 value) {
  set_has_seg_cnt();
  seg_cnt_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.BulkLoadInfoResponse.seg_cnt)
}

// repeated int32 inner_index_pos = 4;
inline int BulkLoadInfoResponse::inner_index_pos_size() const {
  return inner_index_pos_.size();
}
inline void BulkLoadInfoResponse::clear_inner_index_pos() {
  inner_index_pos_.Clear();
}
inline ::google::protobuf::int32 BulkLoadInfoResponse::inner_index_pos(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.BulkLoadInfoResponse.inner_index_pos)
  return inner_index_pos_.Get(index);
}
inline void BulkLoadInfoResponse::set_inner_index_pos(int index, ::google::protobuf::int32 value) {
  inner_index_pos_.Set(index, value);
  // @@protoc_insertion_point(field_set:openmldb.api.BulkLoadInfoResponse.inner_index_pos)
}
inline void BulkLoadInfoResponse::add_inner_index_pos(::google::protobuf::int32 value) {
  inner_index_pos_.Add(value);
  // @@protoc_insertion_point(field_add:openmldb.api.BulkLoadInfoResponse.inner_index_pos)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BulkLoadInfoResponse::inner_index_pos() const {
  // @@protoc_insertion_point(field_list:openmldb.api.BulkLoadInfoResponse.inner_index_pos)
  return inner_index_pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BulkLoadInfoResponse::mutable_inner_index_pos() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.BulkLoadInfoResponse.inner_index_pos)
  return &inner_index_pos_;
}

// repeated .openmldb.api.BulkLoadInfoResponse.InnerIndexSt inner_index = 5;
inline int BulkLoadInfoResponse::inner_index_size() const {
  return inner_index_.size();
}
inline void BulkLoadInfoResponse::clear_inner_index() {
  inner_index_.Clear();
}
inline ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt* BulkLoadInfoResponse::mutable_inner_index(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.BulkLoadInfoResponse.inner_index)
  return inner_index_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt >*
BulkLoadInfoResponse::mutable_inner_index() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.BulkLoadInfoResponse.inner_index)
  return &inner_index_;
}
inline const ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt& BulkLoadInfoResponse::inner_index(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.BulkLoadInfoResponse.inner_index)
  return inner_index_.Get(index);
}
inline ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt* BulkLoadInfoResponse::add_inner_index() {
  // @@protoc_insertion_point(field_add:openmldb.api.BulkLoadInfoResponse.inner_index)
  return inner_index_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt >&
BulkLoadInfoResponse::inner_index() const {
  // @@protoc_insertion_point(field_list:openmldb.api.BulkLoadInfoResponse.inner_index)
  return inner_index_;
}

// repeated .openmldb.api.BulkLoadInfoResponse.InnerSegments inner_segments = 6;
inline int BulkLoadInfoResponse::inner_segments_size() const {
  return inner_segments_.size();
}
inline void BulkLoadInfoResponse::clear_inner_segments() {
  inner_segments_.Clear();
}
inline ::openmldb::api::BulkLoadInfoResponse_InnerSegments* BulkLoadInfoResponse::mutable_inner_segments(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.BulkLoadInfoResponse.inner_segments)
  return inner_segments_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadInfoResponse_InnerSegments >*
BulkLoadInfoResponse::mutable_inner_segments() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.BulkLoadInfoResponse.inner_segments)
  return &inner_segments_;
}
inline const ::openmldb::api::BulkLoadInfoResponse_InnerSegments& BulkLoadInfoResponse::inner_segments(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.BulkLoadInfoResponse.inner_segments)
  return inner_segments_.Get(index);
}
inline ::openmldb::api::BulkLoadInfoResponse_InnerSegments* BulkLoadInfoResponse::add_inner_segments() {
  // @@protoc_insertion_point(field_add:openmldb.api.BulkLoadInfoResponse.inner_segments)
  return inner_segments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::BulkLoadInfoResponse_InnerSegments >&
BulkLoadInfoResponse::inner_segments() const {
  // @@protoc_insertion_point(field_list:openmldb.api.BulkLoadInfoResponse.inner_segments)
  return inner_segments_;
}

// -------------------------------------------------------------------

// CreateFunctionRequest

// optional .openmldb.common.ExternalFun fun = 1;
inline bool CreateFunctionRequest::has_fun() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateFunctionRequest::set_has_fun() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateFunctionRequest::clear_has_fun() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::openmldb::common::ExternalFun& CreateFunctionRequest::_internal_fun() const {
  return *fun_;
}
inline const ::openmldb::common::ExternalFun& CreateFunctionRequest::fun() const {
  const ::openmldb::common::ExternalFun* p = fun_;
  // @@protoc_insertion_point(field_get:openmldb.api.CreateFunctionRequest.fun)
  return p != NULL ? *p : *reinterpret_cast<const ::openmldb::common::ExternalFun*>(
      &::openmldb::common::_ExternalFun_default_instance_);
}
inline ::openmldb::common::ExternalFun* CreateFunctionRequest::release_fun() {
  // @@protoc_insertion_point(field_release:openmldb.api.CreateFunctionRequest.fun)
  clear_has_fun();
  ::openmldb::common::ExternalFun* temp = fun_;
  fun_ = NULL;
  return temp;
}
inline ::openmldb::common::ExternalFun* CreateFunctionRequest::mutable_fun() {
  set_has_fun();
  if (fun_ == NULL) {
    auto* p = CreateMaybeMessage<::openmldb::common::ExternalFun>(GetArenaNoVirtual());
    fun_ = p;
  }
  // @@protoc_insertion_point(field_mutable:openmldb.api.CreateFunctionRequest.fun)
  return fun_;
}
inline void CreateFunctionRequest::set_allocated_fun(::openmldb::common::ExternalFun* fun) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(fun_);
  }
  if (fun) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fun = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fun, submessage_arena);
    }
    set_has_fun();
  } else {
    clear_has_fun();
  }
  fun_ = fun;
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.CreateFunctionRequest.fun)
}

// -------------------------------------------------------------------

// CreateFunctionResponse

// optional int32 code = 1;
inline bool CreateFunctionResponse::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateFunctionResponse::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateFunctionResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateFunctionResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 CreateFunctionResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CreateFunctionResponse.code)
  return code_;
}
inline void CreateFunctionResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.CreateFunctionResponse.code)
}

// optional string msg = 2;
inline bool CreateFunctionResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateFunctionResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateFunctionResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateFunctionResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& CreateFunctionResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CreateFunctionResponse.msg)
  return msg_.GetNoArena();
}
inline void CreateFunctionResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.CreateFunctionResponse.msg)
}
#if LANG_CXX11
inline void CreateFunctionResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.CreateFunctionResponse.msg)
}
#endif
inline void CreateFunctionResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.CreateFunctionResponse.msg)
}
inline void CreateFunctionResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.CreateFunctionResponse.msg)
}
inline ::std::string* CreateFunctionResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.CreateFunctionResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateFunctionResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.CreateFunctionResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateFunctionResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.CreateFunctionResponse.msg)
}

// -------------------------------------------------------------------

// DropFunctionRequest

// optional .openmldb.common.ExternalFun fun = 1;
inline bool DropFunctionRequest::has_fun() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DropFunctionRequest::set_has_fun() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DropFunctionRequest::clear_has_fun() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::openmldb::common::ExternalFun& DropFunctionRequest::_internal_fun() const {
  return *fun_;
}
inline const ::openmldb::common::ExternalFun& DropFunctionRequest::fun() const {
  const ::openmldb::common::ExternalFun* p = fun_;
  // @@protoc_insertion_point(field_get:openmldb.api.DropFunctionRequest.fun)
  return p != NULL ? *p : *reinterpret_cast<const ::openmldb::common::ExternalFun*>(
      &::openmldb::common::_ExternalFun_default_instance_);
}
inline ::openmldb::common::ExternalFun* DropFunctionRequest::release_fun() {
  // @@protoc_insertion_point(field_release:openmldb.api.DropFunctionRequest.fun)
  clear_has_fun();
  ::openmldb::common::ExternalFun* temp = fun_;
  fun_ = NULL;
  return temp;
}
inline ::openmldb::common::ExternalFun* DropFunctionRequest::mutable_fun() {
  set_has_fun();
  if (fun_ == NULL) {
    auto* p = CreateMaybeMessage<::openmldb::common::ExternalFun>(GetArenaNoVirtual());
    fun_ = p;
  }
  // @@protoc_insertion_point(field_mutable:openmldb.api.DropFunctionRequest.fun)
  return fun_;
}
inline void DropFunctionRequest::set_allocated_fun(::openmldb::common::ExternalFun* fun) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(fun_);
  }
  if (fun) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fun = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fun, submessage_arena);
    }
    set_has_fun();
  } else {
    clear_has_fun();
  }
  fun_ = fun;
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.DropFunctionRequest.fun)
}

// -------------------------------------------------------------------

// DropFunctionResponse

// optional int32 code = 1;
inline bool DropFunctionResponse::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DropFunctionResponse::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DropFunctionResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DropFunctionResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 DropFunctionResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.DropFunctionResponse.code)
  return code_;
}
inline void DropFunctionResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.DropFunctionResponse.code)
}

// optional string msg = 2;
inline bool DropFunctionResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DropFunctionResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DropFunctionResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DropFunctionResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& DropFunctionResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.DropFunctionResponse.msg)
  return msg_.GetNoArena();
}
inline void DropFunctionResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.DropFunctionResponse.msg)
}
#if LANG_CXX11
inline void DropFunctionResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.DropFunctionResponse.msg)
}
#endif
inline void DropFunctionResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.DropFunctionResponse.msg)
}
inline void DropFunctionResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.DropFunctionResponse.msg)
}
inline ::std::string* DropFunctionResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.DropFunctionResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DropFunctionResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.DropFunctionResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DropFunctionResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.DropFunctionResponse.msg)
}

// -------------------------------------------------------------------

// CreateAggregatorRequest

// optional .openmldb.api.TableMeta base_table_meta = 1;
inline bool CreateAggregatorRequest::has_base_table_meta() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreateAggregatorRequest::set_has_base_table_meta() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreateAggregatorRequest::clear_has_base_table_meta() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreateAggregatorRequest::clear_base_table_meta() {
  if (base_table_meta_ != NULL) base_table_meta_->Clear();
  clear_has_base_table_meta();
}
inline const ::openmldb::api::TableMeta& CreateAggregatorRequest::_internal_base_table_meta() const {
  return *base_table_meta_;
}
inline const ::openmldb::api::TableMeta& CreateAggregatorRequest::base_table_meta() const {
  const ::openmldb::api::TableMeta* p = base_table_meta_;
  // @@protoc_insertion_point(field_get:openmldb.api.CreateAggregatorRequest.base_table_meta)
  return p != NULL ? *p : *reinterpret_cast<const ::openmldb::api::TableMeta*>(
      &::openmldb::api::_TableMeta_default_instance_);
}
inline ::openmldb::api::TableMeta* CreateAggregatorRequest::release_base_table_meta() {
  // @@protoc_insertion_point(field_release:openmldb.api.CreateAggregatorRequest.base_table_meta)
  clear_has_base_table_meta();
  ::openmldb::api::TableMeta* temp = base_table_meta_;
  base_table_meta_ = NULL;
  return temp;
}
inline ::openmldb::api::TableMeta* CreateAggregatorRequest::mutable_base_table_meta() {
  set_has_base_table_meta();
  if (base_table_meta_ == NULL) {
    auto* p = CreateMaybeMessage<::openmldb::api::TableMeta>(GetArenaNoVirtual());
    base_table_meta_ = p;
  }
  // @@protoc_insertion_point(field_mutable:openmldb.api.CreateAggregatorRequest.base_table_meta)
  return base_table_meta_;
}
inline void CreateAggregatorRequest::set_allocated_base_table_meta(::openmldb::api::TableMeta* base_table_meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete base_table_meta_;
  }
  if (base_table_meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      base_table_meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, base_table_meta, submessage_arena);
    }
    set_has_base_table_meta();
  } else {
    clear_has_base_table_meta();
  }
  base_table_meta_ = base_table_meta;
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.CreateAggregatorRequest.base_table_meta)
}

// optional uint32 aggr_table_tid = 2;
inline bool CreateAggregatorRequest::has_aggr_table_tid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CreateAggregatorRequest::set_has_aggr_table_tid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CreateAggregatorRequest::clear_has_aggr_table_tid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CreateAggregatorRequest::clear_aggr_table_tid() {
  aggr_table_tid_ = 0u;
  clear_has_aggr_table_tid();
}
inline ::google::protobuf::uint32 CreateAggregatorRequest::aggr_table_tid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CreateAggregatorRequest.aggr_table_tid)
  return aggr_table_tid_;
}
inline void CreateAggregatorRequest::set_aggr_table_tid(::google::protobuf::uint32 value) {
  set_has_aggr_table_tid();
  aggr_table_tid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.CreateAggregatorRequest.aggr_table_tid)
}

// optional uint32 aggr_table_pid = 3;
inline bool CreateAggregatorRequest::has_aggr_table_pid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CreateAggregatorRequest::set_has_aggr_table_pid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CreateAggregatorRequest::clear_has_aggr_table_pid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CreateAggregatorRequest::clear_aggr_table_pid() {
  aggr_table_pid_ = 0u;
  clear_has_aggr_table_pid();
}
inline ::google::protobuf::uint32 CreateAggregatorRequest::aggr_table_pid() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CreateAggregatorRequest.aggr_table_pid)
  return aggr_table_pid_;
}
inline void CreateAggregatorRequest::set_aggr_table_pid(::google::protobuf::uint32 value) {
  set_has_aggr_table_pid();
  aggr_table_pid_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.CreateAggregatorRequest.aggr_table_pid)
}

// optional uint32 index_pos = 4;
inline bool CreateAggregatorRequest::has_index_pos() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CreateAggregatorRequest::set_has_index_pos() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CreateAggregatorRequest::clear_has_index_pos() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CreateAggregatorRequest::clear_index_pos() {
  index_pos_ = 0u;
  clear_has_index_pos();
}
inline ::google::protobuf::uint32 CreateAggregatorRequest::index_pos() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CreateAggregatorRequest.index_pos)
  return index_pos_;
}
inline void CreateAggregatorRequest::set_index_pos(::google::protobuf::uint32 value) {
  set_has_index_pos();
  index_pos_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.CreateAggregatorRequest.index_pos)
}

// optional string aggr_func = 5;
inline bool CreateAggregatorRequest::has_aggr_func() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateAggregatorRequest::set_has_aggr_func() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateAggregatorRequest::clear_has_aggr_func() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateAggregatorRequest::clear_aggr_func() {
  aggr_func_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_aggr_func();
}
inline const ::std::string& CreateAggregatorRequest::aggr_func() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CreateAggregatorRequest.aggr_func)
  return aggr_func_.GetNoArena();
}
inline void CreateAggregatorRequest::set_aggr_func(const ::std::string& value) {
  set_has_aggr_func();
  aggr_func_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.CreateAggregatorRequest.aggr_func)
}
#if LANG_CXX11
inline void CreateAggregatorRequest::set_aggr_func(::std::string&& value) {
  set_has_aggr_func();
  aggr_func_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.CreateAggregatorRequest.aggr_func)
}
#endif
inline void CreateAggregatorRequest::set_aggr_func(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_aggr_func();
  aggr_func_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.CreateAggregatorRequest.aggr_func)
}
inline void CreateAggregatorRequest::set_aggr_func(const char* value, size_t size) {
  set_has_aggr_func();
  aggr_func_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.CreateAggregatorRequest.aggr_func)
}
inline ::std::string* CreateAggregatorRequest::mutable_aggr_func() {
  set_has_aggr_func();
  // @@protoc_insertion_point(field_mutable:openmldb.api.CreateAggregatorRequest.aggr_func)
  return aggr_func_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateAggregatorRequest::release_aggr_func() {
  // @@protoc_insertion_point(field_release:openmldb.api.CreateAggregatorRequest.aggr_func)
  if (!has_aggr_func()) {
    return NULL;
  }
  clear_has_aggr_func();
  return aggr_func_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateAggregatorRequest::set_allocated_aggr_func(::std::string* aggr_func) {
  if (aggr_func != NULL) {
    set_has_aggr_func();
  } else {
    clear_has_aggr_func();
  }
  aggr_func_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), aggr_func);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.CreateAggregatorRequest.aggr_func)
}

// optional string aggr_col = 6;
inline bool CreateAggregatorRequest::has_aggr_col() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateAggregatorRequest::set_has_aggr_col() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateAggregatorRequest::clear_has_aggr_col() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateAggregatorRequest::clear_aggr_col() {
  aggr_col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_aggr_col();
}
inline const ::std::string& CreateAggregatorRequest::aggr_col() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CreateAggregatorRequest.aggr_col)
  return aggr_col_.GetNoArena();
}
inline void CreateAggregatorRequest::set_aggr_col(const ::std::string& value) {
  set_has_aggr_col();
  aggr_col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.CreateAggregatorRequest.aggr_col)
}
#if LANG_CXX11
inline void CreateAggregatorRequest::set_aggr_col(::std::string&& value) {
  set_has_aggr_col();
  aggr_col_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.CreateAggregatorRequest.aggr_col)
}
#endif
inline void CreateAggregatorRequest::set_aggr_col(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_aggr_col();
  aggr_col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.CreateAggregatorRequest.aggr_col)
}
inline void CreateAggregatorRequest::set_aggr_col(const char* value, size_t size) {
  set_has_aggr_col();
  aggr_col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.CreateAggregatorRequest.aggr_col)
}
inline ::std::string* CreateAggregatorRequest::mutable_aggr_col() {
  set_has_aggr_col();
  // @@protoc_insertion_point(field_mutable:openmldb.api.CreateAggregatorRequest.aggr_col)
  return aggr_col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateAggregatorRequest::release_aggr_col() {
  // @@protoc_insertion_point(field_release:openmldb.api.CreateAggregatorRequest.aggr_col)
  if (!has_aggr_col()) {
    return NULL;
  }
  clear_has_aggr_col();
  return aggr_col_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateAggregatorRequest::set_allocated_aggr_col(::std::string* aggr_col) {
  if (aggr_col != NULL) {
    set_has_aggr_col();
  } else {
    clear_has_aggr_col();
  }
  aggr_col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), aggr_col);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.CreateAggregatorRequest.aggr_col)
}

// optional string order_by_col = 7;
inline bool CreateAggregatorRequest::has_order_by_col() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateAggregatorRequest::set_has_order_by_col() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateAggregatorRequest::clear_has_order_by_col() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateAggregatorRequest::clear_order_by_col() {
  order_by_col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_order_by_col();
}
inline const ::std::string& CreateAggregatorRequest::order_by_col() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CreateAggregatorRequest.order_by_col)
  return order_by_col_.GetNoArena();
}
inline void CreateAggregatorRequest::set_order_by_col(const ::std::string& value) {
  set_has_order_by_col();
  order_by_col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.CreateAggregatorRequest.order_by_col)
}
#if LANG_CXX11
inline void CreateAggregatorRequest::set_order_by_col(::std::string&& value) {
  set_has_order_by_col();
  order_by_col_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.CreateAggregatorRequest.order_by_col)
}
#endif
inline void CreateAggregatorRequest::set_order_by_col(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_order_by_col();
  order_by_col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.CreateAggregatorRequest.order_by_col)
}
inline void CreateAggregatorRequest::set_order_by_col(const char* value, size_t size) {
  set_has_order_by_col();
  order_by_col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.CreateAggregatorRequest.order_by_col)
}
inline ::std::string* CreateAggregatorRequest::mutable_order_by_col() {
  set_has_order_by_col();
  // @@protoc_insertion_point(field_mutable:openmldb.api.CreateAggregatorRequest.order_by_col)
  return order_by_col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateAggregatorRequest::release_order_by_col() {
  // @@protoc_insertion_point(field_release:openmldb.api.CreateAggregatorRequest.order_by_col)
  if (!has_order_by_col()) {
    return NULL;
  }
  clear_has_order_by_col();
  return order_by_col_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateAggregatorRequest::set_allocated_order_by_col(::std::string* order_by_col) {
  if (order_by_col != NULL) {
    set_has_order_by_col();
  } else {
    clear_has_order_by_col();
  }
  order_by_col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_by_col);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.CreateAggregatorRequest.order_by_col)
}

// optional string bucket_size = 8;
inline bool CreateAggregatorRequest::has_bucket_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateAggregatorRequest::set_has_bucket_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateAggregatorRequest::clear_has_bucket_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateAggregatorRequest::clear_bucket_size() {
  bucket_size_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bucket_size();
}
inline const ::std::string& CreateAggregatorRequest::bucket_size() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CreateAggregatorRequest.bucket_size)
  return bucket_size_.GetNoArena();
}
inline void CreateAggregatorRequest::set_bucket_size(const ::std::string& value) {
  set_has_bucket_size();
  bucket_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.CreateAggregatorRequest.bucket_size)
}
#if LANG_CXX11
inline void CreateAggregatorRequest::set_bucket_size(::std::string&& value) {
  set_has_bucket_size();
  bucket_size_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.CreateAggregatorRequest.bucket_size)
}
#endif
inline void CreateAggregatorRequest::set_bucket_size(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bucket_size();
  bucket_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.CreateAggregatorRequest.bucket_size)
}
inline void CreateAggregatorRequest::set_bucket_size(const char* value, size_t size) {
  set_has_bucket_size();
  bucket_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.CreateAggregatorRequest.bucket_size)
}
inline ::std::string* CreateAggregatorRequest::mutable_bucket_size() {
  set_has_bucket_size();
  // @@protoc_insertion_point(field_mutable:openmldb.api.CreateAggregatorRequest.bucket_size)
  return bucket_size_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateAggregatorRequest::release_bucket_size() {
  // @@protoc_insertion_point(field_release:openmldb.api.CreateAggregatorRequest.bucket_size)
  if (!has_bucket_size()) {
    return NULL;
  }
  clear_has_bucket_size();
  return bucket_size_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateAggregatorRequest::set_allocated_bucket_size(::std::string* bucket_size) {
  if (bucket_size != NULL) {
    set_has_bucket_size();
  } else {
    clear_has_bucket_size();
  }
  bucket_size_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bucket_size);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.CreateAggregatorRequest.bucket_size)
}

// optional string filter_col = 9;
inline bool CreateAggregatorRequest::has_filter_col() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreateAggregatorRequest::set_has_filter_col() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreateAggregatorRequest::clear_has_filter_col() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreateAggregatorRequest::clear_filter_col() {
  filter_col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filter_col();
}
inline const ::std::string& CreateAggregatorRequest::filter_col() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CreateAggregatorRequest.filter_col)
  return filter_col_.GetNoArena();
}
inline void CreateAggregatorRequest::set_filter_col(const ::std::string& value) {
  set_has_filter_col();
  filter_col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.CreateAggregatorRequest.filter_col)
}
#if LANG_CXX11
inline void CreateAggregatorRequest::set_filter_col(::std::string&& value) {
  set_has_filter_col();
  filter_col_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.CreateAggregatorRequest.filter_col)
}
#endif
inline void CreateAggregatorRequest::set_filter_col(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_filter_col();
  filter_col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.CreateAggregatorRequest.filter_col)
}
inline void CreateAggregatorRequest::set_filter_col(const char* value, size_t size) {
  set_has_filter_col();
  filter_col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.CreateAggregatorRequest.filter_col)
}
inline ::std::string* CreateAggregatorRequest::mutable_filter_col() {
  set_has_filter_col();
  // @@protoc_insertion_point(field_mutable:openmldb.api.CreateAggregatorRequest.filter_col)
  return filter_col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateAggregatorRequest::release_filter_col() {
  // @@protoc_insertion_point(field_release:openmldb.api.CreateAggregatorRequest.filter_col)
  if (!has_filter_col()) {
    return NULL;
  }
  clear_has_filter_col();
  return filter_col_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateAggregatorRequest::set_allocated_filter_col(::std::string* filter_col) {
  if (filter_col != NULL) {
    set_has_filter_col();
  } else {
    clear_has_filter_col();
  }
  filter_col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter_col);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.CreateAggregatorRequest.filter_col)
}

// -------------------------------------------------------------------

// CreateAggregatorResponse

// optional int32 code = 1;
inline bool CreateAggregatorResponse::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateAggregatorResponse::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateAggregatorResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateAggregatorResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 CreateAggregatorResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CreateAggregatorResponse.code)
  return code_;
}
inline void CreateAggregatorResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.CreateAggregatorResponse.code)
}

// optional string msg = 2;
inline bool CreateAggregatorResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateAggregatorResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateAggregatorResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateAggregatorResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& CreateAggregatorResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.CreateAggregatorResponse.msg)
  return msg_.GetNoArena();
}
inline void CreateAggregatorResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.CreateAggregatorResponse.msg)
}
#if LANG_CXX11
inline void CreateAggregatorResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.CreateAggregatorResponse.msg)
}
#endif
inline void CreateAggregatorResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.CreateAggregatorResponse.msg)
}
inline void CreateAggregatorResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.CreateAggregatorResponse.msg)
}
inline ::std::string* CreateAggregatorResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.CreateAggregatorResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateAggregatorResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.CreateAggregatorResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateAggregatorResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.CreateAggregatorResponse.msg)
}

// -------------------------------------------------------------------

// GAFDeployStatsRequest

// -------------------------------------------------------------------

// DeployStatsResponse_DeployStat

// required string deploy_name = 1;
inline bool DeployStatsResponse_DeployStat::has_deploy_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeployStatsResponse_DeployStat::set_has_deploy_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeployStatsResponse_DeployStat::clear_has_deploy_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeployStatsResponse_DeployStat::clear_deploy_name() {
  deploy_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deploy_name();
}
inline const ::std::string& DeployStatsResponse_DeployStat::deploy_name() const {
  // @@protoc_insertion_point(field_get:openmldb.api.DeployStatsResponse.DeployStat.deploy_name)
  return deploy_name_.GetNoArena();
}
inline void DeployStatsResponse_DeployStat::set_deploy_name(const ::std::string& value) {
  set_has_deploy_name();
  deploy_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.DeployStatsResponse.DeployStat.deploy_name)
}
#if LANG_CXX11
inline void DeployStatsResponse_DeployStat::set_deploy_name(::std::string&& value) {
  set_has_deploy_name();
  deploy_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.DeployStatsResponse.DeployStat.deploy_name)
}
#endif
inline void DeployStatsResponse_DeployStat::set_deploy_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_deploy_name();
  deploy_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.DeployStatsResponse.DeployStat.deploy_name)
}
inline void DeployStatsResponse_DeployStat::set_deploy_name(const char* value, size_t size) {
  set_has_deploy_name();
  deploy_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.DeployStatsResponse.DeployStat.deploy_name)
}
inline ::std::string* DeployStatsResponse_DeployStat::mutable_deploy_name() {
  set_has_deploy_name();
  // @@protoc_insertion_point(field_mutable:openmldb.api.DeployStatsResponse.DeployStat.deploy_name)
  return deploy_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeployStatsResponse_DeployStat::release_deploy_name() {
  // @@protoc_insertion_point(field_release:openmldb.api.DeployStatsResponse.DeployStat.deploy_name)
  if (!has_deploy_name()) {
    return NULL;
  }
  clear_has_deploy_name();
  return deploy_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeployStatsResponse_DeployStat::set_allocated_deploy_name(::std::string* deploy_name) {
  if (deploy_name != NULL) {
    set_has_deploy_name();
  } else {
    clear_has_deploy_name();
  }
  deploy_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deploy_name);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.DeployStatsResponse.DeployStat.deploy_name)
}

// required string time = 2;
inline bool DeployStatsResponse_DeployStat::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeployStatsResponse_DeployStat::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeployStatsResponse_DeployStat::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeployStatsResponse_DeployStat::clear_time() {
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_time();
}
inline const ::std::string& DeployStatsResponse_DeployStat::time() const {
  // @@protoc_insertion_point(field_get:openmldb.api.DeployStatsResponse.DeployStat.time)
  return time_.GetNoArena();
}
inline void DeployStatsResponse_DeployStat::set_time(const ::std::string& value) {
  set_has_time();
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.DeployStatsResponse.DeployStat.time)
}
#if LANG_CXX11
inline void DeployStatsResponse_DeployStat::set_time(::std::string&& value) {
  set_has_time();
  time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.DeployStatsResponse.DeployStat.time)
}
#endif
inline void DeployStatsResponse_DeployStat::set_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_time();
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.DeployStatsResponse.DeployStat.time)
}
inline void DeployStatsResponse_DeployStat::set_time(const char* value, size_t size) {
  set_has_time();
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.DeployStatsResponse.DeployStat.time)
}
inline ::std::string* DeployStatsResponse_DeployStat::mutable_time() {
  set_has_time();
  // @@protoc_insertion_point(field_mutable:openmldb.api.DeployStatsResponse.DeployStat.time)
  return time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeployStatsResponse_DeployStat::release_time() {
  // @@protoc_insertion_point(field_release:openmldb.api.DeployStatsResponse.DeployStat.time)
  if (!has_time()) {
    return NULL;
  }
  clear_has_time();
  return time_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeployStatsResponse_DeployStat::set_allocated_time(::std::string* time) {
  if (time != NULL) {
    set_has_time();
  } else {
    clear_has_time();
  }
  time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.DeployStatsResponse.DeployStat.time)
}

// required uint32 count = 3;
inline bool DeployStatsResponse_DeployStat::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DeployStatsResponse_DeployStat::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DeployStatsResponse_DeployStat::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DeployStatsResponse_DeployStat::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 DeployStatsResponse_DeployStat::count() const {
  // @@protoc_insertion_point(field_get:openmldb.api.DeployStatsResponse.DeployStat.count)
  return count_;
}
inline void DeployStatsResponse_DeployStat::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.DeployStatsResponse.DeployStat.count)
}

// required string total = 4;
inline bool DeployStatsResponse_DeployStat::has_total() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeployStatsResponse_DeployStat::set_has_total() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeployStatsResponse_DeployStat::clear_has_total() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeployStatsResponse_DeployStat::clear_total() {
  total_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_total();
}
inline const ::std::string& DeployStatsResponse_DeployStat::total() const {
  // @@protoc_insertion_point(field_get:openmldb.api.DeployStatsResponse.DeployStat.total)
  return total_.GetNoArena();
}
inline void DeployStatsResponse_DeployStat::set_total(const ::std::string& value) {
  set_has_total();
  total_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.DeployStatsResponse.DeployStat.total)
}
#if LANG_CXX11
inline void DeployStatsResponse_DeployStat::set_total(::std::string&& value) {
  set_has_total();
  total_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.DeployStatsResponse.DeployStat.total)
}
#endif
inline void DeployStatsResponse_DeployStat::set_total(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_total();
  total_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.DeployStatsResponse.DeployStat.total)
}
inline void DeployStatsResponse_DeployStat::set_total(const char* value, size_t size) {
  set_has_total();
  total_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.DeployStatsResponse.DeployStat.total)
}
inline ::std::string* DeployStatsResponse_DeployStat::mutable_total() {
  set_has_total();
  // @@protoc_insertion_point(field_mutable:openmldb.api.DeployStatsResponse.DeployStat.total)
  return total_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeployStatsResponse_DeployStat::release_total() {
  // @@protoc_insertion_point(field_release:openmldb.api.DeployStatsResponse.DeployStat.total)
  if (!has_total()) {
    return NULL;
  }
  clear_has_total();
  return total_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeployStatsResponse_DeployStat::set_allocated_total(::std::string* total) {
  if (total != NULL) {
    set_has_total();
  } else {
    clear_has_total();
  }
  total_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), total);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.DeployStatsResponse.DeployStat.total)
}

// -------------------------------------------------------------------

// DeployStatsResponse

// optional int32 code = 1;
inline bool DeployStatsResponse::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeployStatsResponse::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeployStatsResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeployStatsResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 DeployStatsResponse::code() const {
  // @@protoc_insertion_point(field_get:openmldb.api.DeployStatsResponse.code)
  return code_;
}
inline void DeployStatsResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:openmldb.api.DeployStatsResponse.code)
}

// optional string msg = 2;
inline bool DeployStatsResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeployStatsResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeployStatsResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeployStatsResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& DeployStatsResponse::msg() const {
  // @@protoc_insertion_point(field_get:openmldb.api.DeployStatsResponse.msg)
  return msg_.GetNoArena();
}
inline void DeployStatsResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openmldb.api.DeployStatsResponse.msg)
}
#if LANG_CXX11
inline void DeployStatsResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openmldb.api.DeployStatsResponse.msg)
}
#endif
inline void DeployStatsResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openmldb.api.DeployStatsResponse.msg)
}
inline void DeployStatsResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openmldb.api.DeployStatsResponse.msg)
}
inline ::std::string* DeployStatsResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:openmldb.api.DeployStatsResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeployStatsResponse::release_msg() {
  // @@protoc_insertion_point(field_release:openmldb.api.DeployStatsResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeployStatsResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:openmldb.api.DeployStatsResponse.msg)
}

// repeated .openmldb.api.DeployStatsResponse.DeployStat rows = 3;
inline int DeployStatsResponse::rows_size() const {
  return rows_.size();
}
inline void DeployStatsResponse::clear_rows() {
  rows_.Clear();
}
inline ::openmldb::api::DeployStatsResponse_DeployStat* DeployStatsResponse::mutable_rows(int index) {
  // @@protoc_insertion_point(field_mutable:openmldb.api.DeployStatsResponse.rows)
  return rows_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::openmldb::api::DeployStatsResponse_DeployStat >*
DeployStatsResponse::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:openmldb.api.DeployStatsResponse.rows)
  return &rows_;
}
inline const ::openmldb::api::DeployStatsResponse_DeployStat& DeployStatsResponse::rows(int index) const {
  // @@protoc_insertion_point(field_get:openmldb.api.DeployStatsResponse.rows)
  return rows_.Get(index);
}
inline ::openmldb::api::DeployStatsResponse_DeployStat* DeployStatsResponse::add_rows() {
  // @@protoc_insertion_point(field_add:openmldb.api.DeployStatsResponse.rows)
  return rows_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::openmldb::api::DeployStatsResponse_DeployStat >&
DeployStatsResponse::rows() const {
  // @@protoc_insertion_point(field_list:openmldb.api.DeployStatsResponse.rows)
  return rows_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace api
}  // namespace openmldb

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::openmldb::api::TableMode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openmldb::api::TableMode>() {
  return ::openmldb::api::TableMode_descriptor();
}
template <> struct is_proto_enum< ::openmldb::api::TableState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openmldb::api::TableState>() {
  return ::openmldb::api::TableState_descriptor();
}
template <> struct is_proto_enum< ::openmldb::api::GetType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openmldb::api::GetType>() {
  return ::openmldb::api::GetType_descriptor();
}
template <> struct is_proto_enum< ::openmldb::api::OPType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openmldb::api::OPType>() {
  return ::openmldb::api::OPType_descriptor();
}
template <> struct is_proto_enum< ::openmldb::api::TaskType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openmldb::api::TaskType>() {
  return ::openmldb::api::TaskType_descriptor();
}
template <> struct is_proto_enum< ::openmldb::api::TaskStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openmldb::api::TaskStatus>() {
  return ::openmldb::api::TaskStatus_descriptor();
}
template <> struct is_proto_enum< ::openmldb::api::MethodType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openmldb::api::MethodType>() {
  return ::openmldb::api::MethodType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_tablet_2eproto
