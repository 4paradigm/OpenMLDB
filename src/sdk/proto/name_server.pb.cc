// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: name_server.proto

#include "name_server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CatalogInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ColumnDesc;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EndpointAndTid;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ExternalFun;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TTLSt;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VersionPair;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ColumnKey;
}  // namespace protobuf_common_2eproto
namespace protobuf_name_5fserver_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_name_5fserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ClusterAddress;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_name_5fserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OPStatus;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_name_5fserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OfflineTableInfo_OptionsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_name_5fserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Pair;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_name_5fserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PartitionMeta;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_name_5fserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TabletStatus;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_name_5fserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TermPair;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_name_5fserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ZoneInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_name_5fserver_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ClusterAddAge;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_name_5fserver_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OfflineTableInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_name_5fserver_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TablePartition;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_name_5fserver_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_TableInfo;
}  // namespace protobuf_name_5fserver_2eproto
namespace protobuf_tablet_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TaskInfo;
}  // namespace protobuf_tablet_2eproto
namespace openmldb {
namespace nameserver {
class PartitionMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PartitionMeta>
      _instance;
} _PartitionMeta_default_instance_;
class TermPairDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TermPair>
      _instance;
} _TermPair_default_instance_;
class TablePartitionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TablePartition>
      _instance;
} _TablePartition_default_instance_;
class UpdateTTLRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateTTLRequest>
      _instance;
} _UpdateTTLRequest_default_instance_;
class UpdateTTLResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateTTLResponse>
      _instance;
} _UpdateTTLResponse_default_instance_;
class OfflineTableInfo_OptionsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OfflineTableInfo_OptionsEntry_DoNotUse>
      _instance;
} _OfflineTableInfo_OptionsEntry_DoNotUse_default_instance_;
class OfflineTableInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OfflineTableInfo>
      _instance;
} _OfflineTableInfo_default_instance_;
class TableInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TableInfo>
      _instance;
} _TableInfo_default_instance_;
class CreateTableRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateTableRequest>
      _instance;
} _CreateTableRequest_default_instance_;
class DropTableRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DropTableRequest>
      _instance;
} _DropTableRequest_default_instance_;
class LoadTableRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoadTableRequest>
      _instance;
} _LoadTableRequest_default_instance_;
class CreateTableInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateTableInfoRequest>
      _instance;
} _CreateTableInfoRequest_default_instance_;
class ShowTableRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShowTableRequest>
      _instance;
} _ShowTableRequest_default_instance_;
class ShowTableResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShowTableResponse>
      _instance;
} _ShowTableResponse_default_instance_;
class MakeSnapshotNSRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MakeSnapshotNSRequest>
      _instance;
} _MakeSnapshotNSRequest_default_instance_;
class AddReplicaDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddReplicaData>
      _instance;
} _AddReplicaData_default_instance_;
class AddReplicaNSRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddReplicaNSRequest>
      _instance;
} _AddReplicaNSRequest_default_instance_;
class PairDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pair>
      _instance;
} _Pair_default_instance_;
class ConfSetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfSetRequest>
      _instance;
} _ConfSetRequest_default_instance_;
class ConfGetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfGetRequest>
      _instance;
} _ConfGetRequest_default_instance_;
class ConfGetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfGetResponse>
      _instance;
} _ConfGetResponse_default_instance_;
class ChangeLeaderRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeLeaderRequest>
      _instance;
} _ChangeLeaderRequest_default_instance_;
class OfflineEndpointRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OfflineEndpointRequest>
      _instance;
} _OfflineEndpointRequest_default_instance_;
class RecoverEndpointRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecoverEndpointRequest>
      _instance;
} _RecoverEndpointRequest_default_instance_;
class GeneralResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GeneralResponse>
      _instance;
} _GeneralResponse_default_instance_;
class CreateTableInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateTableInfoResponse>
      _instance;
} _CreateTableInfoResponse_default_instance_;
class ShowTabletRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShowTabletRequest>
      _instance;
} _ShowTabletRequest_default_instance_;
class AddTableFieldRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddTableFieldRequest>
      _instance;
} _AddTableFieldRequest_default_instance_;
class TabletStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TabletStatus>
      _instance;
} _TabletStatus_default_instance_;
class ShowTabletResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShowTabletResponse>
      _instance;
} _ShowTabletResponse_default_instance_;
class RecoverTableRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecoverTableRequest>
      _instance;
} _RecoverTableRequest_default_instance_;
class DelReplicaNSRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DelReplicaNSRequest>
      _instance;
} _DelReplicaNSRequest_default_instance_;
class MigrateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MigrateRequest>
      _instance;
} _MigrateRequest_default_instance_;
class MigrateInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MigrateInfo>
      _instance;
} _MigrateInfo_default_instance_;
class EndpointStatusDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EndpointStatusData>
      _instance;
} _EndpointStatusData_default_instance_;
class RecoverTableDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecoverTableData>
      _instance;
} _RecoverTableData_default_instance_;
class CreateTableDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateTableData>
      _instance;
} _CreateTableData_default_instance_;
class ChangeLeaderDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeLeaderData>
      _instance;
} _ChangeLeaderData_default_instance_;
class OPStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OPStatus>
      _instance;
} _OPStatus_default_instance_;
class GetTablePartitionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTablePartitionRequest>
      _instance;
} _GetTablePartitionRequest_default_instance_;
class GetTablePartitionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTablePartitionResponse>
      _instance;
} _GetTablePartitionResponse_default_instance_;
class SetTablePartitionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetTablePartitionRequest>
      _instance;
} _SetTablePartitionRequest_default_instance_;
class UpdateTableAliveRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateTableAliveRequest>
      _instance;
} _UpdateTableAliveRequest_default_instance_;
class ShowOPStatusRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShowOPStatusRequest>
      _instance;
} _ShowOPStatusRequest_default_instance_;
class ConnectZKRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectZKRequest>
      _instance;
} _ConnectZKRequest_default_instance_;
class DisConnectZKRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DisConnectZKRequest>
      _instance;
} _DisConnectZKRequest_default_instance_;
class ShowOPStatusResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShowOPStatusResponse>
      _instance;
} _ShowOPStatusResponse_default_instance_;
class CancelOPRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CancelOPRequest>
      _instance;
} _CancelOPRequest_default_instance_;
class ClusterAddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterAddress>
      _instance;
} _ClusterAddress_default_instance_;
class GeneralRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GeneralRequest>
      _instance;
} _GeneralRequest_default_instance_;
class ClusterAddAgeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterAddAge>
      _instance;
} _ClusterAddAge_default_instance_;
class ShowReplicaClusterResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShowReplicaClusterResponse>
      _instance;
} _ShowReplicaClusterResponse_default_instance_;
class RemoveReplicaOfRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveReplicaOfRequest>
      _instance;
} _RemoveReplicaOfRequest_default_instance_;
class ReplicaClusterByNsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReplicaClusterByNsRequest>
      _instance;
} _ReplicaClusterByNsRequest_default_instance_;
class ZoneInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ZoneInfo>
      _instance;
} _ZoneInfo_default_instance_;
class AddReplicaClusterByNsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddReplicaClusterByNsResponse>
      _instance;
} _AddReplicaClusterByNsResponse_default_instance_;
class SwitchModeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SwitchModeRequest>
      _instance;
} _SwitchModeRequest_default_instance_;
class SyncTableRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SyncTableRequest>
      _instance;
} _SyncTableRequest_default_instance_;
class SetSdkEndpointRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetSdkEndpointRequest>
      _instance;
} _SetSdkEndpointRequest_default_instance_;
class AddIndexMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddIndexMeta>
      _instance;
} _AddIndexMeta_default_instance_;
class AddIndexRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddIndexRequest>
      _instance;
} _AddIndexRequest_default_instance_;
class DeleteIndexRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteIndexRequest>
      _instance;
} _DeleteIndexRequest_default_instance_;
class CreateDatabaseRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateDatabaseRequest>
      _instance;
} _CreateDatabaseRequest_default_instance_;
class UseDatabaseRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UseDatabaseRequest>
      _instance;
} _UseDatabaseRequest_default_instance_;
class ShowDatabaseResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShowDatabaseResponse>
      _instance;
} _ShowDatabaseResponse_default_instance_;
class DropDatabaseRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DropDatabaseRequest>
      _instance;
} _DropDatabaseRequest_default_instance_;
class ShowSdkEndpointRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShowSdkEndpointRequest>
      _instance;
} _ShowSdkEndpointRequest_default_instance_;
class ShowSdkEndpointResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShowSdkEndpointResponse>
      _instance;
} _ShowSdkEndpointResponse_default_instance_;
class ShowCatalogRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShowCatalogRequest>
      _instance;
} _ShowCatalogRequest_default_instance_;
class ShowCatalogResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShowCatalogResponse>
      _instance;
} _ShowCatalogResponse_default_instance_;
class CreateFunctionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateFunctionRequest>
      _instance;
} _CreateFunctionRequest_default_instance_;
class CreateFunctionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateFunctionResponse>
      _instance;
} _CreateFunctionResponse_default_instance_;
class DropFunctionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DropFunctionRequest>
      _instance;
} _DropFunctionRequest_default_instance_;
class DropFunctionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DropFunctionResponse>
      _instance;
} _DropFunctionResponse_default_instance_;
class ShowFunctionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShowFunctionRequest>
      _instance;
} _ShowFunctionRequest_default_instance_;
class ShowFunctionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShowFunctionResponse>
      _instance;
} _ShowFunctionResponse_default_instance_;
}  // namespace nameserver
}  // namespace openmldb
namespace protobuf_name_5fserver_2eproto {
static void InitDefaultsPartitionMeta() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_PartitionMeta_default_instance_;
    new (ptr) ::openmldb::nameserver::PartitionMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::PartitionMeta::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PartitionMeta =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPartitionMeta}, {}};

static void InitDefaultsTermPair() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_TermPair_default_instance_;
    new (ptr) ::openmldb::nameserver::TermPair();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::TermPair::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TermPair =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTermPair}, {}};

static void InitDefaultsTablePartition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_TablePartition_default_instance_;
    new (ptr) ::openmldb::nameserver::TablePartition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::TablePartition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TablePartition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTablePartition}, {
      &protobuf_name_5fserver_2eproto::scc_info_PartitionMeta.base,
      &protobuf_name_5fserver_2eproto::scc_info_TermPair.base,}};

static void InitDefaultsUpdateTTLRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_UpdateTTLRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::UpdateTTLRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::UpdateTTLRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UpdateTTLRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUpdateTTLRequest}, {
      &protobuf_common_2eproto::scc_info_TTLSt.base,}};

static void InitDefaultsUpdateTTLResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_UpdateTTLResponse_default_instance_;
    new (ptr) ::openmldb::nameserver::UpdateTTLResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::UpdateTTLResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UpdateTTLResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUpdateTTLResponse}, {}};

static void InitDefaultsOfflineTableInfo_OptionsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_OfflineTableInfo_OptionsEntry_DoNotUse_default_instance_;
    new (ptr) ::openmldb::nameserver::OfflineTableInfo_OptionsEntry_DoNotUse();
  }
  ::openmldb::nameserver::OfflineTableInfo_OptionsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OfflineTableInfo_OptionsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOfflineTableInfo_OptionsEntry_DoNotUse}, {}};

static void InitDefaultsOfflineTableInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_OfflineTableInfo_default_instance_;
    new (ptr) ::openmldb::nameserver::OfflineTableInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::OfflineTableInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OfflineTableInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOfflineTableInfo}, {
      &protobuf_name_5fserver_2eproto::scc_info_OfflineTableInfo_OptionsEntry_DoNotUse.base,}};

static void InitDefaultsTableInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_TableInfo_default_instance_;
    new (ptr) ::openmldb::nameserver::TableInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::TableInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_TableInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsTableInfo}, {
      &protobuf_name_5fserver_2eproto::scc_info_TablePartition.base,
      &protobuf_common_2eproto::scc_info_ColumnDesc.base,
      &protobuf_common_2eproto::scc_info_ColumnKey.base,
      &protobuf_common_2eproto::scc_info_VersionPair.base,
      &protobuf_name_5fserver_2eproto::scc_info_OfflineTableInfo.base,}};

static void InitDefaultsCreateTableRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_CreateTableRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::CreateTableRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::CreateTableRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_CreateTableRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsCreateTableRequest}, {
      &protobuf_name_5fserver_2eproto::scc_info_TableInfo.base,
      &protobuf_name_5fserver_2eproto::scc_info_ZoneInfo.base,
      &protobuf_tablet_2eproto::scc_info_TaskInfo.base,}};

static void InitDefaultsDropTableRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_DropTableRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::DropTableRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::DropTableRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DropTableRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDropTableRequest}, {
      &protobuf_name_5fserver_2eproto::scc_info_ZoneInfo.base,
      &protobuf_tablet_2eproto::scc_info_TaskInfo.base,}};

static void InitDefaultsLoadTableRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_LoadTableRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::LoadTableRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::LoadTableRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_LoadTableRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsLoadTableRequest}, {
      &protobuf_name_5fserver_2eproto::scc_info_ZoneInfo.base,
      &protobuf_tablet_2eproto::scc_info_TaskInfo.base,}};

static void InitDefaultsCreateTableInfoRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_CreateTableInfoRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::CreateTableInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::CreateTableInfoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CreateTableInfoRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCreateTableInfoRequest}, {
      &protobuf_name_5fserver_2eproto::scc_info_TableInfo.base,
      &protobuf_name_5fserver_2eproto::scc_info_ZoneInfo.base,}};

static void InitDefaultsShowTableRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_ShowTableRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::ShowTableRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::ShowTableRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShowTableRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShowTableRequest}, {}};

static void InitDefaultsShowTableResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_ShowTableResponse_default_instance_;
    new (ptr) ::openmldb::nameserver::ShowTableResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::ShowTableResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ShowTableResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsShowTableResponse}, {
      &protobuf_name_5fserver_2eproto::scc_info_TableInfo.base,}};

static void InitDefaultsMakeSnapshotNSRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_MakeSnapshotNSRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::MakeSnapshotNSRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::MakeSnapshotNSRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MakeSnapshotNSRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMakeSnapshotNSRequest}, {}};

static void InitDefaultsAddReplicaData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_AddReplicaData_default_instance_;
    new (ptr) ::openmldb::nameserver::AddReplicaData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::AddReplicaData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AddReplicaData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAddReplicaData}, {
      &protobuf_name_5fserver_2eproto::scc_info_TablePartition.base,}};

static void InitDefaultsAddReplicaNSRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_AddReplicaNSRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::AddReplicaNSRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::AddReplicaNSRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AddReplicaNSRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAddReplicaNSRequest}, {
      &protobuf_name_5fserver_2eproto::scc_info_ZoneInfo.base,
      &protobuf_tablet_2eproto::scc_info_TaskInfo.base,}};

static void InitDefaultsPair() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_Pair_default_instance_;
    new (ptr) ::openmldb::nameserver::Pair();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::Pair::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Pair =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPair}, {}};

static void InitDefaultsConfSetRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_ConfSetRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::ConfSetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::ConfSetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConfSetRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConfSetRequest}, {
      &protobuf_name_5fserver_2eproto::scc_info_Pair.base,}};

static void InitDefaultsConfGetRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_ConfGetRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::ConfGetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::ConfGetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfGetRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfGetRequest}, {}};

static void InitDefaultsConfGetResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_ConfGetResponse_default_instance_;
    new (ptr) ::openmldb::nameserver::ConfGetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::ConfGetResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConfGetResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConfGetResponse}, {
      &protobuf_name_5fserver_2eproto::scc_info_Pair.base,}};

static void InitDefaultsChangeLeaderRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_ChangeLeaderRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::ChangeLeaderRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::ChangeLeaderRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChangeLeaderRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChangeLeaderRequest}, {}};

static void InitDefaultsOfflineEndpointRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_OfflineEndpointRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::OfflineEndpointRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::OfflineEndpointRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OfflineEndpointRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOfflineEndpointRequest}, {}};

static void InitDefaultsRecoverEndpointRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_RecoverEndpointRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::RecoverEndpointRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::RecoverEndpointRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RecoverEndpointRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRecoverEndpointRequest}, {}};

static void InitDefaultsGeneralResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_GeneralResponse_default_instance_;
    new (ptr) ::openmldb::nameserver::GeneralResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::GeneralResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GeneralResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGeneralResponse}, {}};

static void InitDefaultsCreateTableInfoResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_CreateTableInfoResponse_default_instance_;
    new (ptr) ::openmldb::nameserver::CreateTableInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::CreateTableInfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateTableInfoResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateTableInfoResponse}, {
      &protobuf_name_5fserver_2eproto::scc_info_TableInfo.base,}};

static void InitDefaultsShowTabletRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_ShowTabletRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::ShowTabletRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::ShowTabletRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShowTabletRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShowTabletRequest}, {}};

static void InitDefaultsAddTableFieldRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_AddTableFieldRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::AddTableFieldRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::AddTableFieldRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AddTableFieldRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAddTableFieldRequest}, {
      &protobuf_common_2eproto::scc_info_ColumnDesc.base,}};

static void InitDefaultsTabletStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_TabletStatus_default_instance_;
    new (ptr) ::openmldb::nameserver::TabletStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::TabletStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TabletStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTabletStatus}, {}};

static void InitDefaultsShowTabletResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_ShowTabletResponse_default_instance_;
    new (ptr) ::openmldb::nameserver::ShowTabletResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::ShowTabletResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ShowTabletResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsShowTabletResponse}, {
      &protobuf_name_5fserver_2eproto::scc_info_TabletStatus.base,}};

static void InitDefaultsRecoverTableRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_RecoverTableRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::RecoverTableRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::RecoverTableRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RecoverTableRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRecoverTableRequest}, {}};

static void InitDefaultsDelReplicaNSRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_DelReplicaNSRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::DelReplicaNSRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::DelReplicaNSRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DelReplicaNSRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDelReplicaNSRequest}, {}};

static void InitDefaultsMigrateRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_MigrateRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::MigrateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::MigrateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MigrateRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMigrateRequest}, {}};

static void InitDefaultsMigrateInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_MigrateInfo_default_instance_;
    new (ptr) ::openmldb::nameserver::MigrateInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::MigrateInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MigrateInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMigrateInfo}, {}};

static void InitDefaultsEndpointStatusData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_EndpointStatusData_default_instance_;
    new (ptr) ::openmldb::nameserver::EndpointStatusData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::EndpointStatusData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EndpointStatusData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEndpointStatusData}, {}};

static void InitDefaultsRecoverTableData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_RecoverTableData_default_instance_;
    new (ptr) ::openmldb::nameserver::RecoverTableData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::RecoverTableData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RecoverTableData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRecoverTableData}, {}};

static void InitDefaultsCreateTableData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_CreateTableData_default_instance_;
    new (ptr) ::openmldb::nameserver::CreateTableData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::CreateTableData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateTableData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateTableData}, {
      &protobuf_name_5fserver_2eproto::scc_info_TableInfo.base,}};

static void InitDefaultsChangeLeaderData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_ChangeLeaderData_default_instance_;
    new (ptr) ::openmldb::nameserver::ChangeLeaderData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::ChangeLeaderData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ChangeLeaderData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsChangeLeaderData}, {
      &protobuf_common_2eproto::scc_info_EndpointAndTid.base,}};

static void InitDefaultsOPStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_OPStatus_default_instance_;
    new (ptr) ::openmldb::nameserver::OPStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::OPStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OPStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOPStatus}, {}};

static void InitDefaultsGetTablePartitionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_GetTablePartitionRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::GetTablePartitionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::GetTablePartitionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetTablePartitionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetTablePartitionRequest}, {}};

static void InitDefaultsGetTablePartitionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_GetTablePartitionResponse_default_instance_;
    new (ptr) ::openmldb::nameserver::GetTablePartitionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::GetTablePartitionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetTablePartitionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetTablePartitionResponse}, {
      &protobuf_name_5fserver_2eproto::scc_info_TablePartition.base,}};

static void InitDefaultsSetTablePartitionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_SetTablePartitionRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::SetTablePartitionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::SetTablePartitionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetTablePartitionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetTablePartitionRequest}, {
      &protobuf_name_5fserver_2eproto::scc_info_TablePartition.base,}};

static void InitDefaultsUpdateTableAliveRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_UpdateTableAliveRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::UpdateTableAliveRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::UpdateTableAliveRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UpdateTableAliveRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUpdateTableAliveRequest}, {}};

static void InitDefaultsShowOPStatusRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_ShowOPStatusRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::ShowOPStatusRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::ShowOPStatusRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShowOPStatusRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShowOPStatusRequest}, {}};

static void InitDefaultsConnectZKRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_ConnectZKRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::ConnectZKRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::ConnectZKRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConnectZKRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConnectZKRequest}, {}};

static void InitDefaultsDisConnectZKRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_DisConnectZKRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::DisConnectZKRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::DisConnectZKRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DisConnectZKRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDisConnectZKRequest}, {}};

static void InitDefaultsShowOPStatusResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_ShowOPStatusResponse_default_instance_;
    new (ptr) ::openmldb::nameserver::ShowOPStatusResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::ShowOPStatusResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ShowOPStatusResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsShowOPStatusResponse}, {
      &protobuf_name_5fserver_2eproto::scc_info_OPStatus.base,}};

static void InitDefaultsCancelOPRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_CancelOPRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::CancelOPRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::CancelOPRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CancelOPRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCancelOPRequest}, {}};

static void InitDefaultsClusterAddress() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_ClusterAddress_default_instance_;
    new (ptr) ::openmldb::nameserver::ClusterAddress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::ClusterAddress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClusterAddress =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClusterAddress}, {}};

static void InitDefaultsGeneralRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_GeneralRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::GeneralRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::GeneralRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GeneralRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGeneralRequest}, {}};

static void InitDefaultsClusterAddAge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_ClusterAddAge_default_instance_;
    new (ptr) ::openmldb::nameserver::ClusterAddAge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::ClusterAddAge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ClusterAddAge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsClusterAddAge}, {
      &protobuf_name_5fserver_2eproto::scc_info_ClusterAddress.base,}};

static void InitDefaultsShowReplicaClusterResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_ShowReplicaClusterResponse_default_instance_;
    new (ptr) ::openmldb::nameserver::ShowReplicaClusterResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::ShowReplicaClusterResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ShowReplicaClusterResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsShowReplicaClusterResponse}, {
      &protobuf_name_5fserver_2eproto::scc_info_ClusterAddAge.base,}};

static void InitDefaultsRemoveReplicaOfRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_RemoveReplicaOfRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::RemoveReplicaOfRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::RemoveReplicaOfRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RemoveReplicaOfRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRemoveReplicaOfRequest}, {}};

static void InitDefaultsReplicaClusterByNsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_ReplicaClusterByNsRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::ReplicaClusterByNsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::ReplicaClusterByNsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReplicaClusterByNsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReplicaClusterByNsRequest}, {
      &protobuf_name_5fserver_2eproto::scc_info_ZoneInfo.base,}};

static void InitDefaultsZoneInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_ZoneInfo_default_instance_;
    new (ptr) ::openmldb::nameserver::ZoneInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::ZoneInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ZoneInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsZoneInfo}, {}};

static void InitDefaultsAddReplicaClusterByNsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_AddReplicaClusterByNsResponse_default_instance_;
    new (ptr) ::openmldb::nameserver::AddReplicaClusterByNsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::AddReplicaClusterByNsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AddReplicaClusterByNsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAddReplicaClusterByNsResponse}, {
      &protobuf_name_5fserver_2eproto::scc_info_TabletStatus.base,
      &protobuf_name_5fserver_2eproto::scc_info_TableInfo.base,}};

static void InitDefaultsSwitchModeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_SwitchModeRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::SwitchModeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::SwitchModeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SwitchModeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSwitchModeRequest}, {}};

static void InitDefaultsSyncTableRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_SyncTableRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::SyncTableRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::SyncTableRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SyncTableRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSyncTableRequest}, {}};

static void InitDefaultsSetSdkEndpointRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_SetSdkEndpointRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::SetSdkEndpointRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::SetSdkEndpointRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetSdkEndpointRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetSdkEndpointRequest}, {}};

static void InitDefaultsAddIndexMeta() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_AddIndexMeta_default_instance_;
    new (ptr) ::openmldb::nameserver::AddIndexMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::AddIndexMeta::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AddIndexMeta =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAddIndexMeta}, {
      &protobuf_common_2eproto::scc_info_ColumnKey.base,}};

static void InitDefaultsAddIndexRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_AddIndexRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::AddIndexRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::AddIndexRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AddIndexRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAddIndexRequest}, {
      &protobuf_common_2eproto::scc_info_ColumnKey.base,
      &protobuf_common_2eproto::scc_info_ColumnDesc.base,}};

static void InitDefaultsDeleteIndexRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_DeleteIndexRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::DeleteIndexRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::DeleteIndexRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteIndexRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteIndexRequest}, {}};

static void InitDefaultsCreateDatabaseRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_CreateDatabaseRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::CreateDatabaseRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::CreateDatabaseRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateDatabaseRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateDatabaseRequest}, {}};

static void InitDefaultsUseDatabaseRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_UseDatabaseRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::UseDatabaseRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::UseDatabaseRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UseDatabaseRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUseDatabaseRequest}, {}};

static void InitDefaultsShowDatabaseResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_ShowDatabaseResponse_default_instance_;
    new (ptr) ::openmldb::nameserver::ShowDatabaseResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::ShowDatabaseResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShowDatabaseResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShowDatabaseResponse}, {}};

static void InitDefaultsDropDatabaseRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_DropDatabaseRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::DropDatabaseRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::DropDatabaseRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DropDatabaseRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDropDatabaseRequest}, {}};

static void InitDefaultsShowSdkEndpointRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_ShowSdkEndpointRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::ShowSdkEndpointRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::ShowSdkEndpointRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShowSdkEndpointRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShowSdkEndpointRequest}, {}};

static void InitDefaultsShowSdkEndpointResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_ShowSdkEndpointResponse_default_instance_;
    new (ptr) ::openmldb::nameserver::ShowSdkEndpointResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::ShowSdkEndpointResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ShowSdkEndpointResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsShowSdkEndpointResponse}, {
      &protobuf_name_5fserver_2eproto::scc_info_TabletStatus.base,}};

static void InitDefaultsShowCatalogRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_ShowCatalogRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::ShowCatalogRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::ShowCatalogRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShowCatalogRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShowCatalogRequest}, {}};

static void InitDefaultsShowCatalogResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_ShowCatalogResponse_default_instance_;
    new (ptr) ::openmldb::nameserver::ShowCatalogResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::ShowCatalogResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ShowCatalogResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsShowCatalogResponse}, {
      &protobuf_common_2eproto::scc_info_CatalogInfo.base,}};

static void InitDefaultsCreateFunctionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_CreateFunctionRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::CreateFunctionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::CreateFunctionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateFunctionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateFunctionRequest}, {
      &protobuf_common_2eproto::scc_info_ExternalFun.base,}};

static void InitDefaultsCreateFunctionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_CreateFunctionResponse_default_instance_;
    new (ptr) ::openmldb::nameserver::CreateFunctionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::CreateFunctionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateFunctionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateFunctionResponse}, {}};

static void InitDefaultsDropFunctionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_DropFunctionRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::DropFunctionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::DropFunctionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DropFunctionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDropFunctionRequest}, {}};

static void InitDefaultsDropFunctionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_DropFunctionResponse_default_instance_;
    new (ptr) ::openmldb::nameserver::DropFunctionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::DropFunctionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DropFunctionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDropFunctionResponse}, {}};

static void InitDefaultsShowFunctionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_ShowFunctionRequest_default_instance_;
    new (ptr) ::openmldb::nameserver::ShowFunctionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::ShowFunctionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShowFunctionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShowFunctionRequest}, {}};

static void InitDefaultsShowFunctionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::nameserver::_ShowFunctionResponse_default_instance_;
    new (ptr) ::openmldb::nameserver::ShowFunctionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::nameserver::ShowFunctionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ShowFunctionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsShowFunctionResponse}, {
      &protobuf_common_2eproto::scc_info_ExternalFun.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PartitionMeta.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TermPair.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TablePartition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateTTLRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateTTLResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OfflineTableInfo_OptionsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OfflineTableInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TableInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateTableRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DropTableRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoadTableRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateTableInfoRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShowTableRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShowTableResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MakeSnapshotNSRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddReplicaData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddReplicaNSRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Pair.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfSetRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfGetRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfGetResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChangeLeaderRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OfflineEndpointRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecoverEndpointRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GeneralResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateTableInfoResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShowTabletRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddTableFieldRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TabletStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShowTabletResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecoverTableRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DelReplicaNSRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MigrateRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MigrateInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EndpointStatusData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecoverTableData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateTableData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChangeLeaderData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OPStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetTablePartitionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetTablePartitionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetTablePartitionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateTableAliveRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShowOPStatusRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConnectZKRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DisConnectZKRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShowOPStatusResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CancelOPRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClusterAddress.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GeneralRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClusterAddAge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShowReplicaClusterResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RemoveReplicaOfRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReplicaClusterByNsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ZoneInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddReplicaClusterByNsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SwitchModeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SyncTableRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetSdkEndpointRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddIndexMeta.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddIndexRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteIndexRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateDatabaseRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UseDatabaseRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShowDatabaseResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DropDatabaseRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShowSdkEndpointRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShowSdkEndpointResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShowCatalogRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShowCatalogResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateFunctionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateFunctionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DropFunctionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DropFunctionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShowFunctionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShowFunctionResponse.base);
}

::google::protobuf::Metadata file_level_metadata[76];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::PartitionMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::PartitionMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::PartitionMeta, endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::PartitionMeta, is_leader_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::PartitionMeta, is_alive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::PartitionMeta, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::PartitionMeta, record_cnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::PartitionMeta, record_byte_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::PartitionMeta, tablet_has_partition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::PartitionMeta, diskused_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::PartitionMeta, remote_tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::PartitionMeta, alias_),
  0,
  6,
  7,
  2,
  3,
  4,
  8,
  5,
  9,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TermPair, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TermPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TermPair, term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TermPair, offset_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TablePartition, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TablePartition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TablePartition, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TablePartition, partition_meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TablePartition, term_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TablePartition, record_cnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TablePartition, record_byte_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TablePartition, diskused_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TablePartition, remote_partition_meta_),
  3,
  ~0u,
  ~0u,
  0,
  1,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::UpdateTTLRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::UpdateTTLRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::UpdateTTLRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::UpdateTTLRequest, db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::UpdateTTLRequest, index_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::UpdateTTLRequest, ttl_desc_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::UpdateTTLResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::UpdateTTLResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::UpdateTTLResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::UpdateTTLResponse, msg_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::OfflineTableInfo_OptionsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::OfflineTableInfo_OptionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::OfflineTableInfo_OptionsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::OfflineTableInfo_OptionsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::OfflineTableInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::OfflineTableInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::OfflineTableInfo, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::OfflineTableInfo, format_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::OfflineTableInfo, deep_copy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::OfflineTableInfo, options_),
  0,
  1,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TableInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TableInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TableInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TableInfo, seg_cnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TableInfo, table_partition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TableInfo, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TableInfo, partition_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TableInfo, replica_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TableInfo, compress_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TableInfo, key_entry_max_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TableInfo, column_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TableInfo, column_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TableInfo, added_column_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TableInfo, format_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TableInfo, db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TableInfo, partition_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TableInfo, schema_versions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TableInfo, offline_table_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TableInfo, storage_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TableInfo, base_table_tid_),
  0,
  10,
  ~0u,
  3,
  4,
  5,
  6,
  7,
  ~0u,
  ~0u,
  ~0u,
  11,
  1,
  ~0u,
  ~0u,
  2,
  9,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateTableRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateTableRequest, table_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateTableRequest, zone_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateTableRequest, task_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateTableRequest, create_if_not_exist_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DropTableRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DropTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DropTableRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DropTableRequest, zone_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DropTableRequest, task_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DropTableRequest, db_),
  0,
  2,
  3,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::LoadTableRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::LoadTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::LoadTableRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::LoadTableRequest, endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::LoadTableRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::LoadTableRequest, zone_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::LoadTableRequest, task_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::LoadTableRequest, db_),
  0,
  1,
  5,
  3,
  4,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateTableInfoRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateTableInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateTableInfoRequest, table_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateTableInfoRequest, zone_info_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowTableRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowTableRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowTableRequest, db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowTableRequest, show_all_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowTableResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowTableResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowTableResponse, table_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowTableResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowTableResponse, msg_),
  ~0u,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::MakeSnapshotNSRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::MakeSnapshotNSRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::MakeSnapshotNSRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::MakeSnapshotNSRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::MakeSnapshotNSRequest, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::MakeSnapshotNSRequest, db_),
  0,
  3,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddReplicaData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddReplicaData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddReplicaData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddReplicaData, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddReplicaData, endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddReplicaData, remote_tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddReplicaData, alias_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddReplicaData, table_partition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddReplicaData, db_),
  0,
  5,
  1,
  6,
  2,
  4,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddReplicaNSRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddReplicaNSRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddReplicaNSRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddReplicaNSRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddReplicaNSRequest, endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddReplicaNSRequest, pid_group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddReplicaNSRequest, endpoint_group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddReplicaNSRequest, zone_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddReplicaNSRequest, task_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddReplicaNSRequest, db_),
  0,
  5,
  1,
  ~0u,
  ~0u,
  3,
  4,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::Pair, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::Pair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::Pair, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::Pair, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ConfSetRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ConfSetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ConfSetRequest, conf_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ConfGetRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ConfGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ConfGetResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ConfGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ConfGetResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ConfGetResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ConfGetResponse, conf_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ChangeLeaderRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ChangeLeaderRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ChangeLeaderRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ChangeLeaderRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ChangeLeaderRequest, candidate_leader_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ChangeLeaderRequest, db_),
  0,
  3,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::OfflineEndpointRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::OfflineEndpointRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::OfflineEndpointRequest, endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::OfflineEndpointRequest, concurrency_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::RecoverEndpointRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::RecoverEndpointRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::RecoverEndpointRequest, endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::RecoverEndpointRequest, need_restore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::RecoverEndpointRequest, concurrency_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::GeneralResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::GeneralResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::GeneralResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::GeneralResponse, msg_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateTableInfoResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateTableInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateTableInfoResponse, table_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateTableInfoResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateTableInfoResponse, msg_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowTabletRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowTabletRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddTableFieldRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddTableFieldRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddTableFieldRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddTableFieldRequest, column_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddTableFieldRequest, db_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TabletStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TabletStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TabletStatus, endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TabletStatus, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TabletStatus, age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::TabletStatus, real_endpoint_),
  0,
  1,
  3,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowTabletResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowTabletResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowTabletResponse, tablets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowTabletResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowTabletResponse, msg_),
  ~0u,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::RecoverTableRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::RecoverTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::RecoverTableRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::RecoverTableRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::RecoverTableRequest, endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::RecoverTableRequest, db_),
  0,
  3,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DelReplicaNSRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DelReplicaNSRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DelReplicaNSRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DelReplicaNSRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DelReplicaNSRequest, endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DelReplicaNSRequest, pid_group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DelReplicaNSRequest, db_),
  0,
  3,
  1,
  ~0u,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::MigrateRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::MigrateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::MigrateRequest, src_endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::MigrateRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::MigrateRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::MigrateRequest, des_endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::MigrateRequest, db_),
  0,
  1,
  ~0u,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::MigrateInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::MigrateInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::MigrateInfo, src_endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::MigrateInfo, des_endpoint_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::EndpointStatusData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::EndpointStatusData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::EndpointStatusData, endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::EndpointStatusData, is_leader_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::EndpointStatusData, is_alive_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::RecoverTableData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::RecoverTableData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::RecoverTableData, endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::RecoverTableData, offset_delta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::RecoverTableData, is_leader_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::RecoverTableData, concurrency_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateTableData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateTableData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateTableData, alias_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateTableData, table_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateTableData, remote_table_info_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ChangeLeaderData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ChangeLeaderData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ChangeLeaderData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ChangeLeaderData, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ChangeLeaderData, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ChangeLeaderData, term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ChangeLeaderData, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ChangeLeaderData, leader_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ChangeLeaderData, follower_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ChangeLeaderData, candidate_leader_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ChangeLeaderData, remote_follower_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ChangeLeaderData, db_),
  0,
  4,
  5,
  6,
  7,
  1,
  ~0u,
  2,
  ~0u,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::OPStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::OPStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::OPStatus, op_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::OPStatus, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::OPStatus, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::OPStatus, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::OPStatus, end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::OPStatus, task_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::OPStatus, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::OPStatus, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::OPStatus, for_replica_cluster_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::OPStatus, db_),
  5,
  0,
  1,
  6,
  7,
  2,
  3,
  8,
  9,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::GetTablePartitionRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::GetTablePartitionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::GetTablePartitionRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::GetTablePartitionRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::GetTablePartitionRequest, db_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::GetTablePartitionResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::GetTablePartitionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::GetTablePartitionResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::GetTablePartitionResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::GetTablePartitionResponse, table_partition_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::SetTablePartitionRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::SetTablePartitionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::SetTablePartitionRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::SetTablePartitionRequest, table_partition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::SetTablePartitionRequest, db_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::UpdateTableAliveRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::UpdateTableAliveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::UpdateTableAliveRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::UpdateTableAliveRequest, endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::UpdateTableAliveRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::UpdateTableAliveRequest, is_alive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::UpdateTableAliveRequest, db_),
  0,
  1,
  3,
  4,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowOPStatusRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowOPStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowOPStatusRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowOPStatusRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowOPStatusRequest, db_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ConnectZKRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ConnectZKRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DisConnectZKRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DisConnectZKRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowOPStatusResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowOPStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowOPStatusResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowOPStatusResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowOPStatusResponse, op_status_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CancelOPRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CancelOPRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CancelOPRequest, op_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ClusterAddress, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ClusterAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ClusterAddress, zk_endpoints_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ClusterAddress, zk_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ClusterAddress, alias_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::GeneralRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::GeneralRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ClusterAddAge, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ClusterAddAge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ClusterAddAge, replica_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ClusterAddAge, age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ClusterAddAge, state_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowReplicaClusterResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowReplicaClusterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowReplicaClusterResponse, replicas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowReplicaClusterResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowReplicaClusterResponse, msg_),
  ~0u,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::RemoveReplicaOfRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::RemoveReplicaOfRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::RemoveReplicaOfRequest, alias_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ReplicaClusterByNsRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ReplicaClusterByNsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ReplicaClusterByNsRequest, zone_info_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ZoneInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ZoneInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ZoneInfo, zone_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ZoneInfo, replica_alias_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ZoneInfo, zone_term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ZoneInfo, mode_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddReplicaClusterByNsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddReplicaClusterByNsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddReplicaClusterByNsResponse, tablets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddReplicaClusterByNsResponse, table_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddReplicaClusterByNsResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddReplicaClusterByNsResponse, msg_),
  ~0u,
  ~0u,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::SwitchModeRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::SwitchModeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::SwitchModeRequest, sm_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::SyncTableRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::SyncTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::SyncTableRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::SyncTableRequest, cluster_alias_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::SyncTableRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::SyncTableRequest, db_),
  0,
  1,
  3,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::SetSdkEndpointRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::SetSdkEndpointRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::SetSdkEndpointRequest, server_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::SetSdkEndpointRequest, sdk_endpoint_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddIndexMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddIndexMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddIndexMeta, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddIndexMeta, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddIndexMeta, column_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddIndexMeta, idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddIndexMeta, db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddIndexMeta, skip_data_),
  0,
  3,
  2,
  4,
  1,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddIndexRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddIndexRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddIndexRequest, column_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddIndexRequest, db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddIndexRequest, cols_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::AddIndexRequest, column_keys_),
  0,
  2,
  1,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DeleteIndexRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DeleteIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DeleteIndexRequest, table_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DeleteIndexRequest, idx_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DeleteIndexRequest, db_name_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateDatabaseRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateDatabaseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateDatabaseRequest, db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateDatabaseRequest, if_not_exists_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::UseDatabaseRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::UseDatabaseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::UseDatabaseRequest, db_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowDatabaseResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowDatabaseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowDatabaseResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowDatabaseResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowDatabaseResponse, db_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DropDatabaseRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DropDatabaseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DropDatabaseRequest, db_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowSdkEndpointRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowSdkEndpointRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowSdkEndpointResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowSdkEndpointResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowSdkEndpointResponse, tablets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowSdkEndpointResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowSdkEndpointResponse, msg_),
  ~0u,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowCatalogRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowCatalogRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowCatalogResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowCatalogResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowCatalogResponse, catalog_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowCatalogResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowCatalogResponse, msg_),
  ~0u,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateFunctionRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateFunctionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateFunctionRequest, fun_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateFunctionResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateFunctionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateFunctionResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::CreateFunctionResponse, msg_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DropFunctionRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DropFunctionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DropFunctionRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DropFunctionRequest, if_exists_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DropFunctionResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DropFunctionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DropFunctionResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::DropFunctionResponse, msg_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowFunctionRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowFunctionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowFunctionRequest, name_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowFunctionResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowFunctionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowFunctionResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowFunctionResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::nameserver::ShowFunctionResponse, fun_),
  1,
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 15, sizeof(::openmldb::nameserver::PartitionMeta)},
  { 25, 32, sizeof(::openmldb::nameserver::TermPair)},
  { 34, 46, sizeof(::openmldb::nameserver::TablePartition)},
  { 53, 62, sizeof(::openmldb::nameserver::UpdateTTLRequest)},
  { 66, 73, sizeof(::openmldb::nameserver::UpdateTTLResponse)},
  { 75, 82, sizeof(::openmldb::nameserver::OfflineTableInfo_OptionsEntry_DoNotUse)},
  { 84, 93, sizeof(::openmldb::nameserver::OfflineTableInfo)},
  { 97, 120, sizeof(::openmldb::nameserver::TableInfo)},
  { 138, 147, sizeof(::openmldb::nameserver::CreateTableRequest)},
  { 151, 160, sizeof(::openmldb::nameserver::DropTableRequest)},
  { 164, 175, sizeof(::openmldb::nameserver::LoadTableRequest)},
  { 181, 188, sizeof(::openmldb::nameserver::CreateTableInfoRequest)},
  { 190, 198, sizeof(::openmldb::nameserver::ShowTableRequest)},
  { 201, 209, sizeof(::openmldb::nameserver::ShowTableResponse)},
  { 212, 221, sizeof(::openmldb::nameserver::MakeSnapshotNSRequest)},
  { 225, 237, sizeof(::openmldb::nameserver::AddReplicaData)},
  { 244, 257, sizeof(::openmldb::nameserver::AddReplicaNSRequest)},
  { 265, 272, sizeof(::openmldb::nameserver::Pair)},
  { 274, 280, sizeof(::openmldb::nameserver::ConfSetRequest)},
  { 281, 286, sizeof(::openmldb::nameserver::ConfGetRequest)},
  { 286, 294, sizeof(::openmldb::nameserver::ConfGetResponse)},
  { 297, 306, sizeof(::openmldb::nameserver::ChangeLeaderRequest)},
  { 310, 317, sizeof(::openmldb::nameserver::OfflineEndpointRequest)},
  { 319, 327, sizeof(::openmldb::nameserver::RecoverEndpointRequest)},
  { 330, 337, sizeof(::openmldb::nameserver::GeneralResponse)},
  { 339, 347, sizeof(::openmldb::nameserver::CreateTableInfoResponse)},
  { 350, 355, sizeof(::openmldb::nameserver::ShowTabletRequest)},
  { 355, 363, sizeof(::openmldb::nameserver::AddTableFieldRequest)},
  { 366, 375, sizeof(::openmldb::nameserver::TabletStatus)},
  { 379, 387, sizeof(::openmldb::nameserver::ShowTabletResponse)},
  { 390, 399, sizeof(::openmldb::nameserver::RecoverTableRequest)},
  { 403, 413, sizeof(::openmldb::nameserver::DelReplicaNSRequest)},
  { 418, 428, sizeof(::openmldb::nameserver::MigrateRequest)},
  { 433, 440, sizeof(::openmldb::nameserver::MigrateInfo)},
  { 442, 450, sizeof(::openmldb::nameserver::EndpointStatusData)},
  { 453, 462, sizeof(::openmldb::nameserver::RecoverTableData)},
  { 466, 474, sizeof(::openmldb::nameserver::CreateTableData)},
  { 477, 492, sizeof(::openmldb::nameserver::ChangeLeaderData)},
  { 502, 517, sizeof(::openmldb::nameserver::OPStatus)},
  { 527, 535, sizeof(::openmldb::nameserver::GetTablePartitionRequest)},
  { 538, 546, sizeof(::openmldb::nameserver::GetTablePartitionResponse)},
  { 549, 557, sizeof(::openmldb::nameserver::SetTablePartitionRequest)},
  { 560, 570, sizeof(::openmldb::nameserver::UpdateTableAliveRequest)},
  { 575, 583, sizeof(::openmldb::nameserver::ShowOPStatusRequest)},
  { 586, 591, sizeof(::openmldb::nameserver::ConnectZKRequest)},
  { 591, 596, sizeof(::openmldb::nameserver::DisConnectZKRequest)},
  { 596, 604, sizeof(::openmldb::nameserver::ShowOPStatusResponse)},
  { 607, 613, sizeof(::openmldb::nameserver::CancelOPRequest)},
  { 614, 622, sizeof(::openmldb::nameserver::ClusterAddress)},
  { 625, 630, sizeof(::openmldb::nameserver::GeneralRequest)},
  { 630, 638, sizeof(::openmldb::nameserver::ClusterAddAge)},
  { 641, 649, sizeof(::openmldb::nameserver::ShowReplicaClusterResponse)},
  { 652, 658, sizeof(::openmldb::nameserver::RemoveReplicaOfRequest)},
  { 659, 665, sizeof(::openmldb::nameserver::ReplicaClusterByNsRequest)},
  { 666, 675, sizeof(::openmldb::nameserver::ZoneInfo)},
  { 679, 688, sizeof(::openmldb::nameserver::AddReplicaClusterByNsResponse)},
  { 692, 698, sizeof(::openmldb::nameserver::SwitchModeRequest)},
  { 699, 708, sizeof(::openmldb::nameserver::SyncTableRequest)},
  { 712, 719, sizeof(::openmldb::nameserver::SetSdkEndpointRequest)},
  { 721, 732, sizeof(::openmldb::nameserver::AddIndexMeta)},
  { 738, 748, sizeof(::openmldb::nameserver::AddIndexRequest)},
  { 753, 761, sizeof(::openmldb::nameserver::DeleteIndexRequest)},
  { 764, 771, sizeof(::openmldb::nameserver::CreateDatabaseRequest)},
  { 773, 779, sizeof(::openmldb::nameserver::UseDatabaseRequest)},
  { 780, 788, sizeof(::openmldb::nameserver::ShowDatabaseResponse)},
  { 791, 797, sizeof(::openmldb::nameserver::DropDatabaseRequest)},
  { 798, 803, sizeof(::openmldb::nameserver::ShowSdkEndpointRequest)},
  { 803, 811, sizeof(::openmldb::nameserver::ShowSdkEndpointResponse)},
  { 814, 819, sizeof(::openmldb::nameserver::ShowCatalogRequest)},
  { 819, 827, sizeof(::openmldb::nameserver::ShowCatalogResponse)},
  { 830, 836, sizeof(::openmldb::nameserver::CreateFunctionRequest)},
  { 837, 844, sizeof(::openmldb::nameserver::CreateFunctionResponse)},
  { 846, 853, sizeof(::openmldb::nameserver::DropFunctionRequest)},
  { 855, 862, sizeof(::openmldb::nameserver::DropFunctionResponse)},
  { 864, 870, sizeof(::openmldb::nameserver::ShowFunctionRequest)},
  { 871, 879, sizeof(::openmldb::nameserver::ShowFunctionResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_PartitionMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_TermPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_TablePartition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_UpdateTTLRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_UpdateTTLResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_OfflineTableInfo_OptionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_OfflineTableInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_TableInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_CreateTableRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_DropTableRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_LoadTableRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_CreateTableInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_ShowTableRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_ShowTableResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_MakeSnapshotNSRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_AddReplicaData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_AddReplicaNSRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_Pair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_ConfSetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_ConfGetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_ConfGetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_ChangeLeaderRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_OfflineEndpointRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_RecoverEndpointRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_GeneralResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_CreateTableInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_ShowTabletRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_AddTableFieldRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_TabletStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_ShowTabletResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_RecoverTableRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_DelReplicaNSRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_MigrateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_MigrateInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_EndpointStatusData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_RecoverTableData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_CreateTableData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_ChangeLeaderData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_OPStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_GetTablePartitionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_GetTablePartitionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_SetTablePartitionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_UpdateTableAliveRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_ShowOPStatusRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_ConnectZKRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_DisConnectZKRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_ShowOPStatusResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_CancelOPRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_ClusterAddress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_GeneralRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_ClusterAddAge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_ShowReplicaClusterResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_RemoveReplicaOfRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_ReplicaClusterByNsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_ZoneInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_AddReplicaClusterByNsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_SwitchModeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_SyncTableRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_SetSdkEndpointRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_AddIndexMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_AddIndexRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_DeleteIndexRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_CreateDatabaseRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_UseDatabaseRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_ShowDatabaseResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_DropDatabaseRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_ShowSdkEndpointRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_ShowSdkEndpointResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_ShowCatalogRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_ShowCatalogResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_CreateFunctionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_CreateFunctionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_DropFunctionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_DropFunctionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_ShowFunctionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::nameserver::_ShowFunctionResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "name_server.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 76);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021name_server.proto\022\023openmldb.nameserver"
      "\032\ntype.proto\032\014common.proto\032\014tablet.proto"
      "\032\023sql_procedure.proto\"\362\001\n\rPartitionMeta\022"
      "\020\n\010endpoint\030\001 \002(\t\022\021\n\tis_leader\030\002 \002(\010\022\026\n\010"
      "is_alive\030\003 \001(\010:\004true\022\016\n\006offset\030\004 \001(\004\022\022\n\n"
      "record_cnt\030\005 \001(\004\022\030\n\020record_byte_size\030\006 \001"
      "(\004\022\"\n\024tablet_has_partition\030\007 \001(\010:\004true\022\023"
      "\n\010diskused\030\010 \001(\004:\0010\022\036\n\nremote_tid\030\t \001(\r:"
      "\n4294967295\022\r\n\005alias\030\n \001(\t\"(\n\010TermPair\022\014"
      "\n\004term\030\001 \002(\004\022\016\n\006offset\030\002 \002(\004\"\223\002\n\016TablePa"
      "rtition\022\013\n\003pid\030\001 \002(\r\022:\n\016partition_meta\030\002"
      " \003(\0132\".openmldb.nameserver.PartitionMeta"
      "\0222\n\013term_offset\030\003 \003(\0132\035.openmldb.nameser"
      "ver.TermPair\022\022\n\nrecord_cnt\030\004 \001(\004\022\030\n\020reco"
      "rd_byte_size\030\005 \001(\004\022\023\n\010diskused\030\006 \001(\004:\0010\022"
      "A\n\025remote_partition_meta\030\007 \003(\0132\".openmld"
      "b.nameserver.PartitionMeta\"l\n\020UpdateTTLR"
      "equest\022\014\n\004name\030\001 \001(\t\022\014\n\002db\030\002 \001(\t:\000\022\022\n\nin"
      "dex_name\030\003 \001(\t\022(\n\010ttl_desc\030\004 \001(\0132\026.openm"
      "ldb.common.TTLSt\".\n\021UpdateTTLResponse\022\014\n"
      "\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"\276\001\n\020OfflineTabl"
      "eInfo\022\014\n\004path\030\001 \002(\t\022\016\n\006format\030\002 \002(\t\022\027\n\td"
      "eep_copy\030\003 \001(\010:\004true\022C\n\007options\030\004 \003(\01322."
      "openmldb.nameserver.OfflineTableInfo.Opt"
      "ionsEntry\032.\n\014OptionsEntry\022\013\n\003key\030\001 \001(\t\022\r"
      "\n\005value\030\002 \001(\t:\0028\001\"\257\005\n\tTableInfo\022\014\n\004name\030"
      "\001 \001(\t\022\022\n\007seg_cnt\030\002 \001(\r:\0018\022<\n\017table_parti"
      "tion\030\003 \003(\0132#.openmldb.nameserver.TablePa"
      "rtition\022\013\n\003tid\030\004 \001(\r\022\025\n\rpartition_num\030\005 "
      "\001(\r\022\023\n\013replica_num\030\006 \001(\r\022\?\n\rcompress_typ"
      "e\030\007 \001(\0162\033.openmldb.type.CompressType:\013kN"
      "oCompress\022\034\n\024key_entry_max_height\030\010 \001(\r\022"
      "0\n\013column_desc\030\t \003(\0132\033.openmldb.common.C"
      "olumnDesc\022.\n\ncolumn_key\030\n \003(\0132\032.openmldb"
      ".common.ColumnKey\0226\n\021added_column_desc\030\013"
      " \003(\0132\033.openmldb.common.ColumnDesc\022\031\n\016for"
      "mat_version\030\014 \001(\r:\0011\022\014\n\002db\030\r \001(\t:\000\022\025\n\rpa"
      "rtition_key\030\016 \003(\t\0225\n\017schema_versions\030\017 \003"
      "(\0132\034.openmldb.common.VersionPair\022A\n\022offl"
      "ine_table_info\030\020 \001(\0132%.openmldb.nameserv"
      "er.OfflineTableInfo\022;\n\014storage_mode\030\021 \001("
      "\0162\034.openmldb.common.StorageMode:\007kMemory"
      "\022\031\n\016base_table_tid\030\022 \001(\r:\0010\"\311\001\n\022CreateTa"
      "bleRequest\0222\n\ntable_info\030\001 \002(\0132\036.openmld"
      "b.nameserver.TableInfo\0220\n\tzone_info\030\002 \001("
      "\0132\035.openmldb.nameserver.ZoneInfo\022)\n\ttask"
      "_info\030\003 \001(\0132\026.openmldb.api.TaskInfo\022\"\n\023c"
      "reate_if_not_exist\030\004 \001(\010:\005false\"\213\001\n\020Drop"
      "TableRequest\022\014\n\004name\030\001 \002(\t\0220\n\tzone_info\030"
      "\002 \001(\0132\035.openmldb.nameserver.ZoneInfo\022)\n\t"
      "task_info\030\003 \001(\0132\026.openmldb.api.TaskInfo\022"
      "\014\n\002db\030\004 \001(\t:\000\"\252\001\n\020LoadTableRequest\022\014\n\004na"
      "me\030\001 \001(\t\022\020\n\010endpoint\030\002 \001(\t\022\013\n\003pid\030\003 \001(\r\022"
      "0\n\tzone_info\030\004 \001(\0132\035.openmldb.nameserver"
      ".ZoneInfo\022)\n\ttask_info\030\005 \001(\0132\026.openmldb."
      "api.TaskInfo\022\014\n\002db\030\006 \001(\t:\000\"~\n\026CreateTabl"
      "eInfoRequest\0222\n\ntable_info\030\001 \001(\0132\036.openm"
      "ldb.nameserver.TableInfo\0220\n\tzone_info\030\002 "
      "\001(\0132\035.openmldb.nameserver.ZoneInfo\"G\n\020Sh"
      "owTableRequest\022\014\n\004name\030\001 \001(\t\022\014\n\002db\030\002 \001(\t"
      ":\000\022\027\n\010show_all\030\003 \001(\010:\005false\"b\n\021ShowTable"
      "Response\0222\n\ntable_info\030\001 \003(\0132\036.openmldb."
      "nameserver.TableInfo\022\014\n\004code\030\002 \002(\005\022\013\n\003ms"
      "g\030\003 \001(\t\"P\n\025MakeSnapshotNSRequest\022\014\n\004name"
      "\030\001 \002(\t\022\013\n\003pid\030\002 \002(\r\022\016\n\006offset\030\003 \001(\004\022\014\n\002d"
      "b\030\004 \001(\t:\000\"\254\001\n\016AddReplicaData\022\014\n\004name\030\001 \002"
      "(\t\022\013\n\003pid\030\002 \002(\r\022\020\n\010endpoint\030\003 \001(\t\022\022\n\nrem"
      "ote_tid\030\004 \001(\r\022\r\n\005alias\030\005 \001(\t\022<\n\017table_pa"
      "rtition\030\006 \001(\0132#.openmldb.nameserver.Tabl"
      "ePartition\022\014\n\002db\030\007 \001(\t:\000\"\330\001\n\023AddReplicaN"
      "SRequest\022\014\n\004name\030\001 \002(\t\022\013\n\003pid\030\002 \002(\r\022\020\n\010e"
      "ndpoint\030\003 \002(\t\022\021\n\tpid_group\030\004 \003(\r\022\026\n\016endp"
      "oint_group\030\005 \003(\t\0220\n\tzone_info\030\006 \001(\0132\035.op"
      "enmldb.nameserver.ZoneInfo\022)\n\ttask_info\030"
      "\007 \001(\0132\026.openmldb.api.TaskInfo\022\014\n\002db\030\010 \001("
      "\t:\000\"\"\n\004Pair\022\013\n\003key\030\001 \002(\t\022\r\n\005value\030\002 \002(\t\""
      "9\n\016ConfSetRequest\022\'\n\004conf\030\001 \002(\0132\031.openml"
      "db.nameserver.Pair\"\020\n\016ConfGetRequest\"U\n\017"
      "ConfGetResponse\022\014\n\004code\030\001 \002(\005\022\013\n\003msg\030\002 \001"
      "(\t\022\'\n\004conf\030\003 \003(\0132\031.openmldb.nameserver.P"
      "air\"X\n\023ChangeLeaderRequest\022\014\n\004name\030\001 \002(\t"
      "\022\013\n\003pid\030\002 \002(\r\022\030\n\020candidate_leader\030\003 \001(\t\022"
      "\014\n\002db\030\004 \001(\t:\000\"\?\n\026OfflineEndpointRequest\022"
      "\020\n\010endpoint\030\001 \002(\t\022\023\n\013concurrency\030\002 \001(\r\"U"
      "\n\026RecoverEndpointRequest\022\020\n\010endpoint\030\001 \002"
      "(\t\022\024\n\014need_restore\030\002 \001(\010\022\023\n\013concurrency\030"
      "\003 \001(\r\",\n\017GeneralResponse\022\014\n\004code\030\001 \002(\005\022\013"
      "\n\003msg\030\002 \001(\t\"h\n\027CreateTableInfoResponse\0222"
      "\n\ntable_info\030\001 \001(\0132\036.openmldb.nameserver"
      ".TableInfo\022\014\n\004code\030\002 \002(\005\022\013\n\003msg\030\003 \001(\t\"\023\n"
      "\021ShowTabletRequest\"d\n\024AddTableFieldReque"
      "st\022\014\n\004name\030\001 \001(\t\0220\n\013column_desc\030\002 \001(\0132\033."
      "openmldb.common.ColumnDesc\022\014\n\002db\030\003 \001(\t:\000"
      "\"S\n\014TabletStatus\022\020\n\010endpoint\030\001 \001(\t\022\r\n\005st"
      "ate\030\002 \001(\t\022\013\n\003age\030\003 \001(\004\022\025\n\rreal_endpoint\030"
      "\004 \001(\t\"c\n\022ShowTabletResponse\0222\n\007tablets\030\001"
      " \003(\0132!.openmldb.nameserver.TabletStatus\022"
      "\014\n\004code\030\002 \001(\005\022\013\n\003msg\030\003 \001(\t\"P\n\023RecoverTab"
      "leRequest\022\014\n\004name\030\001 \002(\t\022\013\n\003pid\030\002 \002(\r\022\020\n\010"
      "endpoint\030\003 \002(\t\022\014\n\002db\030\004 \001(\t:\000\"c\n\023DelRepli"
      "caNSRequest\022\014\n\004name\030\001 \002(\t\022\013\n\003pid\030\002 \002(\r\022\020"
      "\n\010endpoint\030\003 \002(\t\022\021\n\tpid_group\030\004 \003(\r\022\014\n\002d"
      "b\030\005 \001(\t:\000\"e\n\016MigrateRequest\022\024\n\014src_endpo"
      "int\030\001 \002(\t\022\014\n\004name\030\002 \002(\t\022\013\n\003pid\030\003 \003(\r\022\024\n\014"
      "des_endpoint\030\004 \002(\t\022\014\n\002db\030\005 \001(\t:\000\"9\n\013Migr"
      "ateInfo\022\024\n\014src_endpoint\030\001 \001(\t\022\024\n\014des_end"
      "point\030\002 \001(\t\"K\n\022EndpointStatusData\022\020\n\010end"
      "point\030\001 \001(\t\022\021\n\tis_leader\030\002 \001(\010\022\020\n\010is_ali"
      "ve\030\003 \001(\010\"b\n\020RecoverTableData\022\020\n\010endpoint"
      "\030\001 \001(\t\022\024\n\014offset_delta\030\002 \001(\004\022\021\n\tis_leade"
      "r\030\003 \001(\010\022\023\n\013concurrency\030\004 \001(\r\"\217\001\n\017CreateT"
      "ableData\022\r\n\005alias\030\001 \001(\t\0222\n\ntable_info\030\002 "
      "\001(\0132\036.openmldb.nameserver.TableInfo\0229\n\021r"
      "emote_table_info\030\003 \001(\0132\036.openmldb.namese"
      "rver.TableInfo\"\334\001\n\020ChangeLeaderData\022\014\n\004n"
      "ame\030\001 \001(\t\022\013\n\003tid\030\002 \001(\r\022\013\n\003pid\030\003 \001(\r\022\014\n\004t"
      "erm\030\004 \001(\004\022\016\n\006offset\030\005 \001(\004\022\016\n\006leader\030\006 \001("
      "\t\022\020\n\010follower\030\007 \003(\t\022\030\n\020candidate_leader\030"
      "\010 \001(\t\0228\n\017remote_follower\030\t \003(\0132\037.openmld"
      "b.common.EndpointAndTid\022\014\n\002db\030\n \001(\t:\000\"\274\001"
      "\n\010OPStatus\022\r\n\005op_id\030\001 \002(\004\022\017\n\007op_type\030\002 \002"
      "(\t\022\016\n\006status\030\003 \002(\t\022\022\n\nstart_time\030\004 \002(\004\022\020"
      "\n\010end_time\030\005 \002(\004\022\021\n\ttask_type\030\006 \002(\t\022\014\n\004n"
      "ame\030\007 \001(\t\022\013\n\003pid\030\010 \001(\r\022\036\n\023for_replica_cl"
      "uster\030\t \001(\005:\0010\022\014\n\002db\030\n \001(\t:\000\"C\n\030GetTable"
      "PartitionRequest\022\014\n\004name\030\001 \001(\t\022\013\n\003pid\030\002 "
      "\001(\r\022\014\n\002db\030\003 \001(\t:\000\"t\n\031GetTablePartitionRe"
      "sponse\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022<\n\017tab"
      "le_partition\030\003 \001(\0132#.openmldb.nameserver"
      ".TablePartition\"t\n\030SetTablePartitionRequ"
      "est\022\014\n\004name\030\001 \001(\t\022<\n\017table_partition\030\002 \001"
      "(\0132#.openmldb.nameserver.TablePartition\022"
      "\014\n\002db\030\003 \001(\t:\000\"f\n\027UpdateTableAliveRequest"
      "\022\014\n\004name\030\001 \001(\t\022\020\n\010endpoint\030\002 \001(\t\022\013\n\003pid\030"
      "\003 \001(\r\022\020\n\010is_alive\030\004 \001(\010\022\014\n\002db\030\005 \001(\t:\000\"<\n"
      "\023ShowOPStatusRequest\022\014\n\004name\030\001 \001(\t\022\013\n\003pi"
      "d\030\002 \001(\r\022\n\n\002db\030\003 \001(\t\"\022\n\020ConnectZKRequest\""
      "\025\n\023DisConnectZKRequest\"c\n\024ShowOPStatusRe"
      "sponse\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\0220\n\top_"
      "status\030\003 \003(\0132\035.openmldb.nameserver.OPSta"
      "tus\" \n\017CancelOPRequest\022\r\n\005op_id\030\001 \001(\004\"F\n"
      "\016ClusterAddress\022\024\n\014zk_endpoints\030\001 \001(\t\022\017\n"
      "\007zk_path\030\002 \001(\t\022\r\n\005alias\030\003 \001(\t\"\020\n\016General"
      "Request\"a\n\rClusterAddAge\0224\n\007replica\030\001 \001("
      "\0132#.openmldb.nameserver.ClusterAddress\022\013"
      "\n\003age\030\002 \001(\004\022\r\n\005state\030\003 \001(\t\"m\n\032ShowReplic"
      "aClusterResponse\0224\n\010replicas\030\001 \003(\0132\".ope"
      "nmldb.nameserver.ClusterAddAge\022\014\n\004code\030\002"
      " \001(\005\022\013\n\003msg\030\003 \001(\t\"\'\n\026RemoveReplicaOfRequ"
      "est\022\r\n\005alias\030\001 \001(\t\"M\n\031ReplicaClusterByNs"
      "Request\0220\n\tzone_info\030\001 \001(\0132\035.openmldb.na"
      "meserver.ZoneInfo\"v\n\010ZoneInfo\022\021\n\tzone_na"
      "me\030\001 \001(\t\022\025\n\rreplica_alias\030\002 \001(\t\022\021\n\tzone_"
      "term\030\003 \001(\004\022-\n\004mode\030\004 \001(\0162\037.openmldb.name"
      "server.ServerMode\"\242\001\n\035AddReplicaClusterB"
      "yNsResponse\0222\n\007tablets\030\001 \003(\0132!.openmldb."
      "nameserver.TabletStatus\0222\n\ntable_info\030\002 "
      "\003(\0132\036.openmldb.nameserver.TableInfo\022\014\n\004c"
      "ode\030\003 \002(\005\022\013\n\003msg\030\004 \001(\t\"@\n\021SwitchModeRequ"
      "est\022+\n\002sm\030\001 \001(\0162\037.openmldb.nameserver.Se"
      "rverMode\"R\n\020SyncTableRequest\022\014\n\004name\030\001 \001"
      "(\t\022\025\n\rcluster_alias\030\002 \001(\t\022\013\n\003pid\030\003 \001(\r\022\014"
      "\n\002db\030\004 \001(\t:\000\"B\n\025SetSdkEndpointRequest\022\023\n"
      "\013server_name\030\001 \001(\t\022\024\n\014sdk_endpoint\030\002 \001(\t"
      "\"\216\001\n\014AddIndexMeta\022\014\n\004name\030\001 \001(\t\022\013\n\003pid\030\002"
      " \001(\r\022.\n\ncolumn_key\030\003 \001(\0132\032.openmldb.comm"
      "on.ColumnKey\022\013\n\003idx\030\004 \001(\r\022\014\n\002db\030\005 \001(\t:\000\022"
      "\030\n\tskip_data\030\006 \001(\010:\005false\"\271\001\n\017AddIndexRe"
      "quest\022\014\n\004name\030\001 \001(\t\022.\n\ncolumn_key\030\002 \001(\0132"
      "\032.openmldb.common.ColumnKey\022\014\n\002db\030\003 \001(\t:"
      "\000\022)\n\004cols\030\004 \003(\0132\033.openmldb.common.Column"
      "Desc\022/\n\013column_keys\030\005 \003(\0132\032.openmldb.com"
      "mon.ColumnKey\"M\n\022DeleteIndexRequest\022\022\n\nt"
      "able_name\030\001 \001(\t\022\020\n\010idx_name\030\002 \001(\t\022\021\n\007db_"
      "name\030\003 \001(\t:\000\"A\n\025CreateDatabaseRequest\022\n\n"
      "\002db\030\001 \001(\t\022\034\n\rif_not_exists\030\002 \001(\010:\005false\""
      " \n\022UseDatabaseRequest\022\n\n\002db\030\001 \001(\t\"=\n\024Sho"
      "wDatabaseResponse\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002"
      " \001(\t\022\n\n\002db\030\003 \003(\t\"!\n\023DropDatabaseRequest\022"
      "\n\n\002db\030\001 \001(\t\"\030\n\026ShowSdkEndpointRequest\"h\n"
      "\027ShowSdkEndpointResponse\0222\n\007tablets\030\001 \003("
      "\0132!.openmldb.nameserver.TabletStatus\022\014\n\004"
      "code\030\002 \001(\005\022\013\n\003msg\030\003 \001(\t\"\024\n\022ShowCatalogRe"
      "quest\"_\n\023ShowCatalogResponse\022-\n\007catalog\030"
      "\001 \003(\0132\034.openmldb.common.CatalogInfo\022\014\n\004c"
      "ode\030\002 \001(\005\022\013\n\003msg\030\003 \001(\t\"B\n\025CreateFunction"
      "Request\022)\n\003fun\030\001 \001(\0132\034.openmldb.common.E"
      "xternalFun\"3\n\026CreateFunctionResponse\022\014\n\004"
      "code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"6\n\023DropFunctionR"
      "equest\022\014\n\004name\030\001 \001(\t\022\021\n\tif_exists\030\002 \001(\010\""
      "1\n\024DropFunctionResponse\022\014\n\004code\030\001 \001(\005\022\013\n"
      "\003msg\030\002 \001(\t\"#\n\023ShowFunctionRequest\022\014\n\004nam"
      "e\030\001 \001(\t\"\\\n\024ShowFunctionResponse\022\014\n\004code\030"
      "\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022)\n\003fun\030\003 \003(\0132\034.openml"
      "db.common.ExternalFun*5\n\nServerMode\022\013\n\007k"
      "NORMAL\020\000\022\013\n\007kLEADER\020\001\022\r\n\tkFOLLOWER\020\002*M\n\r"
      "ClusterStatus\022\023\n\017kClusterHealthy\020\000\022\023\n\017kC"
      "lusterOffline\020\001\022\022\n\016kClusterRemove\020\0022\355\'\n\n"
      "NameServer\022\\\n\013CreateTable\022\'.openmldb.nam"
      "eserver.CreateTableRequest\032$.openmldb.na"
      "meserver.GeneralResponse\022X\n\tDropTable\022%."
      "openmldb.nameserver.DropTableRequest\032$.o"
      "penmldb.nameserver.GeneralResponse\022]\n\nSh"
      "owTablet\022&.openmldb.nameserver.ShowTable"
      "tRequest\032\'.openmldb.nameserver.ShowTable"
      "tResponse\022Z\n\tShowTable\022%.openmldb.namese"
      "rver.ShowTableRequest\032&.openmldb.nameser"
      "ver.ShowTableResponse\022b\n\016MakeSnapshotNS\022"
      "*.openmldb.nameserver.MakeSnapshotNSRequ"
      "est\032$.openmldb.nameserver.GeneralRespons"
      "e\022^\n\014AddReplicaNS\022(.openmldb.nameserver."
      "AddReplicaNSRequest\032$.openmldb.nameserve"
      "r.GeneralResponse\022^\n\014DelReplicaNS\022(.open"
      "mldb.nameserver.DelReplicaNSRequest\032$.op"
      "enmldb.nameserver.GeneralResponse\022c\n\014Sho"
      "wOPStatus\022(.openmldb.nameserver.ShowOPSt"
      "atusRequest\032).openmldb.nameserver.ShowOP"
      "StatusResponse\022V\n\010CancelOP\022$.openmldb.na"
      "meserver.CancelOPRequest\032$.openmldb.name"
      "server.GeneralResponse\022T\n\007ConfSet\022#.open"
      "mldb.nameserver.ConfSetRequest\032$.openmld"
      "b.nameserver.GeneralResponse\022T\n\007ConfGet\022"
      "#.openmldb.nameserver.ConfGetRequest\032$.o"
      "penmldb.nameserver.ConfGetResponse\022^\n\014Ch"
      "angeLeader\022(.openmldb.nameserver.ChangeL"
      "eaderRequest\032$.openmldb.nameserver.Gener"
      "alResponse\022d\n\017OfflineEndpoint\022+.openmldb"
      ".nameserver.OfflineEndpointRequest\032$.ope"
      "nmldb.nameserver.GeneralResponse\022T\n\007Migr"
      "ate\022#.openmldb.nameserver.MigrateRequest"
      "\032$.openmldb.nameserver.GeneralResponse\022^"
      "\n\014RecoverTable\022(.openmldb.nameserver.Rec"
      "overTableRequest\032$.openmldb.nameserver.G"
      "eneralResponse\022d\n\017RecoverEndpoint\022+.open"
      "mldb.nameserver.RecoverEndpointRequest\032$"
      ".openmldb.nameserver.GeneralResponse\022X\n\t"
      "ConnectZK\022%.openmldb.nameserver.ConnectZ"
      "KRequest\032$.openmldb.nameserver.GeneralRe"
      "sponse\022^\n\014DisConnectZK\022(.openmldb.namese"
      "rver.DisConnectZKRequest\032$.openmldb.name"
      "server.GeneralResponse\022h\n\021SetTablePartit"
      "ion\022-.openmldb.nameserver.SetTablePartit"
      "ionRequest\032$.openmldb.nameserver.General"
      "Response\022r\n\021GetTablePartition\022-.openmldb"
      ".nameserver.GetTablePartitionRequest\032..o"
      "penmldb.nameserver.GetTablePartitionResp"
      "onse\022Z\n\tUpdateTTL\022%.openmldb.nameserver."
      "UpdateTTLRequest\032&.openmldb.nameserver.U"
      "pdateTTLResponse\022l\n\026UpdateTableAliveStat"
      "us\022,.openmldb.nameserver.UpdateTableAliv"
      "eRequest\032$.openmldb.nameserver.GeneralRe"
      "sponse\022`\n\rAddTableField\022).openmldb.names"
      "erver.AddTableFieldRequest\032$.openmldb.na"
      "meserver.GeneralResponse\022^\n\021AddReplicaCl"
      "uster\022#.openmldb.nameserver.ClusterAddre"
      "ss\032$.openmldb.nameserver.GeneralResponse"
      "\022j\n\022ShowReplicaCluster\022#.openmldb.namese"
      "rver.GeneralRequest\032/.openmldb.nameserve"
      "r.ShowReplicaClusterResponse\022i\n\024RemoveRe"
      "plicaCluster\022+.openmldb.nameserver.Remov"
      "eReplicaOfRequest\032$.openmldb.nameserver."
      "GeneralResponse\022{\n\025AddReplicaClusterByNs"
      "\022..openmldb.nameserver.ReplicaClusterByN"
      "sRequest\0322.openmldb.nameserver.AddReplic"
      "aClusterByNsResponse\022p\n\030RemoveReplicaClu"
      "sterByNs\022..openmldb.nameserver.ReplicaCl"
      "usterByNsRequest\032$.openmldb.nameserver.G"
      "eneralResponse\022Z\n\nSwitchMode\022&.openmldb."
      "nameserver.SwitchModeRequest\032$.openmldb."
      "nameserver.GeneralResponse\022R\n\rGetTaskSta"
      "tus\022\037.openmldb.api.TaskStatusRequest\032 .o"
      "penmldb.api.TaskStatusResponse\022N\n\014Delete"
      "OPTask\022\037.openmldb.api.DeleteTaskRequest\032"
      "\035.openmldb.api.GeneralResponse\022l\n\017Create"
      "TableInfo\022+.openmldb.nameserver.CreateTa"
      "bleInfoRequest\032,.openmldb.nameserver.Cre"
      "ateTableInfoResponse\022r\n\025CreateTableInfoS"
      "imply\022+.openmldb.nameserver.CreateTableI"
      "nfoRequest\032,.openmldb.nameserver.CreateT"
      "ableInfoResponse\022X\n\tLoadTable\022%.openmldb"
      ".nameserver.LoadTableRequest\032$.openmldb."
      "nameserver.GeneralResponse\022h\n\026AddReplica"
      "NSFromRemote\022(.openmldb.nameserver.AddRe"
      "plicaNSRequest\032$.openmldb.nameserver.Gen"
      "eralResponse\022X\n\tSyncTable\022%.openmldb.nam"
      "eserver.SyncTableRequest\032$.openmldb.name"
      "server.GeneralResponse\022V\n\010AddIndex\022$.ope"
      "nmldb.nameserver.AddIndexRequest\032$.openm"
      "ldb.nameserver.GeneralResponse\022\\\n\013Delete"
      "Index\022\'.openmldb.nameserver.DeleteIndexR"
      "equest\032$.openmldb.nameserver.GeneralResp"
      "onse\022b\n\016CreateDatabase\022*.openmldb.namese"
      "rver.CreateDatabaseRequest\032$.openmldb.na"
      "meserver.GeneralResponse\022\\\n\013UseDatabase\022"
      "\'.openmldb.nameserver.UseDatabaseRequest"
      "\032$.openmldb.nameserver.GeneralResponse\022^"
      "\n\014ShowDatabase\022#.openmldb.nameserver.Gen"
      "eralRequest\032).openmldb.nameserver.ShowDa"
      "tabaseResponse\022^\n\014DropDatabase\022(.openmld"
      "b.nameserver.DropDatabaseRequest\032$.openm"
      "ldb.nameserver.GeneralResponse\022b\n\016SetSdk"
      "Endpoint\022*.openmldb.nameserver.SetSdkEnd"
      "pointRequest\032$.openmldb.nameserver.Gener"
      "alResponse\022l\n\017ShowSdkEndpoint\022+.openmldb"
      ".nameserver.ShowSdkEndpointRequest\032,.ope"
      "nmldb.nameserver.ShowSdkEndpointResponse"
      "\022`\n\013ShowCatalog\022\'.openmldb.nameserver.Sh"
      "owCatalogRequest\032(.openmldb.nameserver.S"
      "howCatalogResponse\022^\n\026UpdateOfflineTable"
      "Info\022\036.openmldb.nameserver.TableInfo\032$.o"
      "penmldb.nameserver.GeneralResponse\022i\n\016Cr"
      "eateFunction\022*.openmldb.nameserver.Creat"
      "eFunctionRequest\032+.openmldb.nameserver.C"
      "reateFunctionResponse\022c\n\014DropFunction\022(."
      "openmldb.nameserver.DropFunctionRequest\032"
      ").openmldb.nameserver.DropFunctionRespon"
      "se\022c\n\014ShowFunction\022(.openmldb.nameserver"
      ".ShowFunctionRequest\032).openmldb.nameserv"
      "er.ShowFunctionResponse\022]\n\017CreateProcedu"
      "re\022$.openmldb.api.CreateProcedureRequest"
      "\032$.openmldb.nameserver.GeneralResponse\022Y"
      "\n\rDropProcedure\022\".openmldb.api.DropProce"
      "dureRequest\032$.openmldb.nameserver.Genera"
      "lResponse\022X\n\rShowProcedure\022\".openmldb.ap"
      "i.ShowProcedureRequest\032#.openmldb.api.Sh"
      "owProcedureResponseB&\n\035com._4paradigm.op"
      "enmldb.protoB\002NS\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 13059);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "name_server.proto", &protobuf_RegisterTypes);
  ::protobuf_type_2eproto::AddDescriptors();
  ::protobuf_common_2eproto::AddDescriptors();
  ::protobuf_tablet_2eproto::AddDescriptors();
  ::protobuf_sql_5fprocedure_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_name_5fserver_2eproto
namespace openmldb {
namespace nameserver {
const ::google::protobuf::EnumDescriptor* ServerMode_descriptor() {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_name_5fserver_2eproto::file_level_enum_descriptors[0];
}
bool ServerMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ClusterStatus_descriptor() {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_name_5fserver_2eproto::file_level_enum_descriptors[1];
}
bool ClusterStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void PartitionMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PartitionMeta::kEndpointFieldNumber;
const int PartitionMeta::kIsLeaderFieldNumber;
const int PartitionMeta::kIsAliveFieldNumber;
const int PartitionMeta::kOffsetFieldNumber;
const int PartitionMeta::kRecordCntFieldNumber;
const int PartitionMeta::kRecordByteSizeFieldNumber;
const int PartitionMeta::kTabletHasPartitionFieldNumber;
const int PartitionMeta::kDiskusedFieldNumber;
const int PartitionMeta::kRemoteTidFieldNumber;
const int PartitionMeta::kAliasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PartitionMeta::PartitionMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_PartitionMeta.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.PartitionMeta)
}
PartitionMeta::PartitionMeta(const PartitionMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_endpoint()) {
    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_alias()) {
    alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&remote_tid_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(remote_tid_));
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.PartitionMeta)
}

void PartitionMeta::SharedCtor() {
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_leader_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(is_leader_));
  is_alive_ = true;
  tablet_has_partition_ = true;
  remote_tid_ = 4294967295u;
}

PartitionMeta::~PartitionMeta() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.PartitionMeta)
  SharedDtor();
}

void PartitionMeta::SharedDtor() {
  endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alias_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PartitionMeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PartitionMeta::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PartitionMeta& PartitionMeta::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_PartitionMeta.base);
  return *internal_default_instance();
}


void PartitionMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.PartitionMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      endpoint_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      alias_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_leader_) -
        reinterpret_cast<char*>(&offset_)) + sizeof(is_leader_));
    is_alive_ = true;
  }
  if (cached_has_bits & 768u) {
    tablet_has_partition_ = true;
    remote_tid_ = 4294967295u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PartitionMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.PartitionMeta)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string endpoint = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->endpoint().data(), static_cast<int>(this->endpoint().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.PartitionMeta.endpoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool is_leader = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_is_leader();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_leader_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_alive = 3 [default = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_is_alive();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_alive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 offset = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 record_cnt = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_record_cnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &record_cnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 record_byte_size = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_record_byte_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &record_byte_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool tablet_has_partition = 7 [default = true];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_tablet_has_partition();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &tablet_has_partition_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 diskused = 8 [default = 0];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_diskused();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &diskused_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 remote_tid = 9 [default = 4294967295];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_remote_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remote_tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string alias = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alias()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alias().data(), static_cast<int>(this->alias().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.PartitionMeta.alias");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.PartitionMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.PartitionMeta)
  return false;
#undef DO_
}

void PartitionMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.PartitionMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string endpoint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.PartitionMeta.endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->endpoint(), output);
  }

  // required bool is_leader = 2;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_leader(), output);
  }

  // optional bool is_alive = 3 [default = true];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_alive(), output);
  }

  // optional uint64 offset = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->offset(), output);
  }

  // optional uint64 record_cnt = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->record_cnt(), output);
  }

  // optional uint64 record_byte_size = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->record_byte_size(), output);
  }

  // optional bool tablet_has_partition = 7 [default = true];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->tablet_has_partition(), output);
  }

  // optional uint64 diskused = 8 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->diskused(), output);
  }

  // optional uint32 remote_tid = 9 [default = 4294967295];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->remote_tid(), output);
  }

  // optional string alias = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alias().data(), static_cast<int>(this->alias().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.PartitionMeta.alias");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->alias(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.PartitionMeta)
}

::google::protobuf::uint8* PartitionMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.PartitionMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string endpoint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.PartitionMeta.endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->endpoint(), target);
  }

  // required bool is_leader = 2;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_leader(), target);
  }

  // optional bool is_alive = 3 [default = true];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_alive(), target);
  }

  // optional uint64 offset = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->offset(), target);
  }

  // optional uint64 record_cnt = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->record_cnt(), target);
  }

  // optional uint64 record_byte_size = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->record_byte_size(), target);
  }

  // optional bool tablet_has_partition = 7 [default = true];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->tablet_has_partition(), target);
  }

  // optional uint64 diskused = 8 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->diskused(), target);
  }

  // optional uint32 remote_tid = 9 [default = 4294967295];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->remote_tid(), target);
  }

  // optional string alias = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alias().data(), static_cast<int>(this->alias().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.PartitionMeta.alias");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->alias(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.PartitionMeta)
  return target;
}

size_t PartitionMeta::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openmldb.nameserver.PartitionMeta)
  size_t total_size = 0;

  if (has_endpoint()) {
    // required string endpoint = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->endpoint());
  }

  if (has_is_leader()) {
    // required bool is_leader = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t PartitionMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.PartitionMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000041) ^ 0x00000041) == 0) {  // All required fields are present.
    // required string endpoint = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->endpoint());

    // required bool is_leader = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 62u) {
    // optional string alias = 10;
    if (has_alias()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alias());
    }

    // optional uint64 offset = 4;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->offset());
    }

    // optional uint64 record_cnt = 5;
    if (has_record_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->record_cnt());
    }

    // optional uint64 record_byte_size = 6;
    if (has_record_byte_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->record_byte_size());
    }

    // optional uint64 diskused = 8 [default = 0];
    if (has_diskused()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->diskused());
    }

  }
  // optional bool is_alive = 3 [default = true];
  if (has_is_alive()) {
    total_size += 1 + 1;
  }

  if (_has_bits_[8 / 32] & 768u) {
    // optional bool tablet_has_partition = 7 [default = true];
    if (has_tablet_has_partition()) {
      total_size += 1 + 1;
    }

    // optional uint32 remote_tid = 9 [default = 4294967295];
    if (has_remote_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->remote_tid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PartitionMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.PartitionMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const PartitionMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PartitionMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.PartitionMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.PartitionMeta)
    MergeFrom(*source);
  }
}

void PartitionMeta::MergeFrom(const PartitionMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.PartitionMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_endpoint();
      endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_alias();
      alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
    }
    if (cached_has_bits & 0x00000004u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000008u) {
      record_cnt_ = from.record_cnt_;
    }
    if (cached_has_bits & 0x00000010u) {
      record_byte_size_ = from.record_byte_size_;
    }
    if (cached_has_bits & 0x00000020u) {
      diskused_ = from.diskused_;
    }
    if (cached_has_bits & 0x00000040u) {
      is_leader_ = from.is_leader_;
    }
    if (cached_has_bits & 0x00000080u) {
      is_alive_ = from.is_alive_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      tablet_has_partition_ = from.tablet_has_partition_;
    }
    if (cached_has_bits & 0x00000200u) {
      remote_tid_ = from.remote_tid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PartitionMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.PartitionMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PartitionMeta::CopyFrom(const PartitionMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.PartitionMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PartitionMeta::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000041) != 0x00000041) return false;
  return true;
}

void PartitionMeta::Swap(PartitionMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PartitionMeta::InternalSwap(PartitionMeta* other) {
  using std::swap;
  endpoint_.Swap(&other->endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  alias_.Swap(&other->alias_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(offset_, other->offset_);
  swap(record_cnt_, other->record_cnt_);
  swap(record_byte_size_, other->record_byte_size_);
  swap(diskused_, other->diskused_);
  swap(is_leader_, other->is_leader_);
  swap(is_alive_, other->is_alive_);
  swap(tablet_has_partition_, other->tablet_has_partition_);
  swap(remote_tid_, other->remote_tid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PartitionMeta::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TermPair::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TermPair::kTermFieldNumber;
const int TermPair::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TermPair::TermPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_TermPair.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.TermPair)
}
TermPair::TermPair(const TermPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&term_, &from.term_,
    static_cast<size_t>(reinterpret_cast<char*>(&offset_) -
    reinterpret_cast<char*>(&term_)) + sizeof(offset_));
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.TermPair)
}

void TermPair::SharedCtor() {
  ::memset(&term_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offset_) -
      reinterpret_cast<char*>(&term_)) + sizeof(offset_));
}

TermPair::~TermPair() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.TermPair)
  SharedDtor();
}

void TermPair::SharedDtor() {
}

void TermPair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TermPair::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TermPair& TermPair::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_TermPair.base);
  return *internal_default_instance();
}


void TermPair::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.TermPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&term_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&offset_) -
        reinterpret_cast<char*>(&term_)) + sizeof(offset_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TermPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.TermPair)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 term = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_term();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.TermPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.TermPair)
  return false;
#undef DO_
}

void TermPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.TermPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 term = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->term(), output);
  }

  // required uint64 offset = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->offset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.TermPair)
}

::google::protobuf::uint8* TermPair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.TermPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 term = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->term(), target);
  }

  // required uint64 offset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->offset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.TermPair)
  return target;
}

size_t TermPair::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openmldb.nameserver.TermPair)
  size_t total_size = 0;

  if (has_term()) {
    // required uint64 term = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->term());
  }

  if (has_offset()) {
    // required uint64 offset = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  return total_size;
}
size_t TermPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.TermPair)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 term = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->term());

    // required uint64 offset = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TermPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.TermPair)
  GOOGLE_DCHECK_NE(&from, this);
  const TermPair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TermPair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.TermPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.TermPair)
    MergeFrom(*source);
  }
}

void TermPair::MergeFrom(const TermPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.TermPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      term_ = from.term_;
    }
    if (cached_has_bits & 0x00000002u) {
      offset_ = from.offset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TermPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.TermPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TermPair::CopyFrom(const TermPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.TermPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TermPair::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void TermPair::Swap(TermPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TermPair::InternalSwap(TermPair* other) {
  using std::swap;
  swap(term_, other->term_);
  swap(offset_, other->offset_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TermPair::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TablePartition::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TablePartition::kPidFieldNumber;
const int TablePartition::kPartitionMetaFieldNumber;
const int TablePartition::kTermOffsetFieldNumber;
const int TablePartition::kRecordCntFieldNumber;
const int TablePartition::kRecordByteSizeFieldNumber;
const int TablePartition::kDiskusedFieldNumber;
const int TablePartition::kRemotePartitionMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TablePartition::TablePartition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_TablePartition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.TablePartition)
}
TablePartition::TablePartition(const TablePartition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      partition_meta_(from.partition_meta_),
      term_offset_(from.term_offset_),
      remote_partition_meta_(from.remote_partition_meta_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&record_cnt_, &from.record_cnt_,
    static_cast<size_t>(reinterpret_cast<char*>(&pid_) -
    reinterpret_cast<char*>(&record_cnt_)) + sizeof(pid_));
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.TablePartition)
}

void TablePartition::SharedCtor() {
  ::memset(&record_cnt_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&record_cnt_)) + sizeof(pid_));
}

TablePartition::~TablePartition() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.TablePartition)
  SharedDtor();
}

void TablePartition::SharedDtor() {
}

void TablePartition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TablePartition::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TablePartition& TablePartition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_TablePartition.base);
  return *internal_default_instance();
}


void TablePartition::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.TablePartition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  partition_meta_.Clear();
  term_offset_.Clear();
  remote_partition_meta_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&record_cnt_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pid_) -
        reinterpret_cast<char*>(&record_cnt_)) + sizeof(pid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TablePartition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.TablePartition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 pid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.nameserver.PartitionMeta partition_meta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_partition_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.nameserver.TermPair term_offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_term_offset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 record_cnt = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_record_cnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &record_cnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 record_byte_size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_record_byte_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &record_byte_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 diskused = 6 [default = 0];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_diskused();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &diskused_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.nameserver.PartitionMeta remote_partition_meta = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_remote_partition_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.TablePartition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.TablePartition)
  return false;
#undef DO_
}

void TablePartition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.TablePartition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 pid = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pid(), output);
  }

  // repeated .openmldb.nameserver.PartitionMeta partition_meta = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->partition_meta_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->partition_meta(static_cast<int>(i)),
      output);
  }

  // repeated .openmldb.nameserver.TermPair term_offset = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->term_offset_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->term_offset(static_cast<int>(i)),
      output);
  }

  // optional uint64 record_cnt = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->record_cnt(), output);
  }

  // optional uint64 record_byte_size = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->record_byte_size(), output);
  }

  // optional uint64 diskused = 6 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->diskused(), output);
  }

  // repeated .openmldb.nameserver.PartitionMeta remote_partition_meta = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->remote_partition_meta_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->remote_partition_meta(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.TablePartition)
}

::google::protobuf::uint8* TablePartition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.TablePartition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 pid = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pid(), target);
  }

  // repeated .openmldb.nameserver.PartitionMeta partition_meta = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->partition_meta_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->partition_meta(static_cast<int>(i)), deterministic, target);
  }

  // repeated .openmldb.nameserver.TermPair term_offset = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->term_offset_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->term_offset(static_cast<int>(i)), deterministic, target);
  }

  // optional uint64 record_cnt = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->record_cnt(), target);
  }

  // optional uint64 record_byte_size = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->record_byte_size(), target);
  }

  // optional uint64 diskused = 6 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->diskused(), target);
  }

  // repeated .openmldb.nameserver.PartitionMeta remote_partition_meta = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->remote_partition_meta_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->remote_partition_meta(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.TablePartition)
  return target;
}

size_t TablePartition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.TablePartition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 pid = 1;
  if (has_pid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pid());
  }
  // repeated .openmldb.nameserver.PartitionMeta partition_meta = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->partition_meta_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->partition_meta(static_cast<int>(i)));
    }
  }

  // repeated .openmldb.nameserver.TermPair term_offset = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->term_offset_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->term_offset(static_cast<int>(i)));
    }
  }

  // repeated .openmldb.nameserver.PartitionMeta remote_partition_meta = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->remote_partition_meta_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->remote_partition_meta(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 record_cnt = 4;
    if (has_record_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->record_cnt());
    }

    // optional uint64 record_byte_size = 5;
    if (has_record_byte_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->record_byte_size());
    }

    // optional uint64 diskused = 6 [default = 0];
    if (has_diskused()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->diskused());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TablePartition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.TablePartition)
  GOOGLE_DCHECK_NE(&from, this);
  const TablePartition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TablePartition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.TablePartition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.TablePartition)
    MergeFrom(*source);
  }
}

void TablePartition::MergeFrom(const TablePartition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.TablePartition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  partition_meta_.MergeFrom(from.partition_meta_);
  term_offset_.MergeFrom(from.term_offset_);
  remote_partition_meta_.MergeFrom(from.remote_partition_meta_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      record_cnt_ = from.record_cnt_;
    }
    if (cached_has_bits & 0x00000002u) {
      record_byte_size_ = from.record_byte_size_;
    }
    if (cached_has_bits & 0x00000004u) {
      diskused_ = from.diskused_;
    }
    if (cached_has_bits & 0x00000008u) {
      pid_ = from.pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TablePartition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.TablePartition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TablePartition::CopyFrom(const TablePartition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.TablePartition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TablePartition::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->partition_meta())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->term_offset())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->remote_partition_meta())) return false;
  return true;
}

void TablePartition::Swap(TablePartition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TablePartition::InternalSwap(TablePartition* other) {
  using std::swap;
  CastToBase(&partition_meta_)->InternalSwap(CastToBase(&other->partition_meta_));
  CastToBase(&term_offset_)->InternalSwap(CastToBase(&other->term_offset_));
  CastToBase(&remote_partition_meta_)->InternalSwap(CastToBase(&other->remote_partition_meta_));
  swap(record_cnt_, other->record_cnt_);
  swap(record_byte_size_, other->record_byte_size_);
  swap(diskused_, other->diskused_);
  swap(pid_, other->pid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TablePartition::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateTTLRequest::InitAsDefaultInstance() {
  ::openmldb::nameserver::_UpdateTTLRequest_default_instance_._instance.get_mutable()->ttl_desc_ = const_cast< ::openmldb::common::TTLSt*>(
      ::openmldb::common::TTLSt::internal_default_instance());
}
void UpdateTTLRequest::clear_ttl_desc() {
  if (ttl_desc_ != NULL) ttl_desc_->Clear();
  clear_has_ttl_desc();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateTTLRequest::kNameFieldNumber;
const int UpdateTTLRequest::kDbFieldNumber;
const int UpdateTTLRequest::kIndexNameFieldNumber;
const int UpdateTTLRequest::kTtlDescFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateTTLRequest::UpdateTTLRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_UpdateTTLRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.UpdateTTLRequest)
}
UpdateTTLRequest::UpdateTTLRequest(const UpdateTTLRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_index_name()) {
    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
  if (from.has_ttl_desc()) {
    ttl_desc_ = new ::openmldb::common::TTLSt(*from.ttl_desc_);
  } else {
    ttl_desc_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.UpdateTTLRequest)
}

void UpdateTTLRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ttl_desc_ = NULL;
}

UpdateTTLRequest::~UpdateTTLRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.UpdateTTLRequest)
  SharedDtor();
}

void UpdateTTLRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete ttl_desc_;
}

void UpdateTTLRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateTTLRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateTTLRequest& UpdateTTLRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_UpdateTTLRequest.base);
  return *internal_default_instance();
}


void UpdateTTLRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.UpdateTTLRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      index_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(ttl_desc_ != NULL);
      ttl_desc_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UpdateTTLRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.UpdateTTLRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.UpdateTTLRequest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 2 [default = ""];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.UpdateTTLRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string index_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_index_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->index_name().data(), static_cast<int>(this->index_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.UpdateTTLRequest.index_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.common.TTLSt ttl_desc = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ttl_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.UpdateTTLRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.UpdateTTLRequest)
  return false;
#undef DO_
}

void UpdateTTLRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.UpdateTTLRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.UpdateTTLRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string db = 2 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.UpdateTTLRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->db(), output);
  }

  // optional string index_name = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.UpdateTTLRequest.index_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->index_name(), output);
  }

  // optional .openmldb.common.TTLSt ttl_desc = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_ttl_desc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.UpdateTTLRequest)
}

::google::protobuf::uint8* UpdateTTLRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.UpdateTTLRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.UpdateTTLRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string db = 2 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.UpdateTTLRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->db(), target);
  }

  // optional string index_name = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.UpdateTTLRequest.index_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->index_name(), target);
  }

  // optional .openmldb.common.TTLSt ttl_desc = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_ttl_desc(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.UpdateTTLRequest)
  return target;
}

size_t UpdateTTLRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.UpdateTTLRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string db = 2 [default = ""];
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional string index_name = 3;
    if (has_index_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->index_name());
    }

    // optional .openmldb.common.TTLSt ttl_desc = 4;
    if (has_ttl_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ttl_desc_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateTTLRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.UpdateTTLRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateTTLRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateTTLRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.UpdateTTLRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.UpdateTTLRequest)
    MergeFrom(*source);
  }
}

void UpdateTTLRequest::MergeFrom(const UpdateTTLRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.UpdateTTLRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_index_name();
      index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_ttl_desc()->::openmldb::common::TTLSt::MergeFrom(from.ttl_desc());
    }
  }
}

void UpdateTTLRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.UpdateTTLRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateTTLRequest::CopyFrom(const UpdateTTLRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.UpdateTTLRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateTTLRequest::IsInitialized() const {
  return true;
}

void UpdateTTLRequest::Swap(UpdateTTLRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateTTLRequest::InternalSwap(UpdateTTLRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  index_name_.Swap(&other->index_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ttl_desc_, other->ttl_desc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateTTLRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateTTLResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateTTLResponse::kCodeFieldNumber;
const int UpdateTTLResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateTTLResponse::UpdateTTLResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_UpdateTTLResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.UpdateTTLResponse)
}
UpdateTTLResponse::UpdateTTLResponse(const UpdateTTLResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.UpdateTTLResponse)
}

void UpdateTTLResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

UpdateTTLResponse::~UpdateTTLResponse() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.UpdateTTLResponse)
  SharedDtor();
}

void UpdateTTLResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateTTLResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateTTLResponse::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateTTLResponse& UpdateTTLResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_UpdateTTLResponse.base);
  return *internal_default_instance();
}


void UpdateTTLResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.UpdateTTLResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UpdateTTLResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.UpdateTTLResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.UpdateTTLResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.UpdateTTLResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.UpdateTTLResponse)
  return false;
#undef DO_
}

void UpdateTTLResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.UpdateTTLResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.UpdateTTLResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.UpdateTTLResponse)
}

::google::protobuf::uint8* UpdateTTLResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.UpdateTTLResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.UpdateTTLResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.UpdateTTLResponse)
  return target;
}

size_t UpdateTTLResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.UpdateTTLResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateTTLResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.UpdateTTLResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateTTLResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateTTLResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.UpdateTTLResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.UpdateTTLResponse)
    MergeFrom(*source);
  }
}

void UpdateTTLResponse::MergeFrom(const UpdateTTLResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.UpdateTTLResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UpdateTTLResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.UpdateTTLResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateTTLResponse::CopyFrom(const UpdateTTLResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.UpdateTTLResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateTTLResponse::IsInitialized() const {
  return true;
}

void UpdateTTLResponse::Swap(UpdateTTLResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateTTLResponse::InternalSwap(UpdateTTLResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateTTLResponse::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

OfflineTableInfo_OptionsEntry_DoNotUse::OfflineTableInfo_OptionsEntry_DoNotUse() {}
OfflineTableInfo_OptionsEntry_DoNotUse::OfflineTableInfo_OptionsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void OfflineTableInfo_OptionsEntry_DoNotUse::MergeFrom(const OfflineTableInfo_OptionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata OfflineTableInfo_OptionsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[5];
}
void OfflineTableInfo_OptionsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void OfflineTableInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineTableInfo::kPathFieldNumber;
const int OfflineTableInfo::kFormatFieldNumber;
const int OfflineTableInfo::kDeepCopyFieldNumber;
const int OfflineTableInfo::kOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineTableInfo::OfflineTableInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_OfflineTableInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.OfflineTableInfo)
}
OfflineTableInfo::OfflineTableInfo(const OfflineTableInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  options_.MergeFrom(from.options_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  format_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_format()) {
    format_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.format_);
  }
  deep_copy_ = from.deep_copy_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.OfflineTableInfo)
}

void OfflineTableInfo::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  format_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deep_copy_ = true;
}

OfflineTableInfo::~OfflineTableInfo() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.OfflineTableInfo)
  SharedDtor();
}

void OfflineTableInfo::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  format_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OfflineTableInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OfflineTableInfo::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OfflineTableInfo& OfflineTableInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_OfflineTableInfo.base);
  return *internal_default_instance();
}


void OfflineTableInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.OfflineTableInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  options_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      format_.ClearNonDefaultToEmptyNoArena();
    }
    deep_copy_ = true;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OfflineTableInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.OfflineTableInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.OfflineTableInfo.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string format = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_format()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->format().data(), static_cast<int>(this->format().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.OfflineTableInfo.format");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool deep_copy = 3 [default = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_deep_copy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &deep_copy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> options = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          OfflineTableInfo_OptionsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              OfflineTableInfo_OptionsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&options_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.OfflineTableInfo.OptionsEntry.key");
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.OfflineTableInfo.OptionsEntry.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.OfflineTableInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.OfflineTableInfo)
  return false;
#undef DO_
}

void OfflineTableInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.OfflineTableInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.OfflineTableInfo.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // required string format = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->format().data(), static_cast<int>(this->format().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.OfflineTableInfo.format");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->format(), output);
  }

  // optional bool deep_copy = 3 [default = true];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->deep_copy(), output);
  }

  // map<string, string> options = 4;
  if (!this->options().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "openmldb.nameserver.OfflineTableInfo.OptionsEntry.key");
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "openmldb.nameserver.OfflineTableInfo.OptionsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->options().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->options().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->options().begin();
          it != this->options().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<OfflineTableInfo_OptionsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(options_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<OfflineTableInfo_OptionsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->options().begin();
          it != this->options().end(); ++it) {
        entry.reset(options_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.OfflineTableInfo)
}

::google::protobuf::uint8* OfflineTableInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.OfflineTableInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.OfflineTableInfo.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // required string format = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->format().data(), static_cast<int>(this->format().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.OfflineTableInfo.format");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->format(), target);
  }

  // optional bool deep_copy = 3 [default = true];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->deep_copy(), target);
  }

  // map<string, string> options = 4;
  if (!this->options().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "openmldb.nameserver.OfflineTableInfo.OptionsEntry.key");
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "openmldb.nameserver.OfflineTableInfo.OptionsEntry.value");
      }
    };

    if (deterministic &&
        this->options().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->options().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->options().begin();
          it != this->options().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<OfflineTableInfo_OptionsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(options_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<OfflineTableInfo_OptionsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->options().begin();
          it != this->options().end(); ++it) {
        entry.reset(options_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.OfflineTableInfo)
  return target;
}

size_t OfflineTableInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openmldb.nameserver.OfflineTableInfo)
  size_t total_size = 0;

  if (has_path()) {
    // required string path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  if (has_format()) {
    // required string format = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->format());
  }

  return total_size;
}
size_t OfflineTableInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.OfflineTableInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());

    // required string format = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->format());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // map<string, string> options = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->options_size());
  {
    ::std::unique_ptr<OfflineTableInfo_OptionsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->options().begin();
        it != this->options().end(); ++it) {
      entry.reset(options_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // optional bool deep_copy = 3 [default = true];
  if (has_deep_copy()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OfflineTableInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.OfflineTableInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const OfflineTableInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OfflineTableInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.OfflineTableInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.OfflineTableInfo)
    MergeFrom(*source);
  }
}

void OfflineTableInfo::MergeFrom(const OfflineTableInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.OfflineTableInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  options_.MergeFrom(from.options_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_format();
      format_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.format_);
    }
    if (cached_has_bits & 0x00000004u) {
      deep_copy_ = from.deep_copy_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OfflineTableInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.OfflineTableInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfflineTableInfo::CopyFrom(const OfflineTableInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.OfflineTableInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineTableInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void OfflineTableInfo::Swap(OfflineTableInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineTableInfo::InternalSwap(OfflineTableInfo* other) {
  using std::swap;
  options_.Swap(&other->options_);
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  format_.Swap(&other->format_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(deep_copy_, other->deep_copy_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OfflineTableInfo::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TableInfo::InitAsDefaultInstance() {
  ::openmldb::nameserver::_TableInfo_default_instance_._instance.get_mutable()->offline_table_info_ = const_cast< ::openmldb::nameserver::OfflineTableInfo*>(
      ::openmldb::nameserver::OfflineTableInfo::internal_default_instance());
}
void TableInfo::clear_column_desc() {
  column_desc_.Clear();
}
void TableInfo::clear_column_key() {
  column_key_.Clear();
}
void TableInfo::clear_added_column_desc() {
  added_column_desc_.Clear();
}
void TableInfo::clear_schema_versions() {
  schema_versions_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TableInfo::kNameFieldNumber;
const int TableInfo::kSegCntFieldNumber;
const int TableInfo::kTablePartitionFieldNumber;
const int TableInfo::kTidFieldNumber;
const int TableInfo::kPartitionNumFieldNumber;
const int TableInfo::kReplicaNumFieldNumber;
const int TableInfo::kCompressTypeFieldNumber;
const int TableInfo::kKeyEntryMaxHeightFieldNumber;
const int TableInfo::kColumnDescFieldNumber;
const int TableInfo::kColumnKeyFieldNumber;
const int TableInfo::kAddedColumnDescFieldNumber;
const int TableInfo::kFormatVersionFieldNumber;
const int TableInfo::kDbFieldNumber;
const int TableInfo::kPartitionKeyFieldNumber;
const int TableInfo::kSchemaVersionsFieldNumber;
const int TableInfo::kOfflineTableInfoFieldNumber;
const int TableInfo::kStorageModeFieldNumber;
const int TableInfo::kBaseTableTidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TableInfo::TableInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_TableInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.TableInfo)
}
TableInfo::TableInfo(const TableInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      table_partition_(from.table_partition_),
      column_desc_(from.column_desc_),
      column_key_(from.column_key_),
      added_column_desc_(from.added_column_desc_),
      partition_key_(from.partition_key_),
      schema_versions_(from.schema_versions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  if (from.has_offline_table_info()) {
    offline_table_info_ = new ::openmldb::nameserver::OfflineTableInfo(*from.offline_table_info_);
  } else {
    offline_table_info_ = NULL;
  }
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&format_version_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(format_version_));
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.TableInfo)
}

void TableInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offline_table_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&base_table_tid_) -
      reinterpret_cast<char*>(&offline_table_info_)) + sizeof(base_table_tid_));
  storage_mode_ = 1;
  seg_cnt_ = 8u;
  format_version_ = 1u;
}

TableInfo::~TableInfo() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.TableInfo)
  SharedDtor();
}

void TableInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete offline_table_info_;
}

void TableInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TableInfo::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TableInfo& TableInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_TableInfo.base);
  return *internal_default_instance();
}


void TableInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.TableInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  table_partition_.Clear();
  column_desc_.Clear();
  column_key_.Clear();
  added_column_desc_.Clear();
  partition_key_.Clear();
  schema_versions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(offline_table_info_ != NULL);
      offline_table_info_->Clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&key_entry_max_height_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(key_entry_max_height_));
  }
  if (cached_has_bits & 3840u) {
    base_table_tid_ = 0u;
    storage_mode_ = 1;
    seg_cnt_ = 8u;
    format_version_ = 1u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TableInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.TableInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.TableInfo.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 seg_cnt = 2 [default = 8];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_seg_cnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seg_cnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.nameserver.TablePartition table_partition = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_table_partition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 tid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 partition_num = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_partition_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &partition_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 replica_num = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_replica_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &replica_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.type.CompressType compress_type = 7 [default = kNoCompress];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::type::CompressType_IsValid(value)) {
            set_compress_type(static_cast< ::openmldb::type::CompressType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                7, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 key_entry_max_height = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_key_entry_max_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &key_entry_max_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.common.ColumnDesc column_desc = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_column_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.common.ColumnKey column_key = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_column_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.common.ColumnDesc added_column_desc = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_added_column_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 format_version = 12 [default = 1];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_format_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &format_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 13 [default = ""];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.TableInfo.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string partition_key = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_partition_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->partition_key(this->partition_key_size() - 1).data(),
            static_cast<int>(this->partition_key(this->partition_key_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.TableInfo.partition_key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.common.VersionPair schema_versions = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_schema_versions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.nameserver.OfflineTableInfo offline_table_info = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_offline_table_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.common.StorageMode storage_mode = 17 [default = kMemory];
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::common::StorageMode_IsValid(value)) {
            set_storage_mode(static_cast< ::openmldb::common::StorageMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                17, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 base_table_tid = 18 [default = 0];
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_base_table_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &base_table_tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.TableInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.TableInfo)
  return false;
#undef DO_
}

void TableInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.TableInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.TableInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint32 seg_cnt = 2 [default = 8];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->seg_cnt(), output);
  }

  // repeated .openmldb.nameserver.TablePartition table_partition = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->table_partition_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->table_partition(static_cast<int>(i)),
      output);
  }

  // optional uint32 tid = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->tid(), output);
  }

  // optional uint32 partition_num = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->partition_num(), output);
  }

  // optional uint32 replica_num = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->replica_num(), output);
  }

  // optional .openmldb.type.CompressType compress_type = 7 [default = kNoCompress];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->compress_type(), output);
  }

  // optional uint32 key_entry_max_height = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->key_entry_max_height(), output);
  }

  // repeated .openmldb.common.ColumnDesc column_desc = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->column_desc_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->column_desc(static_cast<int>(i)),
      output);
  }

  // repeated .openmldb.common.ColumnKey column_key = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->column_key_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->column_key(static_cast<int>(i)),
      output);
  }

  // repeated .openmldb.common.ColumnDesc added_column_desc = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->added_column_desc_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->added_column_desc(static_cast<int>(i)),
      output);
  }

  // optional uint32 format_version = 12 [default = 1];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->format_version(), output);
  }

  // optional string db = 13 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.TableInfo.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->db(), output);
  }

  // repeated string partition_key = 14;
  for (int i = 0, n = this->partition_key_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->partition_key(i).data(), static_cast<int>(this->partition_key(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.TableInfo.partition_key");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->partition_key(i), output);
  }

  // repeated .openmldb.common.VersionPair schema_versions = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->schema_versions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->schema_versions(static_cast<int>(i)),
      output);
  }

  // optional .openmldb.nameserver.OfflineTableInfo offline_table_info = 16;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_offline_table_info(), output);
  }

  // optional .openmldb.common.StorageMode storage_mode = 17 [default = kMemory];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      17, this->storage_mode(), output);
  }

  // optional uint32 base_table_tid = 18 [default = 0];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->base_table_tid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.TableInfo)
}

::google::protobuf::uint8* TableInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.TableInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.TableInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint32 seg_cnt = 2 [default = 8];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->seg_cnt(), target);
  }

  // repeated .openmldb.nameserver.TablePartition table_partition = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->table_partition_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->table_partition(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 tid = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->tid(), target);
  }

  // optional uint32 partition_num = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->partition_num(), target);
  }

  // optional uint32 replica_num = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->replica_num(), target);
  }

  // optional .openmldb.type.CompressType compress_type = 7 [default = kNoCompress];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->compress_type(), target);
  }

  // optional uint32 key_entry_max_height = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->key_entry_max_height(), target);
  }

  // repeated .openmldb.common.ColumnDesc column_desc = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->column_desc_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->column_desc(static_cast<int>(i)), deterministic, target);
  }

  // repeated .openmldb.common.ColumnKey column_key = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->column_key_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->column_key(static_cast<int>(i)), deterministic, target);
  }

  // repeated .openmldb.common.ColumnDesc added_column_desc = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->added_column_desc_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->added_column_desc(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 format_version = 12 [default = 1];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->format_version(), target);
  }

  // optional string db = 13 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.TableInfo.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->db(), target);
  }

  // repeated string partition_key = 14;
  for (int i = 0, n = this->partition_key_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->partition_key(i).data(), static_cast<int>(this->partition_key(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.TableInfo.partition_key");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(14, this->partition_key(i), target);
  }

  // repeated .openmldb.common.VersionPair schema_versions = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->schema_versions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->schema_versions(static_cast<int>(i)), deterministic, target);
  }

  // optional .openmldb.nameserver.OfflineTableInfo offline_table_info = 16;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_offline_table_info(), deterministic, target);
  }

  // optional .openmldb.common.StorageMode storage_mode = 17 [default = kMemory];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      17, this->storage_mode(), target);
  }

  // optional uint32 base_table_tid = 18 [default = 0];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->base_table_tid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.TableInfo)
  return target;
}

size_t TableInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.TableInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.nameserver.TablePartition table_partition = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->table_partition_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->table_partition(static_cast<int>(i)));
    }
  }

  // repeated .openmldb.common.ColumnDesc column_desc = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->column_desc_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->column_desc(static_cast<int>(i)));
    }
  }

  // repeated .openmldb.common.ColumnKey column_key = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->column_key_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->column_key(static_cast<int>(i)));
    }
  }

  // repeated .openmldb.common.ColumnDesc added_column_desc = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->added_column_desc_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->added_column_desc(static_cast<int>(i)));
    }
  }

  // repeated string partition_key = 14;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->partition_key_size());
  for (int i = 0, n = this->partition_key_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->partition_key(i));
  }

  // repeated .openmldb.common.VersionPair schema_versions = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->schema_versions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->schema_versions(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string db = 13 [default = ""];
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional .openmldb.nameserver.OfflineTableInfo offline_table_info = 16;
    if (has_offline_table_info()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *offline_table_info_);
    }

    // optional uint32 tid = 4;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 partition_num = 5;
    if (has_partition_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->partition_num());
    }

    // optional uint32 replica_num = 6;
    if (has_replica_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->replica_num());
    }

    // optional .openmldb.type.CompressType compress_type = 7 [default = kNoCompress];
    if (has_compress_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->compress_type());
    }

    // optional uint32 key_entry_max_height = 8;
    if (has_key_entry_max_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->key_entry_max_height());
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional uint32 base_table_tid = 18 [default = 0];
    if (has_base_table_tid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->base_table_tid());
    }

    // optional .openmldb.common.StorageMode storage_mode = 17 [default = kMemory];
    if (has_storage_mode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->storage_mode());
    }

    // optional uint32 seg_cnt = 2 [default = 8];
    if (has_seg_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->seg_cnt());
    }

    // optional uint32 format_version = 12 [default = 1];
    if (has_format_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->format_version());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TableInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.TableInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const TableInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TableInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.TableInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.TableInfo)
    MergeFrom(*source);
  }
}

void TableInfo::MergeFrom(const TableInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.TableInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  table_partition_.MergeFrom(from.table_partition_);
  column_desc_.MergeFrom(from.column_desc_);
  column_key_.MergeFrom(from.column_key_);
  added_column_desc_.MergeFrom(from.added_column_desc_);
  partition_key_.MergeFrom(from.partition_key_);
  schema_versions_.MergeFrom(from.schema_versions_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_offline_table_info()->::openmldb::nameserver::OfflineTableInfo::MergeFrom(from.offline_table_info());
    }
    if (cached_has_bits & 0x00000008u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000010u) {
      partition_num_ = from.partition_num_;
    }
    if (cached_has_bits & 0x00000020u) {
      replica_num_ = from.replica_num_;
    }
    if (cached_has_bits & 0x00000040u) {
      compress_type_ = from.compress_type_;
    }
    if (cached_has_bits & 0x00000080u) {
      key_entry_max_height_ = from.key_entry_max_height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      base_table_tid_ = from.base_table_tid_;
    }
    if (cached_has_bits & 0x00000200u) {
      storage_mode_ = from.storage_mode_;
    }
    if (cached_has_bits & 0x00000400u) {
      seg_cnt_ = from.seg_cnt_;
    }
    if (cached_has_bits & 0x00000800u) {
      format_version_ = from.format_version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TableInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.TableInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableInfo::CopyFrom(const TableInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.TableInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableInfo::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->table_partition())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->column_desc())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->added_column_desc())) return false;
  if (has_offline_table_info()) {
    if (!this->offline_table_info_->IsInitialized()) return false;
  }
  return true;
}

void TableInfo::Swap(TableInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TableInfo::InternalSwap(TableInfo* other) {
  using std::swap;
  CastToBase(&table_partition_)->InternalSwap(CastToBase(&other->table_partition_));
  CastToBase(&column_desc_)->InternalSwap(CastToBase(&other->column_desc_));
  CastToBase(&column_key_)->InternalSwap(CastToBase(&other->column_key_));
  CastToBase(&added_column_desc_)->InternalSwap(CastToBase(&other->added_column_desc_));
  partition_key_.InternalSwap(CastToBase(&other->partition_key_));
  CastToBase(&schema_versions_)->InternalSwap(CastToBase(&other->schema_versions_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(offline_table_info_, other->offline_table_info_);
  swap(tid_, other->tid_);
  swap(partition_num_, other->partition_num_);
  swap(replica_num_, other->replica_num_);
  swap(compress_type_, other->compress_type_);
  swap(key_entry_max_height_, other->key_entry_max_height_);
  swap(base_table_tid_, other->base_table_tid_);
  swap(storage_mode_, other->storage_mode_);
  swap(seg_cnt_, other->seg_cnt_);
  swap(format_version_, other->format_version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TableInfo::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateTableRequest::InitAsDefaultInstance() {
  ::openmldb::nameserver::_CreateTableRequest_default_instance_._instance.get_mutable()->table_info_ = const_cast< ::openmldb::nameserver::TableInfo*>(
      ::openmldb::nameserver::TableInfo::internal_default_instance());
  ::openmldb::nameserver::_CreateTableRequest_default_instance_._instance.get_mutable()->zone_info_ = const_cast< ::openmldb::nameserver::ZoneInfo*>(
      ::openmldb::nameserver::ZoneInfo::internal_default_instance());
  ::openmldb::nameserver::_CreateTableRequest_default_instance_._instance.get_mutable()->task_info_ = const_cast< ::openmldb::api::TaskInfo*>(
      ::openmldb::api::TaskInfo::internal_default_instance());
}
void CreateTableRequest::clear_task_info() {
  if (task_info_ != NULL) task_info_->Clear();
  clear_has_task_info();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateTableRequest::kTableInfoFieldNumber;
const int CreateTableRequest::kZoneInfoFieldNumber;
const int CreateTableRequest::kTaskInfoFieldNumber;
const int CreateTableRequest::kCreateIfNotExistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateTableRequest::CreateTableRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_CreateTableRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.CreateTableRequest)
}
CreateTableRequest::CreateTableRequest(const CreateTableRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_table_info()) {
    table_info_ = new ::openmldb::nameserver::TableInfo(*from.table_info_);
  } else {
    table_info_ = NULL;
  }
  if (from.has_zone_info()) {
    zone_info_ = new ::openmldb::nameserver::ZoneInfo(*from.zone_info_);
  } else {
    zone_info_ = NULL;
  }
  if (from.has_task_info()) {
    task_info_ = new ::openmldb::api::TaskInfo(*from.task_info_);
  } else {
    task_info_ = NULL;
  }
  create_if_not_exist_ = from.create_if_not_exist_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.CreateTableRequest)
}

void CreateTableRequest::SharedCtor() {
  ::memset(&table_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&create_if_not_exist_) -
      reinterpret_cast<char*>(&table_info_)) + sizeof(create_if_not_exist_));
}

CreateTableRequest::~CreateTableRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.CreateTableRequest)
  SharedDtor();
}

void CreateTableRequest::SharedDtor() {
  if (this != internal_default_instance()) delete table_info_;
  if (this != internal_default_instance()) delete zone_info_;
  if (this != internal_default_instance()) delete task_info_;
}

void CreateTableRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateTableRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateTableRequest& CreateTableRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_CreateTableRequest.base);
  return *internal_default_instance();
}


void CreateTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.CreateTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(table_info_ != NULL);
      table_info_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(zone_info_ != NULL);
      zone_info_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(task_info_ != NULL);
      task_info_->Clear();
    }
  }
  create_if_not_exist_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateTableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.CreateTableRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .openmldb.nameserver.TableInfo table_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.nameserver.ZoneInfo zone_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_zone_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.api.TaskInfo task_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_task_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool create_if_not_exist = 4 [default = false];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_create_if_not_exist();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &create_if_not_exist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.CreateTableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.CreateTableRequest)
  return false;
#undef DO_
}

void CreateTableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.CreateTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .openmldb.nameserver.TableInfo table_info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_table_info(), output);
  }

  // optional .openmldb.nameserver.ZoneInfo zone_info = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_zone_info(), output);
  }

  // optional .openmldb.api.TaskInfo task_info = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_task_info(), output);
  }

  // optional bool create_if_not_exist = 4 [default = false];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->create_if_not_exist(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.CreateTableRequest)
}

::google::protobuf::uint8* CreateTableRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.CreateTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .openmldb.nameserver.TableInfo table_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_table_info(), deterministic, target);
  }

  // optional .openmldb.nameserver.ZoneInfo zone_info = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_zone_info(), deterministic, target);
  }

  // optional .openmldb.api.TaskInfo task_info = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_task_info(), deterministic, target);
  }

  // optional bool create_if_not_exist = 4 [default = false];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->create_if_not_exist(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.CreateTableRequest)
  return target;
}

size_t CreateTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.CreateTableRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .openmldb.nameserver.TableInfo table_info = 1;
  if (has_table_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *table_info_);
  }
  if (_has_bits_[0 / 32] & 14u) {
    // optional .openmldb.nameserver.ZoneInfo zone_info = 2;
    if (has_zone_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *zone_info_);
    }

    // optional .openmldb.api.TaskInfo task_info = 3;
    if (has_task_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_info_);
    }

    // optional bool create_if_not_exist = 4 [default = false];
    if (has_create_if_not_exist()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateTableRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.CreateTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTableRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateTableRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.CreateTableRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.CreateTableRequest)
    MergeFrom(*source);
  }
}

void CreateTableRequest::MergeFrom(const CreateTableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.CreateTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_table_info()->::openmldb::nameserver::TableInfo::MergeFrom(from.table_info());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_zone_info()->::openmldb::nameserver::ZoneInfo::MergeFrom(from.zone_info());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_task_info()->::openmldb::api::TaskInfo::MergeFrom(from.task_info());
    }
    if (cached_has_bits & 0x00000008u) {
      create_if_not_exist_ = from.create_if_not_exist_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CreateTableRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.CreateTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTableRequest::CopyFrom(const CreateTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.CreateTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTableRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_table_info()) {
    if (!this->table_info_->IsInitialized()) return false;
  }
  if (has_task_info()) {
    if (!this->task_info_->IsInitialized()) return false;
  }
  return true;
}

void CreateTableRequest::Swap(CreateTableRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateTableRequest::InternalSwap(CreateTableRequest* other) {
  using std::swap;
  swap(table_info_, other->table_info_);
  swap(zone_info_, other->zone_info_);
  swap(task_info_, other->task_info_);
  swap(create_if_not_exist_, other->create_if_not_exist_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateTableRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DropTableRequest::InitAsDefaultInstance() {
  ::openmldb::nameserver::_DropTableRequest_default_instance_._instance.get_mutable()->zone_info_ = const_cast< ::openmldb::nameserver::ZoneInfo*>(
      ::openmldb::nameserver::ZoneInfo::internal_default_instance());
  ::openmldb::nameserver::_DropTableRequest_default_instance_._instance.get_mutable()->task_info_ = const_cast< ::openmldb::api::TaskInfo*>(
      ::openmldb::api::TaskInfo::internal_default_instance());
}
void DropTableRequest::clear_task_info() {
  if (task_info_ != NULL) task_info_->Clear();
  clear_has_task_info();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DropTableRequest::kNameFieldNumber;
const int DropTableRequest::kZoneInfoFieldNumber;
const int DropTableRequest::kTaskInfoFieldNumber;
const int DropTableRequest::kDbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DropTableRequest::DropTableRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_DropTableRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.DropTableRequest)
}
DropTableRequest::DropTableRequest(const DropTableRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  if (from.has_zone_info()) {
    zone_info_ = new ::openmldb::nameserver::ZoneInfo(*from.zone_info_);
  } else {
    zone_info_ = NULL;
  }
  if (from.has_task_info()) {
    task_info_ = new ::openmldb::api::TaskInfo(*from.task_info_);
  } else {
    task_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.DropTableRequest)
}

void DropTableRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&zone_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&task_info_) -
      reinterpret_cast<char*>(&zone_info_)) + sizeof(task_info_));
}

DropTableRequest::~DropTableRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.DropTableRequest)
  SharedDtor();
}

void DropTableRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete zone_info_;
  if (this != internal_default_instance()) delete task_info_;
}

void DropTableRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DropTableRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DropTableRequest& DropTableRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_DropTableRequest.base);
  return *internal_default_instance();
}


void DropTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.DropTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(zone_info_ != NULL);
      zone_info_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(task_info_ != NULL);
      task_info_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DropTableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.DropTableRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.DropTableRequest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.nameserver.ZoneInfo zone_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_zone_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.api.TaskInfo task_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_task_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 4 [default = ""];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.DropTableRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.DropTableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.DropTableRequest)
  return false;
#undef DO_
}

void DropTableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.DropTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.DropTableRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .openmldb.nameserver.ZoneInfo zone_info = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_zone_info(), output);
  }

  // optional .openmldb.api.TaskInfo task_info = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_task_info(), output);
  }

  // optional string db = 4 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.DropTableRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->db(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.DropTableRequest)
}

::google::protobuf::uint8* DropTableRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.DropTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.DropTableRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .openmldb.nameserver.ZoneInfo zone_info = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_zone_info(), deterministic, target);
  }

  // optional .openmldb.api.TaskInfo task_info = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_task_info(), deterministic, target);
  }

  // optional string db = 4 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.DropTableRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->db(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.DropTableRequest)
  return target;
}

size_t DropTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.DropTableRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  if (_has_bits_[0 / 32] & 14u) {
    // optional string db = 4 [default = ""];
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional .openmldb.nameserver.ZoneInfo zone_info = 2;
    if (has_zone_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *zone_info_);
    }

    // optional .openmldb.api.TaskInfo task_info = 3;
    if (has_task_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_info_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DropTableRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.DropTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DropTableRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DropTableRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.DropTableRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.DropTableRequest)
    MergeFrom(*source);
  }
}

void DropTableRequest::MergeFrom(const DropTableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.DropTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_zone_info()->::openmldb::nameserver::ZoneInfo::MergeFrom(from.zone_info());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_task_info()->::openmldb::api::TaskInfo::MergeFrom(from.task_info());
    }
  }
}

void DropTableRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.DropTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropTableRequest::CopyFrom(const DropTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.DropTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropTableRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_task_info()) {
    if (!this->task_info_->IsInitialized()) return false;
  }
  return true;
}

void DropTableRequest::Swap(DropTableRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DropTableRequest::InternalSwap(DropTableRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(zone_info_, other->zone_info_);
  swap(task_info_, other->task_info_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DropTableRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoadTableRequest::InitAsDefaultInstance() {
  ::openmldb::nameserver::_LoadTableRequest_default_instance_._instance.get_mutable()->zone_info_ = const_cast< ::openmldb::nameserver::ZoneInfo*>(
      ::openmldb::nameserver::ZoneInfo::internal_default_instance());
  ::openmldb::nameserver::_LoadTableRequest_default_instance_._instance.get_mutable()->task_info_ = const_cast< ::openmldb::api::TaskInfo*>(
      ::openmldb::api::TaskInfo::internal_default_instance());
}
void LoadTableRequest::clear_task_info() {
  if (task_info_ != NULL) task_info_->Clear();
  clear_has_task_info();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadTableRequest::kNameFieldNumber;
const int LoadTableRequest::kEndpointFieldNumber;
const int LoadTableRequest::kPidFieldNumber;
const int LoadTableRequest::kZoneInfoFieldNumber;
const int LoadTableRequest::kTaskInfoFieldNumber;
const int LoadTableRequest::kDbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadTableRequest::LoadTableRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_LoadTableRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.LoadTableRequest)
}
LoadTableRequest::LoadTableRequest(const LoadTableRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_endpoint()) {
    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  if (from.has_zone_info()) {
    zone_info_ = new ::openmldb::nameserver::ZoneInfo(*from.zone_info_);
  } else {
    zone_info_ = NULL;
  }
  if (from.has_task_info()) {
    task_info_ = new ::openmldb::api::TaskInfo(*from.task_info_);
  } else {
    task_info_ = NULL;
  }
  pid_ = from.pid_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.LoadTableRequest)
}

void LoadTableRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&zone_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&zone_info_)) + sizeof(pid_));
}

LoadTableRequest::~LoadTableRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.LoadTableRequest)
  SharedDtor();
}

void LoadTableRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete zone_info_;
  if (this != internal_default_instance()) delete task_info_;
}

void LoadTableRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoadTableRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoadTableRequest& LoadTableRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_LoadTableRequest.base);
  return *internal_default_instance();
}


void LoadTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.LoadTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      endpoint_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(zone_info_ != NULL);
      zone_info_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(task_info_ != NULL);
      task_info_->Clear();
    }
  }
  pid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LoadTableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.LoadTableRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.LoadTableRequest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string endpoint = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->endpoint().data(), static_cast<int>(this->endpoint().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.LoadTableRequest.endpoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.nameserver.ZoneInfo zone_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_zone_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.api.TaskInfo task_info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_task_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 6 [default = ""];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.LoadTableRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.LoadTableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.LoadTableRequest)
  return false;
#undef DO_
}

void LoadTableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.LoadTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.LoadTableRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string endpoint = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.LoadTableRequest.endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->endpoint(), output);
  }

  // optional uint32 pid = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pid(), output);
  }

  // optional .openmldb.nameserver.ZoneInfo zone_info = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_zone_info(), output);
  }

  // optional .openmldb.api.TaskInfo task_info = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_task_info(), output);
  }

  // optional string db = 6 [default = ""];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.LoadTableRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->db(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.LoadTableRequest)
}

::google::protobuf::uint8* LoadTableRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.LoadTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.LoadTableRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string endpoint = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.LoadTableRequest.endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->endpoint(), target);
  }

  // optional uint32 pid = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pid(), target);
  }

  // optional .openmldb.nameserver.ZoneInfo zone_info = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_zone_info(), deterministic, target);
  }

  // optional .openmldb.api.TaskInfo task_info = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_task_info(), deterministic, target);
  }

  // optional string db = 6 [default = ""];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.LoadTableRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->db(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.LoadTableRequest)
  return target;
}

size_t LoadTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.LoadTableRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string endpoint = 2;
    if (has_endpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->endpoint());
    }

    // optional string db = 6 [default = ""];
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional .openmldb.nameserver.ZoneInfo zone_info = 4;
    if (has_zone_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *zone_info_);
    }

    // optional .openmldb.api.TaskInfo task_info = 5;
    if (has_task_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_info_);
    }

    // optional uint32 pid = 3;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadTableRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.LoadTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadTableRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoadTableRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.LoadTableRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.LoadTableRequest)
    MergeFrom(*source);
  }
}

void LoadTableRequest::MergeFrom(const LoadTableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.LoadTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_endpoint();
      endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_zone_info()->::openmldb::nameserver::ZoneInfo::MergeFrom(from.zone_info());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_task_info()->::openmldb::api::TaskInfo::MergeFrom(from.task_info());
    }
    if (cached_has_bits & 0x00000020u) {
      pid_ = from.pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LoadTableRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.LoadTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadTableRequest::CopyFrom(const LoadTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.LoadTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadTableRequest::IsInitialized() const {
  if (has_task_info()) {
    if (!this->task_info_->IsInitialized()) return false;
  }
  return true;
}

void LoadTableRequest::Swap(LoadTableRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadTableRequest::InternalSwap(LoadTableRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  endpoint_.Swap(&other->endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(zone_info_, other->zone_info_);
  swap(task_info_, other->task_info_);
  swap(pid_, other->pid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoadTableRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateTableInfoRequest::InitAsDefaultInstance() {
  ::openmldb::nameserver::_CreateTableInfoRequest_default_instance_._instance.get_mutable()->table_info_ = const_cast< ::openmldb::nameserver::TableInfo*>(
      ::openmldb::nameserver::TableInfo::internal_default_instance());
  ::openmldb::nameserver::_CreateTableInfoRequest_default_instance_._instance.get_mutable()->zone_info_ = const_cast< ::openmldb::nameserver::ZoneInfo*>(
      ::openmldb::nameserver::ZoneInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateTableInfoRequest::kTableInfoFieldNumber;
const int CreateTableInfoRequest::kZoneInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateTableInfoRequest::CreateTableInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_CreateTableInfoRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.CreateTableInfoRequest)
}
CreateTableInfoRequest::CreateTableInfoRequest(const CreateTableInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_table_info()) {
    table_info_ = new ::openmldb::nameserver::TableInfo(*from.table_info_);
  } else {
    table_info_ = NULL;
  }
  if (from.has_zone_info()) {
    zone_info_ = new ::openmldb::nameserver::ZoneInfo(*from.zone_info_);
  } else {
    zone_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.CreateTableInfoRequest)
}

void CreateTableInfoRequest::SharedCtor() {
  ::memset(&table_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zone_info_) -
      reinterpret_cast<char*>(&table_info_)) + sizeof(zone_info_));
}

CreateTableInfoRequest::~CreateTableInfoRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.CreateTableInfoRequest)
  SharedDtor();
}

void CreateTableInfoRequest::SharedDtor() {
  if (this != internal_default_instance()) delete table_info_;
  if (this != internal_default_instance()) delete zone_info_;
}

void CreateTableInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateTableInfoRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateTableInfoRequest& CreateTableInfoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_CreateTableInfoRequest.base);
  return *internal_default_instance();
}


void CreateTableInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.CreateTableInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(table_info_ != NULL);
      table_info_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(zone_info_ != NULL);
      zone_info_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateTableInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.CreateTableInfoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .openmldb.nameserver.TableInfo table_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.nameserver.ZoneInfo zone_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_zone_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.CreateTableInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.CreateTableInfoRequest)
  return false;
#undef DO_
}

void CreateTableInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.CreateTableInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.nameserver.TableInfo table_info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_table_info(), output);
  }

  // optional .openmldb.nameserver.ZoneInfo zone_info = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_zone_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.CreateTableInfoRequest)
}

::google::protobuf::uint8* CreateTableInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.CreateTableInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.nameserver.TableInfo table_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_table_info(), deterministic, target);
  }

  // optional .openmldb.nameserver.ZoneInfo zone_info = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_zone_info(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.CreateTableInfoRequest)
  return target;
}

size_t CreateTableInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.CreateTableInfoRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .openmldb.nameserver.TableInfo table_info = 1;
    if (has_table_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *table_info_);
    }

    // optional .openmldb.nameserver.ZoneInfo zone_info = 2;
    if (has_zone_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *zone_info_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateTableInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.CreateTableInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTableInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateTableInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.CreateTableInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.CreateTableInfoRequest)
    MergeFrom(*source);
  }
}

void CreateTableInfoRequest::MergeFrom(const CreateTableInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.CreateTableInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_table_info()->::openmldb::nameserver::TableInfo::MergeFrom(from.table_info());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_zone_info()->::openmldb::nameserver::ZoneInfo::MergeFrom(from.zone_info());
    }
  }
}

void CreateTableInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.CreateTableInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTableInfoRequest::CopyFrom(const CreateTableInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.CreateTableInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTableInfoRequest::IsInitialized() const {
  if (has_table_info()) {
    if (!this->table_info_->IsInitialized()) return false;
  }
  return true;
}

void CreateTableInfoRequest::Swap(CreateTableInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateTableInfoRequest::InternalSwap(CreateTableInfoRequest* other) {
  using std::swap;
  swap(table_info_, other->table_info_);
  swap(zone_info_, other->zone_info_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateTableInfoRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShowTableRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowTableRequest::kNameFieldNumber;
const int ShowTableRequest::kDbFieldNumber;
const int ShowTableRequest::kShowAllFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowTableRequest::ShowTableRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_ShowTableRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.ShowTableRequest)
}
ShowTableRequest::ShowTableRequest(const ShowTableRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  show_all_ = from.show_all_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.ShowTableRequest)
}

void ShowTableRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  show_all_ = false;
}

ShowTableRequest::~ShowTableRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.ShowTableRequest)
  SharedDtor();
}

void ShowTableRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShowTableRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShowTableRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShowTableRequest& ShowTableRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_ShowTableRequest.base);
  return *internal_default_instance();
}


void ShowTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.ShowTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
  }
  show_all_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowTableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.ShowTableRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ShowTableRequest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 2 [default = ""];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ShowTableRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show_all = 3 [default = false];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_show_all();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_all_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.ShowTableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.ShowTableRequest)
  return false;
#undef DO_
}

void ShowTableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.ShowTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowTableRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string db = 2 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowTableRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->db(), output);
  }

  // optional bool show_all = 3 [default = false];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->show_all(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.ShowTableRequest)
}

::google::protobuf::uint8* ShowTableRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.ShowTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowTableRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string db = 2 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowTableRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->db(), target);
  }

  // optional bool show_all = 3 [default = false];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->show_all(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.ShowTableRequest)
  return target;
}

size_t ShowTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.ShowTableRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string db = 2 [default = ""];
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional bool show_all = 3 [default = false];
    if (has_show_all()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowTableRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.ShowTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowTableRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShowTableRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.ShowTableRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.ShowTableRequest)
    MergeFrom(*source);
  }
}

void ShowTableRequest::MergeFrom(const ShowTableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.ShowTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000004u) {
      show_all_ = from.show_all_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShowTableRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.ShowTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowTableRequest::CopyFrom(const ShowTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.ShowTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowTableRequest::IsInitialized() const {
  return true;
}

void ShowTableRequest::Swap(ShowTableRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowTableRequest::InternalSwap(ShowTableRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(show_all_, other->show_all_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShowTableRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShowTableResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowTableResponse::kTableInfoFieldNumber;
const int ShowTableResponse::kCodeFieldNumber;
const int ShowTableResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowTableResponse::ShowTableResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_ShowTableResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.ShowTableResponse)
}
ShowTableResponse::ShowTableResponse(const ShowTableResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      table_info_(from.table_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.ShowTableResponse)
}

void ShowTableResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

ShowTableResponse::~ShowTableResponse() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.ShowTableResponse)
  SharedDtor();
}

void ShowTableResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShowTableResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShowTableResponse::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShowTableResponse& ShowTableResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_ShowTableResponse.base);
  return *internal_default_instance();
}


void ShowTableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.ShowTableResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  table_info_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowTableResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.ShowTableResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openmldb.nameserver.TableInfo table_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_table_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ShowTableResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.ShowTableResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.ShowTableResponse)
  return false;
#undef DO_
}

void ShowTableResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.ShowTableResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openmldb.nameserver.TableInfo table_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->table_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->table_info(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->code(), output);
  }

  // optional string msg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowTableResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.ShowTableResponse)
}

::google::protobuf::uint8* ShowTableResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.ShowTableResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openmldb.nameserver.TableInfo table_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->table_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->table_info(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->code(), target);
  }

  // optional string msg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowTableResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.ShowTableResponse)
  return target;
}

size_t ShowTableResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.ShowTableResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 code = 2;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }
  // repeated .openmldb.nameserver.TableInfo table_info = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->table_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->table_info(static_cast<int>(i)));
    }
  }

  // optional string msg = 3;
  if (has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowTableResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.ShowTableResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowTableResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShowTableResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.ShowTableResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.ShowTableResponse)
    MergeFrom(*source);
  }
}

void ShowTableResponse::MergeFrom(const ShowTableResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.ShowTableResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  table_info_.MergeFrom(from.table_info_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShowTableResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.ShowTableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowTableResponse::CopyFrom(const ShowTableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.ShowTableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowTableResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->table_info())) return false;
  return true;
}

void ShowTableResponse::Swap(ShowTableResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowTableResponse::InternalSwap(ShowTableResponse* other) {
  using std::swap;
  CastToBase(&table_info_)->InternalSwap(CastToBase(&other->table_info_));
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShowTableResponse::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MakeSnapshotNSRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MakeSnapshotNSRequest::kNameFieldNumber;
const int MakeSnapshotNSRequest::kPidFieldNumber;
const int MakeSnapshotNSRequest::kOffsetFieldNumber;
const int MakeSnapshotNSRequest::kDbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MakeSnapshotNSRequest::MakeSnapshotNSRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_MakeSnapshotNSRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.MakeSnapshotNSRequest)
}
MakeSnapshotNSRequest::MakeSnapshotNSRequest(const MakeSnapshotNSRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&pid_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(pid_));
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.MakeSnapshotNSRequest)
}

void MakeSnapshotNSRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(pid_));
}

MakeSnapshotNSRequest::~MakeSnapshotNSRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.MakeSnapshotNSRequest)
  SharedDtor();
}

void MakeSnapshotNSRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MakeSnapshotNSRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MakeSnapshotNSRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MakeSnapshotNSRequest& MakeSnapshotNSRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_MakeSnapshotNSRequest.base);
  return *internal_default_instance();
}


void MakeSnapshotNSRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.MakeSnapshotNSRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pid_) -
        reinterpret_cast<char*>(&offset_)) + sizeof(pid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MakeSnapshotNSRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.MakeSnapshotNSRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.MakeSnapshotNSRequest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 4 [default = ""];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.MakeSnapshotNSRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.MakeSnapshotNSRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.MakeSnapshotNSRequest)
  return false;
#undef DO_
}

void MakeSnapshotNSRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.MakeSnapshotNSRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.MakeSnapshotNSRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional uint64 offset = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->offset(), output);
  }

  // optional string db = 4 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.MakeSnapshotNSRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->db(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.MakeSnapshotNSRequest)
}

::google::protobuf::uint8* MakeSnapshotNSRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.MakeSnapshotNSRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.MakeSnapshotNSRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional uint64 offset = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->offset(), target);
  }

  // optional string db = 4 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.MakeSnapshotNSRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->db(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.MakeSnapshotNSRequest)
  return target;
}

size_t MakeSnapshotNSRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openmldb.nameserver.MakeSnapshotNSRequest)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_pid()) {
    // required uint32 pid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pid());
  }

  return total_size;
}
size_t MakeSnapshotNSRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.MakeSnapshotNSRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000009) ^ 0x00000009) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required uint32 pid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional string db = 4 [default = ""];
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional uint64 offset = 3;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->offset());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MakeSnapshotNSRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.MakeSnapshotNSRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MakeSnapshotNSRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MakeSnapshotNSRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.MakeSnapshotNSRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.MakeSnapshotNSRequest)
    MergeFrom(*source);
  }
}

void MakeSnapshotNSRequest::MergeFrom(const MakeSnapshotNSRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.MakeSnapshotNSRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000004u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000008u) {
      pid_ = from.pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MakeSnapshotNSRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.MakeSnapshotNSRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MakeSnapshotNSRequest::CopyFrom(const MakeSnapshotNSRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.MakeSnapshotNSRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MakeSnapshotNSRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000009) != 0x00000009) return false;
  return true;
}

void MakeSnapshotNSRequest::Swap(MakeSnapshotNSRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MakeSnapshotNSRequest::InternalSwap(MakeSnapshotNSRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(offset_, other->offset_);
  swap(pid_, other->pid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MakeSnapshotNSRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddReplicaData::InitAsDefaultInstance() {
  ::openmldb::nameserver::_AddReplicaData_default_instance_._instance.get_mutable()->table_partition_ = const_cast< ::openmldb::nameserver::TablePartition*>(
      ::openmldb::nameserver::TablePartition::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddReplicaData::kNameFieldNumber;
const int AddReplicaData::kPidFieldNumber;
const int AddReplicaData::kEndpointFieldNumber;
const int AddReplicaData::kRemoteTidFieldNumber;
const int AddReplicaData::kAliasFieldNumber;
const int AddReplicaData::kTablePartitionFieldNumber;
const int AddReplicaData::kDbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddReplicaData::AddReplicaData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_AddReplicaData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.AddReplicaData)
}
AddReplicaData::AddReplicaData(const AddReplicaData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_endpoint()) {
    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_alias()) {
    alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  if (from.has_table_partition()) {
    table_partition_ = new ::openmldb::nameserver::TablePartition(*from.table_partition_);
  } else {
    table_partition_ = NULL;
  }
  ::memcpy(&pid_, &from.pid_,
    static_cast<size_t>(reinterpret_cast<char*>(&remote_tid_) -
    reinterpret_cast<char*>(&pid_)) + sizeof(remote_tid_));
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.AddReplicaData)
}

void AddReplicaData::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&table_partition_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remote_tid_) -
      reinterpret_cast<char*>(&table_partition_)) + sizeof(remote_tid_));
}

AddReplicaData::~AddReplicaData() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.AddReplicaData)
  SharedDtor();
}

void AddReplicaData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alias_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete table_partition_;
}

void AddReplicaData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddReplicaData::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddReplicaData& AddReplicaData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_AddReplicaData.base);
  return *internal_default_instance();
}


void AddReplicaData::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.AddReplicaData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      endpoint_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      alias_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(table_partition_ != NULL);
      table_partition_->Clear();
    }
  }
  if (cached_has_bits & 96u) {
    ::memset(&pid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&remote_tid_) -
        reinterpret_cast<char*>(&pid_)) + sizeof(remote_tid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AddReplicaData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.AddReplicaData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.AddReplicaData.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string endpoint = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->endpoint().data(), static_cast<int>(this->endpoint().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.AddReplicaData.endpoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 remote_tid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_remote_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remote_tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string alias = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alias()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alias().data(), static_cast<int>(this->alias().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.AddReplicaData.alias");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.nameserver.TablePartition table_partition = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_partition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 7 [default = ""];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.AddReplicaData.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.AddReplicaData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.AddReplicaData)
  return false;
#undef DO_
}

void AddReplicaData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.AddReplicaData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddReplicaData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required uint32 pid = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional string endpoint = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddReplicaData.endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->endpoint(), output);
  }

  // optional uint32 remote_tid = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->remote_tid(), output);
  }

  // optional string alias = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alias().data(), static_cast<int>(this->alias().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddReplicaData.alias");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->alias(), output);
  }

  // optional .openmldb.nameserver.TablePartition table_partition = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_table_partition(), output);
  }

  // optional string db = 7 [default = ""];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddReplicaData.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->db(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.AddReplicaData)
}

::google::protobuf::uint8* AddReplicaData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.AddReplicaData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddReplicaData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required uint32 pid = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional string endpoint = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddReplicaData.endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->endpoint(), target);
  }

  // optional uint32 remote_tid = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->remote_tid(), target);
  }

  // optional string alias = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alias().data(), static_cast<int>(this->alias().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddReplicaData.alias");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->alias(), target);
  }

  // optional .openmldb.nameserver.TablePartition table_partition = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_table_partition(), deterministic, target);
  }

  // optional string db = 7 [default = ""];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddReplicaData.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->db(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.AddReplicaData)
  return target;
}

size_t AddReplicaData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openmldb.nameserver.AddReplicaData)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_pid()) {
    // required uint32 pid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pid());
  }

  return total_size;
}
size_t AddReplicaData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.AddReplicaData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000021) ^ 0x00000021) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required uint32 pid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 30u) {
    // optional string endpoint = 3;
    if (has_endpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->endpoint());
    }

    // optional string alias = 5;
    if (has_alias()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alias());
    }

    // optional string db = 7 [default = ""];
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional .openmldb.nameserver.TablePartition table_partition = 6;
    if (has_table_partition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *table_partition_);
    }

  }
  // optional uint32 remote_tid = 4;
  if (has_remote_tid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->remote_tid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddReplicaData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.AddReplicaData)
  GOOGLE_DCHECK_NE(&from, this);
  const AddReplicaData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddReplicaData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.AddReplicaData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.AddReplicaData)
    MergeFrom(*source);
  }
}

void AddReplicaData::MergeFrom(const AddReplicaData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.AddReplicaData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_endpoint();
      endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_alias();
      alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_table_partition()->::openmldb::nameserver::TablePartition::MergeFrom(from.table_partition());
    }
    if (cached_has_bits & 0x00000020u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000040u) {
      remote_tid_ = from.remote_tid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AddReplicaData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.AddReplicaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddReplicaData::CopyFrom(const AddReplicaData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.AddReplicaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddReplicaData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000021) != 0x00000021) return false;
  if (has_table_partition()) {
    if (!this->table_partition_->IsInitialized()) return false;
  }
  return true;
}

void AddReplicaData::Swap(AddReplicaData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddReplicaData::InternalSwap(AddReplicaData* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  endpoint_.Swap(&other->endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  alias_.Swap(&other->alias_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(table_partition_, other->table_partition_);
  swap(pid_, other->pid_);
  swap(remote_tid_, other->remote_tid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddReplicaData::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddReplicaNSRequest::InitAsDefaultInstance() {
  ::openmldb::nameserver::_AddReplicaNSRequest_default_instance_._instance.get_mutable()->zone_info_ = const_cast< ::openmldb::nameserver::ZoneInfo*>(
      ::openmldb::nameserver::ZoneInfo::internal_default_instance());
  ::openmldb::nameserver::_AddReplicaNSRequest_default_instance_._instance.get_mutable()->task_info_ = const_cast< ::openmldb::api::TaskInfo*>(
      ::openmldb::api::TaskInfo::internal_default_instance());
}
void AddReplicaNSRequest::clear_task_info() {
  if (task_info_ != NULL) task_info_->Clear();
  clear_has_task_info();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddReplicaNSRequest::kNameFieldNumber;
const int AddReplicaNSRequest::kPidFieldNumber;
const int AddReplicaNSRequest::kEndpointFieldNumber;
const int AddReplicaNSRequest::kPidGroupFieldNumber;
const int AddReplicaNSRequest::kEndpointGroupFieldNumber;
const int AddReplicaNSRequest::kZoneInfoFieldNumber;
const int AddReplicaNSRequest::kTaskInfoFieldNumber;
const int AddReplicaNSRequest::kDbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddReplicaNSRequest::AddReplicaNSRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_AddReplicaNSRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.AddReplicaNSRequest)
}
AddReplicaNSRequest::AddReplicaNSRequest(const AddReplicaNSRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      pid_group_(from.pid_group_),
      endpoint_group_(from.endpoint_group_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_endpoint()) {
    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  if (from.has_zone_info()) {
    zone_info_ = new ::openmldb::nameserver::ZoneInfo(*from.zone_info_);
  } else {
    zone_info_ = NULL;
  }
  if (from.has_task_info()) {
    task_info_ = new ::openmldb::api::TaskInfo(*from.task_info_);
  } else {
    task_info_ = NULL;
  }
  pid_ = from.pid_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.AddReplicaNSRequest)
}

void AddReplicaNSRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&zone_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&zone_info_)) + sizeof(pid_));
}

AddReplicaNSRequest::~AddReplicaNSRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.AddReplicaNSRequest)
  SharedDtor();
}

void AddReplicaNSRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete zone_info_;
  if (this != internal_default_instance()) delete task_info_;
}

void AddReplicaNSRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddReplicaNSRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddReplicaNSRequest& AddReplicaNSRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_AddReplicaNSRequest.base);
  return *internal_default_instance();
}


void AddReplicaNSRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.AddReplicaNSRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pid_group_.Clear();
  endpoint_group_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      endpoint_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(zone_info_ != NULL);
      zone_info_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(task_info_ != NULL);
      task_info_->Clear();
    }
  }
  pid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AddReplicaNSRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.AddReplicaNSRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.AddReplicaNSRequest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string endpoint = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->endpoint().data(), static_cast<int>(this->endpoint().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.AddReplicaNSRequest.endpoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 pid_group = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32u, input, this->mutable_pid_group())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_pid_group())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string endpoint_group = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_endpoint_group()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->endpoint_group(this->endpoint_group_size() - 1).data(),
            static_cast<int>(this->endpoint_group(this->endpoint_group_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.AddReplicaNSRequest.endpoint_group");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.nameserver.ZoneInfo zone_info = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_zone_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.api.TaskInfo task_info = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_task_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 8 [default = ""];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.AddReplicaNSRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.AddReplicaNSRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.AddReplicaNSRequest)
  return false;
#undef DO_
}

void AddReplicaNSRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.AddReplicaNSRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddReplicaNSRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required uint32 pid = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // required string endpoint = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddReplicaNSRequest.endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->endpoint(), output);
  }

  // repeated uint32 pid_group = 4;
  for (int i = 0, n = this->pid_group_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->pid_group(i), output);
  }

  // repeated string endpoint_group = 5;
  for (int i = 0, n = this->endpoint_group_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint_group(i).data(), static_cast<int>(this->endpoint_group(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddReplicaNSRequest.endpoint_group");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->endpoint_group(i), output);
  }

  // optional .openmldb.nameserver.ZoneInfo zone_info = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_zone_info(), output);
  }

  // optional .openmldb.api.TaskInfo task_info = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_task_info(), output);
  }

  // optional string db = 8 [default = ""];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddReplicaNSRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->db(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.AddReplicaNSRequest)
}

::google::protobuf::uint8* AddReplicaNSRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.AddReplicaNSRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddReplicaNSRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required uint32 pid = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // required string endpoint = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddReplicaNSRequest.endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->endpoint(), target);
  }

  // repeated uint32 pid_group = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(4, this->pid_group_, target);

  // repeated string endpoint_group = 5;
  for (int i = 0, n = this->endpoint_group_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint_group(i).data(), static_cast<int>(this->endpoint_group(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddReplicaNSRequest.endpoint_group");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->endpoint_group(i), target);
  }

  // optional .openmldb.nameserver.ZoneInfo zone_info = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_zone_info(), deterministic, target);
  }

  // optional .openmldb.api.TaskInfo task_info = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_task_info(), deterministic, target);
  }

  // optional string db = 8 [default = ""];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddReplicaNSRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->db(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.AddReplicaNSRequest)
  return target;
}

size_t AddReplicaNSRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openmldb.nameserver.AddReplicaNSRequest)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_endpoint()) {
    // required string endpoint = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->endpoint());
  }

  if (has_pid()) {
    // required uint32 pid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pid());
  }

  return total_size;
}
size_t AddReplicaNSRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.AddReplicaNSRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000023) ^ 0x00000023) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string endpoint = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->endpoint());

    // required uint32 pid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated uint32 pid_group = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->pid_group_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->pid_group_size());
    total_size += data_size;
  }

  // repeated string endpoint_group = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->endpoint_group_size());
  for (int i = 0, n = this->endpoint_group_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->endpoint_group(i));
  }

  if (_has_bits_[0 / 32] & 28u) {
    // optional string db = 8 [default = ""];
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional .openmldb.nameserver.ZoneInfo zone_info = 6;
    if (has_zone_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *zone_info_);
    }

    // optional .openmldb.api.TaskInfo task_info = 7;
    if (has_task_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_info_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddReplicaNSRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.AddReplicaNSRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddReplicaNSRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddReplicaNSRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.AddReplicaNSRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.AddReplicaNSRequest)
    MergeFrom(*source);
  }
}

void AddReplicaNSRequest::MergeFrom(const AddReplicaNSRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.AddReplicaNSRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pid_group_.MergeFrom(from.pid_group_);
  endpoint_group_.MergeFrom(from.endpoint_group_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_endpoint();
      endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_zone_info()->::openmldb::nameserver::ZoneInfo::MergeFrom(from.zone_info());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_task_info()->::openmldb::api::TaskInfo::MergeFrom(from.task_info());
    }
    if (cached_has_bits & 0x00000020u) {
      pid_ = from.pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AddReplicaNSRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.AddReplicaNSRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddReplicaNSRequest::CopyFrom(const AddReplicaNSRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.AddReplicaNSRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddReplicaNSRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000023) != 0x00000023) return false;
  if (has_task_info()) {
    if (!this->task_info_->IsInitialized()) return false;
  }
  return true;
}

void AddReplicaNSRequest::Swap(AddReplicaNSRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddReplicaNSRequest::InternalSwap(AddReplicaNSRequest* other) {
  using std::swap;
  pid_group_.InternalSwap(&other->pid_group_);
  endpoint_group_.InternalSwap(CastToBase(&other->endpoint_group_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  endpoint_.Swap(&other->endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(zone_info_, other->zone_info_);
  swap(task_info_, other->task_info_);
  swap(pid_, other->pid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddReplicaNSRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Pair::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pair::kKeyFieldNumber;
const int Pair::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pair::Pair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_Pair.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.Pair)
}
Pair::Pair(const Pair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.Pair)
}

void Pair::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Pair::~Pair() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.Pair)
  SharedDtor();
}

void Pair::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Pair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Pair::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pair& Pair::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_Pair.base);
  return *internal_default_instance();
}


void Pair::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.Pair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Pair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.Pair)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.Pair.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.Pair.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.Pair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.Pair)
  return false;
#undef DO_
}

void Pair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.Pair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.Pair.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // required string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.Pair.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.Pair)
}

::google::protobuf::uint8* Pair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.Pair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.Pair.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // required string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.Pair.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.Pair)
  return target;
}

size_t Pair::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openmldb.nameserver.Pair)
  size_t total_size = 0;

  if (has_key()) {
    // required string key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  if (has_value()) {
    // required string value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  return total_size;
}
size_t Pair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.Pair)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());

    // required string value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.Pair)
  GOOGLE_DCHECK_NE(&from, this);
  const Pair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.Pair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.Pair)
    MergeFrom(*source);
  }
}

void Pair::MergeFrom(const Pair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.Pair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void Pair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.Pair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pair::CopyFrom(const Pair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.Pair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pair::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Pair::Swap(Pair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pair::InternalSwap(Pair* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Pair::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfSetRequest::InitAsDefaultInstance() {
  ::openmldb::nameserver::_ConfSetRequest_default_instance_._instance.get_mutable()->conf_ = const_cast< ::openmldb::nameserver::Pair*>(
      ::openmldb::nameserver::Pair::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfSetRequest::kConfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfSetRequest::ConfSetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_ConfSetRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.ConfSetRequest)
}
ConfSetRequest::ConfSetRequest(const ConfSetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_conf()) {
    conf_ = new ::openmldb::nameserver::Pair(*from.conf_);
  } else {
    conf_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.ConfSetRequest)
}

void ConfSetRequest::SharedCtor() {
  conf_ = NULL;
}

ConfSetRequest::~ConfSetRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.ConfSetRequest)
  SharedDtor();
}

void ConfSetRequest::SharedDtor() {
  if (this != internal_default_instance()) delete conf_;
}

void ConfSetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfSetRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfSetRequest& ConfSetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_ConfSetRequest.base);
  return *internal_default_instance();
}


void ConfSetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.ConfSetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(conf_ != NULL);
    conf_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfSetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.ConfSetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .openmldb.nameserver.Pair conf = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.ConfSetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.ConfSetRequest)
  return false;
#undef DO_
}

void ConfSetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.ConfSetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .openmldb.nameserver.Pair conf = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_conf(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.ConfSetRequest)
}

::google::protobuf::uint8* ConfSetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.ConfSetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .openmldb.nameserver.Pair conf = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_conf(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.ConfSetRequest)
  return target;
}

size_t ConfSetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.ConfSetRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .openmldb.nameserver.Pair conf = 1;
  if (has_conf()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *conf_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfSetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.ConfSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfSetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfSetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.ConfSetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.ConfSetRequest)
    MergeFrom(*source);
  }
}

void ConfSetRequest::MergeFrom(const ConfSetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.ConfSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_conf()) {
    mutable_conf()->::openmldb::nameserver::Pair::MergeFrom(from.conf());
  }
}

void ConfSetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.ConfSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfSetRequest::CopyFrom(const ConfSetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.ConfSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfSetRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_conf()) {
    if (!this->conf_->IsInitialized()) return false;
  }
  return true;
}

void ConfSetRequest::Swap(ConfSetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfSetRequest::InternalSwap(ConfSetRequest* other) {
  using std::swap;
  swap(conf_, other->conf_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfSetRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfGetRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfGetRequest::ConfGetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_ConfGetRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.ConfGetRequest)
}
ConfGetRequest::ConfGetRequest(const ConfGetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.ConfGetRequest)
}

void ConfGetRequest::SharedCtor() {
}

ConfGetRequest::~ConfGetRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.ConfGetRequest)
  SharedDtor();
}

void ConfGetRequest::SharedDtor() {
}

void ConfGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfGetRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfGetRequest& ConfGetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_ConfGetRequest.base);
  return *internal_default_instance();
}


void ConfGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.ConfGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfGetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.ConfGetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.ConfGetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.ConfGetRequest)
  return false;
#undef DO_
}

void ConfGetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.ConfGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.ConfGetRequest)
}

::google::protobuf::uint8* ConfGetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.ConfGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.ConfGetRequest)
  return target;
}

size_t ConfGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.ConfGetRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfGetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.ConfGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfGetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfGetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.ConfGetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.ConfGetRequest)
    MergeFrom(*source);
  }
}

void ConfGetRequest::MergeFrom(const ConfGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.ConfGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ConfGetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.ConfGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfGetRequest::CopyFrom(const ConfGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.ConfGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfGetRequest::IsInitialized() const {
  return true;
}

void ConfGetRequest::Swap(ConfGetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfGetRequest::InternalSwap(ConfGetRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfGetRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfGetResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfGetResponse::kCodeFieldNumber;
const int ConfGetResponse::kMsgFieldNumber;
const int ConfGetResponse::kConfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfGetResponse::ConfGetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_ConfGetResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.ConfGetResponse)
}
ConfGetResponse::ConfGetResponse(const ConfGetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      conf_(from.conf_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.ConfGetResponse)
}

void ConfGetResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

ConfGetResponse::~ConfGetResponse() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.ConfGetResponse)
  SharedDtor();
}

void ConfGetResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfGetResponse::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfGetResponse& ConfGetResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_ConfGetResponse.base);
  return *internal_default_instance();
}


void ConfGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.ConfGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  conf_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfGetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.ConfGetResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ConfGetResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.nameserver.Pair conf = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_conf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.ConfGetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.ConfGetResponse)
  return false;
#undef DO_
}

void ConfGetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.ConfGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ConfGetResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // repeated .openmldb.nameserver.Pair conf = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->conf_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->conf(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.ConfGetResponse)
}

::google::protobuf::uint8* ConfGetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.ConfGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ConfGetResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // repeated .openmldb.nameserver.Pair conf = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->conf_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->conf(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.ConfGetResponse)
  return target;
}

size_t ConfGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.ConfGetResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }
  // repeated .openmldb.nameserver.Pair conf = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->conf_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->conf(static_cast<int>(i)));
    }
  }

  // optional string msg = 2;
  if (has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfGetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.ConfGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfGetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfGetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.ConfGetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.ConfGetResponse)
    MergeFrom(*source);
  }
}

void ConfGetResponse::MergeFrom(const ConfGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.ConfGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  conf_.MergeFrom(from.conf_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConfGetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.ConfGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfGetResponse::CopyFrom(const ConfGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.ConfGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfGetResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->conf())) return false;
  return true;
}

void ConfGetResponse::Swap(ConfGetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfGetResponse::InternalSwap(ConfGetResponse* other) {
  using std::swap;
  CastToBase(&conf_)->InternalSwap(CastToBase(&other->conf_));
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfGetResponse::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChangeLeaderRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeLeaderRequest::kNameFieldNumber;
const int ChangeLeaderRequest::kPidFieldNumber;
const int ChangeLeaderRequest::kCandidateLeaderFieldNumber;
const int ChangeLeaderRequest::kDbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeLeaderRequest::ChangeLeaderRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_ChangeLeaderRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.ChangeLeaderRequest)
}
ChangeLeaderRequest::ChangeLeaderRequest(const ChangeLeaderRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  candidate_leader_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_candidate_leader()) {
    candidate_leader_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.candidate_leader_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  pid_ = from.pid_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.ChangeLeaderRequest)
}

void ChangeLeaderRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  candidate_leader_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pid_ = 0u;
}

ChangeLeaderRequest::~ChangeLeaderRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.ChangeLeaderRequest)
  SharedDtor();
}

void ChangeLeaderRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  candidate_leader_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChangeLeaderRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChangeLeaderRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeLeaderRequest& ChangeLeaderRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_ChangeLeaderRequest.base);
  return *internal_default_instance();
}


void ChangeLeaderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.ChangeLeaderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      candidate_leader_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
  }
  pid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChangeLeaderRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.ChangeLeaderRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ChangeLeaderRequest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string candidate_leader = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_candidate_leader()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->candidate_leader().data(), static_cast<int>(this->candidate_leader().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ChangeLeaderRequest.candidate_leader");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 4 [default = ""];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ChangeLeaderRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.ChangeLeaderRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.ChangeLeaderRequest)
  return false;
#undef DO_
}

void ChangeLeaderRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.ChangeLeaderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ChangeLeaderRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional string candidate_leader = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->candidate_leader().data(), static_cast<int>(this->candidate_leader().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ChangeLeaderRequest.candidate_leader");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->candidate_leader(), output);
  }

  // optional string db = 4 [default = ""];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ChangeLeaderRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->db(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.ChangeLeaderRequest)
}

::google::protobuf::uint8* ChangeLeaderRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.ChangeLeaderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ChangeLeaderRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional string candidate_leader = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->candidate_leader().data(), static_cast<int>(this->candidate_leader().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ChangeLeaderRequest.candidate_leader");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->candidate_leader(), target);
  }

  // optional string db = 4 [default = ""];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ChangeLeaderRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->db(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.ChangeLeaderRequest)
  return target;
}

size_t ChangeLeaderRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openmldb.nameserver.ChangeLeaderRequest)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_pid()) {
    // required uint32 pid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pid());
  }

  return total_size;
}
size_t ChangeLeaderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.ChangeLeaderRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000009) ^ 0x00000009) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required uint32 pid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional string candidate_leader = 3;
    if (has_candidate_leader()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->candidate_leader());
    }

    // optional string db = 4 [default = ""];
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChangeLeaderRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.ChangeLeaderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeLeaderRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeLeaderRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.ChangeLeaderRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.ChangeLeaderRequest)
    MergeFrom(*source);
  }
}

void ChangeLeaderRequest::MergeFrom(const ChangeLeaderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.ChangeLeaderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_candidate_leader();
      candidate_leader_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.candidate_leader_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000008u) {
      pid_ = from.pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChangeLeaderRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.ChangeLeaderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeLeaderRequest::CopyFrom(const ChangeLeaderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.ChangeLeaderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeLeaderRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000009) != 0x00000009) return false;
  return true;
}

void ChangeLeaderRequest::Swap(ChangeLeaderRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeLeaderRequest::InternalSwap(ChangeLeaderRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  candidate_leader_.Swap(&other->candidate_leader_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pid_, other->pid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChangeLeaderRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OfflineEndpointRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineEndpointRequest::kEndpointFieldNumber;
const int OfflineEndpointRequest::kConcurrencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineEndpointRequest::OfflineEndpointRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_OfflineEndpointRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.OfflineEndpointRequest)
}
OfflineEndpointRequest::OfflineEndpointRequest(const OfflineEndpointRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_endpoint()) {
    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  concurrency_ = from.concurrency_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.OfflineEndpointRequest)
}

void OfflineEndpointRequest::SharedCtor() {
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  concurrency_ = 0u;
}

OfflineEndpointRequest::~OfflineEndpointRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.OfflineEndpointRequest)
  SharedDtor();
}

void OfflineEndpointRequest::SharedDtor() {
  endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OfflineEndpointRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OfflineEndpointRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OfflineEndpointRequest& OfflineEndpointRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_OfflineEndpointRequest.base);
  return *internal_default_instance();
}


void OfflineEndpointRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.OfflineEndpointRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    endpoint_.ClearNonDefaultToEmptyNoArena();
  }
  concurrency_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OfflineEndpointRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.OfflineEndpointRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string endpoint = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->endpoint().data(), static_cast<int>(this->endpoint().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.OfflineEndpointRequest.endpoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 concurrency = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_concurrency();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &concurrency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.OfflineEndpointRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.OfflineEndpointRequest)
  return false;
#undef DO_
}

void OfflineEndpointRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.OfflineEndpointRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string endpoint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.OfflineEndpointRequest.endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->endpoint(), output);
  }

  // optional uint32 concurrency = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->concurrency(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.OfflineEndpointRequest)
}

::google::protobuf::uint8* OfflineEndpointRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.OfflineEndpointRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string endpoint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.OfflineEndpointRequest.endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->endpoint(), target);
  }

  // optional uint32 concurrency = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->concurrency(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.OfflineEndpointRequest)
  return target;
}

size_t OfflineEndpointRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.OfflineEndpointRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string endpoint = 1;
  if (has_endpoint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->endpoint());
  }
  // optional uint32 concurrency = 2;
  if (has_concurrency()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->concurrency());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OfflineEndpointRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.OfflineEndpointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OfflineEndpointRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OfflineEndpointRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.OfflineEndpointRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.OfflineEndpointRequest)
    MergeFrom(*source);
  }
}

void OfflineEndpointRequest::MergeFrom(const OfflineEndpointRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.OfflineEndpointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_endpoint();
      endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
    }
    if (cached_has_bits & 0x00000002u) {
      concurrency_ = from.concurrency_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OfflineEndpointRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.OfflineEndpointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfflineEndpointRequest::CopyFrom(const OfflineEndpointRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.OfflineEndpointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineEndpointRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void OfflineEndpointRequest::Swap(OfflineEndpointRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineEndpointRequest::InternalSwap(OfflineEndpointRequest* other) {
  using std::swap;
  endpoint_.Swap(&other->endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(concurrency_, other->concurrency_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OfflineEndpointRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecoverEndpointRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecoverEndpointRequest::kEndpointFieldNumber;
const int RecoverEndpointRequest::kNeedRestoreFieldNumber;
const int RecoverEndpointRequest::kConcurrencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecoverEndpointRequest::RecoverEndpointRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_RecoverEndpointRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.RecoverEndpointRequest)
}
RecoverEndpointRequest::RecoverEndpointRequest(const RecoverEndpointRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_endpoint()) {
    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  ::memcpy(&need_restore_, &from.need_restore_,
    static_cast<size_t>(reinterpret_cast<char*>(&concurrency_) -
    reinterpret_cast<char*>(&need_restore_)) + sizeof(concurrency_));
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.RecoverEndpointRequest)
}

void RecoverEndpointRequest::SharedCtor() {
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&need_restore_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&concurrency_) -
      reinterpret_cast<char*>(&need_restore_)) + sizeof(concurrency_));
}

RecoverEndpointRequest::~RecoverEndpointRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.RecoverEndpointRequest)
  SharedDtor();
}

void RecoverEndpointRequest::SharedDtor() {
  endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RecoverEndpointRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RecoverEndpointRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecoverEndpointRequest& RecoverEndpointRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_RecoverEndpointRequest.base);
  return *internal_default_instance();
}


void RecoverEndpointRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.RecoverEndpointRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    endpoint_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&need_restore_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&concurrency_) -
        reinterpret_cast<char*>(&need_restore_)) + sizeof(concurrency_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RecoverEndpointRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.RecoverEndpointRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string endpoint = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->endpoint().data(), static_cast<int>(this->endpoint().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.RecoverEndpointRequest.endpoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool need_restore = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_need_restore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &need_restore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 concurrency = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_concurrency();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &concurrency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.RecoverEndpointRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.RecoverEndpointRequest)
  return false;
#undef DO_
}

void RecoverEndpointRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.RecoverEndpointRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string endpoint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.RecoverEndpointRequest.endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->endpoint(), output);
  }

  // optional bool need_restore = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->need_restore(), output);
  }

  // optional uint32 concurrency = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->concurrency(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.RecoverEndpointRequest)
}

::google::protobuf::uint8* RecoverEndpointRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.RecoverEndpointRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string endpoint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.RecoverEndpointRequest.endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->endpoint(), target);
  }

  // optional bool need_restore = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->need_restore(), target);
  }

  // optional uint32 concurrency = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->concurrency(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.RecoverEndpointRequest)
  return target;
}

size_t RecoverEndpointRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.RecoverEndpointRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string endpoint = 1;
  if (has_endpoint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->endpoint());
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional bool need_restore = 2;
    if (has_need_restore()) {
      total_size += 1 + 1;
    }

    // optional uint32 concurrency = 3;
    if (has_concurrency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->concurrency());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecoverEndpointRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.RecoverEndpointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RecoverEndpointRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecoverEndpointRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.RecoverEndpointRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.RecoverEndpointRequest)
    MergeFrom(*source);
  }
}

void RecoverEndpointRequest::MergeFrom(const RecoverEndpointRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.RecoverEndpointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_endpoint();
      endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
    }
    if (cached_has_bits & 0x00000002u) {
      need_restore_ = from.need_restore_;
    }
    if (cached_has_bits & 0x00000004u) {
      concurrency_ = from.concurrency_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RecoverEndpointRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.RecoverEndpointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecoverEndpointRequest::CopyFrom(const RecoverEndpointRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.RecoverEndpointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecoverEndpointRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void RecoverEndpointRequest::Swap(RecoverEndpointRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecoverEndpointRequest::InternalSwap(RecoverEndpointRequest* other) {
  using std::swap;
  endpoint_.Swap(&other->endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(need_restore_, other->need_restore_);
  swap(concurrency_, other->concurrency_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RecoverEndpointRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GeneralResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GeneralResponse::kCodeFieldNumber;
const int GeneralResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GeneralResponse::GeneralResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_GeneralResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.GeneralResponse)
}
GeneralResponse::GeneralResponse(const GeneralResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.GeneralResponse)
}

void GeneralResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

GeneralResponse::~GeneralResponse() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.GeneralResponse)
  SharedDtor();
}

void GeneralResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GeneralResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GeneralResponse::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GeneralResponse& GeneralResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_GeneralResponse.base);
  return *internal_default_instance();
}


void GeneralResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.GeneralResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GeneralResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.GeneralResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.GeneralResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.GeneralResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.GeneralResponse)
  return false;
#undef DO_
}

void GeneralResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.GeneralResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.GeneralResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.GeneralResponse)
}

::google::protobuf::uint8* GeneralResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.GeneralResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.GeneralResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.GeneralResponse)
  return target;
}

size_t GeneralResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.GeneralResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }
  // optional string msg = 2;
  if (has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GeneralResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.GeneralResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GeneralResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GeneralResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.GeneralResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.GeneralResponse)
    MergeFrom(*source);
  }
}

void GeneralResponse::MergeFrom(const GeneralResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.GeneralResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GeneralResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.GeneralResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GeneralResponse::CopyFrom(const GeneralResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.GeneralResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GeneralResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void GeneralResponse::Swap(GeneralResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GeneralResponse::InternalSwap(GeneralResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GeneralResponse::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateTableInfoResponse::InitAsDefaultInstance() {
  ::openmldb::nameserver::_CreateTableInfoResponse_default_instance_._instance.get_mutable()->table_info_ = const_cast< ::openmldb::nameserver::TableInfo*>(
      ::openmldb::nameserver::TableInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateTableInfoResponse::kTableInfoFieldNumber;
const int CreateTableInfoResponse::kCodeFieldNumber;
const int CreateTableInfoResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateTableInfoResponse::CreateTableInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_CreateTableInfoResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.CreateTableInfoResponse)
}
CreateTableInfoResponse::CreateTableInfoResponse(const CreateTableInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_table_info()) {
    table_info_ = new ::openmldb::nameserver::TableInfo(*from.table_info_);
  } else {
    table_info_ = NULL;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.CreateTableInfoResponse)
}

void CreateTableInfoResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&table_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&table_info_)) + sizeof(code_));
}

CreateTableInfoResponse::~CreateTableInfoResponse() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.CreateTableInfoResponse)
  SharedDtor();
}

void CreateTableInfoResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete table_info_;
}

void CreateTableInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateTableInfoResponse::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateTableInfoResponse& CreateTableInfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_CreateTableInfoResponse.base);
  return *internal_default_instance();
}


void CreateTableInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.CreateTableInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      msg_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(table_info_ != NULL);
      table_info_->Clear();
    }
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateTableInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.CreateTableInfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .openmldb.nameserver.TableInfo table_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.CreateTableInfoResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.CreateTableInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.CreateTableInfoResponse)
  return false;
#undef DO_
}

void CreateTableInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.CreateTableInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.nameserver.TableInfo table_info = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_table_info(), output);
  }

  // required int32 code = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->code(), output);
  }

  // optional string msg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.CreateTableInfoResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.CreateTableInfoResponse)
}

::google::protobuf::uint8* CreateTableInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.CreateTableInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.nameserver.TableInfo table_info = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_table_info(), deterministic, target);
  }

  // required int32 code = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->code(), target);
  }

  // optional string msg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.CreateTableInfoResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.CreateTableInfoResponse)
  return target;
}

size_t CreateTableInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.CreateTableInfoResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 code = 2;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 3;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional .openmldb.nameserver.TableInfo table_info = 1;
    if (has_table_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *table_info_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateTableInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.CreateTableInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTableInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateTableInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.CreateTableInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.CreateTableInfoResponse)
    MergeFrom(*source);
  }
}

void CreateTableInfoResponse::MergeFrom(const CreateTableInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.CreateTableInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_table_info()->::openmldb::nameserver::TableInfo::MergeFrom(from.table_info());
    }
    if (cached_has_bits & 0x00000004u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CreateTableInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.CreateTableInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTableInfoResponse::CopyFrom(const CreateTableInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.CreateTableInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTableInfoResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_table_info()) {
    if (!this->table_info_->IsInitialized()) return false;
  }
  return true;
}

void CreateTableInfoResponse::Swap(CreateTableInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateTableInfoResponse::InternalSwap(CreateTableInfoResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(table_info_, other->table_info_);
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateTableInfoResponse::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShowTabletRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowTabletRequest::ShowTabletRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_ShowTabletRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.ShowTabletRequest)
}
ShowTabletRequest::ShowTabletRequest(const ShowTabletRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.ShowTabletRequest)
}

void ShowTabletRequest::SharedCtor() {
}

ShowTabletRequest::~ShowTabletRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.ShowTabletRequest)
  SharedDtor();
}

void ShowTabletRequest::SharedDtor() {
}

void ShowTabletRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShowTabletRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShowTabletRequest& ShowTabletRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_ShowTabletRequest.base);
  return *internal_default_instance();
}


void ShowTabletRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.ShowTabletRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowTabletRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.ShowTabletRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.ShowTabletRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.ShowTabletRequest)
  return false;
#undef DO_
}

void ShowTabletRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.ShowTabletRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.ShowTabletRequest)
}

::google::protobuf::uint8* ShowTabletRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.ShowTabletRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.ShowTabletRequest)
  return target;
}

size_t ShowTabletRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.ShowTabletRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowTabletRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.ShowTabletRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowTabletRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShowTabletRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.ShowTabletRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.ShowTabletRequest)
    MergeFrom(*source);
  }
}

void ShowTabletRequest::MergeFrom(const ShowTabletRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.ShowTabletRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ShowTabletRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.ShowTabletRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowTabletRequest::CopyFrom(const ShowTabletRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.ShowTabletRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowTabletRequest::IsInitialized() const {
  return true;
}

void ShowTabletRequest::Swap(ShowTabletRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowTabletRequest::InternalSwap(ShowTabletRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShowTabletRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddTableFieldRequest::InitAsDefaultInstance() {
  ::openmldb::nameserver::_AddTableFieldRequest_default_instance_._instance.get_mutable()->column_desc_ = const_cast< ::openmldb::common::ColumnDesc*>(
      ::openmldb::common::ColumnDesc::internal_default_instance());
}
void AddTableFieldRequest::clear_column_desc() {
  if (column_desc_ != NULL) column_desc_->Clear();
  clear_has_column_desc();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddTableFieldRequest::kNameFieldNumber;
const int AddTableFieldRequest::kColumnDescFieldNumber;
const int AddTableFieldRequest::kDbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddTableFieldRequest::AddTableFieldRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_AddTableFieldRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.AddTableFieldRequest)
}
AddTableFieldRequest::AddTableFieldRequest(const AddTableFieldRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  if (from.has_column_desc()) {
    column_desc_ = new ::openmldb::common::ColumnDesc(*from.column_desc_);
  } else {
    column_desc_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.AddTableFieldRequest)
}

void AddTableFieldRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  column_desc_ = NULL;
}

AddTableFieldRequest::~AddTableFieldRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.AddTableFieldRequest)
  SharedDtor();
}

void AddTableFieldRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete column_desc_;
}

void AddTableFieldRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddTableFieldRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddTableFieldRequest& AddTableFieldRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_AddTableFieldRequest.base);
  return *internal_default_instance();
}


void AddTableFieldRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.AddTableFieldRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(column_desc_ != NULL);
      column_desc_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AddTableFieldRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.AddTableFieldRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.AddTableFieldRequest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.common.ColumnDesc column_desc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_column_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 3 [default = ""];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.AddTableFieldRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.AddTableFieldRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.AddTableFieldRequest)
  return false;
#undef DO_
}

void AddTableFieldRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.AddTableFieldRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddTableFieldRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .openmldb.common.ColumnDesc column_desc = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_column_desc(), output);
  }

  // optional string db = 3 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddTableFieldRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->db(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.AddTableFieldRequest)
}

::google::protobuf::uint8* AddTableFieldRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.AddTableFieldRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddTableFieldRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .openmldb.common.ColumnDesc column_desc = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_column_desc(), deterministic, target);
  }

  // optional string db = 3 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddTableFieldRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->db(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.AddTableFieldRequest)
  return target;
}

size_t AddTableFieldRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.AddTableFieldRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string db = 3 [default = ""];
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional .openmldb.common.ColumnDesc column_desc = 2;
    if (has_column_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *column_desc_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddTableFieldRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.AddTableFieldRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddTableFieldRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddTableFieldRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.AddTableFieldRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.AddTableFieldRequest)
    MergeFrom(*source);
  }
}

void AddTableFieldRequest::MergeFrom(const AddTableFieldRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.AddTableFieldRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_column_desc()->::openmldb::common::ColumnDesc::MergeFrom(from.column_desc());
    }
  }
}

void AddTableFieldRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.AddTableFieldRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddTableFieldRequest::CopyFrom(const AddTableFieldRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.AddTableFieldRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddTableFieldRequest::IsInitialized() const {
  if (has_column_desc()) {
    if (!this->column_desc_->IsInitialized()) return false;
  }
  return true;
}

void AddTableFieldRequest::Swap(AddTableFieldRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddTableFieldRequest::InternalSwap(AddTableFieldRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(column_desc_, other->column_desc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddTableFieldRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TabletStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TabletStatus::kEndpointFieldNumber;
const int TabletStatus::kStateFieldNumber;
const int TabletStatus::kAgeFieldNumber;
const int TabletStatus::kRealEndpointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TabletStatus::TabletStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_TabletStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.TabletStatus)
}
TabletStatus::TabletStatus(const TabletStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_endpoint()) {
    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_state()) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  real_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_real_endpoint()) {
    real_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.real_endpoint_);
  }
  age_ = from.age_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.TabletStatus)
}

void TabletStatus::SharedCtor() {
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  real_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  age_ = GOOGLE_ULONGLONG(0);
}

TabletStatus::~TabletStatus() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.TabletStatus)
  SharedDtor();
}

void TabletStatus::SharedDtor() {
  endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  real_endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TabletStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TabletStatus::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TabletStatus& TabletStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_TabletStatus.base);
  return *internal_default_instance();
}


void TabletStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.TabletStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      endpoint_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      state_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      real_endpoint_.ClearNonDefaultToEmptyNoArena();
    }
  }
  age_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TabletStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.TabletStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string endpoint = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->endpoint().data(), static_cast<int>(this->endpoint().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.TabletStatus.endpoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_state()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->state().data(), static_cast<int>(this->state().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.TabletStatus.state");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 age = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_age();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string real_endpoint = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_real_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->real_endpoint().data(), static_cast<int>(this->real_endpoint().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.TabletStatus.real_endpoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.TabletStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.TabletStatus)
  return false;
#undef DO_
}

void TabletStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.TabletStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string endpoint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.TabletStatus.endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->endpoint(), output);
  }

  // optional string state = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state().data(), static_cast<int>(this->state().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.TabletStatus.state");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->state(), output);
  }

  // optional uint64 age = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->age(), output);
  }

  // optional string real_endpoint = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->real_endpoint().data(), static_cast<int>(this->real_endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.TabletStatus.real_endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->real_endpoint(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.TabletStatus)
}

::google::protobuf::uint8* TabletStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.TabletStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string endpoint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.TabletStatus.endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->endpoint(), target);
  }

  // optional string state = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state().data(), static_cast<int>(this->state().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.TabletStatus.state");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->state(), target);
  }

  // optional uint64 age = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->age(), target);
  }

  // optional string real_endpoint = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->real_endpoint().data(), static_cast<int>(this->real_endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.TabletStatus.real_endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->real_endpoint(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.TabletStatus)
  return target;
}

size_t TabletStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.TabletStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string endpoint = 1;
    if (has_endpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->endpoint());
    }

    // optional string state = 2;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->state());
    }

    // optional string real_endpoint = 4;
    if (has_real_endpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->real_endpoint());
    }

    // optional uint64 age = 3;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->age());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TabletStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.TabletStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const TabletStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TabletStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.TabletStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.TabletStatus)
    MergeFrom(*source);
  }
}

void TabletStatus::MergeFrom(const TabletStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.TabletStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_endpoint();
      endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_state();
      state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_real_endpoint();
      real_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.real_endpoint_);
    }
    if (cached_has_bits & 0x00000008u) {
      age_ = from.age_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TabletStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.TabletStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TabletStatus::CopyFrom(const TabletStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.TabletStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TabletStatus::IsInitialized() const {
  return true;
}

void TabletStatus::Swap(TabletStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TabletStatus::InternalSwap(TabletStatus* other) {
  using std::swap;
  endpoint_.Swap(&other->endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  real_endpoint_.Swap(&other->real_endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(age_, other->age_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TabletStatus::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShowTabletResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowTabletResponse::kTabletsFieldNumber;
const int ShowTabletResponse::kCodeFieldNumber;
const int ShowTabletResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowTabletResponse::ShowTabletResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_ShowTabletResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.ShowTabletResponse)
}
ShowTabletResponse::ShowTabletResponse(const ShowTabletResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tablets_(from.tablets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.ShowTabletResponse)
}

void ShowTabletResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

ShowTabletResponse::~ShowTabletResponse() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.ShowTabletResponse)
  SharedDtor();
}

void ShowTabletResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShowTabletResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShowTabletResponse::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShowTabletResponse& ShowTabletResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_ShowTabletResponse.base);
  return *internal_default_instance();
}


void ShowTabletResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.ShowTabletResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tablets_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowTabletResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.ShowTabletResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openmldb.nameserver.TabletStatus tablets = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tablets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ShowTabletResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.ShowTabletResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.ShowTabletResponse)
  return false;
#undef DO_
}

void ShowTabletResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.ShowTabletResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openmldb.nameserver.TabletStatus tablets = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tablets_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->tablets(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->code(), output);
  }

  // optional string msg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowTabletResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.ShowTabletResponse)
}

::google::protobuf::uint8* ShowTabletResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.ShowTabletResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openmldb.nameserver.TabletStatus tablets = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tablets_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->tablets(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->code(), target);
  }

  // optional string msg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowTabletResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.ShowTabletResponse)
  return target;
}

size_t ShowTabletResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.ShowTabletResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.nameserver.TabletStatus tablets = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->tablets_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tablets(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 3;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 2;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowTabletResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.ShowTabletResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowTabletResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShowTabletResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.ShowTabletResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.ShowTabletResponse)
    MergeFrom(*source);
  }
}

void ShowTabletResponse::MergeFrom(const ShowTabletResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.ShowTabletResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tablets_.MergeFrom(from.tablets_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShowTabletResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.ShowTabletResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowTabletResponse::CopyFrom(const ShowTabletResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.ShowTabletResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowTabletResponse::IsInitialized() const {
  return true;
}

void ShowTabletResponse::Swap(ShowTabletResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowTabletResponse::InternalSwap(ShowTabletResponse* other) {
  using std::swap;
  CastToBase(&tablets_)->InternalSwap(CastToBase(&other->tablets_));
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShowTabletResponse::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecoverTableRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecoverTableRequest::kNameFieldNumber;
const int RecoverTableRequest::kPidFieldNumber;
const int RecoverTableRequest::kEndpointFieldNumber;
const int RecoverTableRequest::kDbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecoverTableRequest::RecoverTableRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_RecoverTableRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.RecoverTableRequest)
}
RecoverTableRequest::RecoverTableRequest(const RecoverTableRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_endpoint()) {
    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  pid_ = from.pid_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.RecoverTableRequest)
}

void RecoverTableRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pid_ = 0u;
}

RecoverTableRequest::~RecoverTableRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.RecoverTableRequest)
  SharedDtor();
}

void RecoverTableRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RecoverTableRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RecoverTableRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecoverTableRequest& RecoverTableRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_RecoverTableRequest.base);
  return *internal_default_instance();
}


void RecoverTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.RecoverTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      endpoint_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
  }
  pid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RecoverTableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.RecoverTableRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.RecoverTableRequest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string endpoint = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->endpoint().data(), static_cast<int>(this->endpoint().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.RecoverTableRequest.endpoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 4 [default = ""];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.RecoverTableRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.RecoverTableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.RecoverTableRequest)
  return false;
#undef DO_
}

void RecoverTableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.RecoverTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.RecoverTableRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // required string endpoint = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.RecoverTableRequest.endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->endpoint(), output);
  }

  // optional string db = 4 [default = ""];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.RecoverTableRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->db(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.RecoverTableRequest)
}

::google::protobuf::uint8* RecoverTableRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.RecoverTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.RecoverTableRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // required string endpoint = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.RecoverTableRequest.endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->endpoint(), target);
  }

  // optional string db = 4 [default = ""];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.RecoverTableRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->db(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.RecoverTableRequest)
  return target;
}

size_t RecoverTableRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openmldb.nameserver.RecoverTableRequest)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_endpoint()) {
    // required string endpoint = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->endpoint());
  }

  if (has_pid()) {
    // required uint32 pid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pid());
  }

  return total_size;
}
size_t RecoverTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.RecoverTableRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000b) ^ 0x0000000b) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string endpoint = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->endpoint());

    // required uint32 pid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string db = 4 [default = ""];
  if (has_db()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->db());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecoverTableRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.RecoverTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RecoverTableRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecoverTableRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.RecoverTableRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.RecoverTableRequest)
    MergeFrom(*source);
  }
}

void RecoverTableRequest::MergeFrom(const RecoverTableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.RecoverTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_endpoint();
      endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000008u) {
      pid_ = from.pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RecoverTableRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.RecoverTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecoverTableRequest::CopyFrom(const RecoverTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.RecoverTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecoverTableRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000b) != 0x0000000b) return false;
  return true;
}

void RecoverTableRequest::Swap(RecoverTableRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecoverTableRequest::InternalSwap(RecoverTableRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  endpoint_.Swap(&other->endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pid_, other->pid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RecoverTableRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DelReplicaNSRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelReplicaNSRequest::kNameFieldNumber;
const int DelReplicaNSRequest::kPidFieldNumber;
const int DelReplicaNSRequest::kEndpointFieldNumber;
const int DelReplicaNSRequest::kPidGroupFieldNumber;
const int DelReplicaNSRequest::kDbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelReplicaNSRequest::DelReplicaNSRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_DelReplicaNSRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.DelReplicaNSRequest)
}
DelReplicaNSRequest::DelReplicaNSRequest(const DelReplicaNSRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      pid_group_(from.pid_group_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_endpoint()) {
    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  pid_ = from.pid_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.DelReplicaNSRequest)
}

void DelReplicaNSRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pid_ = 0u;
}

DelReplicaNSRequest::~DelReplicaNSRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.DelReplicaNSRequest)
  SharedDtor();
}

void DelReplicaNSRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DelReplicaNSRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DelReplicaNSRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelReplicaNSRequest& DelReplicaNSRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_DelReplicaNSRequest.base);
  return *internal_default_instance();
}


void DelReplicaNSRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.DelReplicaNSRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pid_group_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      endpoint_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
  }
  pid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DelReplicaNSRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.DelReplicaNSRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.DelReplicaNSRequest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string endpoint = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->endpoint().data(), static_cast<int>(this->endpoint().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.DelReplicaNSRequest.endpoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 pid_group = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32u, input, this->mutable_pid_group())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_pid_group())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 5 [default = ""];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.DelReplicaNSRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.DelReplicaNSRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.DelReplicaNSRequest)
  return false;
#undef DO_
}

void DelReplicaNSRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.DelReplicaNSRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.DelReplicaNSRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // required string endpoint = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.DelReplicaNSRequest.endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->endpoint(), output);
  }

  // repeated uint32 pid_group = 4;
  for (int i = 0, n = this->pid_group_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->pid_group(i), output);
  }

  // optional string db = 5 [default = ""];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.DelReplicaNSRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->db(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.DelReplicaNSRequest)
}

::google::protobuf::uint8* DelReplicaNSRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.DelReplicaNSRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.DelReplicaNSRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // required string endpoint = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.DelReplicaNSRequest.endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->endpoint(), target);
  }

  // repeated uint32 pid_group = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(4, this->pid_group_, target);

  // optional string db = 5 [default = ""];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.DelReplicaNSRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->db(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.DelReplicaNSRequest)
  return target;
}

size_t DelReplicaNSRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openmldb.nameserver.DelReplicaNSRequest)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_endpoint()) {
    // required string endpoint = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->endpoint());
  }

  if (has_pid()) {
    // required uint32 pid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pid());
  }

  return total_size;
}
size_t DelReplicaNSRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.DelReplicaNSRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000b) ^ 0x0000000b) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string endpoint = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->endpoint());

    // required uint32 pid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated uint32 pid_group = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->pid_group_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->pid_group_size());
    total_size += data_size;
  }

  // optional string db = 5 [default = ""];
  if (has_db()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->db());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DelReplicaNSRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.DelReplicaNSRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DelReplicaNSRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelReplicaNSRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.DelReplicaNSRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.DelReplicaNSRequest)
    MergeFrom(*source);
  }
}

void DelReplicaNSRequest::MergeFrom(const DelReplicaNSRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.DelReplicaNSRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pid_group_.MergeFrom(from.pid_group_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_endpoint();
      endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000008u) {
      pid_ = from.pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DelReplicaNSRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.DelReplicaNSRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelReplicaNSRequest::CopyFrom(const DelReplicaNSRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.DelReplicaNSRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelReplicaNSRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000b) != 0x0000000b) return false;
  return true;
}

void DelReplicaNSRequest::Swap(DelReplicaNSRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelReplicaNSRequest::InternalSwap(DelReplicaNSRequest* other) {
  using std::swap;
  pid_group_.InternalSwap(&other->pid_group_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  endpoint_.Swap(&other->endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pid_, other->pid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DelReplicaNSRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MigrateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MigrateRequest::kSrcEndpointFieldNumber;
const int MigrateRequest::kNameFieldNumber;
const int MigrateRequest::kPidFieldNumber;
const int MigrateRequest::kDesEndpointFieldNumber;
const int MigrateRequest::kDbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MigrateRequest::MigrateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_MigrateRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.MigrateRequest)
}
MigrateRequest::MigrateRequest(const MigrateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      pid_(from.pid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  src_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_src_endpoint()) {
    src_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_endpoint_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  des_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_des_endpoint()) {
    des_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.des_endpoint_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.MigrateRequest)
}

void MigrateRequest::SharedCtor() {
  src_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  des_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MigrateRequest::~MigrateRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.MigrateRequest)
  SharedDtor();
}

void MigrateRequest::SharedDtor() {
  src_endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  des_endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MigrateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MigrateRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MigrateRequest& MigrateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_MigrateRequest.base);
  return *internal_default_instance();
}


void MigrateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.MigrateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pid_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      src_endpoint_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      des_endpoint_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MigrateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.MigrateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string src_endpoint = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->src_endpoint().data(), static_cast<int>(this->src_endpoint().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.MigrateRequest.src_endpoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.MigrateRequest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 pid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24u, input, this->mutable_pid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_pid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string des_endpoint = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_des_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->des_endpoint().data(), static_cast<int>(this->des_endpoint().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.MigrateRequest.des_endpoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 5 [default = ""];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.MigrateRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.MigrateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.MigrateRequest)
  return false;
#undef DO_
}

void MigrateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.MigrateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string src_endpoint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src_endpoint().data(), static_cast<int>(this->src_endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.MigrateRequest.src_endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->src_endpoint(), output);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.MigrateRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated uint32 pid = 3;
  for (int i = 0, n = this->pid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->pid(i), output);
  }

  // required string des_endpoint = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->des_endpoint().data(), static_cast<int>(this->des_endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.MigrateRequest.des_endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->des_endpoint(), output);
  }

  // optional string db = 5 [default = ""];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.MigrateRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->db(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.MigrateRequest)
}

::google::protobuf::uint8* MigrateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.MigrateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string src_endpoint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src_endpoint().data(), static_cast<int>(this->src_endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.MigrateRequest.src_endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->src_endpoint(), target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.MigrateRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated uint32 pid = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(3, this->pid_, target);

  // required string des_endpoint = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->des_endpoint().data(), static_cast<int>(this->des_endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.MigrateRequest.des_endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->des_endpoint(), target);
  }

  // optional string db = 5 [default = ""];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.MigrateRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->db(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.MigrateRequest)
  return target;
}

size_t MigrateRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openmldb.nameserver.MigrateRequest)
  size_t total_size = 0;

  if (has_src_endpoint()) {
    // required string src_endpoint = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src_endpoint());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_des_endpoint()) {
    // required string des_endpoint = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->des_endpoint());
  }

  return total_size;
}
size_t MigrateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.MigrateRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string src_endpoint = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src_endpoint());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string des_endpoint = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->des_endpoint());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated uint32 pid = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->pid_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->pid_size());
    total_size += data_size;
  }

  // optional string db = 5 [default = ""];
  if (has_db()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->db());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MigrateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.MigrateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MigrateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MigrateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.MigrateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.MigrateRequest)
    MergeFrom(*source);
  }
}

void MigrateRequest::MergeFrom(const MigrateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.MigrateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pid_.MergeFrom(from.pid_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_src_endpoint();
      src_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_endpoint_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_des_endpoint();
      des_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.des_endpoint_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
  }
}

void MigrateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.MigrateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MigrateRequest::CopyFrom(const MigrateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.MigrateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MigrateRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void MigrateRequest::Swap(MigrateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MigrateRequest::InternalSwap(MigrateRequest* other) {
  using std::swap;
  pid_.InternalSwap(&other->pid_);
  src_endpoint_.Swap(&other->src_endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  des_endpoint_.Swap(&other->des_endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MigrateRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MigrateInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MigrateInfo::kSrcEndpointFieldNumber;
const int MigrateInfo::kDesEndpointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MigrateInfo::MigrateInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_MigrateInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.MigrateInfo)
}
MigrateInfo::MigrateInfo(const MigrateInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  src_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_src_endpoint()) {
    src_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_endpoint_);
  }
  des_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_des_endpoint()) {
    des_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.des_endpoint_);
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.MigrateInfo)
}

void MigrateInfo::SharedCtor() {
  src_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  des_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MigrateInfo::~MigrateInfo() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.MigrateInfo)
  SharedDtor();
}

void MigrateInfo::SharedDtor() {
  src_endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  des_endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MigrateInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MigrateInfo::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MigrateInfo& MigrateInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_MigrateInfo.base);
  return *internal_default_instance();
}


void MigrateInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.MigrateInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      src_endpoint_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      des_endpoint_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MigrateInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.MigrateInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string src_endpoint = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->src_endpoint().data(), static_cast<int>(this->src_endpoint().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.MigrateInfo.src_endpoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string des_endpoint = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_des_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->des_endpoint().data(), static_cast<int>(this->des_endpoint().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.MigrateInfo.des_endpoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.MigrateInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.MigrateInfo)
  return false;
#undef DO_
}

void MigrateInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.MigrateInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string src_endpoint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src_endpoint().data(), static_cast<int>(this->src_endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.MigrateInfo.src_endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->src_endpoint(), output);
  }

  // optional string des_endpoint = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->des_endpoint().data(), static_cast<int>(this->des_endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.MigrateInfo.des_endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->des_endpoint(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.MigrateInfo)
}

::google::protobuf::uint8* MigrateInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.MigrateInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string src_endpoint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src_endpoint().data(), static_cast<int>(this->src_endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.MigrateInfo.src_endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->src_endpoint(), target);
  }

  // optional string des_endpoint = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->des_endpoint().data(), static_cast<int>(this->des_endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.MigrateInfo.des_endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->des_endpoint(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.MigrateInfo)
  return target;
}

size_t MigrateInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.MigrateInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string src_endpoint = 1;
    if (has_src_endpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->src_endpoint());
    }

    // optional string des_endpoint = 2;
    if (has_des_endpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->des_endpoint());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MigrateInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.MigrateInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MigrateInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MigrateInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.MigrateInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.MigrateInfo)
    MergeFrom(*source);
  }
}

void MigrateInfo::MergeFrom(const MigrateInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.MigrateInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_src_endpoint();
      src_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_endpoint_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_des_endpoint();
      des_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.des_endpoint_);
    }
  }
}

void MigrateInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.MigrateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MigrateInfo::CopyFrom(const MigrateInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.MigrateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MigrateInfo::IsInitialized() const {
  return true;
}

void MigrateInfo::Swap(MigrateInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MigrateInfo::InternalSwap(MigrateInfo* other) {
  using std::swap;
  src_endpoint_.Swap(&other->src_endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  des_endpoint_.Swap(&other->des_endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MigrateInfo::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EndpointStatusData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EndpointStatusData::kEndpointFieldNumber;
const int EndpointStatusData::kIsLeaderFieldNumber;
const int EndpointStatusData::kIsAliveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EndpointStatusData::EndpointStatusData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_EndpointStatusData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.EndpointStatusData)
}
EndpointStatusData::EndpointStatusData(const EndpointStatusData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_endpoint()) {
    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  ::memcpy(&is_leader_, &from.is_leader_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_alive_) -
    reinterpret_cast<char*>(&is_leader_)) + sizeof(is_alive_));
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.EndpointStatusData)
}

void EndpointStatusData::SharedCtor() {
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_leader_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_alive_) -
      reinterpret_cast<char*>(&is_leader_)) + sizeof(is_alive_));
}

EndpointStatusData::~EndpointStatusData() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.EndpointStatusData)
  SharedDtor();
}

void EndpointStatusData::SharedDtor() {
  endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EndpointStatusData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EndpointStatusData::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EndpointStatusData& EndpointStatusData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_EndpointStatusData.base);
  return *internal_default_instance();
}


void EndpointStatusData::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.EndpointStatusData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    endpoint_.ClearNonDefaultToEmptyNoArena();
  }
  ::memset(&is_leader_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_alive_) -
      reinterpret_cast<char*>(&is_leader_)) + sizeof(is_alive_));
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EndpointStatusData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.EndpointStatusData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string endpoint = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->endpoint().data(), static_cast<int>(this->endpoint().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.EndpointStatusData.endpoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_leader = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_is_leader();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_leader_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_alive = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_is_alive();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_alive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.EndpointStatusData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.EndpointStatusData)
  return false;
#undef DO_
}

void EndpointStatusData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.EndpointStatusData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string endpoint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.EndpointStatusData.endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->endpoint(), output);
  }

  // optional bool is_leader = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_leader(), output);
  }

  // optional bool is_alive = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_alive(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.EndpointStatusData)
}

::google::protobuf::uint8* EndpointStatusData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.EndpointStatusData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string endpoint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.EndpointStatusData.endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->endpoint(), target);
  }

  // optional bool is_leader = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_leader(), target);
  }

  // optional bool is_alive = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_alive(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.EndpointStatusData)
  return target;
}

size_t EndpointStatusData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.EndpointStatusData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string endpoint = 1;
    if (has_endpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->endpoint());
    }

    // optional bool is_leader = 2;
    if (has_is_leader()) {
      total_size += 1 + 1;
    }

    // optional bool is_alive = 3;
    if (has_is_alive()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EndpointStatusData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.EndpointStatusData)
  GOOGLE_DCHECK_NE(&from, this);
  const EndpointStatusData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EndpointStatusData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.EndpointStatusData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.EndpointStatusData)
    MergeFrom(*source);
  }
}

void EndpointStatusData::MergeFrom(const EndpointStatusData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.EndpointStatusData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_endpoint();
      endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
    }
    if (cached_has_bits & 0x00000002u) {
      is_leader_ = from.is_leader_;
    }
    if (cached_has_bits & 0x00000004u) {
      is_alive_ = from.is_alive_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EndpointStatusData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.EndpointStatusData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EndpointStatusData::CopyFrom(const EndpointStatusData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.EndpointStatusData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EndpointStatusData::IsInitialized() const {
  return true;
}

void EndpointStatusData::Swap(EndpointStatusData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EndpointStatusData::InternalSwap(EndpointStatusData* other) {
  using std::swap;
  endpoint_.Swap(&other->endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_leader_, other->is_leader_);
  swap(is_alive_, other->is_alive_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EndpointStatusData::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecoverTableData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecoverTableData::kEndpointFieldNumber;
const int RecoverTableData::kOffsetDeltaFieldNumber;
const int RecoverTableData::kIsLeaderFieldNumber;
const int RecoverTableData::kConcurrencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecoverTableData::RecoverTableData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_RecoverTableData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.RecoverTableData)
}
RecoverTableData::RecoverTableData(const RecoverTableData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_endpoint()) {
    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  ::memcpy(&offset_delta_, &from.offset_delta_,
    static_cast<size_t>(reinterpret_cast<char*>(&concurrency_) -
    reinterpret_cast<char*>(&offset_delta_)) + sizeof(concurrency_));
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.RecoverTableData)
}

void RecoverTableData::SharedCtor() {
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_delta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&concurrency_) -
      reinterpret_cast<char*>(&offset_delta_)) + sizeof(concurrency_));
}

RecoverTableData::~RecoverTableData() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.RecoverTableData)
  SharedDtor();
}

void RecoverTableData::SharedDtor() {
  endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RecoverTableData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RecoverTableData::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecoverTableData& RecoverTableData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_RecoverTableData.base);
  return *internal_default_instance();
}


void RecoverTableData::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.RecoverTableData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    endpoint_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&offset_delta_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&concurrency_) -
        reinterpret_cast<char*>(&offset_delta_)) + sizeof(concurrency_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RecoverTableData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.RecoverTableData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string endpoint = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->endpoint().data(), static_cast<int>(this->endpoint().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.RecoverTableData.endpoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 offset_delta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_offset_delta();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_delta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_leader = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_is_leader();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_leader_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 concurrency = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_concurrency();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &concurrency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.RecoverTableData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.RecoverTableData)
  return false;
#undef DO_
}

void RecoverTableData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.RecoverTableData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string endpoint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.RecoverTableData.endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->endpoint(), output);
  }

  // optional uint64 offset_delta = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->offset_delta(), output);
  }

  // optional bool is_leader = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_leader(), output);
  }

  // optional uint32 concurrency = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->concurrency(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.RecoverTableData)
}

::google::protobuf::uint8* RecoverTableData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.RecoverTableData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string endpoint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.RecoverTableData.endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->endpoint(), target);
  }

  // optional uint64 offset_delta = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->offset_delta(), target);
  }

  // optional bool is_leader = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_leader(), target);
  }

  // optional uint32 concurrency = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->concurrency(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.RecoverTableData)
  return target;
}

size_t RecoverTableData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.RecoverTableData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string endpoint = 1;
    if (has_endpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->endpoint());
    }

    // optional uint64 offset_delta = 2;
    if (has_offset_delta()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->offset_delta());
    }

    // optional bool is_leader = 3;
    if (has_is_leader()) {
      total_size += 1 + 1;
    }

    // optional uint32 concurrency = 4;
    if (has_concurrency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->concurrency());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecoverTableData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.RecoverTableData)
  GOOGLE_DCHECK_NE(&from, this);
  const RecoverTableData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecoverTableData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.RecoverTableData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.RecoverTableData)
    MergeFrom(*source);
  }
}

void RecoverTableData::MergeFrom(const RecoverTableData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.RecoverTableData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_endpoint();
      endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
    }
    if (cached_has_bits & 0x00000002u) {
      offset_delta_ = from.offset_delta_;
    }
    if (cached_has_bits & 0x00000004u) {
      is_leader_ = from.is_leader_;
    }
    if (cached_has_bits & 0x00000008u) {
      concurrency_ = from.concurrency_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RecoverTableData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.RecoverTableData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecoverTableData::CopyFrom(const RecoverTableData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.RecoverTableData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecoverTableData::IsInitialized() const {
  return true;
}

void RecoverTableData::Swap(RecoverTableData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecoverTableData::InternalSwap(RecoverTableData* other) {
  using std::swap;
  endpoint_.Swap(&other->endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(offset_delta_, other->offset_delta_);
  swap(is_leader_, other->is_leader_);
  swap(concurrency_, other->concurrency_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RecoverTableData::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateTableData::InitAsDefaultInstance() {
  ::openmldb::nameserver::_CreateTableData_default_instance_._instance.get_mutable()->table_info_ = const_cast< ::openmldb::nameserver::TableInfo*>(
      ::openmldb::nameserver::TableInfo::internal_default_instance());
  ::openmldb::nameserver::_CreateTableData_default_instance_._instance.get_mutable()->remote_table_info_ = const_cast< ::openmldb::nameserver::TableInfo*>(
      ::openmldb::nameserver::TableInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateTableData::kAliasFieldNumber;
const int CreateTableData::kTableInfoFieldNumber;
const int CreateTableData::kRemoteTableInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateTableData::CreateTableData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_CreateTableData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.CreateTableData)
}
CreateTableData::CreateTableData(const CreateTableData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_alias()) {
    alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  if (from.has_table_info()) {
    table_info_ = new ::openmldb::nameserver::TableInfo(*from.table_info_);
  } else {
    table_info_ = NULL;
  }
  if (from.has_remote_table_info()) {
    remote_table_info_ = new ::openmldb::nameserver::TableInfo(*from.remote_table_info_);
  } else {
    remote_table_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.CreateTableData)
}

void CreateTableData::SharedCtor() {
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&table_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remote_table_info_) -
      reinterpret_cast<char*>(&table_info_)) + sizeof(remote_table_info_));
}

CreateTableData::~CreateTableData() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.CreateTableData)
  SharedDtor();
}

void CreateTableData::SharedDtor() {
  alias_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete table_info_;
  if (this != internal_default_instance()) delete remote_table_info_;
}

void CreateTableData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateTableData::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateTableData& CreateTableData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_CreateTableData.base);
  return *internal_default_instance();
}


void CreateTableData::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.CreateTableData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      alias_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(table_info_ != NULL);
      table_info_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(remote_table_info_ != NULL);
      remote_table_info_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateTableData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.CreateTableData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string alias = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alias()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alias().data(), static_cast<int>(this->alias().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.CreateTableData.alias");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.nameserver.TableInfo table_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.nameserver.TableInfo remote_table_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_remote_table_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.CreateTableData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.CreateTableData)
  return false;
#undef DO_
}

void CreateTableData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.CreateTableData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string alias = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alias().data(), static_cast<int>(this->alias().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.CreateTableData.alias");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->alias(), output);
  }

  // optional .openmldb.nameserver.TableInfo table_info = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_table_info(), output);
  }

  // optional .openmldb.nameserver.TableInfo remote_table_info = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_remote_table_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.CreateTableData)
}

::google::protobuf::uint8* CreateTableData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.CreateTableData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string alias = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alias().data(), static_cast<int>(this->alias().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.CreateTableData.alias");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->alias(), target);
  }

  // optional .openmldb.nameserver.TableInfo table_info = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_table_info(), deterministic, target);
  }

  // optional .openmldb.nameserver.TableInfo remote_table_info = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_remote_table_info(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.CreateTableData)
  return target;
}

size_t CreateTableData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.CreateTableData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string alias = 1;
    if (has_alias()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alias());
    }

    // optional .openmldb.nameserver.TableInfo table_info = 2;
    if (has_table_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *table_info_);
    }

    // optional .openmldb.nameserver.TableInfo remote_table_info = 3;
    if (has_remote_table_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *remote_table_info_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateTableData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.CreateTableData)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTableData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateTableData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.CreateTableData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.CreateTableData)
    MergeFrom(*source);
  }
}

void CreateTableData::MergeFrom(const CreateTableData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.CreateTableData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_alias();
      alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_table_info()->::openmldb::nameserver::TableInfo::MergeFrom(from.table_info());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_remote_table_info()->::openmldb::nameserver::TableInfo::MergeFrom(from.remote_table_info());
    }
  }
}

void CreateTableData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.CreateTableData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTableData::CopyFrom(const CreateTableData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.CreateTableData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTableData::IsInitialized() const {
  if (has_table_info()) {
    if (!this->table_info_->IsInitialized()) return false;
  }
  if (has_remote_table_info()) {
    if (!this->remote_table_info_->IsInitialized()) return false;
  }
  return true;
}

void CreateTableData::Swap(CreateTableData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateTableData::InternalSwap(CreateTableData* other) {
  using std::swap;
  alias_.Swap(&other->alias_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(table_info_, other->table_info_);
  swap(remote_table_info_, other->remote_table_info_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateTableData::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChangeLeaderData::InitAsDefaultInstance() {
}
void ChangeLeaderData::clear_remote_follower() {
  remote_follower_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeLeaderData::kNameFieldNumber;
const int ChangeLeaderData::kTidFieldNumber;
const int ChangeLeaderData::kPidFieldNumber;
const int ChangeLeaderData::kTermFieldNumber;
const int ChangeLeaderData::kOffsetFieldNumber;
const int ChangeLeaderData::kLeaderFieldNumber;
const int ChangeLeaderData::kFollowerFieldNumber;
const int ChangeLeaderData::kCandidateLeaderFieldNumber;
const int ChangeLeaderData::kRemoteFollowerFieldNumber;
const int ChangeLeaderData::kDbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeLeaderData::ChangeLeaderData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_ChangeLeaderData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.ChangeLeaderData)
}
ChangeLeaderData::ChangeLeaderData(const ChangeLeaderData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      follower_(from.follower_),
      remote_follower_(from.remote_follower_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  leader_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_leader()) {
    leader_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_);
  }
  candidate_leader_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_candidate_leader()) {
    candidate_leader_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.candidate_leader_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&offset_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(offset_));
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.ChangeLeaderData)
}

void ChangeLeaderData::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leader_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  candidate_leader_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offset_) -
      reinterpret_cast<char*>(&tid_)) + sizeof(offset_));
}

ChangeLeaderData::~ChangeLeaderData() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.ChangeLeaderData)
  SharedDtor();
}

void ChangeLeaderData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leader_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  candidate_leader_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChangeLeaderData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChangeLeaderData::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeLeaderData& ChangeLeaderData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_ChangeLeaderData.base);
  return *internal_default_instance();
}


void ChangeLeaderData::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.ChangeLeaderData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  follower_.Clear();
  remote_follower_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      leader_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      candidate_leader_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&offset_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(offset_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChangeLeaderData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.ChangeLeaderData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ChangeLeaderData.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 tid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 term = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_term();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 offset = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string leader = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leader()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->leader().data(), static_cast<int>(this->leader().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ChangeLeaderData.leader");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string follower = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_follower()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->follower(this->follower_size() - 1).data(),
            static_cast<int>(this->follower(this->follower_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ChangeLeaderData.follower");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string candidate_leader = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_candidate_leader()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->candidate_leader().data(), static_cast<int>(this->candidate_leader().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ChangeLeaderData.candidate_leader");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.common.EndpointAndTid remote_follower = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_remote_follower()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 10 [default = ""];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ChangeLeaderData.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.ChangeLeaderData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.ChangeLeaderData)
  return false;
#undef DO_
}

void ChangeLeaderData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.ChangeLeaderData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ChangeLeaderData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint32 tid = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->tid(), output);
  }

  // optional uint32 pid = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pid(), output);
  }

  // optional uint64 term = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->term(), output);
  }

  // optional uint64 offset = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->offset(), output);
  }

  // optional string leader = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leader().data(), static_cast<int>(this->leader().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ChangeLeaderData.leader");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->leader(), output);
  }

  // repeated string follower = 7;
  for (int i = 0, n = this->follower_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->follower(i).data(), static_cast<int>(this->follower(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ChangeLeaderData.follower");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->follower(i), output);
  }

  // optional string candidate_leader = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->candidate_leader().data(), static_cast<int>(this->candidate_leader().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ChangeLeaderData.candidate_leader");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->candidate_leader(), output);
  }

  // repeated .openmldb.common.EndpointAndTid remote_follower = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->remote_follower_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->remote_follower(static_cast<int>(i)),
      output);
  }

  // optional string db = 10 [default = ""];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ChangeLeaderData.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->db(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.ChangeLeaderData)
}

::google::protobuf::uint8* ChangeLeaderData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.ChangeLeaderData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ChangeLeaderData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint32 tid = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->tid(), target);
  }

  // optional uint32 pid = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pid(), target);
  }

  // optional uint64 term = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->term(), target);
  }

  // optional uint64 offset = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->offset(), target);
  }

  // optional string leader = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leader().data(), static_cast<int>(this->leader().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ChangeLeaderData.leader");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->leader(), target);
  }

  // repeated string follower = 7;
  for (int i = 0, n = this->follower_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->follower(i).data(), static_cast<int>(this->follower(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ChangeLeaderData.follower");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->follower(i), target);
  }

  // optional string candidate_leader = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->candidate_leader().data(), static_cast<int>(this->candidate_leader().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ChangeLeaderData.candidate_leader");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->candidate_leader(), target);
  }

  // repeated .openmldb.common.EndpointAndTid remote_follower = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->remote_follower_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->remote_follower(static_cast<int>(i)), deterministic, target);
  }

  // optional string db = 10 [default = ""];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ChangeLeaderData.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->db(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.ChangeLeaderData)
  return target;
}

size_t ChangeLeaderData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.ChangeLeaderData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string follower = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->follower_size());
  for (int i = 0, n = this->follower_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->follower(i));
  }

  // repeated .openmldb.common.EndpointAndTid remote_follower = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->remote_follower_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->remote_follower(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string leader = 6;
    if (has_leader()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->leader());
    }

    // optional string candidate_leader = 8;
    if (has_candidate_leader()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->candidate_leader());
    }

    // optional string db = 10 [default = ""];
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional uint32 tid = 2;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 pid = 3;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional uint64 term = 4;
    if (has_term()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->term());
    }

    // optional uint64 offset = 5;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->offset());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChangeLeaderData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.ChangeLeaderData)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeLeaderData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeLeaderData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.ChangeLeaderData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.ChangeLeaderData)
    MergeFrom(*source);
  }
}

void ChangeLeaderData::MergeFrom(const ChangeLeaderData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.ChangeLeaderData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  follower_.MergeFrom(from.follower_);
  remote_follower_.MergeFrom(from.remote_follower_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_leader();
      leader_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_candidate_leader();
      candidate_leader_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.candidate_leader_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000010u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000020u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000040u) {
      term_ = from.term_;
    }
    if (cached_has_bits & 0x00000080u) {
      offset_ = from.offset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChangeLeaderData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.ChangeLeaderData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeLeaderData::CopyFrom(const ChangeLeaderData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.ChangeLeaderData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeLeaderData::IsInitialized() const {
  return true;
}

void ChangeLeaderData::Swap(ChangeLeaderData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeLeaderData::InternalSwap(ChangeLeaderData* other) {
  using std::swap;
  follower_.InternalSwap(CastToBase(&other->follower_));
  CastToBase(&remote_follower_)->InternalSwap(CastToBase(&other->remote_follower_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  leader_.Swap(&other->leader_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  candidate_leader_.Swap(&other->candidate_leader_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(term_, other->term_);
  swap(offset_, other->offset_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChangeLeaderData::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OPStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OPStatus::kOpIdFieldNumber;
const int OPStatus::kOpTypeFieldNumber;
const int OPStatus::kStatusFieldNumber;
const int OPStatus::kStartTimeFieldNumber;
const int OPStatus::kEndTimeFieldNumber;
const int OPStatus::kTaskTypeFieldNumber;
const int OPStatus::kNameFieldNumber;
const int OPStatus::kPidFieldNumber;
const int OPStatus::kForReplicaClusterFieldNumber;
const int OPStatus::kDbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OPStatus::OPStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_OPStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.OPStatus)
}
OPStatus::OPStatus(const OPStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  op_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_op_type()) {
    op_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.op_type_);
  }
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_status()) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  task_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_task_type()) {
    task_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_type_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  ::memcpy(&op_id_, &from.op_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&for_replica_cluster_) -
    reinterpret_cast<char*>(&op_id_)) + sizeof(for_replica_cluster_));
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.OPStatus)
}

void OPStatus::SharedCtor() {
  op_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&op_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&for_replica_cluster_) -
      reinterpret_cast<char*>(&op_id_)) + sizeof(for_replica_cluster_));
}

OPStatus::~OPStatus() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.OPStatus)
  SharedDtor();
}

void OPStatus::SharedDtor() {
  op_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OPStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OPStatus::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OPStatus& OPStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_OPStatus.base);
  return *internal_default_instance();
}


void OPStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.OPStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      op_type_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      status_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      task_type_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 224u) {
    ::memset(&op_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&end_time_) -
        reinterpret_cast<char*>(&op_id_)) + sizeof(end_time_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&pid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&for_replica_cluster_) -
        reinterpret_cast<char*>(&pid_)) + sizeof(for_replica_cluster_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OPStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.OPStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 op_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_op_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &op_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string op_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_op_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->op_type().data(), static_cast<int>(this->op_type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.OPStatus.op_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.OPStatus.status");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 start_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_start_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 end_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_end_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string task_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->task_type().data(), static_cast<int>(this->task_type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.OPStatus.task_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.OPStatus.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 for_replica_cluster = 9 [default = 0];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_for_replica_cluster();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &for_replica_cluster_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 10 [default = ""];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.OPStatus.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.OPStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.OPStatus)
  return false;
#undef DO_
}

void OPStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.OPStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 op_id = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->op_id(), output);
  }

  // required string op_type = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->op_type().data(), static_cast<int>(this->op_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.OPStatus.op_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->op_type(), output);
  }

  // required string status = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.OPStatus.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->status(), output);
  }

  // required uint64 start_time = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->start_time(), output);
  }

  // required uint64 end_time = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->end_time(), output);
  }

  // required string task_type = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_type().data(), static_cast<int>(this->task_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.OPStatus.task_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->task_type(), output);
  }

  // optional string name = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.OPStatus.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  // optional uint32 pid = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->pid(), output);
  }

  // optional int32 for_replica_cluster = 9 [default = 0];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->for_replica_cluster(), output);
  }

  // optional string db = 10 [default = ""];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.OPStatus.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->db(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.OPStatus)
}

::google::protobuf::uint8* OPStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.OPStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 op_id = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->op_id(), target);
  }

  // required string op_type = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->op_type().data(), static_cast<int>(this->op_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.OPStatus.op_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->op_type(), target);
  }

  // required string status = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.OPStatus.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->status(), target);
  }

  // required uint64 start_time = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->start_time(), target);
  }

  // required uint64 end_time = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->end_time(), target);
  }

  // required string task_type = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_type().data(), static_cast<int>(this->task_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.OPStatus.task_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->task_type(), target);
  }

  // optional string name = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.OPStatus.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  // optional uint32 pid = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->pid(), target);
  }

  // optional int32 for_replica_cluster = 9 [default = 0];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->for_replica_cluster(), target);
  }

  // optional string db = 10 [default = ""];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.OPStatus.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->db(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.OPStatus)
  return target;
}

size_t OPStatus::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openmldb.nameserver.OPStatus)
  size_t total_size = 0;

  if (has_op_type()) {
    // required string op_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->op_type());
  }

  if (has_status()) {
    // required string status = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  if (has_task_type()) {
    // required string task_type = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_type());
  }

  if (has_op_id()) {
    // required uint64 op_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->op_id());
  }

  if (has_start_time()) {
    // required uint64 start_time = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_time());
  }

  if (has_end_time()) {
    // required uint64 end_time = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->end_time());
  }

  return total_size;
}
size_t OPStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.OPStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000000e7) ^ 0x000000e7) == 0) {  // All required fields are present.
    // required string op_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->op_type());

    // required string status = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());

    // required string task_type = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_type());

    // required uint64 op_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->op_id());

    // required uint64 start_time = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_time());

    // required uint64 end_time = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->end_time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 24u) {
    // optional string name = 7;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string db = 10 [default = ""];
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional uint32 pid = 8;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional int32 for_replica_cluster = 9 [default = 0];
    if (has_for_replica_cluster()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->for_replica_cluster());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OPStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.OPStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const OPStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OPStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.OPStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.OPStatus)
    MergeFrom(*source);
  }
}

void OPStatus::MergeFrom(const OPStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.OPStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_op_type();
      op_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.op_type_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_status();
      status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_task_type();
      task_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_type_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000020u) {
      op_id_ = from.op_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      start_time_ = from.start_time_;
    }
    if (cached_has_bits & 0x00000080u) {
      end_time_ = from.end_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000200u) {
      for_replica_cluster_ = from.for_replica_cluster_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OPStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.OPStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OPStatus::CopyFrom(const OPStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.OPStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OPStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000e7) != 0x000000e7) return false;
  return true;
}

void OPStatus::Swap(OPStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OPStatus::InternalSwap(OPStatus* other) {
  using std::swap;
  op_type_.Swap(&other->op_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  status_.Swap(&other->status_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  task_type_.Swap(&other->task_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(op_id_, other->op_id_);
  swap(start_time_, other->start_time_);
  swap(end_time_, other->end_time_);
  swap(pid_, other->pid_);
  swap(for_replica_cluster_, other->for_replica_cluster_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OPStatus::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetTablePartitionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTablePartitionRequest::kNameFieldNumber;
const int GetTablePartitionRequest::kPidFieldNumber;
const int GetTablePartitionRequest::kDbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTablePartitionRequest::GetTablePartitionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_GetTablePartitionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.GetTablePartitionRequest)
}
GetTablePartitionRequest::GetTablePartitionRequest(const GetTablePartitionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  pid_ = from.pid_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.GetTablePartitionRequest)
}

void GetTablePartitionRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pid_ = 0u;
}

GetTablePartitionRequest::~GetTablePartitionRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.GetTablePartitionRequest)
  SharedDtor();
}

void GetTablePartitionRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetTablePartitionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetTablePartitionRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetTablePartitionRequest& GetTablePartitionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_GetTablePartitionRequest.base);
  return *internal_default_instance();
}


void GetTablePartitionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.GetTablePartitionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
  }
  pid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetTablePartitionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.GetTablePartitionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.GetTablePartitionRequest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 3 [default = ""];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.GetTablePartitionRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.GetTablePartitionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.GetTablePartitionRequest)
  return false;
#undef DO_
}

void GetTablePartitionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.GetTablePartitionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.GetTablePartitionRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional string db = 3 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.GetTablePartitionRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->db(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.GetTablePartitionRequest)
}

::google::protobuf::uint8* GetTablePartitionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.GetTablePartitionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.GetTablePartitionRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional string db = 3 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.GetTablePartitionRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->db(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.GetTablePartitionRequest)
  return target;
}

size_t GetTablePartitionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.GetTablePartitionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string db = 3 [default = ""];
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTablePartitionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.GetTablePartitionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTablePartitionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTablePartitionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.GetTablePartitionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.GetTablePartitionRequest)
    MergeFrom(*source);
  }
}

void GetTablePartitionRequest::MergeFrom(const GetTablePartitionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.GetTablePartitionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000004u) {
      pid_ = from.pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetTablePartitionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.GetTablePartitionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTablePartitionRequest::CopyFrom(const GetTablePartitionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.GetTablePartitionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTablePartitionRequest::IsInitialized() const {
  return true;
}

void GetTablePartitionRequest::Swap(GetTablePartitionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTablePartitionRequest::InternalSwap(GetTablePartitionRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pid_, other->pid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetTablePartitionRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetTablePartitionResponse::InitAsDefaultInstance() {
  ::openmldb::nameserver::_GetTablePartitionResponse_default_instance_._instance.get_mutable()->table_partition_ = const_cast< ::openmldb::nameserver::TablePartition*>(
      ::openmldb::nameserver::TablePartition::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTablePartitionResponse::kCodeFieldNumber;
const int GetTablePartitionResponse::kMsgFieldNumber;
const int GetTablePartitionResponse::kTablePartitionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTablePartitionResponse::GetTablePartitionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_GetTablePartitionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.GetTablePartitionResponse)
}
GetTablePartitionResponse::GetTablePartitionResponse(const GetTablePartitionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_table_partition()) {
    table_partition_ = new ::openmldb::nameserver::TablePartition(*from.table_partition_);
  } else {
    table_partition_ = NULL;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.GetTablePartitionResponse)
}

void GetTablePartitionResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&table_partition_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&table_partition_)) + sizeof(code_));
}

GetTablePartitionResponse::~GetTablePartitionResponse() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.GetTablePartitionResponse)
  SharedDtor();
}

void GetTablePartitionResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete table_partition_;
}

void GetTablePartitionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetTablePartitionResponse::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetTablePartitionResponse& GetTablePartitionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_GetTablePartitionResponse.base);
  return *internal_default_instance();
}


void GetTablePartitionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.GetTablePartitionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      msg_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(table_partition_ != NULL);
      table_partition_->Clear();
    }
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetTablePartitionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.GetTablePartitionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.GetTablePartitionResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.nameserver.TablePartition table_partition = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_partition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.GetTablePartitionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.GetTablePartitionResponse)
  return false;
#undef DO_
}

void GetTablePartitionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.GetTablePartitionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.GetTablePartitionResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // optional .openmldb.nameserver.TablePartition table_partition = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_table_partition(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.GetTablePartitionResponse)
}

::google::protobuf::uint8* GetTablePartitionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.GetTablePartitionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.GetTablePartitionResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // optional .openmldb.nameserver.TablePartition table_partition = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_table_partition(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.GetTablePartitionResponse)
  return target;
}

size_t GetTablePartitionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.GetTablePartitionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional .openmldb.nameserver.TablePartition table_partition = 3;
    if (has_table_partition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *table_partition_);
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTablePartitionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.GetTablePartitionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTablePartitionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTablePartitionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.GetTablePartitionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.GetTablePartitionResponse)
    MergeFrom(*source);
  }
}

void GetTablePartitionResponse::MergeFrom(const GetTablePartitionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.GetTablePartitionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_table_partition()->::openmldb::nameserver::TablePartition::MergeFrom(from.table_partition());
    }
    if (cached_has_bits & 0x00000004u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetTablePartitionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.GetTablePartitionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTablePartitionResponse::CopyFrom(const GetTablePartitionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.GetTablePartitionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTablePartitionResponse::IsInitialized() const {
  if (has_table_partition()) {
    if (!this->table_partition_->IsInitialized()) return false;
  }
  return true;
}

void GetTablePartitionResponse::Swap(GetTablePartitionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTablePartitionResponse::InternalSwap(GetTablePartitionResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(table_partition_, other->table_partition_);
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetTablePartitionResponse::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetTablePartitionRequest::InitAsDefaultInstance() {
  ::openmldb::nameserver::_SetTablePartitionRequest_default_instance_._instance.get_mutable()->table_partition_ = const_cast< ::openmldb::nameserver::TablePartition*>(
      ::openmldb::nameserver::TablePartition::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetTablePartitionRequest::kNameFieldNumber;
const int SetTablePartitionRequest::kTablePartitionFieldNumber;
const int SetTablePartitionRequest::kDbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetTablePartitionRequest::SetTablePartitionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_SetTablePartitionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.SetTablePartitionRequest)
}
SetTablePartitionRequest::SetTablePartitionRequest(const SetTablePartitionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  if (from.has_table_partition()) {
    table_partition_ = new ::openmldb::nameserver::TablePartition(*from.table_partition_);
  } else {
    table_partition_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.SetTablePartitionRequest)
}

void SetTablePartitionRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  table_partition_ = NULL;
}

SetTablePartitionRequest::~SetTablePartitionRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.SetTablePartitionRequest)
  SharedDtor();
}

void SetTablePartitionRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete table_partition_;
}

void SetTablePartitionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetTablePartitionRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetTablePartitionRequest& SetTablePartitionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_SetTablePartitionRequest.base);
  return *internal_default_instance();
}


void SetTablePartitionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.SetTablePartitionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(table_partition_ != NULL);
      table_partition_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetTablePartitionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.SetTablePartitionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.SetTablePartitionRequest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.nameserver.TablePartition table_partition = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_partition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 3 [default = ""];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.SetTablePartitionRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.SetTablePartitionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.SetTablePartitionRequest)
  return false;
#undef DO_
}

void SetTablePartitionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.SetTablePartitionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.SetTablePartitionRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .openmldb.nameserver.TablePartition table_partition = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_table_partition(), output);
  }

  // optional string db = 3 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.SetTablePartitionRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->db(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.SetTablePartitionRequest)
}

::google::protobuf::uint8* SetTablePartitionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.SetTablePartitionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.SetTablePartitionRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .openmldb.nameserver.TablePartition table_partition = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_table_partition(), deterministic, target);
  }

  // optional string db = 3 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.SetTablePartitionRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->db(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.SetTablePartitionRequest)
  return target;
}

size_t SetTablePartitionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.SetTablePartitionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string db = 3 [default = ""];
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional .openmldb.nameserver.TablePartition table_partition = 2;
    if (has_table_partition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *table_partition_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetTablePartitionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.SetTablePartitionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetTablePartitionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetTablePartitionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.SetTablePartitionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.SetTablePartitionRequest)
    MergeFrom(*source);
  }
}

void SetTablePartitionRequest::MergeFrom(const SetTablePartitionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.SetTablePartitionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_table_partition()->::openmldb::nameserver::TablePartition::MergeFrom(from.table_partition());
    }
  }
}

void SetTablePartitionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.SetTablePartitionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetTablePartitionRequest::CopyFrom(const SetTablePartitionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.SetTablePartitionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetTablePartitionRequest::IsInitialized() const {
  if (has_table_partition()) {
    if (!this->table_partition_->IsInitialized()) return false;
  }
  return true;
}

void SetTablePartitionRequest::Swap(SetTablePartitionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetTablePartitionRequest::InternalSwap(SetTablePartitionRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(table_partition_, other->table_partition_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetTablePartitionRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateTableAliveRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateTableAliveRequest::kNameFieldNumber;
const int UpdateTableAliveRequest::kEndpointFieldNumber;
const int UpdateTableAliveRequest::kPidFieldNumber;
const int UpdateTableAliveRequest::kIsAliveFieldNumber;
const int UpdateTableAliveRequest::kDbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateTableAliveRequest::UpdateTableAliveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_UpdateTableAliveRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.UpdateTableAliveRequest)
}
UpdateTableAliveRequest::UpdateTableAliveRequest(const UpdateTableAliveRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_endpoint()) {
    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  ::memcpy(&pid_, &from.pid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_alive_) -
    reinterpret_cast<char*>(&pid_)) + sizeof(is_alive_));
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.UpdateTableAliveRequest)
}

void UpdateTableAliveRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_alive_) -
      reinterpret_cast<char*>(&pid_)) + sizeof(is_alive_));
}

UpdateTableAliveRequest::~UpdateTableAliveRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.UpdateTableAliveRequest)
  SharedDtor();
}

void UpdateTableAliveRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateTableAliveRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateTableAliveRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateTableAliveRequest& UpdateTableAliveRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_UpdateTableAliveRequest.base);
  return *internal_default_instance();
}


void UpdateTableAliveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.UpdateTableAliveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      endpoint_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&pid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_alive_) -
        reinterpret_cast<char*>(&pid_)) + sizeof(is_alive_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UpdateTableAliveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.UpdateTableAliveRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.UpdateTableAliveRequest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string endpoint = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->endpoint().data(), static_cast<int>(this->endpoint().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.UpdateTableAliveRequest.endpoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_alive = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_is_alive();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_alive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 5 [default = ""];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.UpdateTableAliveRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.UpdateTableAliveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.UpdateTableAliveRequest)
  return false;
#undef DO_
}

void UpdateTableAliveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.UpdateTableAliveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.UpdateTableAliveRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string endpoint = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.UpdateTableAliveRequest.endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->endpoint(), output);
  }

  // optional uint32 pid = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pid(), output);
  }

  // optional bool is_alive = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_alive(), output);
  }

  // optional string db = 5 [default = ""];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.UpdateTableAliveRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->db(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.UpdateTableAliveRequest)
}

::google::protobuf::uint8* UpdateTableAliveRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.UpdateTableAliveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.UpdateTableAliveRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string endpoint = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.UpdateTableAliveRequest.endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->endpoint(), target);
  }

  // optional uint32 pid = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pid(), target);
  }

  // optional bool is_alive = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_alive(), target);
  }

  // optional string db = 5 [default = ""];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.UpdateTableAliveRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->db(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.UpdateTableAliveRequest)
  return target;
}

size_t UpdateTableAliveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.UpdateTableAliveRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string endpoint = 2;
    if (has_endpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->endpoint());
    }

    // optional string db = 5 [default = ""];
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional uint32 pid = 3;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional bool is_alive = 4;
    if (has_is_alive()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateTableAliveRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.UpdateTableAliveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateTableAliveRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateTableAliveRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.UpdateTableAliveRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.UpdateTableAliveRequest)
    MergeFrom(*source);
  }
}

void UpdateTableAliveRequest::MergeFrom(const UpdateTableAliveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.UpdateTableAliveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_endpoint();
      endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000008u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000010u) {
      is_alive_ = from.is_alive_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UpdateTableAliveRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.UpdateTableAliveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateTableAliveRequest::CopyFrom(const UpdateTableAliveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.UpdateTableAliveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateTableAliveRequest::IsInitialized() const {
  return true;
}

void UpdateTableAliveRequest::Swap(UpdateTableAliveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateTableAliveRequest::InternalSwap(UpdateTableAliveRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  endpoint_.Swap(&other->endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pid_, other->pid_);
  swap(is_alive_, other->is_alive_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateTableAliveRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShowOPStatusRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowOPStatusRequest::kNameFieldNumber;
const int ShowOPStatusRequest::kPidFieldNumber;
const int ShowOPStatusRequest::kDbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowOPStatusRequest::ShowOPStatusRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_ShowOPStatusRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.ShowOPStatusRequest)
}
ShowOPStatusRequest::ShowOPStatusRequest(const ShowOPStatusRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  pid_ = from.pid_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.ShowOPStatusRequest)
}

void ShowOPStatusRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pid_ = 0u;
}

ShowOPStatusRequest::~ShowOPStatusRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.ShowOPStatusRequest)
  SharedDtor();
}

void ShowOPStatusRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShowOPStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShowOPStatusRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShowOPStatusRequest& ShowOPStatusRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_ShowOPStatusRequest.base);
  return *internal_default_instance();
}


void ShowOPStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.ShowOPStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
  }
  pid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowOPStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.ShowOPStatusRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ShowOPStatusRequest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ShowOPStatusRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.ShowOPStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.ShowOPStatusRequest)
  return false;
#undef DO_
}

void ShowOPStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.ShowOPStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowOPStatusRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional string db = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowOPStatusRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->db(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.ShowOPStatusRequest)
}

::google::protobuf::uint8* ShowOPStatusRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.ShowOPStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowOPStatusRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional string db = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowOPStatusRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->db(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.ShowOPStatusRequest)
  return target;
}

size_t ShowOPStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.ShowOPStatusRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string db = 3;
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowOPStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.ShowOPStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowOPStatusRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShowOPStatusRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.ShowOPStatusRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.ShowOPStatusRequest)
    MergeFrom(*source);
  }
}

void ShowOPStatusRequest::MergeFrom(const ShowOPStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.ShowOPStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000004u) {
      pid_ = from.pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShowOPStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.ShowOPStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowOPStatusRequest::CopyFrom(const ShowOPStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.ShowOPStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowOPStatusRequest::IsInitialized() const {
  return true;
}

void ShowOPStatusRequest::Swap(ShowOPStatusRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowOPStatusRequest::InternalSwap(ShowOPStatusRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pid_, other->pid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShowOPStatusRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConnectZKRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectZKRequest::ConnectZKRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_ConnectZKRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.ConnectZKRequest)
}
ConnectZKRequest::ConnectZKRequest(const ConnectZKRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.ConnectZKRequest)
}

void ConnectZKRequest::SharedCtor() {
}

ConnectZKRequest::~ConnectZKRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.ConnectZKRequest)
  SharedDtor();
}

void ConnectZKRequest::SharedDtor() {
}

void ConnectZKRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConnectZKRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectZKRequest& ConnectZKRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_ConnectZKRequest.base);
  return *internal_default_instance();
}


void ConnectZKRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.ConnectZKRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConnectZKRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.ConnectZKRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.ConnectZKRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.ConnectZKRequest)
  return false;
#undef DO_
}

void ConnectZKRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.ConnectZKRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.ConnectZKRequest)
}

::google::protobuf::uint8* ConnectZKRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.ConnectZKRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.ConnectZKRequest)
  return target;
}

size_t ConnectZKRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.ConnectZKRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectZKRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.ConnectZKRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectZKRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectZKRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.ConnectZKRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.ConnectZKRequest)
    MergeFrom(*source);
  }
}

void ConnectZKRequest::MergeFrom(const ConnectZKRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.ConnectZKRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ConnectZKRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.ConnectZKRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectZKRequest::CopyFrom(const ConnectZKRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.ConnectZKRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectZKRequest::IsInitialized() const {
  return true;
}

void ConnectZKRequest::Swap(ConnectZKRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectZKRequest::InternalSwap(ConnectZKRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConnectZKRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DisConnectZKRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisConnectZKRequest::DisConnectZKRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_DisConnectZKRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.DisConnectZKRequest)
}
DisConnectZKRequest::DisConnectZKRequest(const DisConnectZKRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.DisConnectZKRequest)
}

void DisConnectZKRequest::SharedCtor() {
}

DisConnectZKRequest::~DisConnectZKRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.DisConnectZKRequest)
  SharedDtor();
}

void DisConnectZKRequest::SharedDtor() {
}

void DisConnectZKRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DisConnectZKRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DisConnectZKRequest& DisConnectZKRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_DisConnectZKRequest.base);
  return *internal_default_instance();
}


void DisConnectZKRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.DisConnectZKRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DisConnectZKRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.DisConnectZKRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.DisConnectZKRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.DisConnectZKRequest)
  return false;
#undef DO_
}

void DisConnectZKRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.DisConnectZKRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.DisConnectZKRequest)
}

::google::protobuf::uint8* DisConnectZKRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.DisConnectZKRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.DisConnectZKRequest)
  return target;
}

size_t DisConnectZKRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.DisConnectZKRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisConnectZKRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.DisConnectZKRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DisConnectZKRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DisConnectZKRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.DisConnectZKRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.DisConnectZKRequest)
    MergeFrom(*source);
  }
}

void DisConnectZKRequest::MergeFrom(const DisConnectZKRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.DisConnectZKRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DisConnectZKRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.DisConnectZKRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisConnectZKRequest::CopyFrom(const DisConnectZKRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.DisConnectZKRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisConnectZKRequest::IsInitialized() const {
  return true;
}

void DisConnectZKRequest::Swap(DisConnectZKRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisConnectZKRequest::InternalSwap(DisConnectZKRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DisConnectZKRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShowOPStatusResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowOPStatusResponse::kCodeFieldNumber;
const int ShowOPStatusResponse::kMsgFieldNumber;
const int ShowOPStatusResponse::kOpStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowOPStatusResponse::ShowOPStatusResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_ShowOPStatusResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.ShowOPStatusResponse)
}
ShowOPStatusResponse::ShowOPStatusResponse(const ShowOPStatusResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      op_status_(from.op_status_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.ShowOPStatusResponse)
}

void ShowOPStatusResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

ShowOPStatusResponse::~ShowOPStatusResponse() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.ShowOPStatusResponse)
  SharedDtor();
}

void ShowOPStatusResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShowOPStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShowOPStatusResponse::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShowOPStatusResponse& ShowOPStatusResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_ShowOPStatusResponse.base);
  return *internal_default_instance();
}


void ShowOPStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.ShowOPStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  op_status_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowOPStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.ShowOPStatusResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ShowOPStatusResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.nameserver.OPStatus op_status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_op_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.ShowOPStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.ShowOPStatusResponse)
  return false;
#undef DO_
}

void ShowOPStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.ShowOPStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowOPStatusResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // repeated .openmldb.nameserver.OPStatus op_status = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->op_status_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->op_status(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.ShowOPStatusResponse)
}

::google::protobuf::uint8* ShowOPStatusResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.ShowOPStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowOPStatusResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // repeated .openmldb.nameserver.OPStatus op_status = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->op_status_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->op_status(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.ShowOPStatusResponse)
  return target;
}

size_t ShowOPStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.ShowOPStatusResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.nameserver.OPStatus op_status = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->op_status_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->op_status(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowOPStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.ShowOPStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowOPStatusResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShowOPStatusResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.ShowOPStatusResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.ShowOPStatusResponse)
    MergeFrom(*source);
  }
}

void ShowOPStatusResponse::MergeFrom(const ShowOPStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.ShowOPStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  op_status_.MergeFrom(from.op_status_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShowOPStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.ShowOPStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowOPStatusResponse::CopyFrom(const ShowOPStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.ShowOPStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowOPStatusResponse::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->op_status())) return false;
  return true;
}

void ShowOPStatusResponse::Swap(ShowOPStatusResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowOPStatusResponse::InternalSwap(ShowOPStatusResponse* other) {
  using std::swap;
  CastToBase(&op_status_)->InternalSwap(CastToBase(&other->op_status_));
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShowOPStatusResponse::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CancelOPRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelOPRequest::kOpIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelOPRequest::CancelOPRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_CancelOPRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.CancelOPRequest)
}
CancelOPRequest::CancelOPRequest(const CancelOPRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  op_id_ = from.op_id_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.CancelOPRequest)
}

void CancelOPRequest::SharedCtor() {
  op_id_ = GOOGLE_ULONGLONG(0);
}

CancelOPRequest::~CancelOPRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.CancelOPRequest)
  SharedDtor();
}

void CancelOPRequest::SharedDtor() {
}

void CancelOPRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CancelOPRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CancelOPRequest& CancelOPRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_CancelOPRequest.base);
  return *internal_default_instance();
}


void CancelOPRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.CancelOPRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  op_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CancelOPRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.CancelOPRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 op_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_op_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &op_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.CancelOPRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.CancelOPRequest)
  return false;
#undef DO_
}

void CancelOPRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.CancelOPRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 op_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->op_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.CancelOPRequest)
}

::google::protobuf::uint8* CancelOPRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.CancelOPRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 op_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->op_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.CancelOPRequest)
  return target;
}

size_t CancelOPRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.CancelOPRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint64 op_id = 1;
  if (has_op_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->op_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CancelOPRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.CancelOPRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelOPRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CancelOPRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.CancelOPRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.CancelOPRequest)
    MergeFrom(*source);
  }
}

void CancelOPRequest::MergeFrom(const CancelOPRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.CancelOPRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_op_id()) {
    set_op_id(from.op_id());
  }
}

void CancelOPRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.CancelOPRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelOPRequest::CopyFrom(const CancelOPRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.CancelOPRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelOPRequest::IsInitialized() const {
  return true;
}

void CancelOPRequest::Swap(CancelOPRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelOPRequest::InternalSwap(CancelOPRequest* other) {
  using std::swap;
  swap(op_id_, other->op_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CancelOPRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClusterAddress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterAddress::kZkEndpointsFieldNumber;
const int ClusterAddress::kZkPathFieldNumber;
const int ClusterAddress::kAliasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterAddress::ClusterAddress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_ClusterAddress.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.ClusterAddress)
}
ClusterAddress::ClusterAddress(const ClusterAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  zk_endpoints_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_zk_endpoints()) {
    zk_endpoints_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zk_endpoints_);
  }
  zk_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_zk_path()) {
    zk_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zk_path_);
  }
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_alias()) {
    alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.ClusterAddress)
}

void ClusterAddress::SharedCtor() {
  zk_endpoints_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zk_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ClusterAddress::~ClusterAddress() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.ClusterAddress)
  SharedDtor();
}

void ClusterAddress::SharedDtor() {
  zk_endpoints_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zk_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alias_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClusterAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClusterAddress::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClusterAddress& ClusterAddress::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_ClusterAddress.base);
  return *internal_default_instance();
}


void ClusterAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.ClusterAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      zk_endpoints_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      zk_path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      alias_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ClusterAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.ClusterAddress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string zk_endpoints = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zk_endpoints()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->zk_endpoints().data(), static_cast<int>(this->zk_endpoints().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ClusterAddress.zk_endpoints");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string zk_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zk_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->zk_path().data(), static_cast<int>(this->zk_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ClusterAddress.zk_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string alias = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alias()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alias().data(), static_cast<int>(this->alias().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ClusterAddress.alias");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.ClusterAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.ClusterAddress)
  return false;
#undef DO_
}

void ClusterAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.ClusterAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string zk_endpoints = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->zk_endpoints().data(), static_cast<int>(this->zk_endpoints().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ClusterAddress.zk_endpoints");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->zk_endpoints(), output);
  }

  // optional string zk_path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->zk_path().data(), static_cast<int>(this->zk_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ClusterAddress.zk_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zk_path(), output);
  }

  // optional string alias = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alias().data(), static_cast<int>(this->alias().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ClusterAddress.alias");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->alias(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.ClusterAddress)
}

::google::protobuf::uint8* ClusterAddress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.ClusterAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string zk_endpoints = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->zk_endpoints().data(), static_cast<int>(this->zk_endpoints().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ClusterAddress.zk_endpoints");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->zk_endpoints(), target);
  }

  // optional string zk_path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->zk_path().data(), static_cast<int>(this->zk_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ClusterAddress.zk_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zk_path(), target);
  }

  // optional string alias = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alias().data(), static_cast<int>(this->alias().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ClusterAddress.alias");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->alias(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.ClusterAddress)
  return target;
}

size_t ClusterAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.ClusterAddress)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string zk_endpoints = 1;
    if (has_zk_endpoints()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->zk_endpoints());
    }

    // optional string zk_path = 2;
    if (has_zk_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->zk_path());
    }

    // optional string alias = 3;
    if (has_alias()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alias());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClusterAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.ClusterAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterAddress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterAddress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.ClusterAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.ClusterAddress)
    MergeFrom(*source);
  }
}

void ClusterAddress::MergeFrom(const ClusterAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.ClusterAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_zk_endpoints();
      zk_endpoints_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zk_endpoints_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_zk_path();
      zk_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zk_path_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_alias();
      alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
    }
  }
}

void ClusterAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.ClusterAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterAddress::CopyFrom(const ClusterAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.ClusterAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterAddress::IsInitialized() const {
  return true;
}

void ClusterAddress::Swap(ClusterAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterAddress::InternalSwap(ClusterAddress* other) {
  using std::swap;
  zk_endpoints_.Swap(&other->zk_endpoints_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zk_path_.Swap(&other->zk_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  alias_.Swap(&other->alias_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClusterAddress::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GeneralRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GeneralRequest::GeneralRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_GeneralRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.GeneralRequest)
}
GeneralRequest::GeneralRequest(const GeneralRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.GeneralRequest)
}

void GeneralRequest::SharedCtor() {
}

GeneralRequest::~GeneralRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.GeneralRequest)
  SharedDtor();
}

void GeneralRequest::SharedDtor() {
}

void GeneralRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GeneralRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GeneralRequest& GeneralRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_GeneralRequest.base);
  return *internal_default_instance();
}


void GeneralRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.GeneralRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GeneralRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.GeneralRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.GeneralRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.GeneralRequest)
  return false;
#undef DO_
}

void GeneralRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.GeneralRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.GeneralRequest)
}

::google::protobuf::uint8* GeneralRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.GeneralRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.GeneralRequest)
  return target;
}

size_t GeneralRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.GeneralRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GeneralRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.GeneralRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GeneralRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GeneralRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.GeneralRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.GeneralRequest)
    MergeFrom(*source);
  }
}

void GeneralRequest::MergeFrom(const GeneralRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.GeneralRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GeneralRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.GeneralRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GeneralRequest::CopyFrom(const GeneralRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.GeneralRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GeneralRequest::IsInitialized() const {
  return true;
}

void GeneralRequest::Swap(GeneralRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GeneralRequest::InternalSwap(GeneralRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GeneralRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClusterAddAge::InitAsDefaultInstance() {
  ::openmldb::nameserver::_ClusterAddAge_default_instance_._instance.get_mutable()->replica_ = const_cast< ::openmldb::nameserver::ClusterAddress*>(
      ::openmldb::nameserver::ClusterAddress::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterAddAge::kReplicaFieldNumber;
const int ClusterAddAge::kAgeFieldNumber;
const int ClusterAddAge::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterAddAge::ClusterAddAge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_ClusterAddAge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.ClusterAddAge)
}
ClusterAddAge::ClusterAddAge(const ClusterAddAge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_state()) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  if (from.has_replica()) {
    replica_ = new ::openmldb::nameserver::ClusterAddress(*from.replica_);
  } else {
    replica_ = NULL;
  }
  age_ = from.age_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.ClusterAddAge)
}

void ClusterAddAge::SharedCtor() {
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&replica_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&age_) -
      reinterpret_cast<char*>(&replica_)) + sizeof(age_));
}

ClusterAddAge::~ClusterAddAge() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.ClusterAddAge)
  SharedDtor();
}

void ClusterAddAge::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete replica_;
}

void ClusterAddAge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClusterAddAge::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClusterAddAge& ClusterAddAge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_ClusterAddAge.base);
  return *internal_default_instance();
}


void ClusterAddAge::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.ClusterAddAge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      state_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(replica_ != NULL);
      replica_->Clear();
    }
  }
  age_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ClusterAddAge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.ClusterAddAge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .openmldb.nameserver.ClusterAddress replica = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_replica()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 age = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_age();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_state()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->state().data(), static_cast<int>(this->state().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ClusterAddAge.state");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.ClusterAddAge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.ClusterAddAge)
  return false;
#undef DO_
}

void ClusterAddAge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.ClusterAddAge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.nameserver.ClusterAddress replica = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_replica(), output);
  }

  // optional uint64 age = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->age(), output);
  }

  // optional string state = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state().data(), static_cast<int>(this->state().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ClusterAddAge.state");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.ClusterAddAge)
}

::google::protobuf::uint8* ClusterAddAge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.ClusterAddAge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.nameserver.ClusterAddress replica = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_replica(), deterministic, target);
  }

  // optional uint64 age = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->age(), target);
  }

  // optional string state = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state().data(), static_cast<int>(this->state().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ClusterAddAge.state");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.ClusterAddAge)
  return target;
}

size_t ClusterAddAge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.ClusterAddAge)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string state = 3;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->state());
    }

    // optional .openmldb.nameserver.ClusterAddress replica = 1;
    if (has_replica()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *replica_);
    }

    // optional uint64 age = 2;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->age());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClusterAddAge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.ClusterAddAge)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterAddAge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterAddAge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.ClusterAddAge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.ClusterAddAge)
    MergeFrom(*source);
  }
}

void ClusterAddAge::MergeFrom(const ClusterAddAge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.ClusterAddAge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_state();
      state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_replica()->::openmldb::nameserver::ClusterAddress::MergeFrom(from.replica());
    }
    if (cached_has_bits & 0x00000004u) {
      age_ = from.age_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ClusterAddAge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.ClusterAddAge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterAddAge::CopyFrom(const ClusterAddAge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.ClusterAddAge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterAddAge::IsInitialized() const {
  return true;
}

void ClusterAddAge::Swap(ClusterAddAge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterAddAge::InternalSwap(ClusterAddAge* other) {
  using std::swap;
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(replica_, other->replica_);
  swap(age_, other->age_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClusterAddAge::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShowReplicaClusterResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowReplicaClusterResponse::kReplicasFieldNumber;
const int ShowReplicaClusterResponse::kCodeFieldNumber;
const int ShowReplicaClusterResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowReplicaClusterResponse::ShowReplicaClusterResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_ShowReplicaClusterResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.ShowReplicaClusterResponse)
}
ShowReplicaClusterResponse::ShowReplicaClusterResponse(const ShowReplicaClusterResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      replicas_(from.replicas_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.ShowReplicaClusterResponse)
}

void ShowReplicaClusterResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

ShowReplicaClusterResponse::~ShowReplicaClusterResponse() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.ShowReplicaClusterResponse)
  SharedDtor();
}

void ShowReplicaClusterResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShowReplicaClusterResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShowReplicaClusterResponse::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShowReplicaClusterResponse& ShowReplicaClusterResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_ShowReplicaClusterResponse.base);
  return *internal_default_instance();
}


void ShowReplicaClusterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.ShowReplicaClusterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  replicas_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowReplicaClusterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.ShowReplicaClusterResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openmldb.nameserver.ClusterAddAge replicas = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_replicas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ShowReplicaClusterResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.ShowReplicaClusterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.ShowReplicaClusterResponse)
  return false;
#undef DO_
}

void ShowReplicaClusterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.ShowReplicaClusterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openmldb.nameserver.ClusterAddAge replicas = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replicas_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->replicas(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->code(), output);
  }

  // optional string msg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowReplicaClusterResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.ShowReplicaClusterResponse)
}

::google::protobuf::uint8* ShowReplicaClusterResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.ShowReplicaClusterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openmldb.nameserver.ClusterAddAge replicas = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replicas_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->replicas(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->code(), target);
  }

  // optional string msg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowReplicaClusterResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.ShowReplicaClusterResponse)
  return target;
}

size_t ShowReplicaClusterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.ShowReplicaClusterResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.nameserver.ClusterAddAge replicas = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->replicas_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->replicas(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 3;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 2;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowReplicaClusterResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.ShowReplicaClusterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowReplicaClusterResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShowReplicaClusterResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.ShowReplicaClusterResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.ShowReplicaClusterResponse)
    MergeFrom(*source);
  }
}

void ShowReplicaClusterResponse::MergeFrom(const ShowReplicaClusterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.ShowReplicaClusterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  replicas_.MergeFrom(from.replicas_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShowReplicaClusterResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.ShowReplicaClusterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowReplicaClusterResponse::CopyFrom(const ShowReplicaClusterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.ShowReplicaClusterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowReplicaClusterResponse::IsInitialized() const {
  return true;
}

void ShowReplicaClusterResponse::Swap(ShowReplicaClusterResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowReplicaClusterResponse::InternalSwap(ShowReplicaClusterResponse* other) {
  using std::swap;
  CastToBase(&replicas_)->InternalSwap(CastToBase(&other->replicas_));
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShowReplicaClusterResponse::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveReplicaOfRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveReplicaOfRequest::kAliasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveReplicaOfRequest::RemoveReplicaOfRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_RemoveReplicaOfRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.RemoveReplicaOfRequest)
}
RemoveReplicaOfRequest::RemoveReplicaOfRequest(const RemoveReplicaOfRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_alias()) {
    alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.RemoveReplicaOfRequest)
}

void RemoveReplicaOfRequest::SharedCtor() {
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RemoveReplicaOfRequest::~RemoveReplicaOfRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.RemoveReplicaOfRequest)
  SharedDtor();
}

void RemoveReplicaOfRequest::SharedDtor() {
  alias_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RemoveReplicaOfRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RemoveReplicaOfRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveReplicaOfRequest& RemoveReplicaOfRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_RemoveReplicaOfRequest.base);
  return *internal_default_instance();
}


void RemoveReplicaOfRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.RemoveReplicaOfRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    alias_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RemoveReplicaOfRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.RemoveReplicaOfRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string alias = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alias()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alias().data(), static_cast<int>(this->alias().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.RemoveReplicaOfRequest.alias");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.RemoveReplicaOfRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.RemoveReplicaOfRequest)
  return false;
#undef DO_
}

void RemoveReplicaOfRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.RemoveReplicaOfRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string alias = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alias().data(), static_cast<int>(this->alias().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.RemoveReplicaOfRequest.alias");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->alias(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.RemoveReplicaOfRequest)
}

::google::protobuf::uint8* RemoveReplicaOfRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.RemoveReplicaOfRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string alias = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alias().data(), static_cast<int>(this->alias().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.RemoveReplicaOfRequest.alias");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->alias(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.RemoveReplicaOfRequest)
  return target;
}

size_t RemoveReplicaOfRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.RemoveReplicaOfRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string alias = 1;
  if (has_alias()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->alias());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveReplicaOfRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.RemoveReplicaOfRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveReplicaOfRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveReplicaOfRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.RemoveReplicaOfRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.RemoveReplicaOfRequest)
    MergeFrom(*source);
  }
}

void RemoveReplicaOfRequest::MergeFrom(const RemoveReplicaOfRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.RemoveReplicaOfRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_alias()) {
    set_has_alias();
    alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
}

void RemoveReplicaOfRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.RemoveReplicaOfRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveReplicaOfRequest::CopyFrom(const RemoveReplicaOfRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.RemoveReplicaOfRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveReplicaOfRequest::IsInitialized() const {
  return true;
}

void RemoveReplicaOfRequest::Swap(RemoveReplicaOfRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveReplicaOfRequest::InternalSwap(RemoveReplicaOfRequest* other) {
  using std::swap;
  alias_.Swap(&other->alias_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RemoveReplicaOfRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReplicaClusterByNsRequest::InitAsDefaultInstance() {
  ::openmldb::nameserver::_ReplicaClusterByNsRequest_default_instance_._instance.get_mutable()->zone_info_ = const_cast< ::openmldb::nameserver::ZoneInfo*>(
      ::openmldb::nameserver::ZoneInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReplicaClusterByNsRequest::kZoneInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReplicaClusterByNsRequest::ReplicaClusterByNsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_ReplicaClusterByNsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.ReplicaClusterByNsRequest)
}
ReplicaClusterByNsRequest::ReplicaClusterByNsRequest(const ReplicaClusterByNsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_zone_info()) {
    zone_info_ = new ::openmldb::nameserver::ZoneInfo(*from.zone_info_);
  } else {
    zone_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.ReplicaClusterByNsRequest)
}

void ReplicaClusterByNsRequest::SharedCtor() {
  zone_info_ = NULL;
}

ReplicaClusterByNsRequest::~ReplicaClusterByNsRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.ReplicaClusterByNsRequest)
  SharedDtor();
}

void ReplicaClusterByNsRequest::SharedDtor() {
  if (this != internal_default_instance()) delete zone_info_;
}

void ReplicaClusterByNsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReplicaClusterByNsRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReplicaClusterByNsRequest& ReplicaClusterByNsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_ReplicaClusterByNsRequest.base);
  return *internal_default_instance();
}


void ReplicaClusterByNsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.ReplicaClusterByNsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(zone_info_ != NULL);
    zone_info_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ReplicaClusterByNsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.ReplicaClusterByNsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .openmldb.nameserver.ZoneInfo zone_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_zone_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.ReplicaClusterByNsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.ReplicaClusterByNsRequest)
  return false;
#undef DO_
}

void ReplicaClusterByNsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.ReplicaClusterByNsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.nameserver.ZoneInfo zone_info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_zone_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.ReplicaClusterByNsRequest)
}

::google::protobuf::uint8* ReplicaClusterByNsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.ReplicaClusterByNsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.nameserver.ZoneInfo zone_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_zone_info(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.ReplicaClusterByNsRequest)
  return target;
}

size_t ReplicaClusterByNsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.ReplicaClusterByNsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .openmldb.nameserver.ZoneInfo zone_info = 1;
  if (has_zone_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *zone_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReplicaClusterByNsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.ReplicaClusterByNsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReplicaClusterByNsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReplicaClusterByNsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.ReplicaClusterByNsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.ReplicaClusterByNsRequest)
    MergeFrom(*source);
  }
}

void ReplicaClusterByNsRequest::MergeFrom(const ReplicaClusterByNsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.ReplicaClusterByNsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_zone_info()) {
    mutable_zone_info()->::openmldb::nameserver::ZoneInfo::MergeFrom(from.zone_info());
  }
}

void ReplicaClusterByNsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.ReplicaClusterByNsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplicaClusterByNsRequest::CopyFrom(const ReplicaClusterByNsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.ReplicaClusterByNsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplicaClusterByNsRequest::IsInitialized() const {
  return true;
}

void ReplicaClusterByNsRequest::Swap(ReplicaClusterByNsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReplicaClusterByNsRequest::InternalSwap(ReplicaClusterByNsRequest* other) {
  using std::swap;
  swap(zone_info_, other->zone_info_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReplicaClusterByNsRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ZoneInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZoneInfo::kZoneNameFieldNumber;
const int ZoneInfo::kReplicaAliasFieldNumber;
const int ZoneInfo::kZoneTermFieldNumber;
const int ZoneInfo::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZoneInfo::ZoneInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_ZoneInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.ZoneInfo)
}
ZoneInfo::ZoneInfo(const ZoneInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  zone_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_zone_name()) {
    zone_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_name_);
  }
  replica_alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_replica_alias()) {
    replica_alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.replica_alias_);
  }
  ::memcpy(&zone_term_, &from.zone_term_,
    static_cast<size_t>(reinterpret_cast<char*>(&mode_) -
    reinterpret_cast<char*>(&zone_term_)) + sizeof(mode_));
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.ZoneInfo)
}

void ZoneInfo::SharedCtor() {
  zone_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  replica_alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&zone_term_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mode_) -
      reinterpret_cast<char*>(&zone_term_)) + sizeof(mode_));
}

ZoneInfo::~ZoneInfo() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.ZoneInfo)
  SharedDtor();
}

void ZoneInfo::SharedDtor() {
  zone_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  replica_alias_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ZoneInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ZoneInfo::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ZoneInfo& ZoneInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_ZoneInfo.base);
  return *internal_default_instance();
}


void ZoneInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.ZoneInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      zone_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      replica_alias_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&zone_term_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mode_) -
        reinterpret_cast<char*>(&zone_term_)) + sizeof(mode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ZoneInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.ZoneInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string zone_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->zone_name().data(), static_cast<int>(this->zone_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ZoneInfo.zone_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string replica_alias = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_replica_alias()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->replica_alias().data(), static_cast<int>(this->replica_alias().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ZoneInfo.replica_alias");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 zone_term = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_zone_term();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &zone_term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.nameserver.ServerMode mode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::nameserver::ServerMode_IsValid(value)) {
            set_mode(static_cast< ::openmldb::nameserver::ServerMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.ZoneInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.ZoneInfo)
  return false;
#undef DO_
}

void ZoneInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.ZoneInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string zone_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->zone_name().data(), static_cast<int>(this->zone_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ZoneInfo.zone_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->zone_name(), output);
  }

  // optional string replica_alias = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->replica_alias().data(), static_cast<int>(this->replica_alias().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ZoneInfo.replica_alias");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->replica_alias(), output);
  }

  // optional uint64 zone_term = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->zone_term(), output);
  }

  // optional .openmldb.nameserver.ServerMode mode = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.ZoneInfo)
}

::google::protobuf::uint8* ZoneInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.ZoneInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string zone_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->zone_name().data(), static_cast<int>(this->zone_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ZoneInfo.zone_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->zone_name(), target);
  }

  // optional string replica_alias = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->replica_alias().data(), static_cast<int>(this->replica_alias().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ZoneInfo.replica_alias");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->replica_alias(), target);
  }

  // optional uint64 zone_term = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->zone_term(), target);
  }

  // optional .openmldb.nameserver.ServerMode mode = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.ZoneInfo)
  return target;
}

size_t ZoneInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.ZoneInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string zone_name = 1;
    if (has_zone_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->zone_name());
    }

    // optional string replica_alias = 2;
    if (has_replica_alias()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->replica_alias());
    }

    // optional uint64 zone_term = 3;
    if (has_zone_term()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->zone_term());
    }

    // optional .openmldb.nameserver.ServerMode mode = 4;
    if (has_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ZoneInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.ZoneInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ZoneInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ZoneInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.ZoneInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.ZoneInfo)
    MergeFrom(*source);
  }
}

void ZoneInfo::MergeFrom(const ZoneInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.ZoneInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_zone_name();
      zone_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_replica_alias();
      replica_alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.replica_alias_);
    }
    if (cached_has_bits & 0x00000004u) {
      zone_term_ = from.zone_term_;
    }
    if (cached_has_bits & 0x00000008u) {
      mode_ = from.mode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ZoneInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.ZoneInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZoneInfo::CopyFrom(const ZoneInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.ZoneInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZoneInfo::IsInitialized() const {
  return true;
}

void ZoneInfo::Swap(ZoneInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZoneInfo::InternalSwap(ZoneInfo* other) {
  using std::swap;
  zone_name_.Swap(&other->zone_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  replica_alias_.Swap(&other->replica_alias_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(zone_term_, other->zone_term_);
  swap(mode_, other->mode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ZoneInfo::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddReplicaClusterByNsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddReplicaClusterByNsResponse::kTabletsFieldNumber;
const int AddReplicaClusterByNsResponse::kTableInfoFieldNumber;
const int AddReplicaClusterByNsResponse::kCodeFieldNumber;
const int AddReplicaClusterByNsResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddReplicaClusterByNsResponse::AddReplicaClusterByNsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_AddReplicaClusterByNsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.AddReplicaClusterByNsResponse)
}
AddReplicaClusterByNsResponse::AddReplicaClusterByNsResponse(const AddReplicaClusterByNsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tablets_(from.tablets_),
      table_info_(from.table_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.AddReplicaClusterByNsResponse)
}

void AddReplicaClusterByNsResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

AddReplicaClusterByNsResponse::~AddReplicaClusterByNsResponse() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.AddReplicaClusterByNsResponse)
  SharedDtor();
}

void AddReplicaClusterByNsResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddReplicaClusterByNsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddReplicaClusterByNsResponse::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddReplicaClusterByNsResponse& AddReplicaClusterByNsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_AddReplicaClusterByNsResponse.base);
  return *internal_default_instance();
}


void AddReplicaClusterByNsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.AddReplicaClusterByNsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tablets_.Clear();
  table_info_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AddReplicaClusterByNsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.AddReplicaClusterByNsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openmldb.nameserver.TabletStatus tablets = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tablets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.nameserver.TableInfo table_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_table_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.AddReplicaClusterByNsResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.AddReplicaClusterByNsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.AddReplicaClusterByNsResponse)
  return false;
#undef DO_
}

void AddReplicaClusterByNsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.AddReplicaClusterByNsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openmldb.nameserver.TabletStatus tablets = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tablets_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->tablets(static_cast<int>(i)),
      output);
  }

  // repeated .openmldb.nameserver.TableInfo table_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->table_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->table_info(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 code = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->code(), output);
  }

  // optional string msg = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddReplicaClusterByNsResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.AddReplicaClusterByNsResponse)
}

::google::protobuf::uint8* AddReplicaClusterByNsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.AddReplicaClusterByNsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openmldb.nameserver.TabletStatus tablets = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tablets_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->tablets(static_cast<int>(i)), deterministic, target);
  }

  // repeated .openmldb.nameserver.TableInfo table_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->table_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->table_info(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 code = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->code(), target);
  }

  // optional string msg = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddReplicaClusterByNsResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.AddReplicaClusterByNsResponse)
  return target;
}

size_t AddReplicaClusterByNsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.AddReplicaClusterByNsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 code = 3;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }
  // repeated .openmldb.nameserver.TabletStatus tablets = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->tablets_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tablets(static_cast<int>(i)));
    }
  }

  // repeated .openmldb.nameserver.TableInfo table_info = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->table_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->table_info(static_cast<int>(i)));
    }
  }

  // optional string msg = 4;
  if (has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddReplicaClusterByNsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.AddReplicaClusterByNsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddReplicaClusterByNsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddReplicaClusterByNsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.AddReplicaClusterByNsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.AddReplicaClusterByNsResponse)
    MergeFrom(*source);
  }
}

void AddReplicaClusterByNsResponse::MergeFrom(const AddReplicaClusterByNsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.AddReplicaClusterByNsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tablets_.MergeFrom(from.tablets_);
  table_info_.MergeFrom(from.table_info_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AddReplicaClusterByNsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.AddReplicaClusterByNsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddReplicaClusterByNsResponse::CopyFrom(const AddReplicaClusterByNsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.AddReplicaClusterByNsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddReplicaClusterByNsResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->table_info())) return false;
  return true;
}

void AddReplicaClusterByNsResponse::Swap(AddReplicaClusterByNsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddReplicaClusterByNsResponse::InternalSwap(AddReplicaClusterByNsResponse* other) {
  using std::swap;
  CastToBase(&tablets_)->InternalSwap(CastToBase(&other->tablets_));
  CastToBase(&table_info_)->InternalSwap(CastToBase(&other->table_info_));
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddReplicaClusterByNsResponse::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SwitchModeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SwitchModeRequest::kSmFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SwitchModeRequest::SwitchModeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_SwitchModeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.SwitchModeRequest)
}
SwitchModeRequest::SwitchModeRequest(const SwitchModeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sm_ = from.sm_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.SwitchModeRequest)
}

void SwitchModeRequest::SharedCtor() {
  sm_ = 0;
}

SwitchModeRequest::~SwitchModeRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.SwitchModeRequest)
  SharedDtor();
}

void SwitchModeRequest::SharedDtor() {
}

void SwitchModeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SwitchModeRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SwitchModeRequest& SwitchModeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_SwitchModeRequest.base);
  return *internal_default_instance();
}


void SwitchModeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.SwitchModeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sm_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SwitchModeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.SwitchModeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .openmldb.nameserver.ServerMode sm = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::nameserver::ServerMode_IsValid(value)) {
            set_sm(static_cast< ::openmldb::nameserver::ServerMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.SwitchModeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.SwitchModeRequest)
  return false;
#undef DO_
}

void SwitchModeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.SwitchModeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.nameserver.ServerMode sm = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->sm(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.SwitchModeRequest)
}

::google::protobuf::uint8* SwitchModeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.SwitchModeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.nameserver.ServerMode sm = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->sm(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.SwitchModeRequest)
  return target;
}

size_t SwitchModeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.SwitchModeRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .openmldb.nameserver.ServerMode sm = 1;
  if (has_sm()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->sm());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SwitchModeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.SwitchModeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SwitchModeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SwitchModeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.SwitchModeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.SwitchModeRequest)
    MergeFrom(*source);
  }
}

void SwitchModeRequest::MergeFrom(const SwitchModeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.SwitchModeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sm()) {
    set_sm(from.sm());
  }
}

void SwitchModeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.SwitchModeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwitchModeRequest::CopyFrom(const SwitchModeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.SwitchModeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwitchModeRequest::IsInitialized() const {
  return true;
}

void SwitchModeRequest::Swap(SwitchModeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SwitchModeRequest::InternalSwap(SwitchModeRequest* other) {
  using std::swap;
  swap(sm_, other->sm_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SwitchModeRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SyncTableRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncTableRequest::kNameFieldNumber;
const int SyncTableRequest::kClusterAliasFieldNumber;
const int SyncTableRequest::kPidFieldNumber;
const int SyncTableRequest::kDbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncTableRequest::SyncTableRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_SyncTableRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.SyncTableRequest)
}
SyncTableRequest::SyncTableRequest(const SyncTableRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  cluster_alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cluster_alias()) {
    cluster_alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_alias_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  pid_ = from.pid_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.SyncTableRequest)
}

void SyncTableRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pid_ = 0u;
}

SyncTableRequest::~SyncTableRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.SyncTableRequest)
  SharedDtor();
}

void SyncTableRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_alias_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SyncTableRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SyncTableRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncTableRequest& SyncTableRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_SyncTableRequest.base);
  return *internal_default_instance();
}


void SyncTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.SyncTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      cluster_alias_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
  }
  pid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SyncTableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.SyncTableRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.SyncTableRequest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string cluster_alias = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_alias()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cluster_alias().data(), static_cast<int>(this->cluster_alias().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.SyncTableRequest.cluster_alias");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 4 [default = ""];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.SyncTableRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.SyncTableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.SyncTableRequest)
  return false;
#undef DO_
}

void SyncTableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.SyncTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.SyncTableRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string cluster_alias = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cluster_alias().data(), static_cast<int>(this->cluster_alias().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.SyncTableRequest.cluster_alias");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cluster_alias(), output);
  }

  // optional uint32 pid = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pid(), output);
  }

  // optional string db = 4 [default = ""];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.SyncTableRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->db(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.SyncTableRequest)
}

::google::protobuf::uint8* SyncTableRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.SyncTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.SyncTableRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string cluster_alias = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cluster_alias().data(), static_cast<int>(this->cluster_alias().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.SyncTableRequest.cluster_alias");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cluster_alias(), target);
  }

  // optional uint32 pid = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pid(), target);
  }

  // optional string db = 4 [default = ""];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.SyncTableRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->db(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.SyncTableRequest)
  return target;
}

size_t SyncTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.SyncTableRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string cluster_alias = 2;
    if (has_cluster_alias()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cluster_alias());
    }

    // optional string db = 4 [default = ""];
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional uint32 pid = 3;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SyncTableRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.SyncTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncTableRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncTableRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.SyncTableRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.SyncTableRequest)
    MergeFrom(*source);
  }
}

void SyncTableRequest::MergeFrom(const SyncTableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.SyncTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_cluster_alias();
      cluster_alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_alias_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000008u) {
      pid_ = from.pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SyncTableRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.SyncTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncTableRequest::CopyFrom(const SyncTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.SyncTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncTableRequest::IsInitialized() const {
  return true;
}

void SyncTableRequest::Swap(SyncTableRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncTableRequest::InternalSwap(SyncTableRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_alias_.Swap(&other->cluster_alias_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pid_, other->pid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SyncTableRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetSdkEndpointRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetSdkEndpointRequest::kServerNameFieldNumber;
const int SetSdkEndpointRequest::kSdkEndpointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetSdkEndpointRequest::SetSdkEndpointRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_SetSdkEndpointRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.SetSdkEndpointRequest)
}
SetSdkEndpointRequest::SetSdkEndpointRequest(const SetSdkEndpointRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_server_name()) {
    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  sdk_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sdk_endpoint()) {
    sdk_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdk_endpoint_);
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.SetSdkEndpointRequest)
}

void SetSdkEndpointRequest::SharedCtor() {
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdk_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetSdkEndpointRequest::~SetSdkEndpointRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.SetSdkEndpointRequest)
  SharedDtor();
}

void SetSdkEndpointRequest::SharedDtor() {
  server_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdk_endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetSdkEndpointRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetSdkEndpointRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetSdkEndpointRequest& SetSdkEndpointRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_SetSdkEndpointRequest.base);
  return *internal_default_instance();
}


void SetSdkEndpointRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.SetSdkEndpointRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      server_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      sdk_endpoint_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetSdkEndpointRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.SetSdkEndpointRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string server_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->server_name().data(), static_cast<int>(this->server_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.SetSdkEndpointRequest.server_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sdk_endpoint = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdk_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sdk_endpoint().data(), static_cast<int>(this->sdk_endpoint().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.SetSdkEndpointRequest.sdk_endpoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.SetSdkEndpointRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.SetSdkEndpointRequest)
  return false;
#undef DO_
}

void SetSdkEndpointRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.SetSdkEndpointRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string server_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.SetSdkEndpointRequest.server_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->server_name(), output);
  }

  // optional string sdk_endpoint = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdk_endpoint().data(), static_cast<int>(this->sdk_endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.SetSdkEndpointRequest.sdk_endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sdk_endpoint(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.SetSdkEndpointRequest)
}

::google::protobuf::uint8* SetSdkEndpointRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.SetSdkEndpointRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string server_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.SetSdkEndpointRequest.server_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->server_name(), target);
  }

  // optional string sdk_endpoint = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdk_endpoint().data(), static_cast<int>(this->sdk_endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.SetSdkEndpointRequest.sdk_endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sdk_endpoint(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.SetSdkEndpointRequest)
  return target;
}

size_t SetSdkEndpointRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.SetSdkEndpointRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string server_name = 1;
    if (has_server_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->server_name());
    }

    // optional string sdk_endpoint = 2;
    if (has_sdk_endpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sdk_endpoint());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetSdkEndpointRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.SetSdkEndpointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetSdkEndpointRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetSdkEndpointRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.SetSdkEndpointRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.SetSdkEndpointRequest)
    MergeFrom(*source);
  }
}

void SetSdkEndpointRequest::MergeFrom(const SetSdkEndpointRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.SetSdkEndpointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_server_name();
      server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sdk_endpoint();
      sdk_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdk_endpoint_);
    }
  }
}

void SetSdkEndpointRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.SetSdkEndpointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetSdkEndpointRequest::CopyFrom(const SetSdkEndpointRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.SetSdkEndpointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSdkEndpointRequest::IsInitialized() const {
  return true;
}

void SetSdkEndpointRequest::Swap(SetSdkEndpointRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetSdkEndpointRequest::InternalSwap(SetSdkEndpointRequest* other) {
  using std::swap;
  server_name_.Swap(&other->server_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sdk_endpoint_.Swap(&other->sdk_endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetSdkEndpointRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddIndexMeta::InitAsDefaultInstance() {
  ::openmldb::nameserver::_AddIndexMeta_default_instance_._instance.get_mutable()->column_key_ = const_cast< ::openmldb::common::ColumnKey*>(
      ::openmldb::common::ColumnKey::internal_default_instance());
}
void AddIndexMeta::clear_column_key() {
  if (column_key_ != NULL) column_key_->Clear();
  clear_has_column_key();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddIndexMeta::kNameFieldNumber;
const int AddIndexMeta::kPidFieldNumber;
const int AddIndexMeta::kColumnKeyFieldNumber;
const int AddIndexMeta::kIdxFieldNumber;
const int AddIndexMeta::kDbFieldNumber;
const int AddIndexMeta::kSkipDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddIndexMeta::AddIndexMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_AddIndexMeta.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.AddIndexMeta)
}
AddIndexMeta::AddIndexMeta(const AddIndexMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  if (from.has_column_key()) {
    column_key_ = new ::openmldb::common::ColumnKey(*from.column_key_);
  } else {
    column_key_ = NULL;
  }
  ::memcpy(&pid_, &from.pid_,
    static_cast<size_t>(reinterpret_cast<char*>(&skip_data_) -
    reinterpret_cast<char*>(&pid_)) + sizeof(skip_data_));
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.AddIndexMeta)
}

void AddIndexMeta::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&column_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skip_data_) -
      reinterpret_cast<char*>(&column_key_)) + sizeof(skip_data_));
}

AddIndexMeta::~AddIndexMeta() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.AddIndexMeta)
  SharedDtor();
}

void AddIndexMeta::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete column_key_;
}

void AddIndexMeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddIndexMeta::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddIndexMeta& AddIndexMeta::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_AddIndexMeta.base);
  return *internal_default_instance();
}


void AddIndexMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.AddIndexMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(column_key_ != NULL);
      column_key_->Clear();
    }
  }
  if (cached_has_bits & 56u) {
    ::memset(&pid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&skip_data_) -
        reinterpret_cast<char*>(&pid_)) + sizeof(skip_data_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AddIndexMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.AddIndexMeta)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.AddIndexMeta.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.common.ColumnKey column_key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_column_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 idx = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 5 [default = ""];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.AddIndexMeta.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool skip_data = 6 [default = false];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_skip_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &skip_data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.AddIndexMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.AddIndexMeta)
  return false;
#undef DO_
}

void AddIndexMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.AddIndexMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddIndexMeta.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional .openmldb.common.ColumnKey column_key = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_column_key(), output);
  }

  // optional uint32 idx = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->idx(), output);
  }

  // optional string db = 5 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddIndexMeta.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->db(), output);
  }

  // optional bool skip_data = 6 [default = false];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->skip_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.AddIndexMeta)
}

::google::protobuf::uint8* AddIndexMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.AddIndexMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddIndexMeta.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional .openmldb.common.ColumnKey column_key = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_column_key(), deterministic, target);
  }

  // optional uint32 idx = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->idx(), target);
  }

  // optional string db = 5 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddIndexMeta.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->db(), target);
  }

  // optional bool skip_data = 6 [default = false];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->skip_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.AddIndexMeta)
  return target;
}

size_t AddIndexMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.AddIndexMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string db = 5 [default = ""];
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional .openmldb.common.ColumnKey column_key = 3;
    if (has_column_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *column_key_);
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional uint32 idx = 4;
    if (has_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->idx());
    }

    // optional bool skip_data = 6 [default = false];
    if (has_skip_data()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddIndexMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.AddIndexMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const AddIndexMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddIndexMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.AddIndexMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.AddIndexMeta)
    MergeFrom(*source);
  }
}

void AddIndexMeta::MergeFrom(const AddIndexMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.AddIndexMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_column_key()->::openmldb::common::ColumnKey::MergeFrom(from.column_key());
    }
    if (cached_has_bits & 0x00000008u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000010u) {
      idx_ = from.idx_;
    }
    if (cached_has_bits & 0x00000020u) {
      skip_data_ = from.skip_data_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AddIndexMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.AddIndexMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddIndexMeta::CopyFrom(const AddIndexMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.AddIndexMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddIndexMeta::IsInitialized() const {
  return true;
}

void AddIndexMeta::Swap(AddIndexMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddIndexMeta::InternalSwap(AddIndexMeta* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(column_key_, other->column_key_);
  swap(pid_, other->pid_);
  swap(idx_, other->idx_);
  swap(skip_data_, other->skip_data_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddIndexMeta::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddIndexRequest::InitAsDefaultInstance() {
  ::openmldb::nameserver::_AddIndexRequest_default_instance_._instance.get_mutable()->column_key_ = const_cast< ::openmldb::common::ColumnKey*>(
      ::openmldb::common::ColumnKey::internal_default_instance());
}
void AddIndexRequest::clear_column_key() {
  if (column_key_ != NULL) column_key_->Clear();
  clear_has_column_key();
}
void AddIndexRequest::clear_cols() {
  cols_.Clear();
}
void AddIndexRequest::clear_column_keys() {
  column_keys_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddIndexRequest::kNameFieldNumber;
const int AddIndexRequest::kColumnKeyFieldNumber;
const int AddIndexRequest::kDbFieldNumber;
const int AddIndexRequest::kColsFieldNumber;
const int AddIndexRequest::kColumnKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddIndexRequest::AddIndexRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_AddIndexRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.AddIndexRequest)
}
AddIndexRequest::AddIndexRequest(const AddIndexRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      cols_(from.cols_),
      column_keys_(from.column_keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  if (from.has_column_key()) {
    column_key_ = new ::openmldb::common::ColumnKey(*from.column_key_);
  } else {
    column_key_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.AddIndexRequest)
}

void AddIndexRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  column_key_ = NULL;
}

AddIndexRequest::~AddIndexRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.AddIndexRequest)
  SharedDtor();
}

void AddIndexRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete column_key_;
}

void AddIndexRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddIndexRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddIndexRequest& AddIndexRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_AddIndexRequest.base);
  return *internal_default_instance();
}


void AddIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.AddIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cols_.Clear();
  column_keys_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(column_key_ != NULL);
      column_key_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AddIndexRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.AddIndexRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.AddIndexRequest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.common.ColumnKey column_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_column_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 3 [default = ""];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.AddIndexRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.common.ColumnDesc cols = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_cols()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.common.ColumnKey column_keys = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_column_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.AddIndexRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.AddIndexRequest)
  return false;
#undef DO_
}

void AddIndexRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.AddIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddIndexRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .openmldb.common.ColumnKey column_key = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_column_key(), output);
  }

  // optional string db = 3 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddIndexRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->db(), output);
  }

  // repeated .openmldb.common.ColumnDesc cols = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cols_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->cols(static_cast<int>(i)),
      output);
  }

  // repeated .openmldb.common.ColumnKey column_keys = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->column_keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->column_keys(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.AddIndexRequest)
}

::google::protobuf::uint8* AddIndexRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.AddIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddIndexRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .openmldb.common.ColumnKey column_key = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_column_key(), deterministic, target);
  }

  // optional string db = 3 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.AddIndexRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->db(), target);
  }

  // repeated .openmldb.common.ColumnDesc cols = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cols_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->cols(static_cast<int>(i)), deterministic, target);
  }

  // repeated .openmldb.common.ColumnKey column_keys = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->column_keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->column_keys(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.AddIndexRequest)
  return target;
}

size_t AddIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.AddIndexRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.common.ColumnDesc cols = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->cols_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cols(static_cast<int>(i)));
    }
  }

  // repeated .openmldb.common.ColumnKey column_keys = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->column_keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->column_keys(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string db = 3 [default = ""];
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional .openmldb.common.ColumnKey column_key = 2;
    if (has_column_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *column_key_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddIndexRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.AddIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddIndexRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddIndexRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.AddIndexRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.AddIndexRequest)
    MergeFrom(*source);
  }
}

void AddIndexRequest::MergeFrom(const AddIndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.AddIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cols_.MergeFrom(from.cols_);
  column_keys_.MergeFrom(from.column_keys_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_column_key()->::openmldb::common::ColumnKey::MergeFrom(from.column_key());
    }
  }
}

void AddIndexRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.AddIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddIndexRequest::CopyFrom(const AddIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.AddIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddIndexRequest::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->cols())) return false;
  return true;
}

void AddIndexRequest::Swap(AddIndexRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddIndexRequest::InternalSwap(AddIndexRequest* other) {
  using std::swap;
  CastToBase(&cols_)->InternalSwap(CastToBase(&other->cols_));
  CastToBase(&column_keys_)->InternalSwap(CastToBase(&other->column_keys_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(column_key_, other->column_key_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddIndexRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteIndexRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteIndexRequest::kTableNameFieldNumber;
const int DeleteIndexRequest::kIdxNameFieldNumber;
const int DeleteIndexRequest::kDbNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteIndexRequest::DeleteIndexRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_DeleteIndexRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.DeleteIndexRequest)
}
DeleteIndexRequest::DeleteIndexRequest(const DeleteIndexRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_table_name()) {
    table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
  }
  idx_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_idx_name()) {
    idx_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idx_name_);
  }
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db_name()) {
    db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.DeleteIndexRequest)
}

void DeleteIndexRequest::SharedCtor() {
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idx_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteIndexRequest::~DeleteIndexRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.DeleteIndexRequest)
  SharedDtor();
}

void DeleteIndexRequest::SharedDtor() {
  table_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idx_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteIndexRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteIndexRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteIndexRequest& DeleteIndexRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_DeleteIndexRequest.base);
  return *internal_default_instance();
}


void DeleteIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.DeleteIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      table_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      idx_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      db_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeleteIndexRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.DeleteIndexRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string table_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->table_name().data(), static_cast<int>(this->table_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.DeleteIndexRequest.table_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string idx_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_idx_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->idx_name().data(), static_cast<int>(this->idx_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.DeleteIndexRequest.idx_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db_name = 3 [default = ""];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db_name().data(), static_cast<int>(this->db_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.DeleteIndexRequest.db_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.DeleteIndexRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.DeleteIndexRequest)
  return false;
#undef DO_
}

void DeleteIndexRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.DeleteIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string table_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.DeleteIndexRequest.table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->table_name(), output);
  }

  // optional string idx_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->idx_name().data(), static_cast<int>(this->idx_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.DeleteIndexRequest.idx_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->idx_name(), output);
  }

  // optional string db_name = 3 [default = ""];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db_name().data(), static_cast<int>(this->db_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.DeleteIndexRequest.db_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->db_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.DeleteIndexRequest)
}

::google::protobuf::uint8* DeleteIndexRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.DeleteIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string table_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.DeleteIndexRequest.table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->table_name(), target);
  }

  // optional string idx_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->idx_name().data(), static_cast<int>(this->idx_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.DeleteIndexRequest.idx_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->idx_name(), target);
  }

  // optional string db_name = 3 [default = ""];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db_name().data(), static_cast<int>(this->db_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.DeleteIndexRequest.db_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->db_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.DeleteIndexRequest)
  return target;
}

size_t DeleteIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.DeleteIndexRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string table_name = 1;
    if (has_table_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->table_name());
    }

    // optional string idx_name = 2;
    if (has_idx_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->idx_name());
    }

    // optional string db_name = 3 [default = ""];
    if (has_db_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db_name());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteIndexRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.DeleteIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteIndexRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteIndexRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.DeleteIndexRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.DeleteIndexRequest)
    MergeFrom(*source);
  }
}

void DeleteIndexRequest::MergeFrom(const DeleteIndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.DeleteIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_table_name();
      table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_idx_name();
      idx_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idx_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_db_name();
      db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
    }
  }
}

void DeleteIndexRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.DeleteIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteIndexRequest::CopyFrom(const DeleteIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.DeleteIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteIndexRequest::IsInitialized() const {
  return true;
}

void DeleteIndexRequest::Swap(DeleteIndexRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteIndexRequest::InternalSwap(DeleteIndexRequest* other) {
  using std::swap;
  table_name_.Swap(&other->table_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  idx_name_.Swap(&other->idx_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_name_.Swap(&other->db_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteIndexRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateDatabaseRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateDatabaseRequest::kDbFieldNumber;
const int CreateDatabaseRequest::kIfNotExistsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateDatabaseRequest::CreateDatabaseRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_CreateDatabaseRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.CreateDatabaseRequest)
}
CreateDatabaseRequest::CreateDatabaseRequest(const CreateDatabaseRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  if_not_exists_ = from.if_not_exists_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.CreateDatabaseRequest)
}

void CreateDatabaseRequest::SharedCtor() {
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if_not_exists_ = false;
}

CreateDatabaseRequest::~CreateDatabaseRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.CreateDatabaseRequest)
  SharedDtor();
}

void CreateDatabaseRequest::SharedDtor() {
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateDatabaseRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateDatabaseRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateDatabaseRequest& CreateDatabaseRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_CreateDatabaseRequest.base);
  return *internal_default_instance();
}


void CreateDatabaseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.CreateDatabaseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    db_.ClearNonDefaultToEmptyNoArena();
  }
  if_not_exists_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateDatabaseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.CreateDatabaseRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string db = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.CreateDatabaseRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool if_not_exists = 2 [default = false];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_if_not_exists();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &if_not_exists_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.CreateDatabaseRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.CreateDatabaseRequest)
  return false;
#undef DO_
}

void CreateDatabaseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.CreateDatabaseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string db = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.CreateDatabaseRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->db(), output);
  }

  // optional bool if_not_exists = 2 [default = false];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->if_not_exists(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.CreateDatabaseRequest)
}

::google::protobuf::uint8* CreateDatabaseRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.CreateDatabaseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string db = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.CreateDatabaseRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->db(), target);
  }

  // optional bool if_not_exists = 2 [default = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->if_not_exists(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.CreateDatabaseRequest)
  return target;
}

size_t CreateDatabaseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.CreateDatabaseRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string db = 1;
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional bool if_not_exists = 2 [default = false];
    if (has_if_not_exists()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateDatabaseRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.CreateDatabaseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateDatabaseRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateDatabaseRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.CreateDatabaseRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.CreateDatabaseRequest)
    MergeFrom(*source);
  }
}

void CreateDatabaseRequest::MergeFrom(const CreateDatabaseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.CreateDatabaseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000002u) {
      if_not_exists_ = from.if_not_exists_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CreateDatabaseRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.CreateDatabaseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateDatabaseRequest::CopyFrom(const CreateDatabaseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.CreateDatabaseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDatabaseRequest::IsInitialized() const {
  return true;
}

void CreateDatabaseRequest::Swap(CreateDatabaseRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateDatabaseRequest::InternalSwap(CreateDatabaseRequest* other) {
  using std::swap;
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(if_not_exists_, other->if_not_exists_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateDatabaseRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UseDatabaseRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UseDatabaseRequest::kDbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UseDatabaseRequest::UseDatabaseRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_UseDatabaseRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.UseDatabaseRequest)
}
UseDatabaseRequest::UseDatabaseRequest(const UseDatabaseRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.UseDatabaseRequest)
}

void UseDatabaseRequest::SharedCtor() {
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UseDatabaseRequest::~UseDatabaseRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.UseDatabaseRequest)
  SharedDtor();
}

void UseDatabaseRequest::SharedDtor() {
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UseDatabaseRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UseDatabaseRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UseDatabaseRequest& UseDatabaseRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_UseDatabaseRequest.base);
  return *internal_default_instance();
}


void UseDatabaseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.UseDatabaseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    db_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UseDatabaseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.UseDatabaseRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string db = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.UseDatabaseRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.UseDatabaseRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.UseDatabaseRequest)
  return false;
#undef DO_
}

void UseDatabaseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.UseDatabaseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string db = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.UseDatabaseRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->db(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.UseDatabaseRequest)
}

::google::protobuf::uint8* UseDatabaseRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.UseDatabaseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string db = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.UseDatabaseRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->db(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.UseDatabaseRequest)
  return target;
}

size_t UseDatabaseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.UseDatabaseRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string db = 1;
  if (has_db()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->db());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UseDatabaseRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.UseDatabaseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UseDatabaseRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UseDatabaseRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.UseDatabaseRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.UseDatabaseRequest)
    MergeFrom(*source);
  }
}

void UseDatabaseRequest::MergeFrom(const UseDatabaseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.UseDatabaseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_db()) {
    set_has_db();
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
}

void UseDatabaseRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.UseDatabaseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseDatabaseRequest::CopyFrom(const UseDatabaseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.UseDatabaseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseDatabaseRequest::IsInitialized() const {
  return true;
}

void UseDatabaseRequest::Swap(UseDatabaseRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UseDatabaseRequest::InternalSwap(UseDatabaseRequest* other) {
  using std::swap;
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UseDatabaseRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShowDatabaseResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowDatabaseResponse::kCodeFieldNumber;
const int ShowDatabaseResponse::kMsgFieldNumber;
const int ShowDatabaseResponse::kDbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowDatabaseResponse::ShowDatabaseResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_ShowDatabaseResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.ShowDatabaseResponse)
}
ShowDatabaseResponse::ShowDatabaseResponse(const ShowDatabaseResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      db_(from.db_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.ShowDatabaseResponse)
}

void ShowDatabaseResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

ShowDatabaseResponse::~ShowDatabaseResponse() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.ShowDatabaseResponse)
  SharedDtor();
}

void ShowDatabaseResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShowDatabaseResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShowDatabaseResponse::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShowDatabaseResponse& ShowDatabaseResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_ShowDatabaseResponse.base);
  return *internal_default_instance();
}


void ShowDatabaseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.ShowDatabaseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  db_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowDatabaseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.ShowDatabaseResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ShowDatabaseResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string db = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db(this->db_size() - 1).data(),
            static_cast<int>(this->db(this->db_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ShowDatabaseResponse.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.ShowDatabaseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.ShowDatabaseResponse)
  return false;
#undef DO_
}

void ShowDatabaseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.ShowDatabaseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowDatabaseResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // repeated string db = 3;
  for (int i = 0, n = this->db_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db(i).data(), static_cast<int>(this->db(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowDatabaseResponse.db");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->db(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.ShowDatabaseResponse)
}

::google::protobuf::uint8* ShowDatabaseResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.ShowDatabaseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowDatabaseResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // repeated string db = 3;
  for (int i = 0, n = this->db_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db(i).data(), static_cast<int>(this->db(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowDatabaseResponse.db");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->db(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.ShowDatabaseResponse)
  return target;
}

size_t ShowDatabaseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.ShowDatabaseResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string db = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->db_size());
  for (int i = 0, n = this->db_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->db(i));
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowDatabaseResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.ShowDatabaseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowDatabaseResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShowDatabaseResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.ShowDatabaseResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.ShowDatabaseResponse)
    MergeFrom(*source);
  }
}

void ShowDatabaseResponse::MergeFrom(const ShowDatabaseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.ShowDatabaseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  db_.MergeFrom(from.db_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShowDatabaseResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.ShowDatabaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowDatabaseResponse::CopyFrom(const ShowDatabaseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.ShowDatabaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowDatabaseResponse::IsInitialized() const {
  return true;
}

void ShowDatabaseResponse::Swap(ShowDatabaseResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowDatabaseResponse::InternalSwap(ShowDatabaseResponse* other) {
  using std::swap;
  db_.InternalSwap(CastToBase(&other->db_));
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShowDatabaseResponse::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DropDatabaseRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DropDatabaseRequest::kDbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DropDatabaseRequest::DropDatabaseRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_DropDatabaseRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.DropDatabaseRequest)
}
DropDatabaseRequest::DropDatabaseRequest(const DropDatabaseRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.DropDatabaseRequest)
}

void DropDatabaseRequest::SharedCtor() {
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DropDatabaseRequest::~DropDatabaseRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.DropDatabaseRequest)
  SharedDtor();
}

void DropDatabaseRequest::SharedDtor() {
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DropDatabaseRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DropDatabaseRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DropDatabaseRequest& DropDatabaseRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_DropDatabaseRequest.base);
  return *internal_default_instance();
}


void DropDatabaseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.DropDatabaseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    db_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DropDatabaseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.DropDatabaseRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string db = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.DropDatabaseRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.DropDatabaseRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.DropDatabaseRequest)
  return false;
#undef DO_
}

void DropDatabaseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.DropDatabaseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string db = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.DropDatabaseRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->db(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.DropDatabaseRequest)
}

::google::protobuf::uint8* DropDatabaseRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.DropDatabaseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string db = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.DropDatabaseRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->db(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.DropDatabaseRequest)
  return target;
}

size_t DropDatabaseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.DropDatabaseRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string db = 1;
  if (has_db()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->db());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DropDatabaseRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.DropDatabaseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DropDatabaseRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DropDatabaseRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.DropDatabaseRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.DropDatabaseRequest)
    MergeFrom(*source);
  }
}

void DropDatabaseRequest::MergeFrom(const DropDatabaseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.DropDatabaseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_db()) {
    set_has_db();
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
}

void DropDatabaseRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.DropDatabaseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropDatabaseRequest::CopyFrom(const DropDatabaseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.DropDatabaseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropDatabaseRequest::IsInitialized() const {
  return true;
}

void DropDatabaseRequest::Swap(DropDatabaseRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DropDatabaseRequest::InternalSwap(DropDatabaseRequest* other) {
  using std::swap;
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DropDatabaseRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShowSdkEndpointRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowSdkEndpointRequest::ShowSdkEndpointRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_ShowSdkEndpointRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.ShowSdkEndpointRequest)
}
ShowSdkEndpointRequest::ShowSdkEndpointRequest(const ShowSdkEndpointRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.ShowSdkEndpointRequest)
}

void ShowSdkEndpointRequest::SharedCtor() {
}

ShowSdkEndpointRequest::~ShowSdkEndpointRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.ShowSdkEndpointRequest)
  SharedDtor();
}

void ShowSdkEndpointRequest::SharedDtor() {
}

void ShowSdkEndpointRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShowSdkEndpointRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShowSdkEndpointRequest& ShowSdkEndpointRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_ShowSdkEndpointRequest.base);
  return *internal_default_instance();
}


void ShowSdkEndpointRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.ShowSdkEndpointRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowSdkEndpointRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.ShowSdkEndpointRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.ShowSdkEndpointRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.ShowSdkEndpointRequest)
  return false;
#undef DO_
}

void ShowSdkEndpointRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.ShowSdkEndpointRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.ShowSdkEndpointRequest)
}

::google::protobuf::uint8* ShowSdkEndpointRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.ShowSdkEndpointRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.ShowSdkEndpointRequest)
  return target;
}

size_t ShowSdkEndpointRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.ShowSdkEndpointRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowSdkEndpointRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.ShowSdkEndpointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowSdkEndpointRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShowSdkEndpointRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.ShowSdkEndpointRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.ShowSdkEndpointRequest)
    MergeFrom(*source);
  }
}

void ShowSdkEndpointRequest::MergeFrom(const ShowSdkEndpointRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.ShowSdkEndpointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ShowSdkEndpointRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.ShowSdkEndpointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowSdkEndpointRequest::CopyFrom(const ShowSdkEndpointRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.ShowSdkEndpointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowSdkEndpointRequest::IsInitialized() const {
  return true;
}

void ShowSdkEndpointRequest::Swap(ShowSdkEndpointRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowSdkEndpointRequest::InternalSwap(ShowSdkEndpointRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShowSdkEndpointRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShowSdkEndpointResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowSdkEndpointResponse::kTabletsFieldNumber;
const int ShowSdkEndpointResponse::kCodeFieldNumber;
const int ShowSdkEndpointResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowSdkEndpointResponse::ShowSdkEndpointResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_ShowSdkEndpointResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.ShowSdkEndpointResponse)
}
ShowSdkEndpointResponse::ShowSdkEndpointResponse(const ShowSdkEndpointResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tablets_(from.tablets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.ShowSdkEndpointResponse)
}

void ShowSdkEndpointResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

ShowSdkEndpointResponse::~ShowSdkEndpointResponse() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.ShowSdkEndpointResponse)
  SharedDtor();
}

void ShowSdkEndpointResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShowSdkEndpointResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShowSdkEndpointResponse::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShowSdkEndpointResponse& ShowSdkEndpointResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_ShowSdkEndpointResponse.base);
  return *internal_default_instance();
}


void ShowSdkEndpointResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.ShowSdkEndpointResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tablets_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowSdkEndpointResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.ShowSdkEndpointResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openmldb.nameserver.TabletStatus tablets = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tablets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ShowSdkEndpointResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.ShowSdkEndpointResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.ShowSdkEndpointResponse)
  return false;
#undef DO_
}

void ShowSdkEndpointResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.ShowSdkEndpointResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openmldb.nameserver.TabletStatus tablets = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tablets_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->tablets(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->code(), output);
  }

  // optional string msg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowSdkEndpointResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.ShowSdkEndpointResponse)
}

::google::protobuf::uint8* ShowSdkEndpointResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.ShowSdkEndpointResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openmldb.nameserver.TabletStatus tablets = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tablets_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->tablets(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->code(), target);
  }

  // optional string msg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowSdkEndpointResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.ShowSdkEndpointResponse)
  return target;
}

size_t ShowSdkEndpointResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.ShowSdkEndpointResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.nameserver.TabletStatus tablets = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->tablets_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tablets(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 3;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 2;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowSdkEndpointResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.ShowSdkEndpointResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowSdkEndpointResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShowSdkEndpointResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.ShowSdkEndpointResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.ShowSdkEndpointResponse)
    MergeFrom(*source);
  }
}

void ShowSdkEndpointResponse::MergeFrom(const ShowSdkEndpointResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.ShowSdkEndpointResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tablets_.MergeFrom(from.tablets_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShowSdkEndpointResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.ShowSdkEndpointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowSdkEndpointResponse::CopyFrom(const ShowSdkEndpointResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.ShowSdkEndpointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowSdkEndpointResponse::IsInitialized() const {
  return true;
}

void ShowSdkEndpointResponse::Swap(ShowSdkEndpointResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowSdkEndpointResponse::InternalSwap(ShowSdkEndpointResponse* other) {
  using std::swap;
  CastToBase(&tablets_)->InternalSwap(CastToBase(&other->tablets_));
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShowSdkEndpointResponse::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShowCatalogRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowCatalogRequest::ShowCatalogRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_ShowCatalogRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.ShowCatalogRequest)
}
ShowCatalogRequest::ShowCatalogRequest(const ShowCatalogRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.ShowCatalogRequest)
}

void ShowCatalogRequest::SharedCtor() {
}

ShowCatalogRequest::~ShowCatalogRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.ShowCatalogRequest)
  SharedDtor();
}

void ShowCatalogRequest::SharedDtor() {
}

void ShowCatalogRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShowCatalogRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShowCatalogRequest& ShowCatalogRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_ShowCatalogRequest.base);
  return *internal_default_instance();
}


void ShowCatalogRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.ShowCatalogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowCatalogRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.ShowCatalogRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.ShowCatalogRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.ShowCatalogRequest)
  return false;
#undef DO_
}

void ShowCatalogRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.ShowCatalogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.ShowCatalogRequest)
}

::google::protobuf::uint8* ShowCatalogRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.ShowCatalogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.ShowCatalogRequest)
  return target;
}

size_t ShowCatalogRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.ShowCatalogRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowCatalogRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.ShowCatalogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowCatalogRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShowCatalogRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.ShowCatalogRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.ShowCatalogRequest)
    MergeFrom(*source);
  }
}

void ShowCatalogRequest::MergeFrom(const ShowCatalogRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.ShowCatalogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ShowCatalogRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.ShowCatalogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowCatalogRequest::CopyFrom(const ShowCatalogRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.ShowCatalogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowCatalogRequest::IsInitialized() const {
  return true;
}

void ShowCatalogRequest::Swap(ShowCatalogRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowCatalogRequest::InternalSwap(ShowCatalogRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShowCatalogRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShowCatalogResponse::InitAsDefaultInstance() {
}
void ShowCatalogResponse::clear_catalog() {
  catalog_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowCatalogResponse::kCatalogFieldNumber;
const int ShowCatalogResponse::kCodeFieldNumber;
const int ShowCatalogResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowCatalogResponse::ShowCatalogResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_ShowCatalogResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.ShowCatalogResponse)
}
ShowCatalogResponse::ShowCatalogResponse(const ShowCatalogResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      catalog_(from.catalog_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.ShowCatalogResponse)
}

void ShowCatalogResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

ShowCatalogResponse::~ShowCatalogResponse() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.ShowCatalogResponse)
  SharedDtor();
}

void ShowCatalogResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShowCatalogResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShowCatalogResponse::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShowCatalogResponse& ShowCatalogResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_ShowCatalogResponse.base);
  return *internal_default_instance();
}


void ShowCatalogResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.ShowCatalogResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  catalog_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowCatalogResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.ShowCatalogResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openmldb.common.CatalogInfo catalog = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_catalog()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ShowCatalogResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.ShowCatalogResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.ShowCatalogResponse)
  return false;
#undef DO_
}

void ShowCatalogResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.ShowCatalogResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openmldb.common.CatalogInfo catalog = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->catalog_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->catalog(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->code(), output);
  }

  // optional string msg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowCatalogResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.ShowCatalogResponse)
}

::google::protobuf::uint8* ShowCatalogResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.ShowCatalogResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openmldb.common.CatalogInfo catalog = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->catalog_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->catalog(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->code(), target);
  }

  // optional string msg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowCatalogResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.ShowCatalogResponse)
  return target;
}

size_t ShowCatalogResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.ShowCatalogResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.common.CatalogInfo catalog = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->catalog_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->catalog(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 3;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 2;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowCatalogResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.ShowCatalogResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowCatalogResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShowCatalogResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.ShowCatalogResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.ShowCatalogResponse)
    MergeFrom(*source);
  }
}

void ShowCatalogResponse::MergeFrom(const ShowCatalogResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.ShowCatalogResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  catalog_.MergeFrom(from.catalog_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShowCatalogResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.ShowCatalogResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowCatalogResponse::CopyFrom(const ShowCatalogResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.ShowCatalogResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowCatalogResponse::IsInitialized() const {
  return true;
}

void ShowCatalogResponse::Swap(ShowCatalogResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowCatalogResponse::InternalSwap(ShowCatalogResponse* other) {
  using std::swap;
  CastToBase(&catalog_)->InternalSwap(CastToBase(&other->catalog_));
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShowCatalogResponse::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateFunctionRequest::InitAsDefaultInstance() {
  ::openmldb::nameserver::_CreateFunctionRequest_default_instance_._instance.get_mutable()->fun_ = const_cast< ::openmldb::common::ExternalFun*>(
      ::openmldb::common::ExternalFun::internal_default_instance());
}
void CreateFunctionRequest::clear_fun() {
  if (fun_ != NULL) fun_->Clear();
  clear_has_fun();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateFunctionRequest::kFunFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateFunctionRequest::CreateFunctionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_CreateFunctionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.CreateFunctionRequest)
}
CreateFunctionRequest::CreateFunctionRequest(const CreateFunctionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_fun()) {
    fun_ = new ::openmldb::common::ExternalFun(*from.fun_);
  } else {
    fun_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.CreateFunctionRequest)
}

void CreateFunctionRequest::SharedCtor() {
  fun_ = NULL;
}

CreateFunctionRequest::~CreateFunctionRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.CreateFunctionRequest)
  SharedDtor();
}

void CreateFunctionRequest::SharedDtor() {
  if (this != internal_default_instance()) delete fun_;
}

void CreateFunctionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateFunctionRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateFunctionRequest& CreateFunctionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_CreateFunctionRequest.base);
  return *internal_default_instance();
}


void CreateFunctionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.CreateFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(fun_ != NULL);
    fun_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateFunctionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.CreateFunctionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .openmldb.common.ExternalFun fun = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fun()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.CreateFunctionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.CreateFunctionRequest)
  return false;
#undef DO_
}

void CreateFunctionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.CreateFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.common.ExternalFun fun = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_fun(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.CreateFunctionRequest)
}

::google::protobuf::uint8* CreateFunctionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.CreateFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.common.ExternalFun fun = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_fun(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.CreateFunctionRequest)
  return target;
}

size_t CreateFunctionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.CreateFunctionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .openmldb.common.ExternalFun fun = 1;
  if (has_fun()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *fun_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateFunctionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.CreateFunctionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateFunctionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateFunctionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.CreateFunctionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.CreateFunctionRequest)
    MergeFrom(*source);
  }
}

void CreateFunctionRequest::MergeFrom(const CreateFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.CreateFunctionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_fun()) {
    mutable_fun()->::openmldb::common::ExternalFun::MergeFrom(from.fun());
  }
}

void CreateFunctionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.CreateFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateFunctionRequest::CopyFrom(const CreateFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.CreateFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateFunctionRequest::IsInitialized() const {
  return true;
}

void CreateFunctionRequest::Swap(CreateFunctionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateFunctionRequest::InternalSwap(CreateFunctionRequest* other) {
  using std::swap;
  swap(fun_, other->fun_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateFunctionRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateFunctionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateFunctionResponse::kCodeFieldNumber;
const int CreateFunctionResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateFunctionResponse::CreateFunctionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_CreateFunctionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.CreateFunctionResponse)
}
CreateFunctionResponse::CreateFunctionResponse(const CreateFunctionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.CreateFunctionResponse)
}

void CreateFunctionResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

CreateFunctionResponse::~CreateFunctionResponse() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.CreateFunctionResponse)
  SharedDtor();
}

void CreateFunctionResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateFunctionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateFunctionResponse::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateFunctionResponse& CreateFunctionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_CreateFunctionResponse.base);
  return *internal_default_instance();
}


void CreateFunctionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.CreateFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateFunctionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.CreateFunctionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.CreateFunctionResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.CreateFunctionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.CreateFunctionResponse)
  return false;
#undef DO_
}

void CreateFunctionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.CreateFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.CreateFunctionResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.CreateFunctionResponse)
}

::google::protobuf::uint8* CreateFunctionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.CreateFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.CreateFunctionResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.CreateFunctionResponse)
  return target;
}

size_t CreateFunctionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.CreateFunctionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateFunctionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.CreateFunctionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateFunctionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateFunctionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.CreateFunctionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.CreateFunctionResponse)
    MergeFrom(*source);
  }
}

void CreateFunctionResponse::MergeFrom(const CreateFunctionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.CreateFunctionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CreateFunctionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.CreateFunctionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateFunctionResponse::CopyFrom(const CreateFunctionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.CreateFunctionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateFunctionResponse::IsInitialized() const {
  return true;
}

void CreateFunctionResponse::Swap(CreateFunctionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateFunctionResponse::InternalSwap(CreateFunctionResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateFunctionResponse::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DropFunctionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DropFunctionRequest::kNameFieldNumber;
const int DropFunctionRequest::kIfExistsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DropFunctionRequest::DropFunctionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_DropFunctionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.DropFunctionRequest)
}
DropFunctionRequest::DropFunctionRequest(const DropFunctionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if_exists_ = from.if_exists_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.DropFunctionRequest)
}

void DropFunctionRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if_exists_ = false;
}

DropFunctionRequest::~DropFunctionRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.DropFunctionRequest)
  SharedDtor();
}

void DropFunctionRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DropFunctionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DropFunctionRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DropFunctionRequest& DropFunctionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_DropFunctionRequest.base);
  return *internal_default_instance();
}


void DropFunctionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.DropFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  if_exists_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DropFunctionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.DropFunctionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.DropFunctionRequest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool if_exists = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_if_exists();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &if_exists_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.DropFunctionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.DropFunctionRequest)
  return false;
#undef DO_
}

void DropFunctionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.DropFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.DropFunctionRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional bool if_exists = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->if_exists(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.DropFunctionRequest)
}

::google::protobuf::uint8* DropFunctionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.DropFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.DropFunctionRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional bool if_exists = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->if_exists(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.DropFunctionRequest)
  return target;
}

size_t DropFunctionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.DropFunctionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional bool if_exists = 2;
    if (has_if_exists()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DropFunctionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.DropFunctionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DropFunctionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DropFunctionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.DropFunctionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.DropFunctionRequest)
    MergeFrom(*source);
  }
}

void DropFunctionRequest::MergeFrom(const DropFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.DropFunctionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      if_exists_ = from.if_exists_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DropFunctionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.DropFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropFunctionRequest::CopyFrom(const DropFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.DropFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropFunctionRequest::IsInitialized() const {
  return true;
}

void DropFunctionRequest::Swap(DropFunctionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DropFunctionRequest::InternalSwap(DropFunctionRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(if_exists_, other->if_exists_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DropFunctionRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DropFunctionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DropFunctionResponse::kCodeFieldNumber;
const int DropFunctionResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DropFunctionResponse::DropFunctionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_DropFunctionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.DropFunctionResponse)
}
DropFunctionResponse::DropFunctionResponse(const DropFunctionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.DropFunctionResponse)
}

void DropFunctionResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

DropFunctionResponse::~DropFunctionResponse() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.DropFunctionResponse)
  SharedDtor();
}

void DropFunctionResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DropFunctionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DropFunctionResponse::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DropFunctionResponse& DropFunctionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_DropFunctionResponse.base);
  return *internal_default_instance();
}


void DropFunctionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.DropFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DropFunctionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.DropFunctionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.DropFunctionResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.DropFunctionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.DropFunctionResponse)
  return false;
#undef DO_
}

void DropFunctionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.DropFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.DropFunctionResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.DropFunctionResponse)
}

::google::protobuf::uint8* DropFunctionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.DropFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.DropFunctionResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.DropFunctionResponse)
  return target;
}

size_t DropFunctionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.DropFunctionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DropFunctionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.DropFunctionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DropFunctionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DropFunctionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.DropFunctionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.DropFunctionResponse)
    MergeFrom(*source);
  }
}

void DropFunctionResponse::MergeFrom(const DropFunctionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.DropFunctionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DropFunctionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.DropFunctionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropFunctionResponse::CopyFrom(const DropFunctionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.DropFunctionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropFunctionResponse::IsInitialized() const {
  return true;
}

void DropFunctionResponse::Swap(DropFunctionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DropFunctionResponse::InternalSwap(DropFunctionResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DropFunctionResponse::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShowFunctionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowFunctionRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowFunctionRequest::ShowFunctionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_ShowFunctionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.ShowFunctionRequest)
}
ShowFunctionRequest::ShowFunctionRequest(const ShowFunctionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.ShowFunctionRequest)
}

void ShowFunctionRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ShowFunctionRequest::~ShowFunctionRequest() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.ShowFunctionRequest)
  SharedDtor();
}

void ShowFunctionRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShowFunctionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShowFunctionRequest::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShowFunctionRequest& ShowFunctionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_ShowFunctionRequest.base);
  return *internal_default_instance();
}


void ShowFunctionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.ShowFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowFunctionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.ShowFunctionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ShowFunctionRequest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.ShowFunctionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.ShowFunctionRequest)
  return false;
#undef DO_
}

void ShowFunctionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.ShowFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowFunctionRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.ShowFunctionRequest)
}

::google::protobuf::uint8* ShowFunctionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.ShowFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowFunctionRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.ShowFunctionRequest)
  return target;
}

size_t ShowFunctionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.ShowFunctionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowFunctionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.ShowFunctionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowFunctionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShowFunctionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.ShowFunctionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.ShowFunctionRequest)
    MergeFrom(*source);
  }
}

void ShowFunctionRequest::MergeFrom(const ShowFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.ShowFunctionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void ShowFunctionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.ShowFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowFunctionRequest::CopyFrom(const ShowFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.ShowFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowFunctionRequest::IsInitialized() const {
  return true;
}

void ShowFunctionRequest::Swap(ShowFunctionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowFunctionRequest::InternalSwap(ShowFunctionRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShowFunctionRequest::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShowFunctionResponse::InitAsDefaultInstance() {
}
void ShowFunctionResponse::clear_fun() {
  fun_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowFunctionResponse::kCodeFieldNumber;
const int ShowFunctionResponse::kMsgFieldNumber;
const int ShowFunctionResponse::kFunFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowFunctionResponse::ShowFunctionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_name_5fserver_2eproto::scc_info_ShowFunctionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.nameserver.ShowFunctionResponse)
}
ShowFunctionResponse::ShowFunctionResponse(const ShowFunctionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      fun_(from.fun_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.nameserver.ShowFunctionResponse)
}

void ShowFunctionResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

ShowFunctionResponse::~ShowFunctionResponse() {
  // @@protoc_insertion_point(destructor:openmldb.nameserver.ShowFunctionResponse)
  SharedDtor();
}

void ShowFunctionResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShowFunctionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShowFunctionResponse::descriptor() {
  ::protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShowFunctionResponse& ShowFunctionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_name_5fserver_2eproto::scc_info_ShowFunctionResponse.base);
  return *internal_default_instance();
}


void ShowFunctionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.nameserver.ShowFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fun_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowFunctionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.nameserver.ShowFunctionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.nameserver.ShowFunctionResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.common.ExternalFun fun = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_fun()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.nameserver.ShowFunctionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.nameserver.ShowFunctionResponse)
  return false;
#undef DO_
}

void ShowFunctionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.nameserver.ShowFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowFunctionResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // repeated .openmldb.common.ExternalFun fun = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fun_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->fun(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.nameserver.ShowFunctionResponse)
}

::google::protobuf::uint8* ShowFunctionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.nameserver.ShowFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.nameserver.ShowFunctionResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // repeated .openmldb.common.ExternalFun fun = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fun_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->fun(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.nameserver.ShowFunctionResponse)
  return target;
}

size_t ShowFunctionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.nameserver.ShowFunctionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.common.ExternalFun fun = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->fun_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fun(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowFunctionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.nameserver.ShowFunctionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowFunctionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShowFunctionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.nameserver.ShowFunctionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.nameserver.ShowFunctionResponse)
    MergeFrom(*source);
  }
}

void ShowFunctionResponse::MergeFrom(const ShowFunctionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.nameserver.ShowFunctionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fun_.MergeFrom(from.fun_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShowFunctionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.nameserver.ShowFunctionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowFunctionResponse::CopyFrom(const ShowFunctionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.nameserver.ShowFunctionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowFunctionResponse::IsInitialized() const {
  return true;
}

void ShowFunctionResponse::Swap(ShowFunctionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowFunctionResponse::InternalSwap(ShowFunctionResponse* other) {
  using std::swap;
  CastToBase(&fun_)->InternalSwap(CastToBase(&other->fun_));
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShowFunctionResponse::GetMetadata() const {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_name_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

NameServer::~NameServer() {}

const ::google::protobuf::ServiceDescriptor* NameServer::descriptor() {
  protobuf_name_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_name_5fserver_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* NameServer::GetDescriptor() {
  return descriptor();
}

void NameServer::CreateTable(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::CreateTableRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CreateTable() not implemented.");
  done->Run();
}

void NameServer::DropTable(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::DropTableRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DropTable() not implemented.");
  done->Run();
}

void NameServer::ShowTablet(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::ShowTabletRequest*,
                         ::openmldb::nameserver::ShowTabletResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ShowTablet() not implemented.");
  done->Run();
}

void NameServer::ShowTable(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::ShowTableRequest*,
                         ::openmldb::nameserver::ShowTableResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ShowTable() not implemented.");
  done->Run();
}

void NameServer::MakeSnapshotNS(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::MakeSnapshotNSRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method MakeSnapshotNS() not implemented.");
  done->Run();
}

void NameServer::AddReplicaNS(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::AddReplicaNSRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method AddReplicaNS() not implemented.");
  done->Run();
}

void NameServer::DelReplicaNS(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::DelReplicaNSRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DelReplicaNS() not implemented.");
  done->Run();
}

void NameServer::ShowOPStatus(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::ShowOPStatusRequest*,
                         ::openmldb::nameserver::ShowOPStatusResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ShowOPStatus() not implemented.");
  done->Run();
}

void NameServer::CancelOP(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::CancelOPRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CancelOP() not implemented.");
  done->Run();
}

void NameServer::ConfSet(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::ConfSetRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ConfSet() not implemented.");
  done->Run();
}

void NameServer::ConfGet(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::ConfGetRequest*,
                         ::openmldb::nameserver::ConfGetResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ConfGet() not implemented.");
  done->Run();
}

void NameServer::ChangeLeader(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::ChangeLeaderRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ChangeLeader() not implemented.");
  done->Run();
}

void NameServer::OfflineEndpoint(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::OfflineEndpointRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method OfflineEndpoint() not implemented.");
  done->Run();
}

void NameServer::Migrate(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::MigrateRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Migrate() not implemented.");
  done->Run();
}

void NameServer::RecoverTable(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::RecoverTableRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RecoverTable() not implemented.");
  done->Run();
}

void NameServer::RecoverEndpoint(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::RecoverEndpointRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RecoverEndpoint() not implemented.");
  done->Run();
}

void NameServer::ConnectZK(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::ConnectZKRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ConnectZK() not implemented.");
  done->Run();
}

void NameServer::DisConnectZK(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::DisConnectZKRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DisConnectZK() not implemented.");
  done->Run();
}

void NameServer::SetTablePartition(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::SetTablePartitionRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SetTablePartition() not implemented.");
  done->Run();
}

void NameServer::GetTablePartition(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::GetTablePartitionRequest*,
                         ::openmldb::nameserver::GetTablePartitionResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetTablePartition() not implemented.");
  done->Run();
}

void NameServer::UpdateTTL(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::UpdateTTLRequest*,
                         ::openmldb::nameserver::UpdateTTLResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method UpdateTTL() not implemented.");
  done->Run();
}

void NameServer::UpdateTableAliveStatus(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::UpdateTableAliveRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method UpdateTableAliveStatus() not implemented.");
  done->Run();
}

void NameServer::AddTableField(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::AddTableFieldRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method AddTableField() not implemented.");
  done->Run();
}

void NameServer::AddReplicaCluster(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::ClusterAddress*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method AddReplicaCluster() not implemented.");
  done->Run();
}

void NameServer::ShowReplicaCluster(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::GeneralRequest*,
                         ::openmldb::nameserver::ShowReplicaClusterResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ShowReplicaCluster() not implemented.");
  done->Run();
}

void NameServer::RemoveReplicaCluster(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::RemoveReplicaOfRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RemoveReplicaCluster() not implemented.");
  done->Run();
}

void NameServer::AddReplicaClusterByNs(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::ReplicaClusterByNsRequest*,
                         ::openmldb::nameserver::AddReplicaClusterByNsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method AddReplicaClusterByNs() not implemented.");
  done->Run();
}

void NameServer::RemoveReplicaClusterByNs(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::ReplicaClusterByNsRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RemoveReplicaClusterByNs() not implemented.");
  done->Run();
}

void NameServer::SwitchMode(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::SwitchModeRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SwitchMode() not implemented.");
  done->Run();
}

void NameServer::GetTaskStatus(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::TaskStatusRequest*,
                         ::openmldb::api::TaskStatusResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetTaskStatus() not implemented.");
  done->Run();
}

void NameServer::DeleteOPTask(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::DeleteTaskRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DeleteOPTask() not implemented.");
  done->Run();
}

void NameServer::CreateTableInfo(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::CreateTableInfoRequest*,
                         ::openmldb::nameserver::CreateTableInfoResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CreateTableInfo() not implemented.");
  done->Run();
}

void NameServer::CreateTableInfoSimply(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::CreateTableInfoRequest*,
                         ::openmldb::nameserver::CreateTableInfoResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CreateTableInfoSimply() not implemented.");
  done->Run();
}

void NameServer::LoadTable(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::LoadTableRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method LoadTable() not implemented.");
  done->Run();
}

void NameServer::AddReplicaNSFromRemote(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::AddReplicaNSRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method AddReplicaNSFromRemote() not implemented.");
  done->Run();
}

void NameServer::SyncTable(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::SyncTableRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SyncTable() not implemented.");
  done->Run();
}

void NameServer::AddIndex(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::AddIndexRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method AddIndex() not implemented.");
  done->Run();
}

void NameServer::DeleteIndex(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::DeleteIndexRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DeleteIndex() not implemented.");
  done->Run();
}

void NameServer::CreateDatabase(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::CreateDatabaseRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CreateDatabase() not implemented.");
  done->Run();
}

void NameServer::UseDatabase(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::UseDatabaseRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method UseDatabase() not implemented.");
  done->Run();
}

void NameServer::ShowDatabase(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::GeneralRequest*,
                         ::openmldb::nameserver::ShowDatabaseResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ShowDatabase() not implemented.");
  done->Run();
}

void NameServer::DropDatabase(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::DropDatabaseRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DropDatabase() not implemented.");
  done->Run();
}

void NameServer::SetSdkEndpoint(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::SetSdkEndpointRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SetSdkEndpoint() not implemented.");
  done->Run();
}

void NameServer::ShowSdkEndpoint(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::ShowSdkEndpointRequest*,
                         ::openmldb::nameserver::ShowSdkEndpointResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ShowSdkEndpoint() not implemented.");
  done->Run();
}

void NameServer::ShowCatalog(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::ShowCatalogRequest*,
                         ::openmldb::nameserver::ShowCatalogResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ShowCatalog() not implemented.");
  done->Run();
}

void NameServer::UpdateOfflineTableInfo(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::TableInfo*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method UpdateOfflineTableInfo() not implemented.");
  done->Run();
}

void NameServer::CreateFunction(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::CreateFunctionRequest*,
                         ::openmldb::nameserver::CreateFunctionResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CreateFunction() not implemented.");
  done->Run();
}

void NameServer::DropFunction(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::DropFunctionRequest*,
                         ::openmldb::nameserver::DropFunctionResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DropFunction() not implemented.");
  done->Run();
}

void NameServer::ShowFunction(::google::protobuf::RpcController* controller,
                         const ::openmldb::nameserver::ShowFunctionRequest*,
                         ::openmldb::nameserver::ShowFunctionResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ShowFunction() not implemented.");
  done->Run();
}

void NameServer::CreateProcedure(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::CreateProcedureRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CreateProcedure() not implemented.");
  done->Run();
}

void NameServer::DropProcedure(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::DropProcedureRequest*,
                         ::openmldb::nameserver::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DropProcedure() not implemented.");
  done->Run();
}

void NameServer::ShowProcedure(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::ShowProcedureRequest*,
                         ::openmldb::api::ShowProcedureResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ShowProcedure() not implemented.");
  done->Run();
}

void NameServer::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_name_5fserver_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      CreateTable(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::CreateTableRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 1:
      DropTable(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::DropTableRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 2:
      ShowTablet(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::ShowTabletRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::ShowTabletResponse*>(response),
             done);
      break;
    case 3:
      ShowTable(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::ShowTableRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::ShowTableResponse*>(response),
             done);
      break;
    case 4:
      MakeSnapshotNS(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::MakeSnapshotNSRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 5:
      AddReplicaNS(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::AddReplicaNSRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 6:
      DelReplicaNS(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::DelReplicaNSRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 7:
      ShowOPStatus(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::ShowOPStatusRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::ShowOPStatusResponse*>(response),
             done);
      break;
    case 8:
      CancelOP(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::CancelOPRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 9:
      ConfSet(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::ConfSetRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 10:
      ConfGet(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::ConfGetRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::ConfGetResponse*>(response),
             done);
      break;
    case 11:
      ChangeLeader(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::ChangeLeaderRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 12:
      OfflineEndpoint(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::OfflineEndpointRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 13:
      Migrate(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::MigrateRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 14:
      RecoverTable(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::RecoverTableRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 15:
      RecoverEndpoint(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::RecoverEndpointRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 16:
      ConnectZK(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::ConnectZKRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 17:
      DisConnectZK(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::DisConnectZKRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 18:
      SetTablePartition(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::SetTablePartitionRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 19:
      GetTablePartition(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::GetTablePartitionRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GetTablePartitionResponse*>(response),
             done);
      break;
    case 20:
      UpdateTTL(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::UpdateTTLRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::UpdateTTLResponse*>(response),
             done);
      break;
    case 21:
      UpdateTableAliveStatus(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::UpdateTableAliveRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 22:
      AddTableField(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::AddTableFieldRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 23:
      AddReplicaCluster(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::ClusterAddress*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 24:
      ShowReplicaCluster(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::GeneralRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::ShowReplicaClusterResponse*>(response),
             done);
      break;
    case 25:
      RemoveReplicaCluster(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::RemoveReplicaOfRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 26:
      AddReplicaClusterByNs(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::ReplicaClusterByNsRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::AddReplicaClusterByNsResponse*>(response),
             done);
      break;
    case 27:
      RemoveReplicaClusterByNs(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::ReplicaClusterByNsRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 28:
      SwitchMode(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::SwitchModeRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 29:
      GetTaskStatus(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::TaskStatusRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::TaskStatusResponse*>(response),
             done);
      break;
    case 30:
      DeleteOPTask(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::DeleteTaskRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 31:
      CreateTableInfo(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::CreateTableInfoRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::CreateTableInfoResponse*>(response),
             done);
      break;
    case 32:
      CreateTableInfoSimply(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::CreateTableInfoRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::CreateTableInfoResponse*>(response),
             done);
      break;
    case 33:
      LoadTable(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::LoadTableRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 34:
      AddReplicaNSFromRemote(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::AddReplicaNSRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 35:
      SyncTable(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::SyncTableRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 36:
      AddIndex(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::AddIndexRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 37:
      DeleteIndex(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::DeleteIndexRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 38:
      CreateDatabase(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::CreateDatabaseRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 39:
      UseDatabase(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::UseDatabaseRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 40:
      ShowDatabase(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::GeneralRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::ShowDatabaseResponse*>(response),
             done);
      break;
    case 41:
      DropDatabase(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::DropDatabaseRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 42:
      SetSdkEndpoint(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::SetSdkEndpointRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 43:
      ShowSdkEndpoint(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::ShowSdkEndpointRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::ShowSdkEndpointResponse*>(response),
             done);
      break;
    case 44:
      ShowCatalog(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::ShowCatalogRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::ShowCatalogResponse*>(response),
             done);
      break;
    case 45:
      UpdateOfflineTableInfo(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::TableInfo*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 46:
      CreateFunction(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::CreateFunctionRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::CreateFunctionResponse*>(response),
             done);
      break;
    case 47:
      DropFunction(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::DropFunctionRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::DropFunctionResponse*>(response),
             done);
      break;
    case 48:
      ShowFunction(controller,
             ::google::protobuf::down_cast<const ::openmldb::nameserver::ShowFunctionRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::ShowFunctionResponse*>(response),
             done);
      break;
    case 49:
      CreateProcedure(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::CreateProcedureRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 50:
      DropProcedure(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::DropProcedureRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::nameserver::GeneralResponse*>(response),
             done);
      break;
    case 51:
      ShowProcedure(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::ShowProcedureRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::ShowProcedureResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& NameServer::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::openmldb::nameserver::CreateTableRequest::default_instance();
    case 1:
      return ::openmldb::nameserver::DropTableRequest::default_instance();
    case 2:
      return ::openmldb::nameserver::ShowTabletRequest::default_instance();
    case 3:
      return ::openmldb::nameserver::ShowTableRequest::default_instance();
    case 4:
      return ::openmldb::nameserver::MakeSnapshotNSRequest::default_instance();
    case 5:
      return ::openmldb::nameserver::AddReplicaNSRequest::default_instance();
    case 6:
      return ::openmldb::nameserver::DelReplicaNSRequest::default_instance();
    case 7:
      return ::openmldb::nameserver::ShowOPStatusRequest::default_instance();
    case 8:
      return ::openmldb::nameserver::CancelOPRequest::default_instance();
    case 9:
      return ::openmldb::nameserver::ConfSetRequest::default_instance();
    case 10:
      return ::openmldb::nameserver::ConfGetRequest::default_instance();
    case 11:
      return ::openmldb::nameserver::ChangeLeaderRequest::default_instance();
    case 12:
      return ::openmldb::nameserver::OfflineEndpointRequest::default_instance();
    case 13:
      return ::openmldb::nameserver::MigrateRequest::default_instance();
    case 14:
      return ::openmldb::nameserver::RecoverTableRequest::default_instance();
    case 15:
      return ::openmldb::nameserver::RecoverEndpointRequest::default_instance();
    case 16:
      return ::openmldb::nameserver::ConnectZKRequest::default_instance();
    case 17:
      return ::openmldb::nameserver::DisConnectZKRequest::default_instance();
    case 18:
      return ::openmldb::nameserver::SetTablePartitionRequest::default_instance();
    case 19:
      return ::openmldb::nameserver::GetTablePartitionRequest::default_instance();
    case 20:
      return ::openmldb::nameserver::UpdateTTLRequest::default_instance();
    case 21:
      return ::openmldb::nameserver::UpdateTableAliveRequest::default_instance();
    case 22:
      return ::openmldb::nameserver::AddTableFieldRequest::default_instance();
    case 23:
      return ::openmldb::nameserver::ClusterAddress::default_instance();
    case 24:
      return ::openmldb::nameserver::GeneralRequest::default_instance();
    case 25:
      return ::openmldb::nameserver::RemoveReplicaOfRequest::default_instance();
    case 26:
      return ::openmldb::nameserver::ReplicaClusterByNsRequest::default_instance();
    case 27:
      return ::openmldb::nameserver::ReplicaClusterByNsRequest::default_instance();
    case 28:
      return ::openmldb::nameserver::SwitchModeRequest::default_instance();
    case 29:
      return ::openmldb::api::TaskStatusRequest::default_instance();
    case 30:
      return ::openmldb::api::DeleteTaskRequest::default_instance();
    case 31:
      return ::openmldb::nameserver::CreateTableInfoRequest::default_instance();
    case 32:
      return ::openmldb::nameserver::CreateTableInfoRequest::default_instance();
    case 33:
      return ::openmldb::nameserver::LoadTableRequest::default_instance();
    case 34:
      return ::openmldb::nameserver::AddReplicaNSRequest::default_instance();
    case 35:
      return ::openmldb::nameserver::SyncTableRequest::default_instance();
    case 36:
      return ::openmldb::nameserver::AddIndexRequest::default_instance();
    case 37:
      return ::openmldb::nameserver::DeleteIndexRequest::default_instance();
    case 38:
      return ::openmldb::nameserver::CreateDatabaseRequest::default_instance();
    case 39:
      return ::openmldb::nameserver::UseDatabaseRequest::default_instance();
    case 40:
      return ::openmldb::nameserver::GeneralRequest::default_instance();
    case 41:
      return ::openmldb::nameserver::DropDatabaseRequest::default_instance();
    case 42:
      return ::openmldb::nameserver::SetSdkEndpointRequest::default_instance();
    case 43:
      return ::openmldb::nameserver::ShowSdkEndpointRequest::default_instance();
    case 44:
      return ::openmldb::nameserver::ShowCatalogRequest::default_instance();
    case 45:
      return ::openmldb::nameserver::TableInfo::default_instance();
    case 46:
      return ::openmldb::nameserver::CreateFunctionRequest::default_instance();
    case 47:
      return ::openmldb::nameserver::DropFunctionRequest::default_instance();
    case 48:
      return ::openmldb::nameserver::ShowFunctionRequest::default_instance();
    case 49:
      return ::openmldb::api::CreateProcedureRequest::default_instance();
    case 50:
      return ::openmldb::api::DropProcedureRequest::default_instance();
    case 51:
      return ::openmldb::api::ShowProcedureRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& NameServer::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 1:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 2:
      return ::openmldb::nameserver::ShowTabletResponse::default_instance();
    case 3:
      return ::openmldb::nameserver::ShowTableResponse::default_instance();
    case 4:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 5:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 6:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 7:
      return ::openmldb::nameserver::ShowOPStatusResponse::default_instance();
    case 8:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 9:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 10:
      return ::openmldb::nameserver::ConfGetResponse::default_instance();
    case 11:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 12:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 13:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 14:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 15:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 16:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 17:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 18:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 19:
      return ::openmldb::nameserver::GetTablePartitionResponse::default_instance();
    case 20:
      return ::openmldb::nameserver::UpdateTTLResponse::default_instance();
    case 21:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 22:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 23:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 24:
      return ::openmldb::nameserver::ShowReplicaClusterResponse::default_instance();
    case 25:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 26:
      return ::openmldb::nameserver::AddReplicaClusterByNsResponse::default_instance();
    case 27:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 28:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 29:
      return ::openmldb::api::TaskStatusResponse::default_instance();
    case 30:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 31:
      return ::openmldb::nameserver::CreateTableInfoResponse::default_instance();
    case 32:
      return ::openmldb::nameserver::CreateTableInfoResponse::default_instance();
    case 33:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 34:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 35:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 36:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 37:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 38:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 39:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 40:
      return ::openmldb::nameserver::ShowDatabaseResponse::default_instance();
    case 41:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 42:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 43:
      return ::openmldb::nameserver::ShowSdkEndpointResponse::default_instance();
    case 44:
      return ::openmldb::nameserver::ShowCatalogResponse::default_instance();
    case 45:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 46:
      return ::openmldb::nameserver::CreateFunctionResponse::default_instance();
    case 47:
      return ::openmldb::nameserver::DropFunctionResponse::default_instance();
    case 48:
      return ::openmldb::nameserver::ShowFunctionResponse::default_instance();
    case 49:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 50:
      return ::openmldb::nameserver::GeneralResponse::default_instance();
    case 51:
      return ::openmldb::api::ShowProcedureResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

NameServer_Stub::NameServer_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
NameServer_Stub::NameServer_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
NameServer_Stub::~NameServer_Stub() {
  if (owns_channel_) delete channel_;
}

void NameServer_Stub::CreateTable(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::CreateTableRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void NameServer_Stub::DropTable(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::DropTableRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void NameServer_Stub::ShowTablet(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::ShowTabletRequest* request,
                              ::openmldb::nameserver::ShowTabletResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void NameServer_Stub::ShowTable(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::ShowTableRequest* request,
                              ::openmldb::nameserver::ShowTableResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void NameServer_Stub::MakeSnapshotNS(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::MakeSnapshotNSRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void NameServer_Stub::AddReplicaNS(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::AddReplicaNSRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}
void NameServer_Stub::DelReplicaNS(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::DelReplicaNSRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(6),
                       controller, request, response, done);
}
void NameServer_Stub::ShowOPStatus(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::ShowOPStatusRequest* request,
                              ::openmldb::nameserver::ShowOPStatusResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(7),
                       controller, request, response, done);
}
void NameServer_Stub::CancelOP(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::CancelOPRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(8),
                       controller, request, response, done);
}
void NameServer_Stub::ConfSet(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::ConfSetRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(9),
                       controller, request, response, done);
}
void NameServer_Stub::ConfGet(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::ConfGetRequest* request,
                              ::openmldb::nameserver::ConfGetResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(10),
                       controller, request, response, done);
}
void NameServer_Stub::ChangeLeader(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::ChangeLeaderRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(11),
                       controller, request, response, done);
}
void NameServer_Stub::OfflineEndpoint(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::OfflineEndpointRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(12),
                       controller, request, response, done);
}
void NameServer_Stub::Migrate(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::MigrateRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(13),
                       controller, request, response, done);
}
void NameServer_Stub::RecoverTable(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::RecoverTableRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(14),
                       controller, request, response, done);
}
void NameServer_Stub::RecoverEndpoint(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::RecoverEndpointRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(15),
                       controller, request, response, done);
}
void NameServer_Stub::ConnectZK(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::ConnectZKRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(16),
                       controller, request, response, done);
}
void NameServer_Stub::DisConnectZK(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::DisConnectZKRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(17),
                       controller, request, response, done);
}
void NameServer_Stub::SetTablePartition(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::SetTablePartitionRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(18),
                       controller, request, response, done);
}
void NameServer_Stub::GetTablePartition(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::GetTablePartitionRequest* request,
                              ::openmldb::nameserver::GetTablePartitionResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(19),
                       controller, request, response, done);
}
void NameServer_Stub::UpdateTTL(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::UpdateTTLRequest* request,
                              ::openmldb::nameserver::UpdateTTLResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(20),
                       controller, request, response, done);
}
void NameServer_Stub::UpdateTableAliveStatus(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::UpdateTableAliveRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(21),
                       controller, request, response, done);
}
void NameServer_Stub::AddTableField(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::AddTableFieldRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(22),
                       controller, request, response, done);
}
void NameServer_Stub::AddReplicaCluster(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::ClusterAddress* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(23),
                       controller, request, response, done);
}
void NameServer_Stub::ShowReplicaCluster(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::GeneralRequest* request,
                              ::openmldb::nameserver::ShowReplicaClusterResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(24),
                       controller, request, response, done);
}
void NameServer_Stub::RemoveReplicaCluster(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::RemoveReplicaOfRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(25),
                       controller, request, response, done);
}
void NameServer_Stub::AddReplicaClusterByNs(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::ReplicaClusterByNsRequest* request,
                              ::openmldb::nameserver::AddReplicaClusterByNsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(26),
                       controller, request, response, done);
}
void NameServer_Stub::RemoveReplicaClusterByNs(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::ReplicaClusterByNsRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(27),
                       controller, request, response, done);
}
void NameServer_Stub::SwitchMode(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::SwitchModeRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(28),
                       controller, request, response, done);
}
void NameServer_Stub::GetTaskStatus(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::TaskStatusRequest* request,
                              ::openmldb::api::TaskStatusResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(29),
                       controller, request, response, done);
}
void NameServer_Stub::DeleteOPTask(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::DeleteTaskRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(30),
                       controller, request, response, done);
}
void NameServer_Stub::CreateTableInfo(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::CreateTableInfoRequest* request,
                              ::openmldb::nameserver::CreateTableInfoResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(31),
                       controller, request, response, done);
}
void NameServer_Stub::CreateTableInfoSimply(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::CreateTableInfoRequest* request,
                              ::openmldb::nameserver::CreateTableInfoResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(32),
                       controller, request, response, done);
}
void NameServer_Stub::LoadTable(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::LoadTableRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(33),
                       controller, request, response, done);
}
void NameServer_Stub::AddReplicaNSFromRemote(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::AddReplicaNSRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(34),
                       controller, request, response, done);
}
void NameServer_Stub::SyncTable(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::SyncTableRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(35),
                       controller, request, response, done);
}
void NameServer_Stub::AddIndex(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::AddIndexRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(36),
                       controller, request, response, done);
}
void NameServer_Stub::DeleteIndex(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::DeleteIndexRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(37),
                       controller, request, response, done);
}
void NameServer_Stub::CreateDatabase(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::CreateDatabaseRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(38),
                       controller, request, response, done);
}
void NameServer_Stub::UseDatabase(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::UseDatabaseRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(39),
                       controller, request, response, done);
}
void NameServer_Stub::ShowDatabase(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::GeneralRequest* request,
                              ::openmldb::nameserver::ShowDatabaseResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(40),
                       controller, request, response, done);
}
void NameServer_Stub::DropDatabase(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::DropDatabaseRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(41),
                       controller, request, response, done);
}
void NameServer_Stub::SetSdkEndpoint(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::SetSdkEndpointRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(42),
                       controller, request, response, done);
}
void NameServer_Stub::ShowSdkEndpoint(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::ShowSdkEndpointRequest* request,
                              ::openmldb::nameserver::ShowSdkEndpointResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(43),
                       controller, request, response, done);
}
void NameServer_Stub::ShowCatalog(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::ShowCatalogRequest* request,
                              ::openmldb::nameserver::ShowCatalogResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(44),
                       controller, request, response, done);
}
void NameServer_Stub::UpdateOfflineTableInfo(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::TableInfo* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(45),
                       controller, request, response, done);
}
void NameServer_Stub::CreateFunction(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::CreateFunctionRequest* request,
                              ::openmldb::nameserver::CreateFunctionResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(46),
                       controller, request, response, done);
}
void NameServer_Stub::DropFunction(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::DropFunctionRequest* request,
                              ::openmldb::nameserver::DropFunctionResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(47),
                       controller, request, response, done);
}
void NameServer_Stub::ShowFunction(::google::protobuf::RpcController* controller,
                              const ::openmldb::nameserver::ShowFunctionRequest* request,
                              ::openmldb::nameserver::ShowFunctionResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(48),
                       controller, request, response, done);
}
void NameServer_Stub::CreateProcedure(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::CreateProcedureRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(49),
                       controller, request, response, done);
}
void NameServer_Stub::DropProcedure(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::DropProcedureRequest* request,
                              ::openmldb::nameserver::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(50),
                       controller, request, response, done);
}
void NameServer_Stub::ShowProcedure(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::ShowProcedureRequest* request,
                              ::openmldb::api::ShowProcedureResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(51),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace nameserver
}  // namespace openmldb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::PartitionMeta* Arena::CreateMaybeMessage< ::openmldb::nameserver::PartitionMeta >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::PartitionMeta >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::TermPair* Arena::CreateMaybeMessage< ::openmldb::nameserver::TermPair >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::TermPair >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::TablePartition* Arena::CreateMaybeMessage< ::openmldb::nameserver::TablePartition >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::TablePartition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::UpdateTTLRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::UpdateTTLRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::UpdateTTLRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::UpdateTTLResponse* Arena::CreateMaybeMessage< ::openmldb::nameserver::UpdateTTLResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::UpdateTTLResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::OfflineTableInfo_OptionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::openmldb::nameserver::OfflineTableInfo_OptionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::OfflineTableInfo_OptionsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::OfflineTableInfo* Arena::CreateMaybeMessage< ::openmldb::nameserver::OfflineTableInfo >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::OfflineTableInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::TableInfo* Arena::CreateMaybeMessage< ::openmldb::nameserver::TableInfo >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::TableInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::CreateTableRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::CreateTableRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::CreateTableRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::DropTableRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::DropTableRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::DropTableRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::LoadTableRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::LoadTableRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::LoadTableRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::CreateTableInfoRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::CreateTableInfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::CreateTableInfoRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::ShowTableRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::ShowTableRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::ShowTableRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::ShowTableResponse* Arena::CreateMaybeMessage< ::openmldb::nameserver::ShowTableResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::ShowTableResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::MakeSnapshotNSRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::MakeSnapshotNSRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::MakeSnapshotNSRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::AddReplicaData* Arena::CreateMaybeMessage< ::openmldb::nameserver::AddReplicaData >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::AddReplicaData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::AddReplicaNSRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::AddReplicaNSRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::AddReplicaNSRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::Pair* Arena::CreateMaybeMessage< ::openmldb::nameserver::Pair >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::Pair >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::ConfSetRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::ConfSetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::ConfSetRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::ConfGetRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::ConfGetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::ConfGetRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::ConfGetResponse* Arena::CreateMaybeMessage< ::openmldb::nameserver::ConfGetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::ConfGetResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::ChangeLeaderRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::ChangeLeaderRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::ChangeLeaderRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::OfflineEndpointRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::OfflineEndpointRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::OfflineEndpointRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::RecoverEndpointRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::RecoverEndpointRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::RecoverEndpointRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::GeneralResponse* Arena::CreateMaybeMessage< ::openmldb::nameserver::GeneralResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::GeneralResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::CreateTableInfoResponse* Arena::CreateMaybeMessage< ::openmldb::nameserver::CreateTableInfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::CreateTableInfoResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::ShowTabletRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::ShowTabletRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::ShowTabletRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::AddTableFieldRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::AddTableFieldRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::AddTableFieldRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::TabletStatus* Arena::CreateMaybeMessage< ::openmldb::nameserver::TabletStatus >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::TabletStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::ShowTabletResponse* Arena::CreateMaybeMessage< ::openmldb::nameserver::ShowTabletResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::ShowTabletResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::RecoverTableRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::RecoverTableRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::RecoverTableRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::DelReplicaNSRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::DelReplicaNSRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::DelReplicaNSRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::MigrateRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::MigrateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::MigrateRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::MigrateInfo* Arena::CreateMaybeMessage< ::openmldb::nameserver::MigrateInfo >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::MigrateInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::EndpointStatusData* Arena::CreateMaybeMessage< ::openmldb::nameserver::EndpointStatusData >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::EndpointStatusData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::RecoverTableData* Arena::CreateMaybeMessage< ::openmldb::nameserver::RecoverTableData >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::RecoverTableData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::CreateTableData* Arena::CreateMaybeMessage< ::openmldb::nameserver::CreateTableData >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::CreateTableData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::ChangeLeaderData* Arena::CreateMaybeMessage< ::openmldb::nameserver::ChangeLeaderData >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::ChangeLeaderData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::OPStatus* Arena::CreateMaybeMessage< ::openmldb::nameserver::OPStatus >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::OPStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::GetTablePartitionRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::GetTablePartitionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::GetTablePartitionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::GetTablePartitionResponse* Arena::CreateMaybeMessage< ::openmldb::nameserver::GetTablePartitionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::GetTablePartitionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::SetTablePartitionRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::SetTablePartitionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::SetTablePartitionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::UpdateTableAliveRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::UpdateTableAliveRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::UpdateTableAliveRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::ShowOPStatusRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::ShowOPStatusRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::ShowOPStatusRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::ConnectZKRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::ConnectZKRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::ConnectZKRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::DisConnectZKRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::DisConnectZKRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::DisConnectZKRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::ShowOPStatusResponse* Arena::CreateMaybeMessage< ::openmldb::nameserver::ShowOPStatusResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::ShowOPStatusResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::CancelOPRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::CancelOPRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::CancelOPRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::ClusterAddress* Arena::CreateMaybeMessage< ::openmldb::nameserver::ClusterAddress >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::ClusterAddress >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::GeneralRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::GeneralRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::GeneralRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::ClusterAddAge* Arena::CreateMaybeMessage< ::openmldb::nameserver::ClusterAddAge >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::ClusterAddAge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::ShowReplicaClusterResponse* Arena::CreateMaybeMessage< ::openmldb::nameserver::ShowReplicaClusterResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::ShowReplicaClusterResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::RemoveReplicaOfRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::RemoveReplicaOfRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::RemoveReplicaOfRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::ReplicaClusterByNsRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::ReplicaClusterByNsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::ReplicaClusterByNsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::ZoneInfo* Arena::CreateMaybeMessage< ::openmldb::nameserver::ZoneInfo >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::ZoneInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::AddReplicaClusterByNsResponse* Arena::CreateMaybeMessage< ::openmldb::nameserver::AddReplicaClusterByNsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::AddReplicaClusterByNsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::SwitchModeRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::SwitchModeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::SwitchModeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::SyncTableRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::SyncTableRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::SyncTableRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::SetSdkEndpointRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::SetSdkEndpointRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::SetSdkEndpointRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::AddIndexMeta* Arena::CreateMaybeMessage< ::openmldb::nameserver::AddIndexMeta >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::AddIndexMeta >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::AddIndexRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::AddIndexRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::AddIndexRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::DeleteIndexRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::DeleteIndexRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::DeleteIndexRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::CreateDatabaseRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::CreateDatabaseRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::CreateDatabaseRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::UseDatabaseRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::UseDatabaseRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::UseDatabaseRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::ShowDatabaseResponse* Arena::CreateMaybeMessage< ::openmldb::nameserver::ShowDatabaseResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::ShowDatabaseResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::DropDatabaseRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::DropDatabaseRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::DropDatabaseRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::ShowSdkEndpointRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::ShowSdkEndpointRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::ShowSdkEndpointRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::ShowSdkEndpointResponse* Arena::CreateMaybeMessage< ::openmldb::nameserver::ShowSdkEndpointResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::ShowSdkEndpointResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::ShowCatalogRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::ShowCatalogRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::ShowCatalogRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::ShowCatalogResponse* Arena::CreateMaybeMessage< ::openmldb::nameserver::ShowCatalogResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::ShowCatalogResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::CreateFunctionRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::CreateFunctionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::CreateFunctionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::CreateFunctionResponse* Arena::CreateMaybeMessage< ::openmldb::nameserver::CreateFunctionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::CreateFunctionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::DropFunctionRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::DropFunctionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::DropFunctionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::DropFunctionResponse* Arena::CreateMaybeMessage< ::openmldb::nameserver::DropFunctionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::DropFunctionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::ShowFunctionRequest* Arena::CreateMaybeMessage< ::openmldb::nameserver::ShowFunctionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::ShowFunctionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::nameserver::ShowFunctionResponse* Arena::CreateMaybeMessage< ::openmldb::nameserver::ShowFunctionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::nameserver::ShowFunctionResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
