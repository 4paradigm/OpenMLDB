// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sql_procedure.proto

#include "sql_procedure.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ColumnDesc;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DbTableNamePair;
}  // namespace protobuf_common_2eproto
namespace protobuf_google_2fprotobuf_2ftype_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftype_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Option;
}  // namespace protobuf_google_2fprotobuf_2ftype_2eproto
namespace protobuf_sql_5fprocedure_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sql_5fprocedure_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ProcedureInfo;
}  // namespace protobuf_sql_5fprocedure_2eproto
namespace openmldb {
namespace api {
class ProcedureInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcedureInfo>
      _instance;
} _ProcedureInfo_default_instance_;
class CreateProcedureRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateProcedureRequest>
      _instance;
} _CreateProcedureRequest_default_instance_;
class DropProcedureRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DropProcedureRequest>
      _instance;
} _DropProcedureRequest_default_instance_;
class ShowProcedureRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShowProcedureRequest>
      _instance;
} _ShowProcedureRequest_default_instance_;
class ShowProcedureResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShowProcedureResponse>
      _instance;
} _ShowProcedureResponse_default_instance_;
}  // namespace api
}  // namespace openmldb
namespace protobuf_sql_5fprocedure_2eproto {
static void InitDefaultsProcedureInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_ProcedureInfo_default_instance_;
    new (ptr) ::openmldb::api::ProcedureInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::ProcedureInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ProcedureInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsProcedureInfo}, {
      &protobuf_common_2eproto::scc_info_ColumnDesc.base,
      &protobuf_common_2eproto::scc_info_DbTableNamePair.base,
      &protobuf_google_2fprotobuf_2ftype_2eproto::scc_info_Option.base,}};

static void InitDefaultsCreateProcedureRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_CreateProcedureRequest_default_instance_;
    new (ptr) ::openmldb::api::CreateProcedureRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::CreateProcedureRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateProcedureRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateProcedureRequest}, {
      &protobuf_sql_5fprocedure_2eproto::scc_info_ProcedureInfo.base,}};

static void InitDefaultsDropProcedureRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_DropProcedureRequest_default_instance_;
    new (ptr) ::openmldb::api::DropProcedureRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::DropProcedureRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DropProcedureRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDropProcedureRequest}, {}};

static void InitDefaultsShowProcedureRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_ShowProcedureRequest_default_instance_;
    new (ptr) ::openmldb::api::ShowProcedureRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::ShowProcedureRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShowProcedureRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShowProcedureRequest}, {}};

static void InitDefaultsShowProcedureResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_ShowProcedureResponse_default_instance_;
    new (ptr) ::openmldb::api::ShowProcedureResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::ShowProcedureResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ShowProcedureResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsShowProcedureResponse}, {
      &protobuf_sql_5fprocedure_2eproto::scc_info_ProcedureInfo.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ProcedureInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateProcedureRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DropProcedureRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShowProcedureRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShowProcedureResponse.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ProcedureInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ProcedureInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ProcedureInfo, db_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ProcedureInfo, sp_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ProcedureInfo, sql_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ProcedureInfo, input_schema_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ProcedureInfo, output_schema_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ProcedureInfo, main_table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ProcedureInfo, main_db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ProcedureInfo, tables_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ProcedureInfo, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ProcedureInfo, options_),
  0,
  1,
  2,
  ~0u,
  ~0u,
  3,
  4,
  ~0u,
  5,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateProcedureRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateProcedureRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateProcedureRequest, sp_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateProcedureRequest, timeout_ms_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DropProcedureRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DropProcedureRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DropProcedureRequest, db_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DropProcedureRequest, sp_name_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ShowProcedureRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ShowProcedureRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ShowProcedureRequest, db_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ShowProcedureRequest, sp_name_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ShowProcedureResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ShowProcedureResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ShowProcedureResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ShowProcedureResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ShowProcedureResponse, sp_info_),
  1,
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 15, sizeof(::openmldb::api::ProcedureInfo)},
  { 25, 32, sizeof(::openmldb::api::CreateProcedureRequest)},
  { 34, 41, sizeof(::openmldb::api::DropProcedureRequest)},
  { 43, 50, sizeof(::openmldb::api::ShowProcedureRequest)},
  { 52, 60, sizeof(::openmldb::api::ShowProcedureResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_ProcedureInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_CreateProcedureRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_DropProcedureRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_ShowProcedureRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_ShowProcedureResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "sql_procedure.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023sql_procedure.proto\022\014openmldb.api\032\ntyp"
      "e.proto\032\014common.proto\032\032google/protobuf/t"
      "ype.proto\"\341\002\n\rProcedureInfo\022\017\n\007db_name\030\001"
      " \001(\t\022\017\n\007sp_name\030\002 \001(\t\022\013\n\003sql\030\003 \001(\t\0221\n\014in"
      "put_schema\030\004 \003(\0132\033.openmldb.common.Colum"
      "nDesc\0222\n\routput_schema\030\005 \003(\0132\033.openmldb."
      "common.ColumnDesc\022\022\n\nmain_table\030\006 \001(\t\022\017\n"
      "\007main_db\030\007 \001(\t\0220\n\006tables\030\010 \003(\0132 .openmld"
      "b.common.DbTableNamePair\0229\n\004type\030\t \001(\0162\034"
      ".openmldb.type.ProcedureType:\rkReqProced"
      "ure\022(\n\007options\030\n \003(\0132\027.google.protobuf.O"
      "ption\"Z\n\026CreateProcedureRequest\022,\n\007sp_in"
      "fo\030\001 \001(\0132\033.openmldb.api.ProcedureInfo\022\022\n"
      "\ntimeout_ms\030\002 \001(\004\"8\n\024DropProcedureReques"
      "t\022\017\n\007db_name\030\001 \001(\t\022\017\n\007sp_name\030\002 \001(\t\"8\n\024S"
      "howProcedureRequest\022\017\n\007db_name\030\001 \001(\t\022\017\n\007"
      "sp_name\030\002 \001(\t\"`\n\025ShowProcedureResponse\022\014"
      "\n\004code\030\001 \002(\005\022\013\n\003msg\030\002 \001(\t\022,\n\007sp_info\030\003 \003"
      "(\0132\033.openmldb.api.ProcedureInfoB0\n\035com._"
      "4paradigm.openmldb.protoB\014SQLProcedure\200\001"
      "\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 801);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sql_procedure.proto", &protobuf_RegisterTypes);
  ::protobuf_type_2eproto::AddDescriptors();
  ::protobuf_common_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftype_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_sql_5fprocedure_2eproto
namespace openmldb {
namespace api {

// ===================================================================

void ProcedureInfo::InitAsDefaultInstance() {
}
void ProcedureInfo::clear_input_schema() {
  input_schema_.Clear();
}
void ProcedureInfo::clear_output_schema() {
  output_schema_.Clear();
}
void ProcedureInfo::clear_tables() {
  tables_.Clear();
}
void ProcedureInfo::clear_options() {
  options_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcedureInfo::kDbNameFieldNumber;
const int ProcedureInfo::kSpNameFieldNumber;
const int ProcedureInfo::kSqlFieldNumber;
const int ProcedureInfo::kInputSchemaFieldNumber;
const int ProcedureInfo::kOutputSchemaFieldNumber;
const int ProcedureInfo::kMainTableFieldNumber;
const int ProcedureInfo::kMainDbFieldNumber;
const int ProcedureInfo::kTablesFieldNumber;
const int ProcedureInfo::kTypeFieldNumber;
const int ProcedureInfo::kOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcedureInfo::ProcedureInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sql_5fprocedure_2eproto::scc_info_ProcedureInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.ProcedureInfo)
}
ProcedureInfo::ProcedureInfo(const ProcedureInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      input_schema_(from.input_schema_),
      output_schema_(from.output_schema_),
      tables_(from.tables_),
      options_(from.options_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db_name()) {
    db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
  }
  sp_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sp_name()) {
    sp_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sp_name_);
  }
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sql()) {
    sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
  }
  main_table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_main_table()) {
    main_table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.main_table_);
  }
  main_db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_main_db()) {
    main_db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.main_db_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.ProcedureInfo)
}

void ProcedureInfo::SharedCtor() {
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sp_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  main_table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  main_db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

ProcedureInfo::~ProcedureInfo() {
  // @@protoc_insertion_point(destructor:openmldb.api.ProcedureInfo)
  SharedDtor();
}

void ProcedureInfo::SharedDtor() {
  db_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sp_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sql_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  main_table_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  main_db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProcedureInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProcedureInfo::descriptor() {
  ::protobuf_sql_5fprocedure_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sql_5fprocedure_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcedureInfo& ProcedureInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sql_5fprocedure_2eproto::scc_info_ProcedureInfo.base);
  return *internal_default_instance();
}


void ProcedureInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.ProcedureInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_schema_.Clear();
  output_schema_.Clear();
  tables_.Clear();
  options_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      db_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      sp_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      sql_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      main_table_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      main_db_.ClearNonDefaultToEmptyNoArena();
    }
  }
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProcedureInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.ProcedureInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string db_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db_name().data(), static_cast<int>(this->db_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.ProcedureInfo.db_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sp_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sp_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sp_name().data(), static_cast<int>(this->sp_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.ProcedureInfo.sp_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sql = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sql()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sql().data(), static_cast<int>(this->sql().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.ProcedureInfo.sql");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.common.ColumnDesc input_schema = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_input_schema()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.common.ColumnDesc output_schema = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_output_schema()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string main_table = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_main_table()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->main_table().data(), static_cast<int>(this->main_table().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.ProcedureInfo.main_table");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string main_db = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_main_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->main_db().data(), static_cast<int>(this->main_db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.ProcedureInfo.main_db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.common.DbTableNamePair tables = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.type.ProcedureType type = 9 [default = kReqProcedure];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::type::ProcedureType_IsValid(value)) {
            set_type(static_cast< ::openmldb::type::ProcedureType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                9, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Option options = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.ProcedureInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.ProcedureInfo)
  return false;
#undef DO_
}

void ProcedureInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.ProcedureInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string db_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db_name().data(), static_cast<int>(this->db_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ProcedureInfo.db_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->db_name(), output);
  }

  // optional string sp_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sp_name().data(), static_cast<int>(this->sp_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ProcedureInfo.sp_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sp_name(), output);
  }

  // optional string sql = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), static_cast<int>(this->sql().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ProcedureInfo.sql");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sql(), output);
  }

  // repeated .openmldb.common.ColumnDesc input_schema = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_schema_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->input_schema(static_cast<int>(i)),
      output);
  }

  // repeated .openmldb.common.ColumnDesc output_schema = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_schema_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->output_schema(static_cast<int>(i)),
      output);
  }

  // optional string main_table = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->main_table().data(), static_cast<int>(this->main_table().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ProcedureInfo.main_table");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->main_table(), output);
  }

  // optional string main_db = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->main_db().data(), static_cast<int>(this->main_db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ProcedureInfo.main_db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->main_db(), output);
  }

  // repeated .openmldb.common.DbTableNamePair tables = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tables_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->tables(static_cast<int>(i)),
      output);
  }

  // optional .openmldb.type.ProcedureType type = 9 [default = kReqProcedure];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->type(), output);
  }

  // repeated .google.protobuf.Option options = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->options_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->options(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.ProcedureInfo)
}

::google::protobuf::uint8* ProcedureInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.ProcedureInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string db_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db_name().data(), static_cast<int>(this->db_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ProcedureInfo.db_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->db_name(), target);
  }

  // optional string sp_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sp_name().data(), static_cast<int>(this->sp_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ProcedureInfo.sp_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sp_name(), target);
  }

  // optional string sql = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), static_cast<int>(this->sql().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ProcedureInfo.sql");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sql(), target);
  }

  // repeated .openmldb.common.ColumnDesc input_schema = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_schema_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->input_schema(static_cast<int>(i)), deterministic, target);
  }

  // repeated .openmldb.common.ColumnDesc output_schema = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_schema_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->output_schema(static_cast<int>(i)), deterministic, target);
  }

  // optional string main_table = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->main_table().data(), static_cast<int>(this->main_table().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ProcedureInfo.main_table");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->main_table(), target);
  }

  // optional string main_db = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->main_db().data(), static_cast<int>(this->main_db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ProcedureInfo.main_db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->main_db(), target);
  }

  // repeated .openmldb.common.DbTableNamePair tables = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tables_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->tables(static_cast<int>(i)), deterministic, target);
  }

  // optional .openmldb.type.ProcedureType type = 9 [default = kReqProcedure];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->type(), target);
  }

  // repeated .google.protobuf.Option options = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->options_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->options(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.ProcedureInfo)
  return target;
}

size_t ProcedureInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.ProcedureInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.common.ColumnDesc input_schema = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->input_schema_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->input_schema(static_cast<int>(i)));
    }
  }

  // repeated .openmldb.common.ColumnDesc output_schema = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->output_schema_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->output_schema(static_cast<int>(i)));
    }
  }

  // repeated .openmldb.common.DbTableNamePair tables = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->tables_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tables(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Option options = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->options_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->options(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional string db_name = 1;
    if (has_db_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db_name());
    }

    // optional string sp_name = 2;
    if (has_sp_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sp_name());
    }

    // optional string sql = 3;
    if (has_sql()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sql());
    }

    // optional string main_table = 6;
    if (has_main_table()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->main_table());
    }

    // optional string main_db = 7;
    if (has_main_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->main_db());
    }

    // optional .openmldb.type.ProcedureType type = 9 [default = kReqProcedure];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcedureInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.ProcedureInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcedureInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcedureInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.ProcedureInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.ProcedureInfo)
    MergeFrom(*source);
  }
}

void ProcedureInfo::MergeFrom(const ProcedureInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.ProcedureInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_schema_.MergeFrom(from.input_schema_);
  output_schema_.MergeFrom(from.output_schema_);
  tables_.MergeFrom(from.tables_);
  options_.MergeFrom(from.options_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_db_name();
      db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sp_name();
      sp_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sp_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_sql();
      sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_main_table();
      main_table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.main_table_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_main_db();
      main_db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.main_db_);
    }
    if (cached_has_bits & 0x00000020u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProcedureInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.ProcedureInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcedureInfo::CopyFrom(const ProcedureInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.ProcedureInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcedureInfo::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->input_schema())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->output_schema())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->tables())) return false;
  return true;
}

void ProcedureInfo::Swap(ProcedureInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcedureInfo::InternalSwap(ProcedureInfo* other) {
  using std::swap;
  CastToBase(&input_schema_)->InternalSwap(CastToBase(&other->input_schema_));
  CastToBase(&output_schema_)->InternalSwap(CastToBase(&other->output_schema_));
  CastToBase(&tables_)->InternalSwap(CastToBase(&other->tables_));
  CastToBase(&options_)->InternalSwap(CastToBase(&other->options_));
  db_name_.Swap(&other->db_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sp_name_.Swap(&other->sp_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sql_.Swap(&other->sql_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  main_table_.Swap(&other->main_table_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  main_db_.Swap(&other->main_db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProcedureInfo::GetMetadata() const {
  protobuf_sql_5fprocedure_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sql_5fprocedure_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateProcedureRequest::InitAsDefaultInstance() {
  ::openmldb::api::_CreateProcedureRequest_default_instance_._instance.get_mutable()->sp_info_ = const_cast< ::openmldb::api::ProcedureInfo*>(
      ::openmldb::api::ProcedureInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateProcedureRequest::kSpInfoFieldNumber;
const int CreateProcedureRequest::kTimeoutMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateProcedureRequest::CreateProcedureRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sql_5fprocedure_2eproto::scc_info_CreateProcedureRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.CreateProcedureRequest)
}
CreateProcedureRequest::CreateProcedureRequest(const CreateProcedureRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sp_info()) {
    sp_info_ = new ::openmldb::api::ProcedureInfo(*from.sp_info_);
  } else {
    sp_info_ = NULL;
  }
  timeout_ms_ = from.timeout_ms_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.CreateProcedureRequest)
}

void CreateProcedureRequest::SharedCtor() {
  ::memset(&sp_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeout_ms_) -
      reinterpret_cast<char*>(&sp_info_)) + sizeof(timeout_ms_));
}

CreateProcedureRequest::~CreateProcedureRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.CreateProcedureRequest)
  SharedDtor();
}

void CreateProcedureRequest::SharedDtor() {
  if (this != internal_default_instance()) delete sp_info_;
}

void CreateProcedureRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateProcedureRequest::descriptor() {
  ::protobuf_sql_5fprocedure_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sql_5fprocedure_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateProcedureRequest& CreateProcedureRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sql_5fprocedure_2eproto::scc_info_CreateProcedureRequest.base);
  return *internal_default_instance();
}


void CreateProcedureRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.CreateProcedureRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(sp_info_ != NULL);
    sp_info_->Clear();
  }
  timeout_ms_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateProcedureRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.CreateProcedureRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .openmldb.api.ProcedureInfo sp_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sp_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 timeout_ms = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_timeout_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timeout_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.CreateProcedureRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.CreateProcedureRequest)
  return false;
#undef DO_
}

void CreateProcedureRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.CreateProcedureRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.api.ProcedureInfo sp_info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_sp_info(), output);
  }

  // optional uint64 timeout_ms = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->timeout_ms(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.CreateProcedureRequest)
}

::google::protobuf::uint8* CreateProcedureRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.CreateProcedureRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.api.ProcedureInfo sp_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_sp_info(), deterministic, target);
  }

  // optional uint64 timeout_ms = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->timeout_ms(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.CreateProcedureRequest)
  return target;
}

size_t CreateProcedureRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.CreateProcedureRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .openmldb.api.ProcedureInfo sp_info = 1;
    if (has_sp_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *sp_info_);
    }

    // optional uint64 timeout_ms = 2;
    if (has_timeout_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timeout_ms());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateProcedureRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.CreateProcedureRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateProcedureRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateProcedureRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.CreateProcedureRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.CreateProcedureRequest)
    MergeFrom(*source);
  }
}

void CreateProcedureRequest::MergeFrom(const CreateProcedureRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.CreateProcedureRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_sp_info()->::openmldb::api::ProcedureInfo::MergeFrom(from.sp_info());
    }
    if (cached_has_bits & 0x00000002u) {
      timeout_ms_ = from.timeout_ms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CreateProcedureRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.CreateProcedureRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateProcedureRequest::CopyFrom(const CreateProcedureRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.CreateProcedureRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateProcedureRequest::IsInitialized() const {
  if (has_sp_info()) {
    if (!this->sp_info_->IsInitialized()) return false;
  }
  return true;
}

void CreateProcedureRequest::Swap(CreateProcedureRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateProcedureRequest::InternalSwap(CreateProcedureRequest* other) {
  using std::swap;
  swap(sp_info_, other->sp_info_);
  swap(timeout_ms_, other->timeout_ms_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateProcedureRequest::GetMetadata() const {
  protobuf_sql_5fprocedure_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sql_5fprocedure_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DropProcedureRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DropProcedureRequest::kDbNameFieldNumber;
const int DropProcedureRequest::kSpNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DropProcedureRequest::DropProcedureRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sql_5fprocedure_2eproto::scc_info_DropProcedureRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.DropProcedureRequest)
}
DropProcedureRequest::DropProcedureRequest(const DropProcedureRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db_name()) {
    db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
  }
  sp_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sp_name()) {
    sp_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sp_name_);
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.api.DropProcedureRequest)
}

void DropProcedureRequest::SharedCtor() {
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sp_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DropProcedureRequest::~DropProcedureRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.DropProcedureRequest)
  SharedDtor();
}

void DropProcedureRequest::SharedDtor() {
  db_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sp_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DropProcedureRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DropProcedureRequest::descriptor() {
  ::protobuf_sql_5fprocedure_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sql_5fprocedure_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DropProcedureRequest& DropProcedureRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sql_5fprocedure_2eproto::scc_info_DropProcedureRequest.base);
  return *internal_default_instance();
}


void DropProcedureRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.DropProcedureRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      db_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      sp_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DropProcedureRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.DropProcedureRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string db_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db_name().data(), static_cast<int>(this->db_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.DropProcedureRequest.db_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sp_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sp_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sp_name().data(), static_cast<int>(this->sp_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.DropProcedureRequest.sp_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.DropProcedureRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.DropProcedureRequest)
  return false;
#undef DO_
}

void DropProcedureRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.DropProcedureRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string db_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db_name().data(), static_cast<int>(this->db_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.DropProcedureRequest.db_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->db_name(), output);
  }

  // optional string sp_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sp_name().data(), static_cast<int>(this->sp_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.DropProcedureRequest.sp_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sp_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.DropProcedureRequest)
}

::google::protobuf::uint8* DropProcedureRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.DropProcedureRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string db_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db_name().data(), static_cast<int>(this->db_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.DropProcedureRequest.db_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->db_name(), target);
  }

  // optional string sp_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sp_name().data(), static_cast<int>(this->sp_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.DropProcedureRequest.sp_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sp_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.DropProcedureRequest)
  return target;
}

size_t DropProcedureRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.DropProcedureRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string db_name = 1;
    if (has_db_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db_name());
    }

    // optional string sp_name = 2;
    if (has_sp_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sp_name());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DropProcedureRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.DropProcedureRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DropProcedureRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DropProcedureRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.DropProcedureRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.DropProcedureRequest)
    MergeFrom(*source);
  }
}

void DropProcedureRequest::MergeFrom(const DropProcedureRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.DropProcedureRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_db_name();
      db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sp_name();
      sp_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sp_name_);
    }
  }
}

void DropProcedureRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.DropProcedureRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropProcedureRequest::CopyFrom(const DropProcedureRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.DropProcedureRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropProcedureRequest::IsInitialized() const {
  return true;
}

void DropProcedureRequest::Swap(DropProcedureRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DropProcedureRequest::InternalSwap(DropProcedureRequest* other) {
  using std::swap;
  db_name_.Swap(&other->db_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sp_name_.Swap(&other->sp_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DropProcedureRequest::GetMetadata() const {
  protobuf_sql_5fprocedure_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sql_5fprocedure_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShowProcedureRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowProcedureRequest::kDbNameFieldNumber;
const int ShowProcedureRequest::kSpNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowProcedureRequest::ShowProcedureRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sql_5fprocedure_2eproto::scc_info_ShowProcedureRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.ShowProcedureRequest)
}
ShowProcedureRequest::ShowProcedureRequest(const ShowProcedureRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db_name()) {
    db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
  }
  sp_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sp_name()) {
    sp_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sp_name_);
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.api.ShowProcedureRequest)
}

void ShowProcedureRequest::SharedCtor() {
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sp_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ShowProcedureRequest::~ShowProcedureRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.ShowProcedureRequest)
  SharedDtor();
}

void ShowProcedureRequest::SharedDtor() {
  db_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sp_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShowProcedureRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShowProcedureRequest::descriptor() {
  ::protobuf_sql_5fprocedure_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sql_5fprocedure_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShowProcedureRequest& ShowProcedureRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sql_5fprocedure_2eproto::scc_info_ShowProcedureRequest.base);
  return *internal_default_instance();
}


void ShowProcedureRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.ShowProcedureRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      db_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      sp_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowProcedureRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.ShowProcedureRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string db_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db_name().data(), static_cast<int>(this->db_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.ShowProcedureRequest.db_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sp_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sp_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sp_name().data(), static_cast<int>(this->sp_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.ShowProcedureRequest.sp_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.ShowProcedureRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.ShowProcedureRequest)
  return false;
#undef DO_
}

void ShowProcedureRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.ShowProcedureRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string db_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db_name().data(), static_cast<int>(this->db_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ShowProcedureRequest.db_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->db_name(), output);
  }

  // optional string sp_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sp_name().data(), static_cast<int>(this->sp_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ShowProcedureRequest.sp_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sp_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.ShowProcedureRequest)
}

::google::protobuf::uint8* ShowProcedureRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.ShowProcedureRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string db_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db_name().data(), static_cast<int>(this->db_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ShowProcedureRequest.db_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->db_name(), target);
  }

  // optional string sp_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sp_name().data(), static_cast<int>(this->sp_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ShowProcedureRequest.sp_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sp_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.ShowProcedureRequest)
  return target;
}

size_t ShowProcedureRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.ShowProcedureRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string db_name = 1;
    if (has_db_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db_name());
    }

    // optional string sp_name = 2;
    if (has_sp_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sp_name());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowProcedureRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.ShowProcedureRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowProcedureRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShowProcedureRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.ShowProcedureRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.ShowProcedureRequest)
    MergeFrom(*source);
  }
}

void ShowProcedureRequest::MergeFrom(const ShowProcedureRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.ShowProcedureRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_db_name();
      db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sp_name();
      sp_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sp_name_);
    }
  }
}

void ShowProcedureRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.ShowProcedureRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowProcedureRequest::CopyFrom(const ShowProcedureRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.ShowProcedureRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowProcedureRequest::IsInitialized() const {
  return true;
}

void ShowProcedureRequest::Swap(ShowProcedureRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowProcedureRequest::InternalSwap(ShowProcedureRequest* other) {
  using std::swap;
  db_name_.Swap(&other->db_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sp_name_.Swap(&other->sp_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShowProcedureRequest::GetMetadata() const {
  protobuf_sql_5fprocedure_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sql_5fprocedure_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShowProcedureResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowProcedureResponse::kCodeFieldNumber;
const int ShowProcedureResponse::kMsgFieldNumber;
const int ShowProcedureResponse::kSpInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowProcedureResponse::ShowProcedureResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sql_5fprocedure_2eproto::scc_info_ShowProcedureResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.ShowProcedureResponse)
}
ShowProcedureResponse::ShowProcedureResponse(const ShowProcedureResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      sp_info_(from.sp_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.ShowProcedureResponse)
}

void ShowProcedureResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

ShowProcedureResponse::~ShowProcedureResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.ShowProcedureResponse)
  SharedDtor();
}

void ShowProcedureResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShowProcedureResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShowProcedureResponse::descriptor() {
  ::protobuf_sql_5fprocedure_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sql_5fprocedure_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShowProcedureResponse& ShowProcedureResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sql_5fprocedure_2eproto::scc_info_ShowProcedureResponse.base);
  return *internal_default_instance();
}


void ShowProcedureResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.ShowProcedureResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sp_info_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowProcedureResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.ShowProcedureResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.ShowProcedureResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.api.ProcedureInfo sp_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sp_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.ShowProcedureResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.ShowProcedureResponse)
  return false;
#undef DO_
}

void ShowProcedureResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.ShowProcedureResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ShowProcedureResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // repeated .openmldb.api.ProcedureInfo sp_info = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sp_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->sp_info(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.ShowProcedureResponse)
}

::google::protobuf::uint8* ShowProcedureResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.ShowProcedureResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ShowProcedureResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // repeated .openmldb.api.ProcedureInfo sp_info = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sp_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->sp_info(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.ShowProcedureResponse)
  return target;
}

size_t ShowProcedureResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.ShowProcedureResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }
  // repeated .openmldb.api.ProcedureInfo sp_info = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->sp_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sp_info(static_cast<int>(i)));
    }
  }

  // optional string msg = 2;
  if (has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowProcedureResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.ShowProcedureResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowProcedureResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShowProcedureResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.ShowProcedureResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.ShowProcedureResponse)
    MergeFrom(*source);
  }
}

void ShowProcedureResponse::MergeFrom(const ShowProcedureResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.ShowProcedureResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sp_info_.MergeFrom(from.sp_info_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShowProcedureResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.ShowProcedureResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowProcedureResponse::CopyFrom(const ShowProcedureResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.ShowProcedureResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowProcedureResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->sp_info())) return false;
  return true;
}

void ShowProcedureResponse::Swap(ShowProcedureResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowProcedureResponse::InternalSwap(ShowProcedureResponse* other) {
  using std::swap;
  CastToBase(&sp_info_)->InternalSwap(CastToBase(&other->sp_info_));
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShowProcedureResponse::GetMetadata() const {
  protobuf_sql_5fprocedure_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sql_5fprocedure_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace openmldb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::ProcedureInfo* Arena::CreateMaybeMessage< ::openmldb::api::ProcedureInfo >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::ProcedureInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::CreateProcedureRequest* Arena::CreateMaybeMessage< ::openmldb::api::CreateProcedureRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::CreateProcedureRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::DropProcedureRequest* Arena::CreateMaybeMessage< ::openmldb::api::DropProcedureRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::DropProcedureRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::ShowProcedureRequest* Arena::CreateMaybeMessage< ::openmldb::api::ShowProcedureRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::ShowProcedureRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::ShowProcedureResponse* Arena::CreateMaybeMessage< ::openmldb::api::ShowProcedureResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::ShowProcedureResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
