// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fe_tablet.proto

#include "fe_tablet.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_fe_5fcommon_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_fe_5fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Status;
}  // namespace protobuf_fe_5fcommon_2eproto
namespace protobuf_fe_5ftype_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_fe_5ftype_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ColumnDef;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_fe_5ftype_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TableDef;
}  // namespace protobuf_fe_5ftype_2eproto
namespace hybridse {
namespace tablet {
class QueryRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryRequest>
      _instance;
} _QueryRequest_default_instance_;
class QueryResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryResponse>
      _instance;
} _QueryResponse_default_instance_;
class CreateTableRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateTableRequest>
      _instance;
} _CreateTableRequest_default_instance_;
class CreateTableResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateTableResponse>
      _instance;
} _CreateTableResponse_default_instance_;
class InsertRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InsertRequest>
      _instance;
} _InsertRequest_default_instance_;
class ExplainRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExplainRequest>
      _instance;
} _ExplainRequest_default_instance_;
class ExplainResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExplainResponse>
      _instance;
} _ExplainResponse_default_instance_;
class InsertResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InsertResponse>
      _instance;
} _InsertResponse_default_instance_;
class GetTablesSchemaRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTablesSchemaRequest>
      _instance;
} _GetTablesSchemaRequest_default_instance_;
class GetTableSchemaReponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTableSchemaReponse>
      _instance;
} _GetTableSchemaReponse_default_instance_;
}  // namespace tablet
}  // namespace hybridse
namespace protobuf_fe_5ftablet_2eproto {
static void InitDefaultsQueryRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hybridse::tablet::_QueryRequest_default_instance_;
    new (ptr) ::hybridse::tablet::QueryRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hybridse::tablet::QueryRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_QueryRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsQueryRequest}, {
      &protobuf_fe_5ftype_2eproto::scc_info_ColumnDef.base,}};

static void InitDefaultsQueryResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hybridse::tablet::_QueryResponse_default_instance_;
    new (ptr) ::hybridse::tablet::QueryResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hybridse::tablet::QueryResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_QueryResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsQueryResponse}, {
      &protobuf_fe_5fcommon_2eproto::scc_info_Status.base,}};

static void InitDefaultsCreateTableRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hybridse::tablet::_CreateTableRequest_default_instance_;
    new (ptr) ::hybridse::tablet::CreateTableRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hybridse::tablet::CreateTableRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateTableRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateTableRequest}, {
      &protobuf_fe_5ftype_2eproto::scc_info_TableDef.base,}};

static void InitDefaultsCreateTableResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hybridse::tablet::_CreateTableResponse_default_instance_;
    new (ptr) ::hybridse::tablet::CreateTableResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hybridse::tablet::CreateTableResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateTableResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateTableResponse}, {
      &protobuf_fe_5fcommon_2eproto::scc_info_Status.base,}};

static void InitDefaultsInsertRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hybridse::tablet::_InsertRequest_default_instance_;
    new (ptr) ::hybridse::tablet::InsertRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hybridse::tablet::InsertRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InsertRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInsertRequest}, {}};

static void InitDefaultsExplainRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hybridse::tablet::_ExplainRequest_default_instance_;
    new (ptr) ::hybridse::tablet::ExplainRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hybridse::tablet::ExplainRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ExplainRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsExplainRequest}, {
      &protobuf_fe_5ftype_2eproto::scc_info_ColumnDef.base,}};

static void InitDefaultsExplainResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hybridse::tablet::_ExplainResponse_default_instance_;
    new (ptr) ::hybridse::tablet::ExplainResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hybridse::tablet::ExplainResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ExplainResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsExplainResponse}, {
      &protobuf_fe_5fcommon_2eproto::scc_info_Status.base,}};

static void InitDefaultsInsertResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hybridse::tablet::_InsertResponse_default_instance_;
    new (ptr) ::hybridse::tablet::InsertResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hybridse::tablet::InsertResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InsertResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInsertResponse}, {
      &protobuf_fe_5fcommon_2eproto::scc_info_Status.base,}};

static void InitDefaultsGetTablesSchemaRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hybridse::tablet::_GetTablesSchemaRequest_default_instance_;
    new (ptr) ::hybridse::tablet::GetTablesSchemaRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hybridse::tablet::GetTablesSchemaRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetTablesSchemaRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetTablesSchemaRequest}, {}};

static void InitDefaultsGetTableSchemaReponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hybridse::tablet::_GetTableSchemaReponse_default_instance_;
    new (ptr) ::hybridse::tablet::GetTableSchemaReponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hybridse::tablet::GetTableSchemaReponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GetTableSchemaReponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGetTableSchemaReponse}, {
      &protobuf_fe_5ftype_2eproto::scc_info_TableDef.base,
      &protobuf_fe_5fcommon_2eproto::scc_info_Status.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_QueryRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateTableRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateTableResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InsertRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExplainRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExplainResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InsertResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetTablesSchemaRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetTableSchemaReponse.base);
}

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::QueryRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::QueryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::QueryRequest, sql_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::QueryRequest, db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::QueryRequest, is_batch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::QueryRequest, row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::QueryRequest, is_debug_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::QueryRequest, task_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::QueryRequest, parameter_schema_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::QueryRequest, parameter_row_),
  0,
  1,
  5,
  2,
  6,
  4,
  ~0u,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::QueryResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::QueryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::QueryResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::QueryResponse, schema_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::QueryResponse, byte_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::QueryResponse, count_),
  1,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::CreateTableRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::CreateTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::CreateTableRequest, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::CreateTableRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::CreateTableRequest, pids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::CreateTableRequest, db_),
  1,
  2,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::CreateTableResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::CreateTableResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::CreateTableResponse, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::InsertRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::InsertRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::InsertRequest, db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::InsertRequest, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::InsertRequest, row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::InsertRequest, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::InsertRequest, ts_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::ExplainRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::ExplainRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::ExplainRequest, db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::ExplainRequest, sql_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::ExplainRequest, parameter_schema_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::ExplainResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::ExplainResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::ExplainResponse, input_schema_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::ExplainResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::ExplainResponse, logical_plan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::ExplainResponse, physical_plan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::ExplainResponse, ir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::ExplainResponse, output_schema_),
  0,
  5,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::InsertResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::InsertResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::InsertResponse, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::GetTablesSchemaRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::GetTablesSchemaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::GetTablesSchemaRequest, db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::GetTablesSchemaRequest, name_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::GetTableSchemaReponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::GetTableSchemaReponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::GetTableSchemaReponse, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::GetTableSchemaReponse, schema_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hybridse::tablet::GetTableSchemaReponse, status_),
  0,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, sizeof(::hybridse::tablet::QueryRequest)},
  { 21, 30, sizeof(::hybridse::tablet::QueryResponse)},
  { 34, 43, sizeof(::hybridse::tablet::CreateTableRequest)},
  { 47, 53, sizeof(::hybridse::tablet::CreateTableResponse)},
  { 54, 64, sizeof(::hybridse::tablet::InsertRequest)},
  { 69, 77, sizeof(::hybridse::tablet::ExplainRequest)},
  { 80, 91, sizeof(::hybridse::tablet::ExplainResponse)},
  { 97, 103, sizeof(::hybridse::tablet::InsertResponse)},
  { 104, 111, sizeof(::hybridse::tablet::GetTablesSchemaRequest)},
  { 113, 121, sizeof(::hybridse::tablet::GetTableSchemaReponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::hybridse::tablet::_QueryRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hybridse::tablet::_QueryResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hybridse::tablet::_CreateTableRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hybridse::tablet::_CreateTableResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hybridse::tablet::_InsertRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hybridse::tablet::_ExplainRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hybridse::tablet::_ExplainResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hybridse::tablet::_InsertResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hybridse::tablet::_GetTablesSchemaRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hybridse::tablet::_GetTableSchemaReponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "fe_tablet.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017fe_tablet.proto\022\017hybridse.tablet\032\rfe_t"
      "ype.proto\032\017fe_common.proto\"\303\001\n\014QueryRequ"
      "est\022\013\n\003sql\030\001 \001(\t\022\n\n\002db\030\002 \001(\t\022\026\n\010is_batch"
      "\030\003 \001(\010:\004true\022\013\n\003row\030\004 \001(\014\022\026\n\010is_debug\030\005 "
      "\001(\010:\004true\022\022\n\007task_id\030\006 \001(\r:\0010\0222\n\020paramet"
      "er_schema\030\007 \003(\0132\030.hybridse.type.ColumnDe"
      "f\022\025\n\rparameter_row\030\010 \001(\014\"j\n\rQueryRespons"
      "e\022\'\n\006status\030\001 \001(\0132\027.hybridse.common.Stat"
      "us\022\016\n\006schema\030\002 \001(\014\022\021\n\tbyte_size\030\003 \001(\r\022\r\n"
      "\005count\030\004 \001(\r\"c\n\022CreateTableRequest\022&\n\005ta"
      "ble\030\001 \001(\0132\027.hybridse.type.TableDef\022\013\n\003ti"
      "d\030\002 \001(\r\022\014\n\004pids\030\003 \003(\r\022\n\n\002db\030\004 \001(\t\">\n\023Cre"
      "ateTableResponse\022\'\n\006status\030\001 \001(\0132\027.hybri"
      "dse.common.Status\"P\n\rInsertRequest\022\n\n\002db"
      "\030\001 \001(\t\022\r\n\005table\030\002 \001(\t\022\013\n\003row\030\003 \001(\014\022\013\n\003ke"
      "y\030\004 \001(\t\022\n\n\002ts\030\005 \001(\004\"]\n\016ExplainRequest\022\n\n"
      "\002db\030\001 \001(\t\022\013\n\003sql\030\002 \001(\t\0222\n\020parameter_sche"
      "ma\030\003 \003(\0132\030.hybridse.type.ColumnDef\"\240\001\n\017E"
      "xplainResponse\022\024\n\014input_schema\030\001 \001(\014\022\'\n\006"
      "status\030\002 \001(\0132\027.hybridse.common.Status\022\024\n"
      "\014logical_plan\030\003 \001(\t\022\025\n\rphysical_plan\030\004 \001"
      "(\t\022\n\n\002ir\030\005 \001(\t\022\025\n\routput_schema\030\006 \001(\014\"9\n"
      "\016InsertResponse\022\'\n\006status\030\001 \001(\0132\027.hybrid"
      "se.common.Status\"2\n\026GetTablesSchemaReque"
      "st\022\n\n\002db\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\"w\n\025GetTable"
      "SchemaReponse\022\014\n\004name\030\001 \001(\t\022\'\n\006schema\030\002 "
      "\001(\0132\027.hybridse.type.TableDef\022\'\n\006status\030\003"
      " \001(\0132\027.hybridse.common.Status2\254\003\n\014Tablet"
      "Server\022a\n\016GetTableSchema\022\'.hybridse.tabl"
      "et.GetTablesSchemaRequest\032&.hybridse.tab"
      "let.GetTableSchemaReponse\022X\n\013CreateTable"
      "\022#.hybridse.tablet.CreateTableRequest\032$."
      "hybridse.tablet.CreateTableResponse\022F\n\005Q"
      "uery\022\035.hybridse.tablet.QueryRequest\032\036.hy"
      "bridse.tablet.QueryResponse\022I\n\006Insert\022\036."
      "hybridse.tablet.InsertRequest\032\037.hybridse"
      ".tablet.InsertResponse\022L\n\007Explain\022\037.hybr"
      "idse.tablet.ExplainRequest\032 .hybridse.ta"
      "blet.ExplainResponseB+\n\036com._4paradigm.h"
      "ybridse.tabletB\006Tablet\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1585);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "fe_tablet.proto", &protobuf_RegisterTypes);
  ::protobuf_fe_5ftype_2eproto::AddDescriptors();
  ::protobuf_fe_5fcommon_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_fe_5ftablet_2eproto
namespace hybridse {
namespace tablet {

// ===================================================================

void QueryRequest::InitAsDefaultInstance() {
}
void QueryRequest::clear_parameter_schema() {
  parameter_schema_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryRequest::kSqlFieldNumber;
const int QueryRequest::kDbFieldNumber;
const int QueryRequest::kIsBatchFieldNumber;
const int QueryRequest::kRowFieldNumber;
const int QueryRequest::kIsDebugFieldNumber;
const int QueryRequest::kTaskIdFieldNumber;
const int QueryRequest::kParameterSchemaFieldNumber;
const int QueryRequest::kParameterRowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryRequest::QueryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fe_5ftablet_2eproto::scc_info_QueryRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hybridse.tablet.QueryRequest)
}
QueryRequest::QueryRequest(const QueryRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      parameter_schema_(from.parameter_schema_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sql()) {
    sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_row()) {
    row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_);
  }
  parameter_row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_parameter_row()) {
    parameter_row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parameter_row_);
  }
  ::memcpy(&task_id_, &from.task_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_debug_) -
    reinterpret_cast<char*>(&task_id_)) + sizeof(is_debug_));
  // @@protoc_insertion_point(copy_constructor:hybridse.tablet.QueryRequest)
}

void QueryRequest::SharedCtor() {
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parameter_row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_id_ = 0u;
  is_batch_ = true;
  is_debug_ = true;
}

QueryRequest::~QueryRequest() {
  // @@protoc_insertion_point(destructor:hybridse.tablet.QueryRequest)
  SharedDtor();
}

void QueryRequest::SharedDtor() {
  sql_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  row_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parameter_row_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryRequest::descriptor() {
  ::protobuf_fe_5ftablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fe_5ftablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryRequest& QueryRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fe_5ftablet_2eproto::scc_info_QueryRequest.base);
  return *internal_default_instance();
}


void QueryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hybridse.tablet.QueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameter_schema_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      sql_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      row_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      parameter_row_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 112u) {
    task_id_ = 0u;
    is_batch_ = true;
    is_debug_ = true;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool QueryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hybridse.tablet.QueryRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sql = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sql()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sql().data(), static_cast<int>(this->sql().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hybridse.tablet.QueryRequest.sql");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hybridse.tablet.QueryRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_batch = 3 [default = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_is_batch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_batch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes row = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_row()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_debug = 5 [default = true];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_is_debug();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_debug_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 task_id = 6 [default = 0];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_task_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .hybridse.type.ColumnDef parameter_schema = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_parameter_schema()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes parameter_row = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_parameter_row()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hybridse.tablet.QueryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hybridse.tablet.QueryRequest)
  return false;
#undef DO_
}

void QueryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hybridse.tablet.QueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string sql = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), static_cast<int>(this->sql().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.QueryRequest.sql");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sql(), output);
  }

  // optional string db = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.QueryRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->db(), output);
  }

  // optional bool is_batch = 3 [default = true];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_batch(), output);
  }

  // optional bytes row = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->row(), output);
  }

  // optional bool is_debug = 5 [default = true];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_debug(), output);
  }

  // optional uint32 task_id = 6 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->task_id(), output);
  }

  // repeated .hybridse.type.ColumnDef parameter_schema = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parameter_schema_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->parameter_schema(static_cast<int>(i)),
      output);
  }

  // optional bytes parameter_row = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->parameter_row(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hybridse.tablet.QueryRequest)
}

::google::protobuf::uint8* QueryRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hybridse.tablet.QueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string sql = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), static_cast<int>(this->sql().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.QueryRequest.sql");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sql(), target);
  }

  // optional string db = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.QueryRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->db(), target);
  }

  // optional bool is_batch = 3 [default = true];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_batch(), target);
  }

  // optional bytes row = 4;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->row(), target);
  }

  // optional bool is_debug = 5 [default = true];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_debug(), target);
  }

  // optional uint32 task_id = 6 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->task_id(), target);
  }

  // repeated .hybridse.type.ColumnDef parameter_schema = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parameter_schema_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->parameter_schema(static_cast<int>(i)), deterministic, target);
  }

  // optional bytes parameter_row = 8;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->parameter_row(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hybridse.tablet.QueryRequest)
  return target;
}

size_t QueryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hybridse.tablet.QueryRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .hybridse.type.ColumnDef parameter_schema = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->parameter_schema_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->parameter_schema(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 127u) {
    // optional string sql = 1;
    if (has_sql()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sql());
    }

    // optional string db = 2;
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional bytes row = 4;
    if (has_row()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->row());
    }

    // optional bytes parameter_row = 8;
    if (has_parameter_row()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->parameter_row());
    }

    // optional uint32 task_id = 6 [default = 0];
    if (has_task_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->task_id());
    }

    // optional bool is_batch = 3 [default = true];
    if (has_is_batch()) {
      total_size += 1 + 1;
    }

    // optional bool is_debug = 5 [default = true];
    if (has_is_debug()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hybridse.tablet.QueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hybridse.tablet.QueryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hybridse.tablet.QueryRequest)
    MergeFrom(*source);
  }
}

void QueryRequest::MergeFrom(const QueryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hybridse.tablet.QueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parameter_schema_.MergeFrom(from.parameter_schema_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sql();
      sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_row();
      row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_parameter_row();
      parameter_row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parameter_row_);
    }
    if (cached_has_bits & 0x00000010u) {
      task_id_ = from.task_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_batch_ = from.is_batch_;
    }
    if (cached_has_bits & 0x00000040u) {
      is_debug_ = from.is_debug_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void QueryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hybridse.tablet.QueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryRequest::CopyFrom(const QueryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hybridse.tablet.QueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryRequest::IsInitialized() const {
  return true;
}

void QueryRequest::Swap(QueryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryRequest::InternalSwap(QueryRequest* other) {
  using std::swap;
  CastToBase(&parameter_schema_)->InternalSwap(CastToBase(&other->parameter_schema_));
  sql_.Swap(&other->sql_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  row_.Swap(&other->row_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parameter_row_.Swap(&other->parameter_row_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(task_id_, other->task_id_);
  swap(is_batch_, other->is_batch_);
  swap(is_debug_, other->is_debug_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryRequest::GetMetadata() const {
  protobuf_fe_5ftablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fe_5ftablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryResponse::InitAsDefaultInstance() {
  ::hybridse::tablet::_QueryResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::hybridse::common::Status*>(
      ::hybridse::common::Status::internal_default_instance());
}
void QueryResponse::clear_status() {
  if (status_ != NULL) status_->Clear();
  clear_has_status();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryResponse::kStatusFieldNumber;
const int QueryResponse::kSchemaFieldNumber;
const int QueryResponse::kByteSizeFieldNumber;
const int QueryResponse::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryResponse::QueryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fe_5ftablet_2eproto::scc_info_QueryResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hybridse.tablet.QueryResponse)
}
QueryResponse::QueryResponse(const QueryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  schema_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_schema()) {
    schema_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.schema_);
  }
  if (from.has_status()) {
    status_ = new ::hybridse::common::Status(*from.status_);
  } else {
    status_ = NULL;
  }
  ::memcpy(&byte_size_, &from.byte_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&byte_size_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:hybridse.tablet.QueryResponse)
}

void QueryResponse::SharedCtor() {
  schema_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&status_)) + sizeof(count_));
}

QueryResponse::~QueryResponse() {
  // @@protoc_insertion_point(destructor:hybridse.tablet.QueryResponse)
  SharedDtor();
}

void QueryResponse::SharedDtor() {
  schema_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
}

void QueryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryResponse::descriptor() {
  ::protobuf_fe_5ftablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fe_5ftablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryResponse& QueryResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fe_5ftablet_2eproto::scc_info_QueryResponse.base);
  return *internal_default_instance();
}


void QueryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hybridse.tablet.QueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      schema_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(status_ != NULL);
      status_->Clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&byte_size_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&count_) -
        reinterpret_cast<char*>(&byte_size_)) + sizeof(count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool QueryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hybridse.tablet.QueryResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hybridse.common.Status status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes schema = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_schema()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 byte_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_byte_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &byte_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hybridse.tablet.QueryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hybridse.tablet.QueryResponse)
  return false;
#undef DO_
}

void QueryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hybridse.tablet.QueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hybridse.common.Status status = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_status(), output);
  }

  // optional bytes schema = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->schema(), output);
  }

  // optional uint32 byte_size = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->byte_size(), output);
  }

  // optional uint32 count = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hybridse.tablet.QueryResponse)
}

::google::protobuf::uint8* QueryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hybridse.tablet.QueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hybridse.common.Status status = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_status(), deterministic, target);
  }

  // optional bytes schema = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->schema(), target);
  }

  // optional uint32 byte_size = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->byte_size(), target);
  }

  // optional uint32 count = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hybridse.tablet.QueryResponse)
  return target;
}

size_t QueryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hybridse.tablet.QueryResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes schema = 2;
    if (has_schema()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->schema());
    }

    // optional .hybridse.common.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *status_);
    }

    // optional uint32 byte_size = 3;
    if (has_byte_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->byte_size());
    }

    // optional uint32 count = 4;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hybridse.tablet.QueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hybridse.tablet.QueryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hybridse.tablet.QueryResponse)
    MergeFrom(*source);
  }
}

void QueryResponse::MergeFrom(const QueryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hybridse.tablet.QueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_schema();
      schema_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.schema_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_status()->::hybridse::common::Status::MergeFrom(from.status());
    }
    if (cached_has_bits & 0x00000004u) {
      byte_size_ = from.byte_size_;
    }
    if (cached_has_bits & 0x00000008u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void QueryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hybridse.tablet.QueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryResponse::CopyFrom(const QueryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hybridse.tablet.QueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryResponse::IsInitialized() const {
  return true;
}

void QueryResponse::Swap(QueryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryResponse::InternalSwap(QueryResponse* other) {
  using std::swap;
  schema_.Swap(&other->schema_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  swap(byte_size_, other->byte_size_);
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryResponse::GetMetadata() const {
  protobuf_fe_5ftablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fe_5ftablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateTableRequest::InitAsDefaultInstance() {
  ::hybridse::tablet::_CreateTableRequest_default_instance_._instance.get_mutable()->table_ = const_cast< ::hybridse::type::TableDef*>(
      ::hybridse::type::TableDef::internal_default_instance());
}
void CreateTableRequest::clear_table() {
  if (table_ != NULL) table_->Clear();
  clear_has_table();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateTableRequest::kTableFieldNumber;
const int CreateTableRequest::kTidFieldNumber;
const int CreateTableRequest::kPidsFieldNumber;
const int CreateTableRequest::kDbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateTableRequest::CreateTableRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fe_5ftablet_2eproto::scc_info_CreateTableRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hybridse.tablet.CreateTableRequest)
}
CreateTableRequest::CreateTableRequest(const CreateTableRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      pids_(from.pids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  if (from.has_table()) {
    table_ = new ::hybridse::type::TableDef(*from.table_);
  } else {
    table_ = NULL;
  }
  tid_ = from.tid_;
  // @@protoc_insertion_point(copy_constructor:hybridse.tablet.CreateTableRequest)
}

void CreateTableRequest::SharedCtor() {
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&table_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tid_) -
      reinterpret_cast<char*>(&table_)) + sizeof(tid_));
}

CreateTableRequest::~CreateTableRequest() {
  // @@protoc_insertion_point(destructor:hybridse.tablet.CreateTableRequest)
  SharedDtor();
}

void CreateTableRequest::SharedDtor() {
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete table_;
}

void CreateTableRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateTableRequest::descriptor() {
  ::protobuf_fe_5ftablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fe_5ftablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateTableRequest& CreateTableRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fe_5ftablet_2eproto::scc_info_CreateTableRequest.base);
  return *internal_default_instance();
}


void CreateTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hybridse.tablet.CreateTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(table_ != NULL);
      table_->Clear();
    }
  }
  tid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateTableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hybridse.tablet.CreateTableRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hybridse.type.TableDef table = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 tid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 pids = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24u, input, this->mutable_pids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_pids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hybridse.tablet.CreateTableRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hybridse.tablet.CreateTableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hybridse.tablet.CreateTableRequest)
  return false;
#undef DO_
}

void CreateTableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hybridse.tablet.CreateTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hybridse.type.TableDef table = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_table(), output);
  }

  // optional uint32 tid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->tid(), output);
  }

  // repeated uint32 pids = 3;
  for (int i = 0, n = this->pids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->pids(i), output);
  }

  // optional string db = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.CreateTableRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->db(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hybridse.tablet.CreateTableRequest)
}

::google::protobuf::uint8* CreateTableRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hybridse.tablet.CreateTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hybridse.type.TableDef table = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_table(), deterministic, target);
  }

  // optional uint32 tid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->tid(), target);
  }

  // repeated uint32 pids = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(3, this->pids_, target);

  // optional string db = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.CreateTableRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->db(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hybridse.tablet.CreateTableRequest)
  return target;
}

size_t CreateTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hybridse.tablet.CreateTableRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 pids = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->pids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->pids_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string db = 4;
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional .hybridse.type.TableDef table = 1;
    if (has_table()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *table_);
    }

    // optional uint32 tid = 2;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateTableRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hybridse.tablet.CreateTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTableRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateTableRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hybridse.tablet.CreateTableRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hybridse.tablet.CreateTableRequest)
    MergeFrom(*source);
  }
}

void CreateTableRequest::MergeFrom(const CreateTableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hybridse.tablet.CreateTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pids_.MergeFrom(from.pids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_table()->::hybridse::type::TableDef::MergeFrom(from.table());
    }
    if (cached_has_bits & 0x00000004u) {
      tid_ = from.tid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CreateTableRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hybridse.tablet.CreateTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTableRequest::CopyFrom(const CreateTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hybridse.tablet.CreateTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTableRequest::IsInitialized() const {
  return true;
}

void CreateTableRequest::Swap(CreateTableRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateTableRequest::InternalSwap(CreateTableRequest* other) {
  using std::swap;
  pids_.InternalSwap(&other->pids_);
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(table_, other->table_);
  swap(tid_, other->tid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateTableRequest::GetMetadata() const {
  protobuf_fe_5ftablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fe_5ftablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateTableResponse::InitAsDefaultInstance() {
  ::hybridse::tablet::_CreateTableResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::hybridse::common::Status*>(
      ::hybridse::common::Status::internal_default_instance());
}
void CreateTableResponse::clear_status() {
  if (status_ != NULL) status_->Clear();
  clear_has_status();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateTableResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateTableResponse::CreateTableResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fe_5ftablet_2eproto::scc_info_CreateTableResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hybridse.tablet.CreateTableResponse)
}
CreateTableResponse::CreateTableResponse(const CreateTableResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_status()) {
    status_ = new ::hybridse::common::Status(*from.status_);
  } else {
    status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:hybridse.tablet.CreateTableResponse)
}

void CreateTableResponse::SharedCtor() {
  status_ = NULL;
}

CreateTableResponse::~CreateTableResponse() {
  // @@protoc_insertion_point(destructor:hybridse.tablet.CreateTableResponse)
  SharedDtor();
}

void CreateTableResponse::SharedDtor() {
  if (this != internal_default_instance()) delete status_;
}

void CreateTableResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateTableResponse::descriptor() {
  ::protobuf_fe_5ftablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fe_5ftablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateTableResponse& CreateTableResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fe_5ftablet_2eproto::scc_info_CreateTableResponse.base);
  return *internal_default_instance();
}


void CreateTableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hybridse.tablet.CreateTableResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(status_ != NULL);
    status_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateTableResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hybridse.tablet.CreateTableResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hybridse.common.Status status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hybridse.tablet.CreateTableResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hybridse.tablet.CreateTableResponse)
  return false;
#undef DO_
}

void CreateTableResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hybridse.tablet.CreateTableResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hybridse.common.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hybridse.tablet.CreateTableResponse)
}

::google::protobuf::uint8* CreateTableResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hybridse.tablet.CreateTableResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hybridse.common.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_status(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hybridse.tablet.CreateTableResponse)
  return target;
}

size_t CreateTableResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hybridse.tablet.CreateTableResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .hybridse.common.Status status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateTableResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hybridse.tablet.CreateTableResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTableResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateTableResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hybridse.tablet.CreateTableResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hybridse.tablet.CreateTableResponse)
    MergeFrom(*source);
  }
}

void CreateTableResponse::MergeFrom(const CreateTableResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hybridse.tablet.CreateTableResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    mutable_status()->::hybridse::common::Status::MergeFrom(from.status());
  }
}

void CreateTableResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hybridse.tablet.CreateTableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTableResponse::CopyFrom(const CreateTableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hybridse.tablet.CreateTableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTableResponse::IsInitialized() const {
  return true;
}

void CreateTableResponse::Swap(CreateTableResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateTableResponse::InternalSwap(CreateTableResponse* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateTableResponse::GetMetadata() const {
  protobuf_fe_5ftablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fe_5ftablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InsertRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InsertRequest::kDbFieldNumber;
const int InsertRequest::kTableFieldNumber;
const int InsertRequest::kRowFieldNumber;
const int InsertRequest::kKeyFieldNumber;
const int InsertRequest::kTsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InsertRequest::InsertRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fe_5ftablet_2eproto::scc_info_InsertRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hybridse.tablet.InsertRequest)
}
InsertRequest::InsertRequest(const InsertRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_table()) {
    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_row()) {
    row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_);
  }
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  ts_ = from.ts_;
  // @@protoc_insertion_point(copy_constructor:hybridse.tablet.InsertRequest)
}

void InsertRequest::SharedCtor() {
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ts_ = GOOGLE_ULONGLONG(0);
}

InsertRequest::~InsertRequest() {
  // @@protoc_insertion_point(destructor:hybridse.tablet.InsertRequest)
  SharedDtor();
}

void InsertRequest::SharedDtor() {
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  table_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  row_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InsertRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InsertRequest::descriptor() {
  ::protobuf_fe_5ftablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fe_5ftablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InsertRequest& InsertRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fe_5ftablet_2eproto::scc_info_InsertRequest.base);
  return *internal_default_instance();
}


void InsertRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hybridse.tablet.InsertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      table_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      row_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
  }
  ts_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InsertRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hybridse.tablet.InsertRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string db = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hybridse.tablet.InsertRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string table = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->table().data(), static_cast<int>(this->table().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hybridse.tablet.InsertRequest.table");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes row = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_row()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string key = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hybridse.tablet.InsertRequest.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 ts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_ts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hybridse.tablet.InsertRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hybridse.tablet.InsertRequest)
  return false;
#undef DO_
}

void InsertRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hybridse.tablet.InsertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string db = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.InsertRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->db(), output);
  }

  // optional string table = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table().data(), static_cast<int>(this->table().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.InsertRequest.table");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->table(), output);
  }

  // optional bytes row = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->row(), output);
  }

  // optional string key = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.InsertRequest.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->key(), output);
  }

  // optional uint64 ts = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->ts(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hybridse.tablet.InsertRequest)
}

::google::protobuf::uint8* InsertRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hybridse.tablet.InsertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string db = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.InsertRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->db(), target);
  }

  // optional string table = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table().data(), static_cast<int>(this->table().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.InsertRequest.table");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->table(), target);
  }

  // optional bytes row = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->row(), target);
  }

  // optional string key = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.InsertRequest.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->key(), target);
  }

  // optional uint64 ts = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->ts(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hybridse.tablet.InsertRequest)
  return target;
}

size_t InsertRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hybridse.tablet.InsertRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string db = 1;
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional string table = 2;
    if (has_table()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->table());
    }

    // optional bytes row = 3;
    if (has_row()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->row());
    }

    // optional string key = 4;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional uint64 ts = 5;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->ts());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InsertRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hybridse.tablet.InsertRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InsertRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InsertRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hybridse.tablet.InsertRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hybridse.tablet.InsertRequest)
    MergeFrom(*source);
  }
}

void InsertRequest::MergeFrom(const InsertRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hybridse.tablet.InsertRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_table();
      table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_row();
      row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000010u) {
      ts_ = from.ts_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InsertRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hybridse.tablet.InsertRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertRequest::CopyFrom(const InsertRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hybridse.tablet.InsertRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertRequest::IsInitialized() const {
  return true;
}

void InsertRequest::Swap(InsertRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InsertRequest::InternalSwap(InsertRequest* other) {
  using std::swap;
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  table_.Swap(&other->table_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  row_.Swap(&other->row_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ts_, other->ts_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InsertRequest::GetMetadata() const {
  protobuf_fe_5ftablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fe_5ftablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExplainRequest::InitAsDefaultInstance() {
}
void ExplainRequest::clear_parameter_schema() {
  parameter_schema_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExplainRequest::kDbFieldNumber;
const int ExplainRequest::kSqlFieldNumber;
const int ExplainRequest::kParameterSchemaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExplainRequest::ExplainRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fe_5ftablet_2eproto::scc_info_ExplainRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hybridse.tablet.ExplainRequest)
}
ExplainRequest::ExplainRequest(const ExplainRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      parameter_schema_(from.parameter_schema_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sql()) {
    sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
  }
  // @@protoc_insertion_point(copy_constructor:hybridse.tablet.ExplainRequest)
}

void ExplainRequest::SharedCtor() {
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ExplainRequest::~ExplainRequest() {
  // @@protoc_insertion_point(destructor:hybridse.tablet.ExplainRequest)
  SharedDtor();
}

void ExplainRequest::SharedDtor() {
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sql_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExplainRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExplainRequest::descriptor() {
  ::protobuf_fe_5ftablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fe_5ftablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExplainRequest& ExplainRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fe_5ftablet_2eproto::scc_info_ExplainRequest.base);
  return *internal_default_instance();
}


void ExplainRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hybridse.tablet.ExplainRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameter_schema_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      sql_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExplainRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hybridse.tablet.ExplainRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string db = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hybridse.tablet.ExplainRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sql = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sql()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sql().data(), static_cast<int>(this->sql().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hybridse.tablet.ExplainRequest.sql");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .hybridse.type.ColumnDef parameter_schema = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_parameter_schema()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hybridse.tablet.ExplainRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hybridse.tablet.ExplainRequest)
  return false;
#undef DO_
}

void ExplainRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hybridse.tablet.ExplainRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string db = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.ExplainRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->db(), output);
  }

  // optional string sql = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), static_cast<int>(this->sql().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.ExplainRequest.sql");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sql(), output);
  }

  // repeated .hybridse.type.ColumnDef parameter_schema = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parameter_schema_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->parameter_schema(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hybridse.tablet.ExplainRequest)
}

::google::protobuf::uint8* ExplainRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hybridse.tablet.ExplainRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string db = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.ExplainRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->db(), target);
  }

  // optional string sql = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), static_cast<int>(this->sql().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.ExplainRequest.sql");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sql(), target);
  }

  // repeated .hybridse.type.ColumnDef parameter_schema = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parameter_schema_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->parameter_schema(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hybridse.tablet.ExplainRequest)
  return target;
}

size_t ExplainRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hybridse.tablet.ExplainRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .hybridse.type.ColumnDef parameter_schema = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->parameter_schema_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->parameter_schema(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string db = 1;
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional string sql = 2;
    if (has_sql()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sql());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExplainRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hybridse.tablet.ExplainRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExplainRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExplainRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hybridse.tablet.ExplainRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hybridse.tablet.ExplainRequest)
    MergeFrom(*source);
  }
}

void ExplainRequest::MergeFrom(const ExplainRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hybridse.tablet.ExplainRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parameter_schema_.MergeFrom(from.parameter_schema_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sql();
      sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
    }
  }
}

void ExplainRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hybridse.tablet.ExplainRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExplainRequest::CopyFrom(const ExplainRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hybridse.tablet.ExplainRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExplainRequest::IsInitialized() const {
  return true;
}

void ExplainRequest::Swap(ExplainRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExplainRequest::InternalSwap(ExplainRequest* other) {
  using std::swap;
  CastToBase(&parameter_schema_)->InternalSwap(CastToBase(&other->parameter_schema_));
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sql_.Swap(&other->sql_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExplainRequest::GetMetadata() const {
  protobuf_fe_5ftablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fe_5ftablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExplainResponse::InitAsDefaultInstance() {
  ::hybridse::tablet::_ExplainResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::hybridse::common::Status*>(
      ::hybridse::common::Status::internal_default_instance());
}
void ExplainResponse::clear_status() {
  if (status_ != NULL) status_->Clear();
  clear_has_status();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExplainResponse::kInputSchemaFieldNumber;
const int ExplainResponse::kStatusFieldNumber;
const int ExplainResponse::kLogicalPlanFieldNumber;
const int ExplainResponse::kPhysicalPlanFieldNumber;
const int ExplainResponse::kIrFieldNumber;
const int ExplainResponse::kOutputSchemaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExplainResponse::ExplainResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fe_5ftablet_2eproto::scc_info_ExplainResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hybridse.tablet.ExplainResponse)
}
ExplainResponse::ExplainResponse(const ExplainResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  input_schema_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_input_schema()) {
    input_schema_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_schema_);
  }
  logical_plan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_logical_plan()) {
    logical_plan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logical_plan_);
  }
  physical_plan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_physical_plan()) {
    physical_plan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.physical_plan_);
  }
  ir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ir()) {
    ir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ir_);
  }
  output_schema_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_output_schema()) {
    output_schema_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_schema_);
  }
  if (from.has_status()) {
    status_ = new ::hybridse::common::Status(*from.status_);
  } else {
    status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:hybridse.tablet.ExplainResponse)
}

void ExplainResponse::SharedCtor() {
  input_schema_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logical_plan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  physical_plan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_schema_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = NULL;
}

ExplainResponse::~ExplainResponse() {
  // @@protoc_insertion_point(destructor:hybridse.tablet.ExplainResponse)
  SharedDtor();
}

void ExplainResponse::SharedDtor() {
  input_schema_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logical_plan_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  physical_plan_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_schema_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
}

void ExplainResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExplainResponse::descriptor() {
  ::protobuf_fe_5ftablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fe_5ftablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExplainResponse& ExplainResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fe_5ftablet_2eproto::scc_info_ExplainResponse.base);
  return *internal_default_instance();
}


void ExplainResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hybridse.tablet.ExplainResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      input_schema_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      logical_plan_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      physical_plan_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      ir_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      output_schema_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(status_ != NULL);
      status_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExplainResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hybridse.tablet.ExplainResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes input_schema = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_input_schema()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hybridse.common.Status status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string logical_plan = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logical_plan()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->logical_plan().data(), static_cast<int>(this->logical_plan().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hybridse.tablet.ExplainResponse.logical_plan");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string physical_plan = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_physical_plan()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->physical_plan().data(), static_cast<int>(this->physical_plan().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hybridse.tablet.ExplainResponse.physical_plan");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ir = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ir()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ir().data(), static_cast<int>(this->ir().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hybridse.tablet.ExplainResponse.ir");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes output_schema = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_output_schema()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hybridse.tablet.ExplainResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hybridse.tablet.ExplainResponse)
  return false;
#undef DO_
}

void ExplainResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hybridse.tablet.ExplainResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes input_schema = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->input_schema(), output);
  }

  // optional .hybridse.common.Status status = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_status(), output);
  }

  // optional string logical_plan = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->logical_plan().data(), static_cast<int>(this->logical_plan().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.ExplainResponse.logical_plan");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->logical_plan(), output);
  }

  // optional string physical_plan = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->physical_plan().data(), static_cast<int>(this->physical_plan().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.ExplainResponse.physical_plan");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->physical_plan(), output);
  }

  // optional string ir = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ir().data(), static_cast<int>(this->ir().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.ExplainResponse.ir");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->ir(), output);
  }

  // optional bytes output_schema = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->output_schema(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hybridse.tablet.ExplainResponse)
}

::google::protobuf::uint8* ExplainResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hybridse.tablet.ExplainResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes input_schema = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->input_schema(), target);
  }

  // optional .hybridse.common.Status status = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_status(), deterministic, target);
  }

  // optional string logical_plan = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->logical_plan().data(), static_cast<int>(this->logical_plan().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.ExplainResponse.logical_plan");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->logical_plan(), target);
  }

  // optional string physical_plan = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->physical_plan().data(), static_cast<int>(this->physical_plan().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.ExplainResponse.physical_plan");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->physical_plan(), target);
  }

  // optional string ir = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ir().data(), static_cast<int>(this->ir().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.ExplainResponse.ir");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->ir(), target);
  }

  // optional bytes output_schema = 6;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->output_schema(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hybridse.tablet.ExplainResponse)
  return target;
}

size_t ExplainResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hybridse.tablet.ExplainResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes input_schema = 1;
    if (has_input_schema()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->input_schema());
    }

    // optional string logical_plan = 3;
    if (has_logical_plan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->logical_plan());
    }

    // optional string physical_plan = 4;
    if (has_physical_plan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->physical_plan());
    }

    // optional string ir = 5;
    if (has_ir()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ir());
    }

    // optional bytes output_schema = 6;
    if (has_output_schema()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->output_schema());
    }

    // optional .hybridse.common.Status status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *status_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExplainResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hybridse.tablet.ExplainResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ExplainResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExplainResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hybridse.tablet.ExplainResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hybridse.tablet.ExplainResponse)
    MergeFrom(*source);
  }
}

void ExplainResponse::MergeFrom(const ExplainResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hybridse.tablet.ExplainResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_input_schema();
      input_schema_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_schema_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_logical_plan();
      logical_plan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logical_plan_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_physical_plan();
      physical_plan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.physical_plan_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_ir();
      ir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ir_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_output_schema();
      output_schema_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_schema_);
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_status()->::hybridse::common::Status::MergeFrom(from.status());
    }
  }
}

void ExplainResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hybridse.tablet.ExplainResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExplainResponse::CopyFrom(const ExplainResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hybridse.tablet.ExplainResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExplainResponse::IsInitialized() const {
  return true;
}

void ExplainResponse::Swap(ExplainResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExplainResponse::InternalSwap(ExplainResponse* other) {
  using std::swap;
  input_schema_.Swap(&other->input_schema_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  logical_plan_.Swap(&other->logical_plan_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  physical_plan_.Swap(&other->physical_plan_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ir_.Swap(&other->ir_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  output_schema_.Swap(&other->output_schema_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExplainResponse::GetMetadata() const {
  protobuf_fe_5ftablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fe_5ftablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InsertResponse::InitAsDefaultInstance() {
  ::hybridse::tablet::_InsertResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::hybridse::common::Status*>(
      ::hybridse::common::Status::internal_default_instance());
}
void InsertResponse::clear_status() {
  if (status_ != NULL) status_->Clear();
  clear_has_status();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InsertResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InsertResponse::InsertResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fe_5ftablet_2eproto::scc_info_InsertResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hybridse.tablet.InsertResponse)
}
InsertResponse::InsertResponse(const InsertResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_status()) {
    status_ = new ::hybridse::common::Status(*from.status_);
  } else {
    status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:hybridse.tablet.InsertResponse)
}

void InsertResponse::SharedCtor() {
  status_ = NULL;
}

InsertResponse::~InsertResponse() {
  // @@protoc_insertion_point(destructor:hybridse.tablet.InsertResponse)
  SharedDtor();
}

void InsertResponse::SharedDtor() {
  if (this != internal_default_instance()) delete status_;
}

void InsertResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InsertResponse::descriptor() {
  ::protobuf_fe_5ftablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fe_5ftablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InsertResponse& InsertResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fe_5ftablet_2eproto::scc_info_InsertResponse.base);
  return *internal_default_instance();
}


void InsertResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hybridse.tablet.InsertResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(status_ != NULL);
    status_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InsertResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hybridse.tablet.InsertResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hybridse.common.Status status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hybridse.tablet.InsertResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hybridse.tablet.InsertResponse)
  return false;
#undef DO_
}

void InsertResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hybridse.tablet.InsertResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hybridse.common.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hybridse.tablet.InsertResponse)
}

::google::protobuf::uint8* InsertResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hybridse.tablet.InsertResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hybridse.common.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_status(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hybridse.tablet.InsertResponse)
  return target;
}

size_t InsertResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hybridse.tablet.InsertResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .hybridse.common.Status status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InsertResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hybridse.tablet.InsertResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const InsertResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InsertResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hybridse.tablet.InsertResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hybridse.tablet.InsertResponse)
    MergeFrom(*source);
  }
}

void InsertResponse::MergeFrom(const InsertResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hybridse.tablet.InsertResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    mutable_status()->::hybridse::common::Status::MergeFrom(from.status());
  }
}

void InsertResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hybridse.tablet.InsertResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertResponse::CopyFrom(const InsertResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hybridse.tablet.InsertResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertResponse::IsInitialized() const {
  return true;
}

void InsertResponse::Swap(InsertResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InsertResponse::InternalSwap(InsertResponse* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InsertResponse::GetMetadata() const {
  protobuf_fe_5ftablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fe_5ftablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetTablesSchemaRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTablesSchemaRequest::kDbFieldNumber;
const int GetTablesSchemaRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTablesSchemaRequest::GetTablesSchemaRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fe_5ftablet_2eproto::scc_info_GetTablesSchemaRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hybridse.tablet.GetTablesSchemaRequest)
}
GetTablesSchemaRequest::GetTablesSchemaRequest(const GetTablesSchemaRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:hybridse.tablet.GetTablesSchemaRequest)
}

void GetTablesSchemaRequest::SharedCtor() {
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetTablesSchemaRequest::~GetTablesSchemaRequest() {
  // @@protoc_insertion_point(destructor:hybridse.tablet.GetTablesSchemaRequest)
  SharedDtor();
}

void GetTablesSchemaRequest::SharedDtor() {
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetTablesSchemaRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetTablesSchemaRequest::descriptor() {
  ::protobuf_fe_5ftablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fe_5ftablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetTablesSchemaRequest& GetTablesSchemaRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fe_5ftablet_2eproto::scc_info_GetTablesSchemaRequest.base);
  return *internal_default_instance();
}


void GetTablesSchemaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hybridse.tablet.GetTablesSchemaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetTablesSchemaRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hybridse.tablet.GetTablesSchemaRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string db = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hybridse.tablet.GetTablesSchemaRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hybridse.tablet.GetTablesSchemaRequest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hybridse.tablet.GetTablesSchemaRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hybridse.tablet.GetTablesSchemaRequest)
  return false;
#undef DO_
}

void GetTablesSchemaRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hybridse.tablet.GetTablesSchemaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string db = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.GetTablesSchemaRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->db(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.GetTablesSchemaRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hybridse.tablet.GetTablesSchemaRequest)
}

::google::protobuf::uint8* GetTablesSchemaRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hybridse.tablet.GetTablesSchemaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string db = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.GetTablesSchemaRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->db(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.GetTablesSchemaRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hybridse.tablet.GetTablesSchemaRequest)
  return target;
}

size_t GetTablesSchemaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hybridse.tablet.GetTablesSchemaRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string db = 1;
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTablesSchemaRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hybridse.tablet.GetTablesSchemaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTablesSchemaRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTablesSchemaRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hybridse.tablet.GetTablesSchemaRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hybridse.tablet.GetTablesSchemaRequest)
    MergeFrom(*source);
  }
}

void GetTablesSchemaRequest::MergeFrom(const GetTablesSchemaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hybridse.tablet.GetTablesSchemaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
}

void GetTablesSchemaRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hybridse.tablet.GetTablesSchemaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTablesSchemaRequest::CopyFrom(const GetTablesSchemaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hybridse.tablet.GetTablesSchemaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTablesSchemaRequest::IsInitialized() const {
  return true;
}

void GetTablesSchemaRequest::Swap(GetTablesSchemaRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTablesSchemaRequest::InternalSwap(GetTablesSchemaRequest* other) {
  using std::swap;
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetTablesSchemaRequest::GetMetadata() const {
  protobuf_fe_5ftablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fe_5ftablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetTableSchemaReponse::InitAsDefaultInstance() {
  ::hybridse::tablet::_GetTableSchemaReponse_default_instance_._instance.get_mutable()->schema_ = const_cast< ::hybridse::type::TableDef*>(
      ::hybridse::type::TableDef::internal_default_instance());
  ::hybridse::tablet::_GetTableSchemaReponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::hybridse::common::Status*>(
      ::hybridse::common::Status::internal_default_instance());
}
void GetTableSchemaReponse::clear_schema() {
  if (schema_ != NULL) schema_->Clear();
  clear_has_schema();
}
void GetTableSchemaReponse::clear_status() {
  if (status_ != NULL) status_->Clear();
  clear_has_status();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTableSchemaReponse::kNameFieldNumber;
const int GetTableSchemaReponse::kSchemaFieldNumber;
const int GetTableSchemaReponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTableSchemaReponse::GetTableSchemaReponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fe_5ftablet_2eproto::scc_info_GetTableSchemaReponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hybridse.tablet.GetTableSchemaReponse)
}
GetTableSchemaReponse::GetTableSchemaReponse(const GetTableSchemaReponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_schema()) {
    schema_ = new ::hybridse::type::TableDef(*from.schema_);
  } else {
    schema_ = NULL;
  }
  if (from.has_status()) {
    status_ = new ::hybridse::common::Status(*from.status_);
  } else {
    status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:hybridse.tablet.GetTableSchemaReponse)
}

void GetTableSchemaReponse::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&schema_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&schema_)) + sizeof(status_));
}

GetTableSchemaReponse::~GetTableSchemaReponse() {
  // @@protoc_insertion_point(destructor:hybridse.tablet.GetTableSchemaReponse)
  SharedDtor();
}

void GetTableSchemaReponse::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete schema_;
  if (this != internal_default_instance()) delete status_;
}

void GetTableSchemaReponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetTableSchemaReponse::descriptor() {
  ::protobuf_fe_5ftablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fe_5ftablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetTableSchemaReponse& GetTableSchemaReponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fe_5ftablet_2eproto::scc_info_GetTableSchemaReponse.base);
  return *internal_default_instance();
}


void GetTableSchemaReponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hybridse.tablet.GetTableSchemaReponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(schema_ != NULL);
      schema_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(status_ != NULL);
      status_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetTableSchemaReponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hybridse.tablet.GetTableSchemaReponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hybridse.tablet.GetTableSchemaReponse.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hybridse.type.TableDef schema = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_schema()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hybridse.common.Status status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hybridse.tablet.GetTableSchemaReponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hybridse.tablet.GetTableSchemaReponse)
  return false;
#undef DO_
}

void GetTableSchemaReponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hybridse.tablet.GetTableSchemaReponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.GetTableSchemaReponse.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .hybridse.type.TableDef schema = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_schema(), output);
  }

  // optional .hybridse.common.Status status = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hybridse.tablet.GetTableSchemaReponse)
}

::google::protobuf::uint8* GetTableSchemaReponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hybridse.tablet.GetTableSchemaReponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hybridse.tablet.GetTableSchemaReponse.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .hybridse.type.TableDef schema = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_schema(), deterministic, target);
  }

  // optional .hybridse.common.Status status = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_status(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hybridse.tablet.GetTableSchemaReponse)
  return target;
}

size_t GetTableSchemaReponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hybridse.tablet.GetTableSchemaReponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .hybridse.type.TableDef schema = 2;
    if (has_schema()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *schema_);
    }

    // optional .hybridse.common.Status status = 3;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *status_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTableSchemaReponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hybridse.tablet.GetTableSchemaReponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTableSchemaReponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTableSchemaReponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hybridse.tablet.GetTableSchemaReponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hybridse.tablet.GetTableSchemaReponse)
    MergeFrom(*source);
  }
}

void GetTableSchemaReponse::MergeFrom(const GetTableSchemaReponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hybridse.tablet.GetTableSchemaReponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_schema()->::hybridse::type::TableDef::MergeFrom(from.schema());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_status()->::hybridse::common::Status::MergeFrom(from.status());
    }
  }
}

void GetTableSchemaReponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hybridse.tablet.GetTableSchemaReponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTableSchemaReponse::CopyFrom(const GetTableSchemaReponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hybridse.tablet.GetTableSchemaReponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTableSchemaReponse::IsInitialized() const {
  return true;
}

void GetTableSchemaReponse::Swap(GetTableSchemaReponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTableSchemaReponse::InternalSwap(GetTableSchemaReponse* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(schema_, other->schema_);
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetTableSchemaReponse::GetMetadata() const {
  protobuf_fe_5ftablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fe_5ftablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

TabletServer::~TabletServer() {}

const ::google::protobuf::ServiceDescriptor* TabletServer::descriptor() {
  protobuf_fe_5ftablet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fe_5ftablet_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* TabletServer::GetDescriptor() {
  return descriptor();
}

void TabletServer::GetTableSchema(::google::protobuf::RpcController* controller,
                         const ::hybridse::tablet::GetTablesSchemaRequest*,
                         ::hybridse::tablet::GetTableSchemaReponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetTableSchema() not implemented.");
  done->Run();
}

void TabletServer::CreateTable(::google::protobuf::RpcController* controller,
                         const ::hybridse::tablet::CreateTableRequest*,
                         ::hybridse::tablet::CreateTableResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CreateTable() not implemented.");
  done->Run();
}

void TabletServer::Query(::google::protobuf::RpcController* controller,
                         const ::hybridse::tablet::QueryRequest*,
                         ::hybridse::tablet::QueryResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Query() not implemented.");
  done->Run();
}

void TabletServer::Insert(::google::protobuf::RpcController* controller,
                         const ::hybridse::tablet::InsertRequest*,
                         ::hybridse::tablet::InsertResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Insert() not implemented.");
  done->Run();
}

void TabletServer::Explain(::google::protobuf::RpcController* controller,
                         const ::hybridse::tablet::ExplainRequest*,
                         ::hybridse::tablet::ExplainResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Explain() not implemented.");
  done->Run();
}

void TabletServer::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_fe_5ftablet_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      GetTableSchema(controller,
             ::google::protobuf::down_cast<const ::hybridse::tablet::GetTablesSchemaRequest*>(request),
             ::google::protobuf::down_cast< ::hybridse::tablet::GetTableSchemaReponse*>(response),
             done);
      break;
    case 1:
      CreateTable(controller,
             ::google::protobuf::down_cast<const ::hybridse::tablet::CreateTableRequest*>(request),
             ::google::protobuf::down_cast< ::hybridse::tablet::CreateTableResponse*>(response),
             done);
      break;
    case 2:
      Query(controller,
             ::google::protobuf::down_cast<const ::hybridse::tablet::QueryRequest*>(request),
             ::google::protobuf::down_cast< ::hybridse::tablet::QueryResponse*>(response),
             done);
      break;
    case 3:
      Insert(controller,
             ::google::protobuf::down_cast<const ::hybridse::tablet::InsertRequest*>(request),
             ::google::protobuf::down_cast< ::hybridse::tablet::InsertResponse*>(response),
             done);
      break;
    case 4:
      Explain(controller,
             ::google::protobuf::down_cast<const ::hybridse::tablet::ExplainRequest*>(request),
             ::google::protobuf::down_cast< ::hybridse::tablet::ExplainResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& TabletServer::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::hybridse::tablet::GetTablesSchemaRequest::default_instance();
    case 1:
      return ::hybridse::tablet::CreateTableRequest::default_instance();
    case 2:
      return ::hybridse::tablet::QueryRequest::default_instance();
    case 3:
      return ::hybridse::tablet::InsertRequest::default_instance();
    case 4:
      return ::hybridse::tablet::ExplainRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& TabletServer::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::hybridse::tablet::GetTableSchemaReponse::default_instance();
    case 1:
      return ::hybridse::tablet::CreateTableResponse::default_instance();
    case 2:
      return ::hybridse::tablet::QueryResponse::default_instance();
    case 3:
      return ::hybridse::tablet::InsertResponse::default_instance();
    case 4:
      return ::hybridse::tablet::ExplainResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

TabletServer_Stub::TabletServer_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
TabletServer_Stub::TabletServer_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
TabletServer_Stub::~TabletServer_Stub() {
  if (owns_channel_) delete channel_;
}

void TabletServer_Stub::GetTableSchema(::google::protobuf::RpcController* controller,
                              const ::hybridse::tablet::GetTablesSchemaRequest* request,
                              ::hybridse::tablet::GetTableSchemaReponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void TabletServer_Stub::CreateTable(::google::protobuf::RpcController* controller,
                              const ::hybridse::tablet::CreateTableRequest* request,
                              ::hybridse::tablet::CreateTableResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void TabletServer_Stub::Query(::google::protobuf::RpcController* controller,
                              const ::hybridse::tablet::QueryRequest* request,
                              ::hybridse::tablet::QueryResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void TabletServer_Stub::Insert(::google::protobuf::RpcController* controller,
                              const ::hybridse::tablet::InsertRequest* request,
                              ::hybridse::tablet::InsertResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void TabletServer_Stub::Explain(::google::protobuf::RpcController* controller,
                              const ::hybridse::tablet::ExplainRequest* request,
                              ::hybridse::tablet::ExplainResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace tablet
}  // namespace hybridse
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hybridse::tablet::QueryRequest* Arena::CreateMaybeMessage< ::hybridse::tablet::QueryRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hybridse::tablet::QueryRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hybridse::tablet::QueryResponse* Arena::CreateMaybeMessage< ::hybridse::tablet::QueryResponse >(Arena* arena) {
  return Arena::CreateInternal< ::hybridse::tablet::QueryResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hybridse::tablet::CreateTableRequest* Arena::CreateMaybeMessage< ::hybridse::tablet::CreateTableRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hybridse::tablet::CreateTableRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hybridse::tablet::CreateTableResponse* Arena::CreateMaybeMessage< ::hybridse::tablet::CreateTableResponse >(Arena* arena) {
  return Arena::CreateInternal< ::hybridse::tablet::CreateTableResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hybridse::tablet::InsertRequest* Arena::CreateMaybeMessage< ::hybridse::tablet::InsertRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hybridse::tablet::InsertRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hybridse::tablet::ExplainRequest* Arena::CreateMaybeMessage< ::hybridse::tablet::ExplainRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hybridse::tablet::ExplainRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hybridse::tablet::ExplainResponse* Arena::CreateMaybeMessage< ::hybridse::tablet::ExplainResponse >(Arena* arena) {
  return Arena::CreateInternal< ::hybridse::tablet::ExplainResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hybridse::tablet::InsertResponse* Arena::CreateMaybeMessage< ::hybridse::tablet::InsertResponse >(Arena* arena) {
  return Arena::CreateInternal< ::hybridse::tablet::InsertResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hybridse::tablet::GetTablesSchemaRequest* Arena::CreateMaybeMessage< ::hybridse::tablet::GetTablesSchemaRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hybridse::tablet::GetTablesSchemaRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hybridse::tablet::GetTableSchemaReponse* Arena::CreateMaybeMessage< ::hybridse::tablet::GetTableSchemaReponse >(Arena* arena) {
  return Arena::CreateInternal< ::hybridse::tablet::GetTableSchemaReponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
