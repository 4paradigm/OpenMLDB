// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tablet.proto

#include "tablet.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CatalogInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ColumnDesc;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EndpointAndTid;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ExternalFun;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TTLSt;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VersionPair;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ColumnKey;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TablePartition;
}  // namespace protobuf_common_2eproto
namespace protobuf_tablet_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BulkLoadInfoResponse_InnerIndexSt_IndexDef;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DataBlockInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DeployStatsResponse_DeployStat;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Dimension;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FollowerInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Manifest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PartSnapshotOffset;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RealEndpointPair;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Segment_KeyEntries_KeyEntry_TimeEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SendIndexDataRequest_EndpointPair;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TSDimension;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TaskInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TsIdxStatus;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BulkLoadIndex;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BulkLoadInfoResponse_InnerIndexSt;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BulkLoadInfoResponse_InnerSegments;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BulkLoadInfoResponse_InnerSegments_Segment;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Segment;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Segment_KeyEntries;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Segment_KeyEntries_KeyEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TableSnapshotOffsetResponse_Table;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TableStatus;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_BinlogInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_LogEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tablet_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_TableMeta;
}  // namespace protobuf_tablet_2eproto
namespace openmldb {
namespace api {
class TaskInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskInfo>
      _instance;
} _TaskInfo_default_instance_;
class OPInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OPInfo>
      _instance;
} _OPInfo_default_instance_;
class PartSnapshotOffsetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PartSnapshotOffset>
      _instance;
} _PartSnapshotOffset_default_instance_;
class TableSnapshotOffsetResponse_TableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TableSnapshotOffsetResponse_Table>
      _instance;
} _TableSnapshotOffsetResponse_Table_default_instance_;
class TableSnapshotOffsetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TableSnapshotOffsetResponse>
      _instance;
} _TableSnapshotOffsetResponse_default_instance_;
class ManifestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Manifest>
      _instance;
} _Manifest_default_instance_;
class DimensionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Dimension>
      _instance;
} _Dimension_default_instance_;
class TSDimensionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TSDimension>
      _instance;
} _TSDimension_default_instance_;
class PutRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PutRequest>
      _instance;
} _PutRequest_default_instance_;
class PutResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PutResponse>
      _instance;
} _PutResponse_default_instance_;
class DeleteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteRequest>
      _instance;
} _DeleteRequest_default_instance_;
class ExecuteGcRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecuteGcRequest>
      _instance;
} _ExecuteGcRequest_default_instance_;
class GeneralRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GeneralRequest>
      _instance;
} _GeneralRequest_default_instance_;
class TaskStatusRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskStatusRequest>
      _instance;
} _TaskStatusRequest_default_instance_;
class TaskStatusResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskStatusResponse>
      _instance;
} _TaskStatusResponse_default_instance_;
class DeleteTaskRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteTaskRequest>
      _instance;
} _DeleteTaskRequest_default_instance_;
class GeneralResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GeneralResponse>
      _instance;
} _GeneralResponse_default_instance_;
class ScanRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScanRequest>
      _instance;
} _ScanRequest_default_instance_;
class TraverseRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TraverseRequest>
      _instance;
} _TraverseRequest_default_instance_;
class TraverseResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TraverseResponse>
      _instance;
} _TraverseResponse_default_instance_;
class ScanResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScanResponse>
      _instance;
} _ScanResponse_default_instance_;
class ReplicaRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReplicaRequest>
      _instance;
} _ReplicaRequest_default_instance_;
class AddReplicaResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddReplicaResponse>
      _instance;
} _AddReplicaResponse_default_instance_;
class TableMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TableMeta>
      _instance;
} _TableMeta_default_instance_;
class CreateTableRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateTableRequest>
      _instance;
} _CreateTableRequest_default_instance_;
class UpdateTableMetaForAddFieldRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateTableMetaForAddFieldRequest>
      _instance;
} _UpdateTableMetaForAddFieldRequest_default_instance_;
class CreateTableResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateTableResponse>
      _instance;
} _CreateTableResponse_default_instance_;
class LoadTableRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoadTableRequest>
      _instance;
} _LoadTableRequest_default_instance_;
class DropTableRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DropTableRequest>
      _instance;
} _DropTableRequest_default_instance_;
class DropTableResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DropTableResponse>
      _instance;
} _DropTableResponse_default_instance_;
class GetTableSchemaRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTableSchemaRequest>
      _instance;
} _GetTableSchemaRequest_default_instance_;
class SetExpireRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetExpireRequest>
      _instance;
} _SetExpireRequest_default_instance_;
class GetTableSchemaResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTableSchemaResponse>
      _instance;
} _GetTableSchemaResponse_default_instance_;
class UpdateTTLRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateTTLRequest>
      _instance;
} _UpdateTTLRequest_default_instance_;
class UpdateTTLResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateTTLResponse>
      _instance;
} _UpdateTTLResponse_default_instance_;
class LogEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogEntry>
      _instance;
} _LogEntry_default_instance_;
class AppendEntriesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AppendEntriesRequest>
      _instance;
} _AppendEntriesRequest_default_instance_;
class AppendEntriesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AppendEntriesResponse>
      _instance;
} _AppendEntriesResponse_default_instance_;
class ChangeRoleRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeRoleRequest>
      _instance;
} _ChangeRoleRequest_default_instance_;
class SendSnapshotRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendSnapshotRequest>
      _instance;
} _SendSnapshotRequest_default_instance_;
class SendIndexDataRequest_EndpointPairDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendIndexDataRequest_EndpointPair>
      _instance;
} _SendIndexDataRequest_EndpointPair_default_instance_;
class SendIndexDataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendIndexDataRequest>
      _instance;
} _SendIndexDataRequest_default_instance_;
class SendDataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendDataRequest>
      _instance;
} _SendDataRequest_default_instance_;
class ChangeRoleResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeRoleResponse>
      _instance;
} _ChangeRoleResponse_default_instance_;
class GetTableStatusRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTableStatusRequest>
      _instance;
} _GetTableStatusRequest_default_instance_;
class TsIdxStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TsIdxStatus>
      _instance;
} _TsIdxStatus_default_instance_;
class TableStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TableStatus>
      _instance;
} _TableStatus_default_instance_;
class GetTableStatusResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTableStatusResponse>
      _instance;
} _GetTableStatusResponse_default_instance_;
class GetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetRequest>
      _instance;
} _GetRequest_default_instance_;
class GetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetResponse>
      _instance;
} _GetResponse_default_instance_;
class CountRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CountRequest>
      _instance;
} _CountRequest_default_instance_;
class CountResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CountResponse>
      _instance;
} _CountResponse_default_instance_;
class GetTermPairRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTermPairRequest>
      _instance;
} _GetTermPairRequest_default_instance_;
class GetTermPairResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTermPairResponse>
      _instance;
} _GetTermPairResponse_default_instance_;
class GetManifestRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetManifestRequest>
      _instance;
} _GetManifestRequest_default_instance_;
class GetManifestResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetManifestResponse>
      _instance;
} _GetManifestResponse_default_instance_;
class GetTableFollowerRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTableFollowerRequest>
      _instance;
} _GetTableFollowerRequest_default_instance_;
class FollowerInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FollowerInfo>
      _instance;
} _FollowerInfo_default_instance_;
class GetTableFollowerResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTableFollowerResponse>
      _instance;
} _GetTableFollowerResponse_default_instance_;
class CheckFileRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckFileRequest>
      _instance;
} _CheckFileRequest_default_instance_;
class AddIndexRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddIndexRequest>
      _instance;
} _AddIndexRequest_default_instance_;
class SetModeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetModeRequest>
      _instance;
} _SetModeRequest_default_instance_;
class EmptyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EmptyRequest>
      _instance;
} _EmptyRequest_default_instance_;
class ConnectZKRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectZKRequest>
      _instance;
} _ConnectZKRequest_default_instance_;
class DisConnectZKRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DisConnectZKRequest>
      _instance;
} _DisConnectZKRequest_default_instance_;
class HttpRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HttpRequest>
      _instance;
} _HttpRequest_default_instance_;
class HttpResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HttpResponse>
      _instance;
} _HttpResponse_default_instance_;
class DeleteIndexRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteIndexRequest>
      _instance;
} _DeleteIndexRequest_default_instance_;
class DumpIndexDataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DumpIndexDataRequest>
      _instance;
} _DumpIndexDataRequest_default_instance_;
class LoadIndexDataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoadIndexDataRequest>
      _instance;
} _LoadIndexDataRequest_default_instance_;
class ExtractMultiIndexDataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExtractMultiIndexDataRequest>
      _instance;
} _ExtractMultiIndexDataRequest_default_instance_;
class ExtractIndexDataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExtractIndexDataRequest>
      _instance;
} _ExtractIndexDataRequest_default_instance_;
class ColumnsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Columns>
      _instance;
} _Columns_default_instance_;
class CancelOPRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CancelOPRequest>
      _instance;
} _CancelOPRequest_default_instance_;
class RealEndpointPairDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RealEndpointPair>
      _instance;
} _RealEndpointPair_default_instance_;
class UpdateRealEndpointMapRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateRealEndpointMapRequest>
      _instance;
} _UpdateRealEndpointMapRequest_default_instance_;
class QueryRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryRequest>
      _instance;
} _QueryRequest_default_instance_;
class QueryResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryResponse>
      _instance;
} _QueryResponse_default_instance_;
class SQLBatchRequestQueryRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SQLBatchRequestQueryRequest>
      _instance;
} _SQLBatchRequestQueryRequest_default_instance_;
class SQLBatchRequestQueryResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SQLBatchRequestQueryResponse>
      _instance;
} _SQLBatchRequestQueryResponse_default_instance_;
class ExplainRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExplainRequest>
      _instance;
} _ExplainRequest_default_instance_;
class ExplainResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExplainResponse>
      _instance;
} _ExplainResponse_default_instance_;
class RefreshRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RefreshRequest>
      _instance;
} _RefreshRequest_default_instance_;
class GetCatalogRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetCatalogRequest>
      _instance;
} _GetCatalogRequest_default_instance_;
class GetCatalogResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetCatalogResponse>
      _instance;
} _GetCatalogResponse_default_instance_;
class DataBlockInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataBlockInfo>
      _instance;
} _DataBlockInfo_default_instance_;
class BinlogInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BinlogInfo>
      _instance;
} _BinlogInfo_default_instance_;
class Segment_KeyEntries_KeyEntry_TimeEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Segment_KeyEntries_KeyEntry_TimeEntry>
      _instance;
} _Segment_KeyEntries_KeyEntry_TimeEntry_default_instance_;
class Segment_KeyEntries_KeyEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Segment_KeyEntries_KeyEntry>
      _instance;
} _Segment_KeyEntries_KeyEntry_default_instance_;
class Segment_KeyEntriesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Segment_KeyEntries>
      _instance;
} _Segment_KeyEntries_default_instance_;
class SegmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Segment>
      _instance;
} _Segment_default_instance_;
class BulkLoadIndexDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BulkLoadIndex>
      _instance;
} _BulkLoadIndex_default_instance_;
class BulkLoadRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BulkLoadRequest>
      _instance;
} _BulkLoadRequest_default_instance_;
class BulkLoadInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BulkLoadInfoRequest>
      _instance;
} _BulkLoadInfoRequest_default_instance_;
class BulkLoadInfoResponse_InnerIndexSt_IndexDefDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BulkLoadInfoResponse_InnerIndexSt_IndexDef>
      _instance;
} _BulkLoadInfoResponse_InnerIndexSt_IndexDef_default_instance_;
class BulkLoadInfoResponse_InnerIndexStDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BulkLoadInfoResponse_InnerIndexSt>
      _instance;
} _BulkLoadInfoResponse_InnerIndexSt_default_instance_;
class BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry>
      _instance;
} _BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry_default_instance_;
class BulkLoadInfoResponse_InnerSegments_SegmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BulkLoadInfoResponse_InnerSegments_Segment>
      _instance;
} _BulkLoadInfoResponse_InnerSegments_Segment_default_instance_;
class BulkLoadInfoResponse_InnerSegmentsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BulkLoadInfoResponse_InnerSegments>
      _instance;
} _BulkLoadInfoResponse_InnerSegments_default_instance_;
class BulkLoadInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BulkLoadInfoResponse>
      _instance;
} _BulkLoadInfoResponse_default_instance_;
class CreateFunctionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateFunctionRequest>
      _instance;
} _CreateFunctionRequest_default_instance_;
class CreateFunctionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateFunctionResponse>
      _instance;
} _CreateFunctionResponse_default_instance_;
class DropFunctionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DropFunctionRequest>
      _instance;
} _DropFunctionRequest_default_instance_;
class DropFunctionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DropFunctionResponse>
      _instance;
} _DropFunctionResponse_default_instance_;
class CreateAggregatorRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateAggregatorRequest>
      _instance;
} _CreateAggregatorRequest_default_instance_;
class CreateAggregatorResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateAggregatorResponse>
      _instance;
} _CreateAggregatorResponse_default_instance_;
class GAFDeployStatsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GAFDeployStatsRequest>
      _instance;
} _GAFDeployStatsRequest_default_instance_;
class DeployStatsResponse_DeployStatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeployStatsResponse_DeployStat>
      _instance;
} _DeployStatsResponse_DeployStat_default_instance_;
class DeployStatsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeployStatsResponse>
      _instance;
} _DeployStatsResponse_default_instance_;
}  // namespace api
}  // namespace openmldb
namespace protobuf_tablet_2eproto {
static void InitDefaultsTaskInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_TaskInfo_default_instance_;
    new (ptr) ::openmldb::api::TaskInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::TaskInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TaskInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTaskInfo}, {}};

static void InitDefaultsOPInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_OPInfo_default_instance_;
    new (ptr) ::openmldb::api::OPInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::OPInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OPInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOPInfo}, {}};

static void InitDefaultsPartSnapshotOffset() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_PartSnapshotOffset_default_instance_;
    new (ptr) ::openmldb::api::PartSnapshotOffset();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::PartSnapshotOffset::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PartSnapshotOffset =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPartSnapshotOffset}, {}};

static void InitDefaultsTableSnapshotOffsetResponse_Table() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_TableSnapshotOffsetResponse_Table_default_instance_;
    new (ptr) ::openmldb::api::TableSnapshotOffsetResponse_Table();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::TableSnapshotOffsetResponse_Table::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TableSnapshotOffsetResponse_Table =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTableSnapshotOffsetResponse_Table}, {
      &protobuf_tablet_2eproto::scc_info_PartSnapshotOffset.base,}};

static void InitDefaultsTableSnapshotOffsetResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_TableSnapshotOffsetResponse_default_instance_;
    new (ptr) ::openmldb::api::TableSnapshotOffsetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::TableSnapshotOffsetResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TableSnapshotOffsetResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTableSnapshotOffsetResponse}, {
      &protobuf_tablet_2eproto::scc_info_TableSnapshotOffsetResponse_Table.base,}};

static void InitDefaultsManifest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_Manifest_default_instance_;
    new (ptr) ::openmldb::api::Manifest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::Manifest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Manifest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsManifest}, {}};

static void InitDefaultsDimension() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_Dimension_default_instance_;
    new (ptr) ::openmldb::api::Dimension();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::Dimension::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Dimension =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDimension}, {}};

static void InitDefaultsTSDimension() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_TSDimension_default_instance_;
    new (ptr) ::openmldb::api::TSDimension();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::TSDimension::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TSDimension =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTSDimension}, {}};

static void InitDefaultsPutRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_PutRequest_default_instance_;
    new (ptr) ::openmldb::api::PutRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::PutRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PutRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPutRequest}, {
      &protobuf_tablet_2eproto::scc_info_Dimension.base,
      &protobuf_tablet_2eproto::scc_info_TSDimension.base,}};

static void InitDefaultsPutResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_PutResponse_default_instance_;
    new (ptr) ::openmldb::api::PutResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::PutResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PutResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPutResponse}, {}};

static void InitDefaultsDeleteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_DeleteRequest_default_instance_;
    new (ptr) ::openmldb::api::DeleteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::DeleteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteRequest}, {}};

static void InitDefaultsExecuteGcRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_ExecuteGcRequest_default_instance_;
    new (ptr) ::openmldb::api::ExecuteGcRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::ExecuteGcRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExecuteGcRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExecuteGcRequest}, {}};

static void InitDefaultsGeneralRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_GeneralRequest_default_instance_;
    new (ptr) ::openmldb::api::GeneralRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::GeneralRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GeneralRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGeneralRequest}, {
      &protobuf_tablet_2eproto::scc_info_TaskInfo.base,}};

static void InitDefaultsTaskStatusRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_TaskStatusRequest_default_instance_;
    new (ptr) ::openmldb::api::TaskStatusRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::TaskStatusRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TaskStatusRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTaskStatusRequest}, {}};

static void InitDefaultsTaskStatusResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_TaskStatusResponse_default_instance_;
    new (ptr) ::openmldb::api::TaskStatusResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::TaskStatusResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TaskStatusResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTaskStatusResponse}, {
      &protobuf_tablet_2eproto::scc_info_TaskInfo.base,}};

static void InitDefaultsDeleteTaskRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_DeleteTaskRequest_default_instance_;
    new (ptr) ::openmldb::api::DeleteTaskRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::DeleteTaskRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteTaskRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteTaskRequest}, {}};

static void InitDefaultsGeneralResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_GeneralResponse_default_instance_;
    new (ptr) ::openmldb::api::GeneralResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::GeneralResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GeneralResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGeneralResponse}, {}};

static void InitDefaultsScanRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_ScanRequest_default_instance_;
    new (ptr) ::openmldb::api::ScanRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::ScanRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ScanRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsScanRequest}, {}};

static void InitDefaultsTraverseRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_TraverseRequest_default_instance_;
    new (ptr) ::openmldb::api::TraverseRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::TraverseRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TraverseRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTraverseRequest}, {}};

static void InitDefaultsTraverseResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_TraverseResponse_default_instance_;
    new (ptr) ::openmldb::api::TraverseResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::TraverseResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TraverseResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTraverseResponse}, {}};

static void InitDefaultsScanResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_ScanResponse_default_instance_;
    new (ptr) ::openmldb::api::ScanResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::ScanResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ScanResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsScanResponse}, {}};

static void InitDefaultsReplicaRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_ReplicaRequest_default_instance_;
    new (ptr) ::openmldb::api::ReplicaRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::ReplicaRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReplicaRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReplicaRequest}, {
      &protobuf_tablet_2eproto::scc_info_TaskInfo.base,}};

static void InitDefaultsAddReplicaResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_AddReplicaResponse_default_instance_;
    new (ptr) ::openmldb::api::AddReplicaResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::AddReplicaResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AddReplicaResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddReplicaResponse}, {}};

static void InitDefaultsTableMeta() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_TableMeta_default_instance_;
    new (ptr) ::openmldb::api::TableMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::TableMeta::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_TableMeta =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsTableMeta}, {
      &protobuf_common_2eproto::scc_info_ColumnDesc.base,
      &protobuf_common_2eproto::scc_info_ColumnKey.base,
      &protobuf_common_2eproto::scc_info_VersionPair.base,
      &protobuf_common_2eproto::scc_info_TablePartition.base,}};

static void InitDefaultsCreateTableRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_CreateTableRequest_default_instance_;
    new (ptr) ::openmldb::api::CreateTableRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::CreateTableRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateTableRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateTableRequest}, {
      &protobuf_tablet_2eproto::scc_info_TableMeta.base,}};

static void InitDefaultsUpdateTableMetaForAddFieldRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_UpdateTableMetaForAddFieldRequest_default_instance_;
    new (ptr) ::openmldb::api::UpdateTableMetaForAddFieldRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::UpdateTableMetaForAddFieldRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateTableMetaForAddFieldRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateTableMetaForAddFieldRequest}, {
      &protobuf_common_2eproto::scc_info_ColumnDesc.base,
      &protobuf_common_2eproto::scc_info_VersionPair.base,}};

static void InitDefaultsCreateTableResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_CreateTableResponse_default_instance_;
    new (ptr) ::openmldb::api::CreateTableResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::CreateTableResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateTableResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateTableResponse}, {}};

static void InitDefaultsLoadTableRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_LoadTableRequest_default_instance_;
    new (ptr) ::openmldb::api::LoadTableRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::LoadTableRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_LoadTableRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsLoadTableRequest}, {
      &protobuf_tablet_2eproto::scc_info_TableMeta.base,
      &protobuf_tablet_2eproto::scc_info_TaskInfo.base,}};

static void InitDefaultsDropTableRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_DropTableRequest_default_instance_;
    new (ptr) ::openmldb::api::DropTableRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::DropTableRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DropTableRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDropTableRequest}, {
      &protobuf_tablet_2eproto::scc_info_TaskInfo.base,}};

static void InitDefaultsDropTableResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_DropTableResponse_default_instance_;
    new (ptr) ::openmldb::api::DropTableResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::DropTableResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DropTableResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDropTableResponse}, {}};

static void InitDefaultsGetTableSchemaRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_GetTableSchemaRequest_default_instance_;
    new (ptr) ::openmldb::api::GetTableSchemaRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::GetTableSchemaRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetTableSchemaRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetTableSchemaRequest}, {}};

static void InitDefaultsSetExpireRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_SetExpireRequest_default_instance_;
    new (ptr) ::openmldb::api::SetExpireRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::SetExpireRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetExpireRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetExpireRequest}, {}};

static void InitDefaultsGetTableSchemaResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_GetTableSchemaResponse_default_instance_;
    new (ptr) ::openmldb::api::GetTableSchemaResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::GetTableSchemaResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetTableSchemaResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetTableSchemaResponse}, {
      &protobuf_tablet_2eproto::scc_info_TableMeta.base,}};

static void InitDefaultsUpdateTTLRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_UpdateTTLRequest_default_instance_;
    new (ptr) ::openmldb::api::UpdateTTLRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::UpdateTTLRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UpdateTTLRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUpdateTTLRequest}, {
      &protobuf_common_2eproto::scc_info_TTLSt.base,}};

static void InitDefaultsUpdateTTLResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_UpdateTTLResponse_default_instance_;
    new (ptr) ::openmldb::api::UpdateTTLResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::UpdateTTLResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UpdateTTLResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUpdateTTLResponse}, {}};

static void InitDefaultsLogEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_LogEntry_default_instance_;
    new (ptr) ::openmldb::api::LogEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::LogEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_LogEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsLogEntry}, {
      &protobuf_tablet_2eproto::scc_info_Dimension.base,
      &protobuf_tablet_2eproto::scc_info_TSDimension.base,}};

static void InitDefaultsAppendEntriesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_AppendEntriesRequest_default_instance_;
    new (ptr) ::openmldb::api::AppendEntriesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::AppendEntriesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AppendEntriesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAppendEntriesRequest}, {
      &protobuf_tablet_2eproto::scc_info_LogEntry.base,}};

static void InitDefaultsAppendEntriesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_AppendEntriesResponse_default_instance_;
    new (ptr) ::openmldb::api::AppendEntriesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::AppendEntriesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AppendEntriesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAppendEntriesResponse}, {}};

static void InitDefaultsChangeRoleRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_ChangeRoleRequest_default_instance_;
    new (ptr) ::openmldb::api::ChangeRoleRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::ChangeRoleRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ChangeRoleRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsChangeRoleRequest}, {
      &protobuf_common_2eproto::scc_info_EndpointAndTid.base,}};

static void InitDefaultsSendSnapshotRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_SendSnapshotRequest_default_instance_;
    new (ptr) ::openmldb::api::SendSnapshotRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::SendSnapshotRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SendSnapshotRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSendSnapshotRequest}, {
      &protobuf_tablet_2eproto::scc_info_TaskInfo.base,}};

static void InitDefaultsSendIndexDataRequest_EndpointPair() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_SendIndexDataRequest_EndpointPair_default_instance_;
    new (ptr) ::openmldb::api::SendIndexDataRequest_EndpointPair();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::SendIndexDataRequest_EndpointPair::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SendIndexDataRequest_EndpointPair =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSendIndexDataRequest_EndpointPair}, {}};

static void InitDefaultsSendIndexDataRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_SendIndexDataRequest_default_instance_;
    new (ptr) ::openmldb::api::SendIndexDataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::SendIndexDataRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SendIndexDataRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSendIndexDataRequest}, {
      &protobuf_tablet_2eproto::scc_info_SendIndexDataRequest_EndpointPair.base,
      &protobuf_tablet_2eproto::scc_info_TaskInfo.base,}};

static void InitDefaultsSendDataRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_SendDataRequest_default_instance_;
    new (ptr) ::openmldb::api::SendDataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::SendDataRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SendDataRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSendDataRequest}, {}};

static void InitDefaultsChangeRoleResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_ChangeRoleResponse_default_instance_;
    new (ptr) ::openmldb::api::ChangeRoleResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::ChangeRoleResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChangeRoleResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChangeRoleResponse}, {}};

static void InitDefaultsGetTableStatusRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_GetTableStatusRequest_default_instance_;
    new (ptr) ::openmldb::api::GetTableStatusRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::GetTableStatusRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetTableStatusRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetTableStatusRequest}, {}};

static void InitDefaultsTsIdxStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_TsIdxStatus_default_instance_;
    new (ptr) ::openmldb::api::TsIdxStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::TsIdxStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TsIdxStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTsIdxStatus}, {}};

static void InitDefaultsTableStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_TableStatus_default_instance_;
    new (ptr) ::openmldb::api::TableStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::TableStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TableStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTableStatus}, {
      &protobuf_tablet_2eproto::scc_info_TsIdxStatus.base,}};

static void InitDefaultsGetTableStatusResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_GetTableStatusResponse_default_instance_;
    new (ptr) ::openmldb::api::GetTableStatusResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::GetTableStatusResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetTableStatusResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetTableStatusResponse}, {
      &protobuf_tablet_2eproto::scc_info_TableStatus.base,}};

static void InitDefaultsGetRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_GetRequest_default_instance_;
    new (ptr) ::openmldb::api::GetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::GetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetRequest}, {}};

static void InitDefaultsGetResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_GetResponse_default_instance_;
    new (ptr) ::openmldb::api::GetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::GetResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetResponse}, {}};

static void InitDefaultsCountRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_CountRequest_default_instance_;
    new (ptr) ::openmldb::api::CountRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::CountRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CountRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCountRequest}, {}};

static void InitDefaultsCountResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_CountResponse_default_instance_;
    new (ptr) ::openmldb::api::CountResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::CountResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CountResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCountResponse}, {}};

static void InitDefaultsGetTermPairRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_GetTermPairRequest_default_instance_;
    new (ptr) ::openmldb::api::GetTermPairRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::GetTermPairRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetTermPairRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetTermPairRequest}, {}};

static void InitDefaultsGetTermPairResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_GetTermPairResponse_default_instance_;
    new (ptr) ::openmldb::api::GetTermPairResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::GetTermPairResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetTermPairResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetTermPairResponse}, {}};

static void InitDefaultsGetManifestRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_GetManifestRequest_default_instance_;
    new (ptr) ::openmldb::api::GetManifestRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::GetManifestRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetManifestRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetManifestRequest}, {}};

static void InitDefaultsGetManifestResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_GetManifestResponse_default_instance_;
    new (ptr) ::openmldb::api::GetManifestResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::GetManifestResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetManifestResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetManifestResponse}, {
      &protobuf_tablet_2eproto::scc_info_Manifest.base,}};

static void InitDefaultsGetTableFollowerRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_GetTableFollowerRequest_default_instance_;
    new (ptr) ::openmldb::api::GetTableFollowerRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::GetTableFollowerRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetTableFollowerRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetTableFollowerRequest}, {}};

static void InitDefaultsFollowerInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_FollowerInfo_default_instance_;
    new (ptr) ::openmldb::api::FollowerInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::FollowerInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FollowerInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFollowerInfo}, {}};

static void InitDefaultsGetTableFollowerResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_GetTableFollowerResponse_default_instance_;
    new (ptr) ::openmldb::api::GetTableFollowerResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::GetTableFollowerResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetTableFollowerResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetTableFollowerResponse}, {
      &protobuf_tablet_2eproto::scc_info_FollowerInfo.base,}};

static void InitDefaultsCheckFileRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_CheckFileRequest_default_instance_;
    new (ptr) ::openmldb::api::CheckFileRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::CheckFileRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CheckFileRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCheckFileRequest}, {}};

static void InitDefaultsAddIndexRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_AddIndexRequest_default_instance_;
    new (ptr) ::openmldb::api::AddIndexRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::AddIndexRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AddIndexRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAddIndexRequest}, {
      &protobuf_common_2eproto::scc_info_ColumnKey.base,}};

static void InitDefaultsSetModeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_SetModeRequest_default_instance_;
    new (ptr) ::openmldb::api::SetModeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::SetModeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetModeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetModeRequest}, {}};

static void InitDefaultsEmptyRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_EmptyRequest_default_instance_;
    new (ptr) ::openmldb::api::EmptyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::EmptyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EmptyRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmptyRequest}, {}};

static void InitDefaultsConnectZKRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_ConnectZKRequest_default_instance_;
    new (ptr) ::openmldb::api::ConnectZKRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::ConnectZKRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConnectZKRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConnectZKRequest}, {}};

static void InitDefaultsDisConnectZKRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_DisConnectZKRequest_default_instance_;
    new (ptr) ::openmldb::api::DisConnectZKRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::DisConnectZKRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DisConnectZKRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDisConnectZKRequest}, {}};

static void InitDefaultsHttpRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_HttpRequest_default_instance_;
    new (ptr) ::openmldb::api::HttpRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::HttpRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HttpRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHttpRequest}, {}};

static void InitDefaultsHttpResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_HttpResponse_default_instance_;
    new (ptr) ::openmldb::api::HttpResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::HttpResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HttpResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHttpResponse}, {}};

static void InitDefaultsDeleteIndexRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_DeleteIndexRequest_default_instance_;
    new (ptr) ::openmldb::api::DeleteIndexRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::DeleteIndexRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteIndexRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteIndexRequest}, {}};

static void InitDefaultsDumpIndexDataRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_DumpIndexDataRequest_default_instance_;
    new (ptr) ::openmldb::api::DumpIndexDataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::DumpIndexDataRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DumpIndexDataRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDumpIndexDataRequest}, {
      &protobuf_common_2eproto::scc_info_ColumnKey.base,
      &protobuf_tablet_2eproto::scc_info_TaskInfo.base,}};

static void InitDefaultsLoadIndexDataRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_LoadIndexDataRequest_default_instance_;
    new (ptr) ::openmldb::api::LoadIndexDataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::LoadIndexDataRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LoadIndexDataRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLoadIndexDataRequest}, {
      &protobuf_tablet_2eproto::scc_info_TaskInfo.base,}};

static void InitDefaultsExtractMultiIndexDataRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_ExtractMultiIndexDataRequest_default_instance_;
    new (ptr) ::openmldb::api::ExtractMultiIndexDataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::ExtractMultiIndexDataRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ExtractMultiIndexDataRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsExtractMultiIndexDataRequest}, {
      &protobuf_common_2eproto::scc_info_ColumnKey.base,}};

static void InitDefaultsExtractIndexDataRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_ExtractIndexDataRequest_default_instance_;
    new (ptr) ::openmldb::api::ExtractIndexDataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::ExtractIndexDataRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ExtractIndexDataRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsExtractIndexDataRequest}, {
      &protobuf_common_2eproto::scc_info_ColumnKey.base,
      &protobuf_tablet_2eproto::scc_info_TaskInfo.base,}};

static void InitDefaultsColumns() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_Columns_default_instance_;
    new (ptr) ::openmldb::api::Columns();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::Columns::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Columns =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsColumns}, {}};

static void InitDefaultsCancelOPRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_CancelOPRequest_default_instance_;
    new (ptr) ::openmldb::api::CancelOPRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::CancelOPRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CancelOPRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCancelOPRequest}, {}};

static void InitDefaultsRealEndpointPair() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_RealEndpointPair_default_instance_;
    new (ptr) ::openmldb::api::RealEndpointPair();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::RealEndpointPair::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RealEndpointPair =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRealEndpointPair}, {}};

static void InitDefaultsUpdateRealEndpointMapRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_UpdateRealEndpointMapRequest_default_instance_;
    new (ptr) ::openmldb::api::UpdateRealEndpointMapRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::UpdateRealEndpointMapRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UpdateRealEndpointMapRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUpdateRealEndpointMapRequest}, {
      &protobuf_tablet_2eproto::scc_info_RealEndpointPair.base,}};

static void InitDefaultsQueryRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_QueryRequest_default_instance_;
    new (ptr) ::openmldb::api::QueryRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::QueryRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QueryRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQueryRequest}, {}};

static void InitDefaultsQueryResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_QueryResponse_default_instance_;
    new (ptr) ::openmldb::api::QueryResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::QueryResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QueryResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQueryResponse}, {}};

static void InitDefaultsSQLBatchRequestQueryRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_SQLBatchRequestQueryRequest_default_instance_;
    new (ptr) ::openmldb::api::SQLBatchRequestQueryRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::SQLBatchRequestQueryRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SQLBatchRequestQueryRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSQLBatchRequestQueryRequest}, {}};

static void InitDefaultsSQLBatchRequestQueryResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_SQLBatchRequestQueryResponse_default_instance_;
    new (ptr) ::openmldb::api::SQLBatchRequestQueryResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::SQLBatchRequestQueryResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SQLBatchRequestQueryResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSQLBatchRequestQueryResponse}, {}};

static void InitDefaultsExplainRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_ExplainRequest_default_instance_;
    new (ptr) ::openmldb::api::ExplainRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::ExplainRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExplainRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExplainRequest}, {}};

static void InitDefaultsExplainResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_ExplainResponse_default_instance_;
    new (ptr) ::openmldb::api::ExplainResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::ExplainResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExplainResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExplainResponse}, {}};

static void InitDefaultsRefreshRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_RefreshRequest_default_instance_;
    new (ptr) ::openmldb::api::RefreshRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::RefreshRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RefreshRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRefreshRequest}, {}};

static void InitDefaultsGetCatalogRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_GetCatalogRequest_default_instance_;
    new (ptr) ::openmldb::api::GetCatalogRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::GetCatalogRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetCatalogRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetCatalogRequest}, {}};

static void InitDefaultsGetCatalogResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_GetCatalogResponse_default_instance_;
    new (ptr) ::openmldb::api::GetCatalogResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::GetCatalogResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetCatalogResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetCatalogResponse}, {
      &protobuf_common_2eproto::scc_info_CatalogInfo.base,}};

static void InitDefaultsDataBlockInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_DataBlockInfo_default_instance_;
    new (ptr) ::openmldb::api::DataBlockInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::DataBlockInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DataBlockInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDataBlockInfo}, {}};

static void InitDefaultsBinlogInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_BinlogInfo_default_instance_;
    new (ptr) ::openmldb::api::BinlogInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::BinlogInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_BinlogInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsBinlogInfo}, {
      &protobuf_tablet_2eproto::scc_info_Dimension.base,
      &protobuf_tablet_2eproto::scc_info_TSDimension.base,}};

static void InitDefaultsSegment_KeyEntries_KeyEntry_TimeEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_Segment_KeyEntries_KeyEntry_TimeEntry_default_instance_;
    new (ptr) ::openmldb::api::Segment_KeyEntries_KeyEntry_TimeEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::Segment_KeyEntries_KeyEntry_TimeEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Segment_KeyEntries_KeyEntry_TimeEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSegment_KeyEntries_KeyEntry_TimeEntry}, {}};

static void InitDefaultsSegment_KeyEntries_KeyEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_Segment_KeyEntries_KeyEntry_default_instance_;
    new (ptr) ::openmldb::api::Segment_KeyEntries_KeyEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::Segment_KeyEntries_KeyEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Segment_KeyEntries_KeyEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSegment_KeyEntries_KeyEntry}, {
      &protobuf_tablet_2eproto::scc_info_Segment_KeyEntries_KeyEntry_TimeEntry.base,}};

static void InitDefaultsSegment_KeyEntries() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_Segment_KeyEntries_default_instance_;
    new (ptr) ::openmldb::api::Segment_KeyEntries();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::Segment_KeyEntries::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Segment_KeyEntries =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSegment_KeyEntries}, {
      &protobuf_tablet_2eproto::scc_info_Segment_KeyEntries_KeyEntry.base,}};

static void InitDefaultsSegment() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_Segment_default_instance_;
    new (ptr) ::openmldb::api::Segment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::Segment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Segment =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSegment}, {
      &protobuf_tablet_2eproto::scc_info_Segment_KeyEntries.base,}};

static void InitDefaultsBulkLoadIndex() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_BulkLoadIndex_default_instance_;
    new (ptr) ::openmldb::api::BulkLoadIndex();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::BulkLoadIndex::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BulkLoadIndex =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBulkLoadIndex}, {
      &protobuf_tablet_2eproto::scc_info_Segment.base,}};

static void InitDefaultsBulkLoadRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_BulkLoadRequest_default_instance_;
    new (ptr) ::openmldb::api::BulkLoadRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::BulkLoadRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_BulkLoadRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsBulkLoadRequest}, {
      &protobuf_tablet_2eproto::scc_info_DataBlockInfo.base,
      &protobuf_tablet_2eproto::scc_info_BinlogInfo.base,
      &protobuf_tablet_2eproto::scc_info_BulkLoadIndex.base,}};

static void InitDefaultsBulkLoadInfoRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_BulkLoadInfoRequest_default_instance_;
    new (ptr) ::openmldb::api::BulkLoadInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::BulkLoadInfoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BulkLoadInfoRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBulkLoadInfoRequest}, {}};

static void InitDefaultsBulkLoadInfoResponse_InnerIndexSt_IndexDef() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_BulkLoadInfoResponse_InnerIndexSt_IndexDef_default_instance_;
    new (ptr) ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt_IndexDef();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt_IndexDef::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BulkLoadInfoResponse_InnerIndexSt_IndexDef =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBulkLoadInfoResponse_InnerIndexSt_IndexDef}, {}};

static void InitDefaultsBulkLoadInfoResponse_InnerIndexSt() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_BulkLoadInfoResponse_InnerIndexSt_default_instance_;
    new (ptr) ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BulkLoadInfoResponse_InnerIndexSt =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBulkLoadInfoResponse_InnerIndexSt}, {
      &protobuf_tablet_2eproto::scc_info_BulkLoadInfoResponse_InnerIndexSt_IndexDef.base,}};

static void InitDefaultsBulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry_default_instance_;
    new (ptr) ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry}, {}};

static void InitDefaultsBulkLoadInfoResponse_InnerSegments_Segment() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_BulkLoadInfoResponse_InnerSegments_Segment_default_instance_;
    new (ptr) ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BulkLoadInfoResponse_InnerSegments_Segment =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBulkLoadInfoResponse_InnerSegments_Segment}, {
      &protobuf_tablet_2eproto::scc_info_BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry.base,}};

static void InitDefaultsBulkLoadInfoResponse_InnerSegments() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_BulkLoadInfoResponse_InnerSegments_default_instance_;
    new (ptr) ::openmldb::api::BulkLoadInfoResponse_InnerSegments();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::BulkLoadInfoResponse_InnerSegments::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BulkLoadInfoResponse_InnerSegments =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBulkLoadInfoResponse_InnerSegments}, {
      &protobuf_tablet_2eproto::scc_info_BulkLoadInfoResponse_InnerSegments_Segment.base,}};

static void InitDefaultsBulkLoadInfoResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_BulkLoadInfoResponse_default_instance_;
    new (ptr) ::openmldb::api::BulkLoadInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::BulkLoadInfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_BulkLoadInfoResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsBulkLoadInfoResponse}, {
      &protobuf_tablet_2eproto::scc_info_BulkLoadInfoResponse_InnerIndexSt.base,
      &protobuf_tablet_2eproto::scc_info_BulkLoadInfoResponse_InnerSegments.base,}};

static void InitDefaultsCreateFunctionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_CreateFunctionRequest_default_instance_;
    new (ptr) ::openmldb::api::CreateFunctionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::CreateFunctionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateFunctionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateFunctionRequest}, {
      &protobuf_common_2eproto::scc_info_ExternalFun.base,}};

static void InitDefaultsCreateFunctionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_CreateFunctionResponse_default_instance_;
    new (ptr) ::openmldb::api::CreateFunctionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::CreateFunctionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateFunctionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateFunctionResponse}, {}};

static void InitDefaultsDropFunctionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_DropFunctionRequest_default_instance_;
    new (ptr) ::openmldb::api::DropFunctionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::DropFunctionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DropFunctionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDropFunctionRequest}, {
      &protobuf_common_2eproto::scc_info_ExternalFun.base,}};

static void InitDefaultsDropFunctionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_DropFunctionResponse_default_instance_;
    new (ptr) ::openmldb::api::DropFunctionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::DropFunctionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DropFunctionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDropFunctionResponse}, {}};

static void InitDefaultsCreateAggregatorRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_CreateAggregatorRequest_default_instance_;
    new (ptr) ::openmldb::api::CreateAggregatorRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::CreateAggregatorRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateAggregatorRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateAggregatorRequest}, {
      &protobuf_tablet_2eproto::scc_info_TableMeta.base,}};

static void InitDefaultsCreateAggregatorResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_CreateAggregatorResponse_default_instance_;
    new (ptr) ::openmldb::api::CreateAggregatorResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::CreateAggregatorResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateAggregatorResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateAggregatorResponse}, {}};

static void InitDefaultsGAFDeployStatsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_GAFDeployStatsRequest_default_instance_;
    new (ptr) ::openmldb::api::GAFDeployStatsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::GAFDeployStatsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GAFDeployStatsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGAFDeployStatsRequest}, {}};

static void InitDefaultsDeployStatsResponse_DeployStat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_DeployStatsResponse_DeployStat_default_instance_;
    new (ptr) ::openmldb::api::DeployStatsResponse_DeployStat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::DeployStatsResponse_DeployStat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeployStatsResponse_DeployStat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeployStatsResponse_DeployStat}, {}};

static void InitDefaultsDeployStatsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openmldb::api::_DeployStatsResponse_default_instance_;
    new (ptr) ::openmldb::api::DeployStatsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openmldb::api::DeployStatsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DeployStatsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDeployStatsResponse}, {
      &protobuf_tablet_2eproto::scc_info_DeployStatsResponse_DeployStat.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TaskInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OPInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PartSnapshotOffset.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TableSnapshotOffsetResponse_Table.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TableSnapshotOffsetResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Manifest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Dimension.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TSDimension.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PutRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PutResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExecuteGcRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GeneralRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TaskStatusRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TaskStatusResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteTaskRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GeneralResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScanRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TraverseRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TraverseResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScanResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReplicaRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddReplicaResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TableMeta.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateTableRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateTableMetaForAddFieldRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateTableResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoadTableRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DropTableRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DropTableResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetTableSchemaRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetExpireRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetTableSchemaResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateTTLRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateTTLResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AppendEntriesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AppendEntriesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChangeRoleRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendSnapshotRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendIndexDataRequest_EndpointPair.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendIndexDataRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendDataRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChangeRoleResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetTableStatusRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TsIdxStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TableStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetTableStatusResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CountRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CountResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetTermPairRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetTermPairResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetManifestRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetManifestResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetTableFollowerRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FollowerInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetTableFollowerResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckFileRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddIndexRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetModeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EmptyRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConnectZKRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DisConnectZKRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HttpRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HttpResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteIndexRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DumpIndexDataRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoadIndexDataRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExtractMultiIndexDataRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExtractIndexDataRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Columns.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CancelOPRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RealEndpointPair.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateRealEndpointMapRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SQLBatchRequestQueryRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SQLBatchRequestQueryResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExplainRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExplainResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RefreshRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetCatalogRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetCatalogResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataBlockInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BinlogInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Segment_KeyEntries_KeyEntry_TimeEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Segment_KeyEntries_KeyEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Segment_KeyEntries.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Segment.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BulkLoadIndex.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BulkLoadRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BulkLoadInfoRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BulkLoadInfoResponse_InnerIndexSt_IndexDef.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BulkLoadInfoResponse_InnerIndexSt.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BulkLoadInfoResponse_InnerSegments_Segment.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BulkLoadInfoResponse_InnerSegments.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BulkLoadInfoResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateFunctionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateFunctionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DropFunctionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DropFunctionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateAggregatorRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateAggregatorResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GAFDeployStatsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeployStatsResponse_DeployStat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeployStatsResponse.base);
}

::google::protobuf::Metadata file_level_metadata[109];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[7];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TaskInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TaskInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TaskInfo, op_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TaskInfo, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TaskInfo, task_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TaskInfo, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TaskInfo, endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TaskInfo, is_rpc_send_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TaskInfo, rep_cluster_op_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TaskInfo, task_id_),
  1,
  5,
  6,
  4,
  0,
  3,
  ~0u,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::OPInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::OPInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::OPInfo, op_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::OPInfo, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::OPInfo, task_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::OPInfo, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::OPInfo, task_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::OPInfo, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::OPInfo, end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::OPInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::OPInfo, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::OPInfo, parent_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::OPInfo, vec_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::OPInfo, remote_op_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::OPInfo, for_replica_cluster_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::OPInfo, db_),
  3,
  12,
  5,
  0,
  13,
  4,
  7,
  1,
  6,
  8,
  10,
  9,
  11,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::PartSnapshotOffset, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::PartSnapshotOffset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::PartSnapshotOffset, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::PartSnapshotOffset, offset_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableSnapshotOffsetResponse_Table, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableSnapshotOffsetResponse_Table, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableSnapshotOffsetResponse_Table, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableSnapshotOffsetResponse_Table, parts_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableSnapshotOffsetResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableSnapshotOffsetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableSnapshotOffsetResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableSnapshotOffsetResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableSnapshotOffsetResponse, tables_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Manifest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Manifest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Manifest, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Manifest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Manifest, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Manifest, term_),
  1,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Dimension, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Dimension, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Dimension, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Dimension, idx_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TSDimension, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TSDimension, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TSDimension, ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TSDimension, idx_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::PutRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::PutRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::PutRequest, pk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::PutRequest, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::PutRequest, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::PutRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::PutRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::PutRequest, dimensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::PutRequest, ts_dimensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::PutRequest, format_version_),
  0,
  2,
  1,
  3,
  4,
  ~0u,
  ~0u,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::PutResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::PutResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::PutResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::PutResponse, msg_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DeleteRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DeleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DeleteRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DeleteRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DeleteRequest, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DeleteRequest, idx_name_),
  2,
  3,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExecuteGcRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExecuteGcRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExecuteGcRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExecuteGcRequest, pid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GeneralRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GeneralRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GeneralRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GeneralRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GeneralRequest, task_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GeneralRequest, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GeneralRequest, storage_mode_),
  1,
  2,
  0,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TaskStatusRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TaskStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TaskStatusResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TaskStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TaskStatusResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TaskStatusResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TaskStatusResponse, task_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DeleteTaskRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DeleteTaskRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DeleteTaskRequest, op_id_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GeneralResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GeneralResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GeneralResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GeneralResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GeneralResponse, additional_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GeneralResponse, count_),
  1,
  0,
  ~0u,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ScanRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ScanRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ScanRequest, pk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ScanRequest, st_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ScanRequest, et_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ScanRequest, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ScanRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ScanRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ScanRequest, enable_remove_duplicated_record_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ScanRequest, idx_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ScanRequest, enable_remove_ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ScanRequest, projection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ScanRequest, pid_group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ScanRequest, use_attachment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ScanRequest, skip_record_num_),
  0,
  2,
  3,
  4,
  5,
  6,
  7,
  1,
  8,
  ~0u,
  ~0u,
  9,
  10,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TraverseRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TraverseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TraverseRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TraverseRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TraverseRequest, idx_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TraverseRequest, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TraverseRequest, pk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TraverseRequest, ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TraverseRequest, enable_remove_duplicated_record_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TraverseRequest, skip_current_pk_),
  2,
  3,
  0,
  7,
  1,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TraverseResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TraverseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TraverseResponse, pairs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TraverseResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TraverseResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TraverseResponse, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TraverseResponse, pk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TraverseResponse, ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TraverseResponse, is_finish_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TraverseResponse, snapshot_id_),
  0,
  1,
  3,
  4,
  2,
  5,
  7,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ScanResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ScanResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ScanResponse, pairs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ScanResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ScanResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ScanResponse, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ScanResponse, buf_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ScanResponse, is_finish_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ReplicaRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ReplicaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ReplicaRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ReplicaRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ReplicaRequest, endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ReplicaRequest, task_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ReplicaRequest, remote_tid_),
  2,
  3,
  0,
  1,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::AddReplicaResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::AddReplicaResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::AddReplicaResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::AddReplicaResponse, msg_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableMeta, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableMeta, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableMeta, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableMeta, seg_cnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableMeta, replicas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableMeta, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableMeta, term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableMeta, compress_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableMeta, key_entry_max_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableMeta, column_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableMeta, column_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableMeta, added_column_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableMeta, format_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableMeta, db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableMeta, schema_versions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableMeta, table_partition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableMeta, storage_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableMeta, base_table_tid_),
  2,
  0,
  3,
  4,
  ~0u,
  10,
  6,
  5,
  7,
  ~0u,
  ~0u,
  ~0u,
  8,
  1,
  ~0u,
  ~0u,
  11,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateTableRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateTableRequest, table_meta_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::UpdateTableMetaForAddFieldRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::UpdateTableMetaForAddFieldRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::UpdateTableMetaForAddFieldRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::UpdateTableMetaForAddFieldRequest, column_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::UpdateTableMetaForAddFieldRequest, column_descs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::UpdateTableMetaForAddFieldRequest, version_pair_),
  2,
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateTableResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateTableResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateTableResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateTableResponse, msg_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::LoadTableRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::LoadTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::LoadTableRequest, table_meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::LoadTableRequest, task_info_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DropTableRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DropTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DropTableRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DropTableRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DropTableRequest, task_info_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DropTableResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DropTableResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DropTableResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DropTableResponse, msg_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableSchemaRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableSchemaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableSchemaRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableSchemaRequest, pid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SetExpireRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SetExpireRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SetExpireRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SetExpireRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SetExpireRequest, is_expire_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableSchemaResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableSchemaResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableSchemaResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableSchemaResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableSchemaResponse, table_meta_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::UpdateTTLRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::UpdateTTLRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::UpdateTTLRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::UpdateTTLRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::UpdateTTLRequest, ttl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::UpdateTTLRequest, index_name_),
  2,
  3,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::UpdateTTLResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::UpdateTTLResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::UpdateTTLResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::UpdateTTLResponse, msg_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::LogEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::LogEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::LogEntry, term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::LogEntry, log_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::LogEntry, pk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::LogEntry, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::LogEntry, ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::LogEntry, dimensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::LogEntry, method_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::LogEntry, ts_dimensions_),
  2,
  3,
  0,
  1,
  4,
  ~0u,
  5,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::AppendEntriesRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::AppendEntriesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::AppendEntriesRequest, pre_log_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::AppendEntriesRequest, entries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::AppendEntriesRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::AppendEntriesRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::AppendEntriesRequest, term_),
  0,
  ~0u,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::AppendEntriesResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::AppendEntriesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::AppendEntriesResponse, log_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::AppendEntriesResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::AppendEntriesResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::AppendEntriesResponse, term_),
  1,
  3,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ChangeRoleRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ChangeRoleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ChangeRoleRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ChangeRoleRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ChangeRoleRequest, term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ChangeRoleRequest, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ChangeRoleRequest, replicas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ChangeRoleRequest, endpoint_tid_),
  0,
  1,
  2,
  3,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendSnapshotRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendSnapshotRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendSnapshotRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendSnapshotRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendSnapshotRequest, endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendSnapshotRequest, task_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendSnapshotRequest, remote_tid_),
  2,
  3,
  0,
  1,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendIndexDataRequest_EndpointPair, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendIndexDataRequest_EndpointPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendIndexDataRequest_EndpointPair, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendIndexDataRequest_EndpointPair, endpoint_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendIndexDataRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendIndexDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendIndexDataRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendIndexDataRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendIndexDataRequest, pairs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendIndexDataRequest, task_info_),
  1,
  2,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendDataRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendDataRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendDataRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendDataRequest, file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendDataRequest, block_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendDataRequest, block_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendDataRequest, eof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendDataRequest, dir_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SendDataRequest, storage_mode_),
  2,
  3,
  0,
  4,
  5,
  6,
  1,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ChangeRoleResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ChangeRoleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ChangeRoleResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ChangeRoleResponse, msg_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableStatusRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableStatusRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableStatusRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableStatusRequest, need_schema_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TsIdxStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TsIdxStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TsIdxStatus, idx_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TsIdxStatus, seg_cnts_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableStatus, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableStatus, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableStatus, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableStatus, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableStatus, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableStatus, is_expire_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableStatus, time_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableStatus, record_cnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableStatus, idx_cnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableStatus, ts_idx_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableStatus, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableStatus, record_byte_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableStatus, record_idx_byte_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableStatus, record_pk_cnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableStatus, compress_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableStatus, skiplist_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableStatus, diskused_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::TableStatus, storage_mode_),
  1,
  2,
  3,
  15,
  4,
  5,
  6,
  7,
  8,
  ~0u,
  0,
  9,
  10,
  11,
  12,
  13,
  14,
  16,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableStatusResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableStatusResponse, all_table_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableStatusResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableStatusResponse, msg_),
  ~0u,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetRequest, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetRequest, ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetRequest, idx_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetRequest, et_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetRequest, et_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetRequest, projection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetRequest, pid_group_),
  2,
  3,
  0,
  4,
  1,
  6,
  5,
  7,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetResponse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetResponse, ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetResponse, value_),
  4,
  0,
  1,
  3,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CountRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CountRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CountRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CountRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CountRequest, idx_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CountRequest, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CountRequest, filter_expired_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CountRequest, enable_remove_duplicated_record_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CountRequest, st_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CountRequest, st_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CountRequest, et_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CountRequest, et_type_),
  2,
  3,
  0,
  1,
  6,
  7,
  4,
  8,
  5,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CountResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CountResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CountResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CountResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CountResponse, count_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTermPairRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTermPairRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTermPairRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTermPairRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTermPairRequest, storage_mode_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTermPairResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTermPairResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTermPairResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTermPairResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTermPairResponse, term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTermPairResponse, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTermPairResponse, has_table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTermPairResponse, is_leader_),
  3,
  0,
  1,
  2,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetManifestRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetManifestRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetManifestRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetManifestRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetManifestRequest, storage_mode_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetManifestResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetManifestResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetManifestResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetManifestResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetManifestResponse, manifest_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableFollowerRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableFollowerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableFollowerRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableFollowerRequest, pid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::FollowerInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::FollowerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::FollowerInfo, endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::FollowerInfo, offset_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableFollowerResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableFollowerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableFollowerResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableFollowerResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableFollowerResponse, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetTableFollowerResponse, follower_info_),
  2,
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CheckFileRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CheckFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CheckFileRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CheckFileRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CheckFileRequest, file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CheckFileRequest, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CheckFileRequest, dir_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CheckFileRequest, storage_mode_),
  2,
  3,
  0,
  4,
  1,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::AddIndexRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::AddIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::AddIndexRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::AddIndexRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::AddIndexRequest, column_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::AddIndexRequest, column_keys_),
  1,
  2,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SetModeRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SetModeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SetModeRequest, follower_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::EmptyRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::EmptyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ConnectZKRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ConnectZKRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DisConnectZKRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DisConnectZKRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::HttpRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::HttpRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::HttpResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::HttpResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DeleteIndexRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DeleteIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DeleteIndexRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DeleteIndexRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DeleteIndexRequest, idx_name_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DumpIndexDataRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DumpIndexDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DumpIndexDataRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DumpIndexDataRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DumpIndexDataRequest, partition_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DumpIndexDataRequest, idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DumpIndexDataRequest, column_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DumpIndexDataRequest, task_info_),
  2,
  3,
  4,
  5,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::LoadIndexDataRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::LoadIndexDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::LoadIndexDataRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::LoadIndexDataRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::LoadIndexDataRequest, partition_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::LoadIndexDataRequest, task_info_),
  1,
  2,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExtractMultiIndexDataRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExtractMultiIndexDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExtractMultiIndexDataRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExtractMultiIndexDataRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExtractMultiIndexDataRequest, partition_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExtractMultiIndexDataRequest, column_key_),
  0,
  1,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExtractIndexDataRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExtractIndexDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExtractIndexDataRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExtractIndexDataRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExtractIndexDataRequest, partition_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExtractIndexDataRequest, idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExtractIndexDataRequest, column_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExtractIndexDataRequest, task_info_),
  2,
  3,
  4,
  5,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Columns, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Columns, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Columns, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Columns, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Columns, type_),
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CancelOPRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CancelOPRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CancelOPRequest, op_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::RealEndpointPair, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::RealEndpointPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::RealEndpointPair, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::RealEndpointPair, real_endpoint_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::UpdateRealEndpointMapRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::UpdateRealEndpointMapRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::UpdateRealEndpointMapRequest, real_endpoint_map_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::QueryRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::QueryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::QueryRequest, sql_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::QueryRequest, db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::QueryRequest, is_batch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::QueryRequest, is_debug_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::QueryRequest, sp_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::QueryRequest, is_procedure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::QueryRequest, task_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::QueryRequest, row_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::QueryRequest, row_slices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::QueryRequest, parameter_row_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::QueryRequest, parameter_row_slices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::QueryRequest, parameter_types_),
  0,
  1,
  3,
  4,
  2,
  5,
  7,
  6,
  8,
  9,
  10,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::QueryResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::QueryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::QueryResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::QueryResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::QueryResponse, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::QueryResponse, byte_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::QueryResponse, schema_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::QueryResponse, row_slices_),
  2,
  0,
  3,
  4,
  1,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SQLBatchRequestQueryRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SQLBatchRequestQueryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SQLBatchRequestQueryRequest, sql_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SQLBatchRequestQueryRequest, db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SQLBatchRequestQueryRequest, common_column_indices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SQLBatchRequestQueryRequest, is_debug_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SQLBatchRequestQueryRequest, sp_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SQLBatchRequestQueryRequest, is_procedure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SQLBatchRequestQueryRequest, row_sizes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SQLBatchRequestQueryRequest, common_slices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SQLBatchRequestQueryRequest, non_common_slices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SQLBatchRequestQueryRequest, task_id_),
  0,
  1,
  ~0u,
  3,
  2,
  4,
  ~0u,
  5,
  7,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SQLBatchRequestQueryResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SQLBatchRequestQueryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SQLBatchRequestQueryResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SQLBatchRequestQueryResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SQLBatchRequestQueryResponse, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SQLBatchRequestQueryResponse, schema_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SQLBatchRequestQueryResponse, common_column_indices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SQLBatchRequestQueryResponse, row_sizes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SQLBatchRequestQueryResponse, common_slices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::SQLBatchRequestQueryResponse, non_common_slices_),
  2,
  0,
  3,
  1,
  ~0u,
  ~0u,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExplainRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExplainRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExplainRequest, sql_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExplainRequest, db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExplainRequest, is_batch_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExplainResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExplainResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExplainResponse, input_schema_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExplainResponse, logical_plan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExplainResponse, physical_plan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExplainResponse, ir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExplainResponse, output_schema_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::ExplainResponse, is_batch_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::RefreshRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::RefreshRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::RefreshRequest, tid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetCatalogRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetCatalogRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetCatalogResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetCatalogResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetCatalogResponse, catalog_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetCatalogResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GetCatalogResponse, msg_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DataBlockInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DataBlockInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DataBlockInfo, ref_cnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DataBlockInfo, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DataBlockInfo, length_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BinlogInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BinlogInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BinlogInfo, dimensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BinlogInfo, ts_dimensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BinlogInfo, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BinlogInfo, block_id_),
  ~0u,
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Segment_KeyEntries_KeyEntry_TimeEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Segment_KeyEntries_KeyEntry_TimeEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Segment_KeyEntries_KeyEntry_TimeEntry, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Segment_KeyEntries_KeyEntry_TimeEntry, block_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Segment_KeyEntries_KeyEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Segment_KeyEntries_KeyEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Segment_KeyEntries_KeyEntry, key_entry_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Segment_KeyEntries_KeyEntry, time_entry_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Segment_KeyEntries, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Segment_KeyEntries, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Segment_KeyEntries, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Segment_KeyEntries, key_entry_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Segment, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Segment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Segment, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::Segment, key_entries_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadIndex, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadIndex, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadIndex, inner_index_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadIndex, segment_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadRequest, part_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadRequest, block_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadRequest, binlog_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadRequest, index_region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadRequest, eof_),
  0,
  1,
  2,
  ~0u,
  ~0u,
  ~0u,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoRequest, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoRequest, pid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoResponse_InnerIndexSt_IndexDef, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoResponse_InnerIndexSt_IndexDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoResponse_InnerIndexSt_IndexDef, ts_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoResponse_InnerIndexSt_IndexDef, is_ready_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoResponse_InnerIndexSt, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoResponse_InnerIndexSt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoResponse_InnerIndexSt, index_def_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment, ts_cnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment, ts_idx_map_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoResponse_InnerSegments, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoResponse_InnerSegments, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoResponse_InnerSegments, segment_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoResponse, seg_cnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoResponse, inner_index_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoResponse, inner_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::BulkLoadInfoResponse, inner_segments_),
  1,
  0,
  2,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateFunctionRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateFunctionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateFunctionRequest, fun_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateFunctionResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateFunctionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateFunctionResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateFunctionResponse, msg_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DropFunctionRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DropFunctionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DropFunctionRequest, fun_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DropFunctionResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DropFunctionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DropFunctionResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DropFunctionResponse, msg_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateAggregatorRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateAggregatorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateAggregatorRequest, base_table_meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateAggregatorRequest, aggr_table_tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateAggregatorRequest, aggr_table_pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateAggregatorRequest, index_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateAggregatorRequest, aggr_func_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateAggregatorRequest, aggr_col_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateAggregatorRequest, order_by_col_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateAggregatorRequest, bucket_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateAggregatorRequest, filter_col_),
  5,
  6,
  7,
  8,
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateAggregatorResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateAggregatorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateAggregatorResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::CreateAggregatorResponse, msg_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GAFDeployStatsRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::GAFDeployStatsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DeployStatsResponse_DeployStat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DeployStatsResponse_DeployStat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DeployStatsResponse_DeployStat, deploy_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DeployStatsResponse_DeployStat, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DeployStatsResponse_DeployStat, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DeployStatsResponse_DeployStat, total_),
  0,
  1,
  3,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DeployStatsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DeployStatsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DeployStatsResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DeployStatsResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openmldb::api::DeployStatsResponse, rows_),
  1,
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, sizeof(::openmldb::api::TaskInfo)},
  { 21, 40, sizeof(::openmldb::api::OPInfo)},
  { 54, 61, sizeof(::openmldb::api::PartSnapshotOffset)},
  { 63, 70, sizeof(::openmldb::api::TableSnapshotOffsetResponse_Table)},
  { 72, 80, sizeof(::openmldb::api::TableSnapshotOffsetResponse)},
  { 83, 92, sizeof(::openmldb::api::Manifest)},
  { 96, 103, sizeof(::openmldb::api::Dimension)},
  { 105, 112, sizeof(::openmldb::api::TSDimension)},
  { 114, 127, sizeof(::openmldb::api::PutRequest)},
  { 135, 142, sizeof(::openmldb::api::PutResponse)},
  { 144, 153, sizeof(::openmldb::api::DeleteRequest)},
  { 157, 164, sizeof(::openmldb::api::ExecuteGcRequest)},
  { 166, 176, sizeof(::openmldb::api::GeneralRequest)},
  { 181, 186, sizeof(::openmldb::api::TaskStatusRequest)},
  { 186, 194, sizeof(::openmldb::api::TaskStatusResponse)},
  { 197, 203, sizeof(::openmldb::api::DeleteTaskRequest)},
  { 204, 213, sizeof(::openmldb::api::GeneralResponse)},
  { 217, 235, sizeof(::openmldb::api::ScanRequest)},
  { 248, 261, sizeof(::openmldb::api::TraverseRequest)},
  { 269, 282, sizeof(::openmldb::api::TraverseResponse)},
  { 290, 301, sizeof(::openmldb::api::ScanResponse)},
  { 307, 317, sizeof(::openmldb::api::ReplicaRequest)},
  { 322, 329, sizeof(::openmldb::api::AddReplicaResponse)},
  { 331, 354, sizeof(::openmldb::api::TableMeta)},
  { 372, 378, sizeof(::openmldb::api::CreateTableRequest)},
  { 379, 388, sizeof(::openmldb::api::UpdateTableMetaForAddFieldRequest)},
  { 392, 399, sizeof(::openmldb::api::CreateTableResponse)},
  { 401, 408, sizeof(::openmldb::api::LoadTableRequest)},
  { 410, 418, sizeof(::openmldb::api::DropTableRequest)},
  { 421, 428, sizeof(::openmldb::api::DropTableResponse)},
  { 430, 437, sizeof(::openmldb::api::GetTableSchemaRequest)},
  { 439, 447, sizeof(::openmldb::api::SetExpireRequest)},
  { 450, 458, sizeof(::openmldb::api::GetTableSchemaResponse)},
  { 461, 470, sizeof(::openmldb::api::UpdateTTLRequest)},
  { 474, 481, sizeof(::openmldb::api::UpdateTTLResponse)},
  { 483, 496, sizeof(::openmldb::api::LogEntry)},
  { 504, 514, sizeof(::openmldb::api::AppendEntriesRequest)},
  { 519, 528, sizeof(::openmldb::api::AppendEntriesResponse)},
  { 532, 543, sizeof(::openmldb::api::ChangeRoleRequest)},
  { 549, 559, sizeof(::openmldb::api::SendSnapshotRequest)},
  { 564, 571, sizeof(::openmldb::api::SendIndexDataRequest_EndpointPair)},
  { 573, 582, sizeof(::openmldb::api::SendIndexDataRequest)},
  { 586, 599, sizeof(::openmldb::api::SendDataRequest)},
  { 607, 614, sizeof(::openmldb::api::ChangeRoleResponse)},
  { 616, 624, sizeof(::openmldb::api::GetTableStatusRequest)},
  { 627, 634, sizeof(::openmldb::api::TsIdxStatus)},
  { 636, 659, sizeof(::openmldb::api::TableStatus)},
  { 677, 685, sizeof(::openmldb::api::GetTableStatusResponse)},
  { 688, 703, sizeof(::openmldb::api::GetRequest)},
  { 713, 723, sizeof(::openmldb::api::GetResponse)},
  { 728, 743, sizeof(::openmldb::api::CountRequest)},
  { 753, 761, sizeof(::openmldb::api::CountResponse)},
  { 764, 772, sizeof(::openmldb::api::GetTermPairRequest)},
  { 775, 786, sizeof(::openmldb::api::GetTermPairResponse)},
  { 792, 800, sizeof(::openmldb::api::GetManifestRequest)},
  { 803, 811, sizeof(::openmldb::api::GetManifestResponse)},
  { 814, 821, sizeof(::openmldb::api::GetTableFollowerRequest)},
  { 823, 830, sizeof(::openmldb::api::FollowerInfo)},
  { 832, 841, sizeof(::openmldb::api::GetTableFollowerResponse)},
  { 845, 856, sizeof(::openmldb::api::CheckFileRequest)},
  { 862, 871, sizeof(::openmldb::api::AddIndexRequest)},
  { 875, 881, sizeof(::openmldb::api::SetModeRequest)},
  { 882, 887, sizeof(::openmldb::api::EmptyRequest)},
  { 887, 892, sizeof(::openmldb::api::ConnectZKRequest)},
  { 892, 897, sizeof(::openmldb::api::DisConnectZKRequest)},
  { 897, 902, sizeof(::openmldb::api::HttpRequest)},
  { 902, 907, sizeof(::openmldb::api::HttpResponse)},
  { 907, 915, sizeof(::openmldb::api::DeleteIndexRequest)},
  { 918, 929, sizeof(::openmldb::api::DumpIndexDataRequest)},
  { 935, 944, sizeof(::openmldb::api::LoadIndexDataRequest)},
  { 948, 957, sizeof(::openmldb::api::ExtractMultiIndexDataRequest)},
  { 961, 972, sizeof(::openmldb::api::ExtractIndexDataRequest)},
  { 978, 986, sizeof(::openmldb::api::Columns)},
  { 989, 995, sizeof(::openmldb::api::CancelOPRequest)},
  { 996, 1003, sizeof(::openmldb::api::RealEndpointPair)},
  { 1005, 1011, sizeof(::openmldb::api::UpdateRealEndpointMapRequest)},
  { 1012, 1029, sizeof(::openmldb::api::QueryRequest)},
  { 1041, 1052, sizeof(::openmldb::api::QueryResponse)},
  { 1058, 1073, sizeof(::openmldb::api::SQLBatchRequestQueryRequest)},
  { 1083, 1096, sizeof(::openmldb::api::SQLBatchRequestQueryResponse)},
  { 1104, 1112, sizeof(::openmldb::api::ExplainRequest)},
  { 1115, 1126, sizeof(::openmldb::api::ExplainResponse)},
  { 1132, 1138, sizeof(::openmldb::api::RefreshRequest)},
  { 1139, 1144, sizeof(::openmldb::api::GetCatalogRequest)},
  { 1144, 1152, sizeof(::openmldb::api::GetCatalogResponse)},
  { 1155, 1163, sizeof(::openmldb::api::DataBlockInfo)},
  { 1166, 1175, sizeof(::openmldb::api::BinlogInfo)},
  { 1179, 1186, sizeof(::openmldb::api::Segment_KeyEntries_KeyEntry_TimeEntry)},
  { 1188, 1195, sizeof(::openmldb::api::Segment_KeyEntries_KeyEntry)},
  { 1197, 1204, sizeof(::openmldb::api::Segment_KeyEntries)},
  { 1206, 1213, sizeof(::openmldb::api::Segment)},
  { 1215, 1222, sizeof(::openmldb::api::BulkLoadIndex)},
  { 1224, 1236, sizeof(::openmldb::api::BulkLoadRequest)},
  { 1243, 1250, sizeof(::openmldb::api::BulkLoadInfoRequest)},
  { 1252, 1259, sizeof(::openmldb::api::BulkLoadInfoResponse_InnerIndexSt_IndexDef)},
  { 1261, 1267, sizeof(::openmldb::api::BulkLoadInfoResponse_InnerIndexSt)},
  { 1268, 1275, sizeof(::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry)},
  { 1277, 1284, sizeof(::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment)},
  { 1286, 1292, sizeof(::openmldb::api::BulkLoadInfoResponse_InnerSegments)},
  { 1293, 1304, sizeof(::openmldb::api::BulkLoadInfoResponse)},
  { 1310, 1316, sizeof(::openmldb::api::CreateFunctionRequest)},
  { 1317, 1324, sizeof(::openmldb::api::CreateFunctionResponse)},
  { 1326, 1332, sizeof(::openmldb::api::DropFunctionRequest)},
  { 1333, 1340, sizeof(::openmldb::api::DropFunctionResponse)},
  { 1342, 1356, sizeof(::openmldb::api::CreateAggregatorRequest)},
  { 1365, 1372, sizeof(::openmldb::api::CreateAggregatorResponse)},
  { 1374, 1379, sizeof(::openmldb::api::GAFDeployStatsRequest)},
  { 1379, 1388, sizeof(::openmldb::api::DeployStatsResponse_DeployStat)},
  { 1392, 1400, sizeof(::openmldb::api::DeployStatsResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_TaskInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_OPInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_PartSnapshotOffset_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_TableSnapshotOffsetResponse_Table_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_TableSnapshotOffsetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_Manifest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_Dimension_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_TSDimension_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_PutRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_PutResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_DeleteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_ExecuteGcRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_GeneralRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_TaskStatusRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_TaskStatusResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_DeleteTaskRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_GeneralResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_ScanRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_TraverseRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_TraverseResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_ScanResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_ReplicaRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_AddReplicaResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_TableMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_CreateTableRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_UpdateTableMetaForAddFieldRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_CreateTableResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_LoadTableRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_DropTableRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_DropTableResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_GetTableSchemaRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_SetExpireRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_GetTableSchemaResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_UpdateTTLRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_UpdateTTLResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_LogEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_AppendEntriesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_AppendEntriesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_ChangeRoleRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_SendSnapshotRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_SendIndexDataRequest_EndpointPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_SendIndexDataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_SendDataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_ChangeRoleResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_GetTableStatusRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_TsIdxStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_TableStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_GetTableStatusResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_GetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_GetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_CountRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_CountResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_GetTermPairRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_GetTermPairResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_GetManifestRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_GetManifestResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_GetTableFollowerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_FollowerInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_GetTableFollowerResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_CheckFileRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_AddIndexRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_SetModeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_EmptyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_ConnectZKRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_DisConnectZKRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_HttpRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_HttpResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_DeleteIndexRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_DumpIndexDataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_LoadIndexDataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_ExtractMultiIndexDataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_ExtractIndexDataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_Columns_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_CancelOPRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_RealEndpointPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_UpdateRealEndpointMapRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_QueryRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_QueryResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_SQLBatchRequestQueryRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_SQLBatchRequestQueryResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_ExplainRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_ExplainResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_RefreshRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_GetCatalogRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_GetCatalogResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_DataBlockInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_BinlogInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_Segment_KeyEntries_KeyEntry_TimeEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_Segment_KeyEntries_KeyEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_Segment_KeyEntries_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_Segment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_BulkLoadIndex_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_BulkLoadRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_BulkLoadInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_BulkLoadInfoResponse_InnerIndexSt_IndexDef_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_BulkLoadInfoResponse_InnerIndexSt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_BulkLoadInfoResponse_InnerSegments_Segment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_BulkLoadInfoResponse_InnerSegments_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_BulkLoadInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_CreateFunctionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_CreateFunctionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_DropFunctionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_DropFunctionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_CreateAggregatorRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_CreateAggregatorResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_GAFDeployStatsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_DeployStatsResponse_DeployStat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openmldb::api::_DeployStatsResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tablet.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 109);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014tablet.proto\022\014openmldb.api\032\ntype.proto"
      "\032\014common.proto\032\023sql_procedure.proto\"\362\001\n\010"
      "TaskInfo\022\r\n\005op_id\030\001 \002(\004\022%\n\007op_type\030\002 \002(\016"
      "2\024.openmldb.api.OPType\022)\n\ttask_type\030\003 \002("
      "\0162\026.openmldb.api.TaskType\022(\n\006status\030\004 \002("
      "\0162\030.openmldb.api.TaskStatus\022\020\n\010endpoint\030"
      "\005 \001(\t\022\032\n\013is_rpc_send\030\006 \001(\010:\005false\022\031\n\021rep"
      "_cluster_op_id\030\007 \003(\004\022\022\n\007task_id\030\010 \001(\004:\0010"
      "\"\274\002\n\006OPInfo\022\r\n\005op_id\030\001 \002(\004\022%\n\007op_type\030\002 "
      "\002(\0162\024.openmldb.api.OPType\022\022\n\ntask_index\030"
      "\003 \002(\r\022\014\n\004data\030\004 \002(\t\022-\n\013task_status\030\005 \001(\016"
      "2\030.openmldb.api.TaskStatus\022\025\n\nstart_time"
      "\030\006 \001(\004:\0010\022\023\n\010end_time\030\007 \001(\004:\0010\022\014\n\004name\030\010"
      " \001(\t\022\013\n\003pid\030\t \001(\r\022\021\n\tparent_id\030\n \001(\004\022\017\n\007"
      "vec_idx\030\013 \001(\r\022\024\n\014remote_op_id\030\014 \001(\004\022\036\n\023f"
      "or_replica_cluster\030\r \001(\005:\0010\022\n\n\002db\030\016 \001(\t\""
      "1\n\022PartSnapshotOffset\022\013\n\003pid\030\002 \001(\r\022\016\n\006of"
      "fset\030\003 \001(\004\"\300\001\n\033TableSnapshotOffsetRespon"
      "se\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022\?\n\006tables\030"
      "\003 \003(\0132/.openmldb.api.TableSnapshotOffset"
      "Response.Table\032E\n\005Table\022\013\n\003tid\030\001 \001(\r\022/\n\005"
      "parts\030\002 \003(\0132 .openmldb.api.PartSnapshotO"
      "ffset\"E\n\010Manifest\022\016\n\006offset\030\001 \001(\004\022\014\n\004nam"
      "e\030\002 \001(\t\022\r\n\005count\030\003 \001(\004\022\014\n\004term\030\004 \001(\004\"%\n\t"
      "Dimension\022\013\n\003key\030\001 \001(\t\022\013\n\003idx\030\002 \001(\r\"&\n\013T"
      "SDimension\022\n\n\002ts\030\001 \001(\004\022\013\n\003idx\030\002 \001(\r\"\315\001\n\n"
      "PutRequest\022\n\n\002pk\030\001 \001(\t\022\014\n\004time\030\002 \001(\003\022\r\n\005"
      "value\030\003 \001(\014\022\013\n\003tid\030\004 \001(\r\022\013\n\003pid\030\005 \001(\r\022+\n"
      "\ndimensions\030\006 \003(\0132\027.openmldb.api.Dimensi"
      "on\0224\n\rts_dimensions\030\007 \003(\0132\031.openmldb.api"
      ".TSDimensionB\002\030\001\022\031\n\016format_version\030\010 \001(\r"
      ":\0010\"(\n\013PutResponse\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030"
      "\002 \001(\t\"H\n\rDeleteRequest\022\013\n\003tid\030\001 \001(\r\022\013\n\003p"
      "id\030\002 \001(\r\022\013\n\003key\030\003 \001(\t\022\020\n\010idx_name\030\004 \001(\t\""
      ",\n\020ExecuteGcRequest\022\013\n\003tid\030\001 \001(\r\022\013\n\003pid\030"
      "\002 \001(\r\"\242\001\n\016GeneralRequest\022\013\n\003tid\030\001 \002(\005\022\013\n"
      "\003pid\030\002 \002(\005\022)\n\ttask_info\030\003 \001(\0132\026.openmldb"
      ".api.TaskInfo\022\016\n\006offset\030\004 \001(\004\022;\n\014storage"
      "_mode\030\005 \001(\0162\034.openmldb.common.StorageMod"
      "e:\007kMemory\"\023\n\021TaskStatusRequest\"U\n\022TaskS"
      "tatusResponse\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t"
      "\022$\n\004task\030\003 \003(\0132\026.openmldb.api.TaskInfo\"\""
      "\n\021DeleteTaskRequest\022\r\n\005op_id\030\001 \003(\004\"S\n\017Ge"
      "neralResponse\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t"
      "\022\026\n\016additional_ids\030\003 \003(\003\022\r\n\005count\030\004 \001(\r\""
      "\237\002\n\013ScanRequest\022\n\n\002pk\030\001 \001(\t\022\n\n\002st\030\002 \001(\004\022"
      "\n\n\002et\030\003 \001(\004\022\r\n\005limit\030\004 \001(\r\022\013\n\003tid\030\005 \001(\r\022"
      "\013\n\003pid\030\006 \001(\r\022.\n\037enable_remove_duplicated"
      "_record\030\007 \001(\010:\005false\022\020\n\010idx_name\030\010 \001(\t\022\037"
      "\n\020enable_remove_ts\030\t \001(\010:\005false\022\022\n\nproje"
      "ction\030\n \003(\r\022\021\n\tpid_group\030\013 \003(\r\022\035\n\016use_at"
      "tachment\030\014 \001(\010:\005false\022\032\n\017skip_record_num"
      "\030\r \001(\r:\0010\"\271\001\n\017TraverseRequest\022\013\n\003tid\030\001 \001"
      "(\r\022\013\n\003pid\030\002 \001(\r\022\020\n\010idx_name\030\003 \001(\t\022\022\n\005lim"
      "it\030\004 \001(\r:\003100\022\n\n\002pk\030\005 \001(\t\022\n\n\002ts\030\006 \001(\004\022.\n"
      "\037enable_remove_duplicated_record\030\007 \001(\010:\005"
      "false\022\036\n\017skip_current_pk\030\010 \001(\010:\005false\"\213\001"
      "\n\020TraverseResponse\022\r\n\005pairs\030\001 \001(\014\022\013\n\003msg"
      "\030\002 \001(\t\022\014\n\004code\030\003 \001(\005\022\r\n\005count\030\004 \001(\r\022\n\n\002p"
      "k\030\005 \001(\t\022\n\n\002ts\030\006 \001(\004\022\021\n\tis_finish\030\007 \001(\010\022\023"
      "\n\013snapshot_id\030\010 \001(\004\"r\n\014ScanResponse\022\r\n\005p"
      "airs\030\001 \001(\014\022\013\n\003msg\030\002 \001(\t\022\014\n\004code\030\003 \001(\005\022\r\n"
      "\005count\030\004 \001(\r\022\020\n\010buf_size\030\005 \001(\r\022\027\n\tis_fin"
      "ish\030\006 \001(\010:\004true\"{\n\016ReplicaRequest\022\013\n\003tid"
      "\030\001 \001(\r\022\013\n\003pid\030\002 \001(\r\022\020\n\010endpoint\030\003 \001(\t\022)\n"
      "\ttask_info\030\004 \001(\0132\026.openmldb.api.TaskInfo"
      "\022\022\n\nremote_tid\030\005 \001(\r\"/\n\022AddReplicaRespon"
      "se\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"\354\004\n\tTableM"
      "eta\022\013\n\003tid\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\013\n\003pid\030\003 "
      "\001(\005\022\017\n\007seg_cnt\030\004 \001(\005\022\020\n\010replicas\030\005 \003(\t\022%"
      "\n\004mode\030\006 \001(\0162\027.openmldb.api.TableMode\022\017\n"
      "\004term\030\007 \001(\004:\0010\0222\n\rcompress_type\030\010 \001(\0162\033."
      "openmldb.type.CompressType\022\034\n\024key_entry_"
      "max_height\030\t \001(\r\0220\n\013column_desc\030\n \003(\0132\033."
      "openmldb.common.ColumnDesc\022.\n\ncolumn_key"
      "\030\013 \003(\0132\032.openmldb.common.ColumnKey\0226\n\021ad"
      "ded_column_desc\030\014 \003(\0132\033.openmldb.common."
      "ColumnDesc\022\031\n\016format_version\030\r \001(\r:\0010\022\014\n"
      "\002db\030\016 \001(\t:\000\0225\n\017schema_versions\030\017 \003(\0132\034.o"
      "penmldb.common.VersionPair\0228\n\017table_part"
      "ition\030\020 \003(\0132\037.openmldb.common.TableParti"
      "tion\022;\n\014storage_mode\030\021 \001(\0162\034.openmldb.co"
      "mmon.StorageMode:\007kMemory\022\031\n\016base_table_"
      "tid\030\022 \001(\r:\0010\"A\n\022CreateTableRequest\022+\n\nta"
      "ble_meta\030\001 \001(\0132\027.openmldb.api.TableMeta\""
      "\311\001\n!UpdateTableMetaForAddFieldRequest\022\013\n"
      "\003tid\030\001 \001(\r\0220\n\013column_desc\030\002 \001(\0132\033.openml"
      "db.common.ColumnDesc\0221\n\014column_descs\030\003 \003"
      "(\0132\033.openmldb.common.ColumnDesc\0222\n\014versi"
      "on_pair\030\004 \001(\0132\034.openmldb.common.VersionP"
      "air\"0\n\023CreateTableResponse\022\014\n\004code\030\001 \001(\005"
      "\022\013\n\003msg\030\002 \001(\t\"j\n\020LoadTableRequest\022+\n\ntab"
      "le_meta\030\001 \001(\0132\027.openmldb.api.TableMeta\022)"
      "\n\ttask_info\030\002 \001(\0132\026.openmldb.api.TaskInf"
      "o\"W\n\020DropTableRequest\022\013\n\003tid\030\001 \001(\005\022\013\n\003pi"
      "d\030\002 \001(\005\022)\n\ttask_info\030\003 \001(\0132\026.openmldb.ap"
      "i.TaskInfo\".\n\021DropTableResponse\022\014\n\004code\030"
      "\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"1\n\025GetTableSchemaRequ"
      "est\022\013\n\003tid\030\001 \001(\005\022\013\n\003pid\030\002 \001(\005\"\?\n\020SetExpi"
      "reRequest\022\013\n\003tid\030\001 \001(\005\022\013\n\003pid\030\002 \001(\005\022\021\n\ti"
      "s_expire\030\003 \001(\010\"`\n\026GetTableSchemaResponse"
      "\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022+\n\ntable_met"
      "a\030\003 \001(\0132\027.openmldb.api.TableMeta\"e\n\020Upda"
      "teTTLRequest\022\013\n\003tid\030\001 \001(\005\022\013\n\003pid\030\002 \001(\005\022#"
      "\n\003ttl\030\003 \001(\0132\026.openmldb.common.TTLSt\022\022\n\ni"
      "ndex_name\030\005 \001(\t\".\n\021UpdateTTLResponse\022\014\n\004"
      "code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"\344\001\n\010LogEntry\022\014\n\004"
      "term\030\001 \001(\004\022\021\n\tlog_index\030\002 \001(\004\022\n\n\002pk\030\003 \001("
      "\t\022\r\n\005value\030\004 \001(\014\022\n\n\002ts\030\005 \001(\004\022+\n\ndimensio"
      "ns\030\006 \003(\0132\027.openmldb.api.Dimension\022-\n\013met"
      "hod_type\030\007 \001(\0162\030.openmldb.api.MethodType"
      "\0224\n\rts_dimensions\030\010 \003(\0132\031.openmldb.api.T"
      "SDimensionB\002\030\001\"~\n\024AppendEntriesRequest\022\025"
      "\n\rpre_log_index\030\002 \001(\004\022\'\n\007entries\030\004 \003(\0132\026"
      ".openmldb.api.LogEntry\022\013\n\003tid\030\006 \001(\r\022\013\n\003p"
      "id\030\007 \001(\r\022\014\n\004term\030\010 \001(\004\"T\n\025AppendEntriesR"
      "esponse\022\022\n\nlog_offset\030\001 \001(\004\022\014\n\004code\030\002 \001("
      "\005\022\013\n\003msg\030\003 \001(\t\022\014\n\004term\030\004 \001(\004\"\253\001\n\021ChangeR"
      "oleRequest\022\013\n\003tid\030\001 \001(\r\022\013\n\003pid\030\002 \001(\r\022\014\n\004"
      "term\030\003 \001(\004\022%\n\004mode\030\004 \001(\0162\027.openmldb.api."
      "TableMode\022\020\n\010replicas\030\005 \003(\t\0225\n\014endpoint_"
      "tid\030\006 \003(\0132\037.openmldb.common.EndpointAndT"
      "id\"\200\001\n\023SendSnapshotRequest\022\013\n\003tid\030\001 \002(\r\022"
      "\013\n\003pid\030\002 \002(\r\022\020\n\010endpoint\030\003 \002(\t\022)\n\ttask_i"
      "nfo\030\004 \001(\0132\026.openmldb.api.TaskInfo\022\022\n\nrem"
      "ote_tid\030\005 \001(\r\"\312\001\n\024SendIndexDataRequest\022\013"
      "\n\003tid\030\001 \001(\r\022\013\n\003pid\030\002 \001(\r\022>\n\005pairs\030\003 \003(\0132"
      "/.openmldb.api.SendIndexDataRequest.Endp"
      "ointPair\022)\n\ttask_info\030\004 \001(\0132\026.openmldb.a"
      "pi.TaskInfo\032-\n\014EndpointPair\022\013\n\003pid\030\001 \001(\r"
      "\022\020\n\010endpoint\030\002 \001(\t\"\307\001\n\017SendDataRequest\022\013"
      "\n\003tid\030\001 \002(\r\022\013\n\003pid\030\002 \002(\r\022\021\n\tfile_name\030\003 "
      "\002(\t\022\020\n\010block_id\030\004 \002(\004\022\022\n\nblock_size\030\005 \001("
      "\r\022\022\n\003eof\030\006 \001(\010:\005false\022\020\n\010dir_name\030\007 \001(\t\022"
      ";\n\014storage_mode\030\010 \001(\0162\034.openmldb.common."
      "StorageMode:\007kMemory\"/\n\022ChangeRoleRespon"
      "se\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"M\n\025GetTabl"
      "eStatusRequest\022\013\n\003tid\030\001 \001(\r\022\013\n\003pid\030\002 \001(\r"
      "\022\032\n\013need_schema\030\003 \001(\010:\005false\"1\n\013TsIdxSta"
      "tus\022\020\n\010idx_name\030\001 \001(\t\022\020\n\010seg_cnts\030\002 \003(\004\""
      "\202\004\n\013TableStatus\022\013\n\003tid\030\001 \001(\r\022\013\n\003pid\030\002 \001("
      "\r\022\016\n\006offset\030\003 \001(\004\022%\n\004mode\030\004 \001(\0162\027.openml"
      "db.api.TableMode\022\'\n\005state\030\005 \001(\0162\030.openml"
      "db.api.TableState\022\021\n\tis_expire\030\007 \001(\010\022\023\n\013"
      "time_offset\030\010 \001(\003\022\022\n\nrecord_cnt\030\t \001(\004\022\017\n"
      "\007idx_cnt\030\n \001(\004\0220\n\rts_idx_status\030\013 \003(\0132\031."
      "openmldb.api.TsIdxStatus\022\014\n\004name\030\014 \001(\t\022\030"
      "\n\020record_byte_size\030\r \001(\004\022\034\n\024record_idx_b"
      "yte_size\030\016 \001(\004\022\025\n\rrecord_pk_cnt\030\017 \001(\004\0222\n"
      "\rcompress_type\030\021 \001(\0162\033.openmldb.type.Com"
      "pressType\022\027\n\017skiplist_height\030\022 \001(\r\022\023\n\010di"
      "skused\030\023 \001(\004:\0010\022;\n\014storage_mode\030\024 \001(\0162\034."
      "openmldb.common.StorageMode:\007kMemory\"h\n\026"
      "GetTableStatusResponse\0223\n\020all_table_stat"
      "us\030\001 \003(\0132\031.openmldb.api.TableStatus\022\014\n\004c"
      "ode\030\002 \001(\005\022\013\n\003msg\030\003 \001(\t\"\352\001\n\nGetRequest\022\013\n"
      "\003tid\030\001 \001(\r\022\013\n\003pid\030\002 \001(\r\022\013\n\003key\030\003 \001(\t\022\r\n\002"
      "ts\030\004 \001(\004:\0010\022\020\n\010idx_name\030\005 \001(\t\022.\n\004type\030\006 "
      "\001(\0162\025.openmldb.api.GetType:\tkSubKeyEq\022\n\n"
      "\002et\030\007 \001(\004\0221\n\007et_type\030\010 \001(\0162\025.openmldb.ap"
      "i.GetType:\tkSubKeyGe\022\022\n\nprojection\030\t \003(\r"
      "\022\021\n\tpid_group\030\n \003(\r\"P\n\013GetResponse\022\014\n\004co"
      "de\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022\013\n\003key\030\003 \001(\t\022\n\n\002ts"
      "\030\004 \001(\004\022\r\n\005value\030\005 \001(\014\"\237\002\n\014CountRequest\022\013"
      "\n\003tid\030\001 \001(\r\022\013\n\003pid\030\002 \001(\r\022\020\n\010idx_name\030\003 \001"
      "(\t\022\013\n\003key\030\004 \001(\t\022\"\n\023filter_expired_data\030\005"
      " \001(\010:\005false\022.\n\037enable_remove_duplicated_"
      "record\030\006 \001(\010:\005false\022\r\n\002st\030\007 \001(\004:\0010\0221\n\007st"
      "_type\030\010 \001(\0162\025.openmldb.api.GetType:\tkSub"
      "KeyLe\022\r\n\002et\030\t \001(\004:\0010\0221\n\007et_type\030\n \001(\0162\025."
      "openmldb.api.GetType:\tkSubKeyGt\"9\n\rCount"
      "Response\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022\r\n\005c"
      "ount\030\003 \001(\r\"k\n\022GetTermPairRequest\022\013\n\003tid\030"
      "\001 \001(\r\022\013\n\003pid\030\002 \001(\r\022;\n\014storage_mode\030\003 \001(\016"
      "2\034.openmldb.common.StorageMode:\007kMemory\""
      "t\n\023GetTermPairResponse\022\014\n\004code\030\001 \001(\005\022\013\n\003"
      "msg\030\002 \001(\t\022\014\n\004term\030\003 \001(\004\022\016\n\006offset\030\004 \001(\004\022"
      "\021\n\thas_table\030\005 \001(\010\022\021\n\tis_leader\030\006 \001(\010\"k\n"
      "\022GetManifestRequest\022\013\n\003tid\030\001 \001(\r\022\013\n\003pid\030"
      "\002 \001(\r\022;\n\014storage_mode\030\003 \001(\0162\034.openmldb.c"
      "ommon.StorageMode:\007kMemory\"Z\n\023GetManifes"
      "tResponse\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022(\n\010"
      "manifest\030\003 \001(\0132\026.openmldb.api.Manifest\"3"
      "\n\027GetTableFollowerRequest\022\013\n\003tid\030\001 \001(\r\022\013"
      "\n\003pid\030\002 \001(\r\"0\n\014FollowerInfo\022\020\n\010endpoint\030"
      "\001 \001(\t\022\016\n\006offset\030\002 \001(\004\"x\n\030GetTableFollowe"
      "rResponse\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022\016\n\006"
      "offset\030\003 \001(\004\0221\n\rfollower_info\030\004 \003(\0132\032.op"
      "enmldb.api.FollowerInfo\"\227\001\n\020CheckFileReq"
      "uest\022\013\n\003tid\030\001 \001(\r\022\013\n\003pid\030\002 \001(\r\022\014\n\004file\030\003"
      " \001(\t\022\014\n\004size\030\004 \001(\004\022\020\n\010dir_name\030\005 \001(\t\022;\n\014"
      "storage_mode\030\006 \001(\0162\034.openmldb.common.Sto"
      "rageMode:\007kMemory\"\214\001\n\017AddIndexRequest\022\013\n"
      "\003tid\030\001 \001(\r\022\013\n\003pid\030\002 \001(\r\022.\n\ncolumn_key\030\003 "
      "\001(\0132\032.openmldb.common.ColumnKey\022/\n\013colum"
      "n_keys\030\004 \003(\0132\032.openmldb.common.ColumnKey"
      "\"\"\n\016SetModeRequest\022\020\n\010follower\030\001 \001(\010\"\016\n\014"
      "EmptyRequest\"\022\n\020ConnectZKRequest\"\025\n\023DisC"
      "onnectZKRequest\"\r\n\013HttpRequest\"\016\n\014HttpRe"
      "sponse\"@\n\022DeleteIndexRequest\022\013\n\003tid\030\001 \001("
      "\r\022\013\n\003pid\030\002 \001(\r\022\020\n\010idx_name\030\003 \001(\t\"\257\001\n\024Dum"
      "pIndexDataRequest\022\013\n\003tid\030\001 \001(\r\022\013\n\003pid\030\002 "
      "\001(\r\022\025\n\rpartition_num\030\003 \001(\r\022\013\n\003idx\030\004 \001(\r\022"
      ".\n\ncolumn_key\030\005 \001(\0132\032.openmldb.common.Co"
      "lumnKey\022)\n\ttask_info\030\006 \001(\0132\026.openmldb.ap"
      "i.TaskInfo\"r\n\024LoadIndexDataRequest\022\013\n\003ti"
      "d\030\001 \001(\r\022\013\n\003pid\030\002 \001(\r\022\025\n\rpartition_num\030\003 "
      "\001(\r\022)\n\ttask_info\030\004 \001(\0132\026.openmldb.api.Ta"
      "skInfo\"\177\n\034ExtractMultiIndexDataRequest\022\013"
      "\n\003tid\030\001 \001(\r\022\013\n\003pid\030\002 \001(\r\022\025\n\rpartition_nu"
      "m\030\003 \001(\r\022.\n\ncolumn_key\030\004 \003(\0132\032.openmldb.c"
      "ommon.ColumnKey\"\262\001\n\027ExtractIndexDataRequ"
      "est\022\013\n\003tid\030\001 \001(\r\022\013\n\003pid\030\002 \001(\r\022\025\n\rpartiti"
      "on_num\030\003 \001(\r\022\013\n\003idx\030\004 \001(\r\022.\n\ncolumn_key\030"
      "\005 \001(\0132\032.openmldb.common.ColumnKey\022)\n\ttas"
      "k_info\030\006 \001(\0132\026.openmldb.api.TaskInfo\"X\n\007"
      "Columns\022\014\n\004name\030\001 \003(\t\022\017\n\005value\030\002 \001(\014:\000\022."
      "\n\004type\030\003 \001(\0162\025.openmldb.api.GetType:\tkSu"
      "bKeyEq\" \n\017CancelOPRequest\022\r\n\005op_id\030\001 \001(\004"
      "\"7\n\020RealEndpointPair\022\014\n\004name\030\001 \001(\t\022\025\n\rre"
      "al_endpoint\030\002 \001(\t\"Y\n\034UpdateRealEndpointM"
      "apRequest\0229\n\021real_endpoint_map\030\001 \003(\0132\036.o"
      "penmldb.api.RealEndpointPair\"\243\002\n\014QueryRe"
      "quest\022\013\n\003sql\030\001 \001(\t\022\n\n\002db\030\002 \001(\t\022\020\n\010is_bat"
      "ch\030\003 \001(\010\022\027\n\010is_debug\030\004 \001(\010:\005false\022\017\n\007sp_"
      "name\030\005 \001(\t\022\033\n\014is_procedure\030\006 \001(\010:\005false\022"
      "\017\n\007task_id\030\007 \001(\004\022\020\n\010row_size\030\010 \001(\r\022\022\n\nro"
      "w_slices\030\t \001(\r\022\032\n\022parameter_row_size\030\n \001"
      "(\r\022\034\n\024parameter_row_slices\030\013 \001(\r\0220\n\017para"
      "meter_types\030\014 \003(\0162\027.openmldb.type.DataTy"
      "pe\"p\n\rQueryResponse\022\014\n\004code\030\001 \001(\005\022\013\n\003msg"
      "\030\002 \001(\t\022\r\n\005count\030\003 \001(\r\022\021\n\tbyte_size\030\004 \001(\r"
      "\022\016\n\006schema\030\005 \001(\014\022\022\n\nrow_slices\030\006 \001(\r\"\362\001\n"
      "\033SQLBatchRequestQueryRequest\022\013\n\003sql\030\001 \001("
      "\t\022\n\n\002db\030\002 \001(\t\022\035\n\025common_column_indices\030\003"
      " \003(\r\022\027\n\010is_debug\030\004 \001(\010:\005false\022\017\n\007sp_name"
      "\030\005 \001(\t\022\033\n\014is_procedure\030\006 \001(\010:\005false\022\021\n\tr"
      "ow_sizes\030\007 \003(\r\022\025\n\rcommon_slices\030\010 \001(\r\022\031\n"
      "\021non_common_slices\030\t \001(\r\022\017\n\007task_id\030\n \001("
      "\004\"\274\001\n\034SQLBatchRequestQueryResponse\022\014\n\004co"
      "de\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022\r\n\005count\030\003 \001(\r\022\016\n\006"
      "schema\030\004 \001(\014\022\035\n\025common_column_indices\030\005 "
      "\003(\r\022\021\n\trow_sizes\030\006 \003(\r\022\025\n\rcommon_slices\030"
      "\007 \001(\r\022\031\n\021non_common_slices\030\010 \001(\r\";\n\016Expl"
      "ainRequest\022\013\n\003sql\030\001 \001(\t\022\n\n\002db\030\002 \001(\t\022\020\n\010i"
      "s_batch\030\003 \001(\010\"\211\001\n\017ExplainResponse\022\024\n\014inp"
      "ut_schema\030\001 \001(\014\022\024\n\014logical_plan\030\003 \001(\t\022\025\n"
      "\rphysical_plan\030\004 \001(\t\022\n\n\002ir\030\005 \001(\t\022\025\n\routp"
      "ut_schema\030\006 \001(\014\022\020\n\010is_batch\030\007 \001(\010\"\035\n\016Ref"
      "reshRequest\022\013\n\003tid\030\001 \001(\r\"\023\n\021GetCatalogRe"
      "quest\"^\n\022GetCatalogResponse\022-\n\007catalog\030\001"
      " \001(\0132\034.openmldb.common.CatalogInfo\022\014\n\004co"
      "de\030\002 \001(\005\022\013\n\003msg\030\003 \001(\t\"@\n\rDataBlockInfo\022\017"
      "\n\007ref_cnt\030\001 \001(\r\022\016\n\006offset\030\002 \001(\004\022\016\n\006lengt"
      "h\030\003 \001(\r\"\213\001\n\nBinlogInfo\022+\n\ndimensions\030\001 \003"
      "(\0132\027.openmldb.api.Dimension\0220\n\rts_dimens"
      "ions\030\002 \003(\0132\031.openmldb.api.TSDimension\022\014\n"
      "\004time\030\003 \001(\003\022\020\n\010block_id\030\004 \001(\r\"\277\002\n\007Segmen"
      "t\022\n\n\002id\030\001 \001(\r\0225\n\013key_entries\030\002 \003(\0132 .ope"
      "nmldb.api.Segment.KeyEntries\032\360\001\n\nKeyEntr"
      "ies\022\013\n\003key\030\001 \001(\014\022<\n\tkey_entry\030\002 \003(\0132).op"
      "enmldb.api.Segment.KeyEntries.KeyEntry\032\226"
      "\001\n\010KeyEntry\022\024\n\014key_entry_id\030\001 \001(\r\022G\n\ntim"
      "e_entry\030\002 \003(\01323.openmldb.api.Segment.Key"
      "Entries.KeyEntry.TimeEntry\032+\n\tTimeEntry\022"
      "\014\n\004time\030\001 \001(\004\022\020\n\010block_id\030\002 \001(\r\"O\n\rBulkL"
      "oadIndex\022\026\n\016inner_index_id\030\001 \001(\r\022&\n\007segm"
      "ent\030\002 \003(\0132\025.openmldb.api.Segment\"\343\001\n\017Bul"
      "kLoadRequest\022\013\n\003tid\030\001 \001(\r\022\013\n\003pid\030\002 \001(\r\022\017"
      "\n\007part_id\030\003 \001(\005\022/\n\nblock_info\030\004 \003(\0132\033.op"
      "enmldb.api.DataBlockInfo\022-\n\013binlog_info\030"
      "\005 \003(\0132\030.openmldb.api.BinlogInfo\0221\n\014index"
      "_region\030\006 \003(\0132\033.openmldb.api.BulkLoadInd"
      "ex\022\022\n\003eof\030\007 \001(\010:\005false\"/\n\023BulkLoadInfoRe"
      "quest\022\013\n\003tid\030\001 \001(\r\022\013\n\003pid\030\002 \001(\r\"\375\004\n\024Bulk"
      "LoadInfoResponse\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 "
      "\001(\t\022\017\n\007seg_cnt\030\003 \001(\r\022\027\n\017inner_index_pos\030"
      "\004 \003(\005\022D\n\013inner_index\030\005 \003(\0132/.openmldb.ap"
      "i.BulkLoadInfoResponse.InnerIndexSt\022H\n\016i"
      "nner_segments\030\006 \003(\01320.openmldb.api.BulkL"
      "oadInfoResponse.InnerSegments\032\215\001\n\014InnerI"
      "ndexSt\022K\n\tindex_def\030\001 \003(\01328.openmldb.api"
      ".BulkLoadInfoResponse.InnerIndexSt.Index"
      "Def\0320\n\010IndexDef\022\022\n\006ts_idx\030\001 \001(\005:\002-1\022\020\n\010i"
      "s_ready\030\002 \001(\010\032\377\001\n\rInnerSegments\022I\n\007segme"
      "nt\030\001 \003(\01328.openmldb.api.BulkLoadInfoResp"
      "onse.InnerSegments.Segment\032\242\001\n\007Segment\022\016"
      "\n\006ts_cnt\030\001 \001(\r\022Z\n\nts_idx_map\030\002 \003(\0132F.ope"
      "nmldb.api.BulkLoadInfoResponse.InnerSegm"
      "ents.Segment.MapFieldEntry\032+\n\rMapFieldEn"
      "try\022\013\n\003key\030\001 \002(\r\022\r\n\005value\030\002 \002(\r\"B\n\025Creat"
      "eFunctionRequest\022)\n\003fun\030\001 \001(\0132\034.openmldb"
      ".common.ExternalFun\"3\n\026CreateFunctionRes"
      "ponse\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"@\n\023Drop"
      "FunctionRequest\022)\n\003fun\030\001 \001(\0132\034.openmldb."
      "common.ExternalFun\"1\n\024DropFunctionRespon"
      "se\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"\362\001\n\027Create"
      "AggregatorRequest\0220\n\017base_table_meta\030\001 \001"
      "(\0132\027.openmldb.api.TableMeta\022\026\n\016aggr_tabl"
      "e_tid\030\002 \001(\r\022\026\n\016aggr_table_pid\030\003 \001(\r\022\021\n\ti"
      "ndex_pos\030\004 \001(\r\022\021\n\taggr_func\030\005 \001(\t\022\020\n\010agg"
      "r_col\030\006 \001(\t\022\024\n\014order_by_col\030\007 \001(\t\022\023\n\013buc"
      "ket_size\030\010 \001(\t\022\022\n\nfilter_col\030\t \001(\t\"5\n\030Cr"
      "eateAggregatorResponse\022\014\n\004code\030\001 \001(\005\022\013\n\003"
      "msg\030\002 \001(\t\"\027\n\025GAFDeployStatsRequest\"\273\001\n\023D"
      "eployStatsResponse\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030"
      "\002 \001(\t\022:\n\004rows\030\003 \003(\0132,.openmldb.api.Deplo"
      "yStatsResponse.DeployStat\032M\n\nDeployStat\022"
      "\023\n\013deploy_name\030\001 \002(\t\022\014\n\004time\030\002 \002(\t\022\r\n\005co"
      "unt\030\003 \002(\r\022\r\n\005total\030\004 \002(\t*1\n\tTableMode\022\020\n"
      "\014kTableLeader\020\001\022\022\n\016kTableFollower\020\002*p\n\nT"
      "ableState\022\023\n\017kTableUndefined\020\000\022\020\n\014kTable"
      "Normal\020\001\022\021\n\rkTableLoading\020\002\022\023\n\017kMakingSn"
      "apshot\020\003\022\023\n\017kSnapshotPaused\020\004*T\n\007GetType"
      "\022\r\n\tkSubKeyEq\020\001\022\r\n\tkSubKeyLt\020\002\022\r\n\tkSubKe"
      "yLe\020\003\022\r\n\tkSubKeyGt\020\004\022\r\n\tkSubKeyGe\020\005*\335\003\n\006"
      "OPType\022\023\n\017kMakeSnapshotOP\020\001\022\021\n\rkAddRepli"
      "caOP\020\002\022\021\n\rkDelReplicaOP\020\003\022\023\n\017kChangeLead"
      "erOP\020\004\022\025\n\021kOfflineReplicaOP\020\005\022\023\n\017kReAddR"
      "eplicaOP\020\006\022\031\n\025kReAddReplicaNoSendOP\020\007\022\033\n"
      "\027kReAddReplicaWithDropOP\020\010\022\033\n\027kReAddRepl"
      "icaSimplifyOP\020\t\022\027\n\023kUpdateTableAliveOP\020\n"
      "\022\016\n\nkMigrateOP\020\013\022\022\n\016kReLoadTableOP\020\014\022\034\n\030"
      "kUpdatePartitionStatusOP\020\r\022\023\n\017kRecoverTa"
      "bleOP\020\016\022\030\n\024kCreateTableRemoteOP\020\017\022\026\n\022kDr"
      "opTableRemoteOP\020\020\022\035\n\031kAddReplicaSimplyRe"
      "moteOP\020\021\022\027\n\023kDelReplicaRemoteOP\020\022\022\027\n\023kAd"
      "dReplicaRemoteOP\020\023\022\017\n\013kAddIndexOP\020\024*\276\004\n\010"
      "TaskType\022\021\n\rkMakeSnapshot\020\001\022\022\n\016kPauseSna"
      "pshot\020\002\022\024\n\020kRecoverSnapshot\020\003\022\021\n\rkSendSn"
      "apshot\020\004\022\016\n\nkLoadTable\020\005\022\017\n\013kAddReplica\020"
      "\006\022\021\n\rkAddTableInfo\020\007\022\017\n\013kDelReplica\020\010\022\021\n"
      "\rkDelTableInfo\020\t\022\021\n\rkChangeLeader\020\n\022\032\n\026k"
      "UpdatePartitionStatus\020\013\022\016\n\nkDropTable\020\014\022"
      "\025\n\021kUpdateTableAlive\020\r\022\024\n\020kUpdateTableIn"
      "fo\020\016\022\021\n\rkSelectLeader\020\017\022\025\n\021kUpdateLeader"
      "Info\020\020\022\021\n\rkRecoverTable\020\021\022\034\n\030kCheckBinlo"
      "gSyncProgress\020\022\022\026\n\022kCreateTableRemote\020\023\022"
      "\024\n\020kDropTableRemote\020\024\022\027\n\023kAddReplicaNSRe"
      "mote\020\025\022\022\n\016kDumpIndexData\020\026\022\022\n\016kSendIndex"
      "Data\020\027\022\022\n\016kLoadIndexData\020\030\022\025\n\021kExtractIn"
      "dexData\020\031\022\025\n\021kAddIndexToTablet\020\032\022\022\n\016kTab"
      "leSyncTask\020\033*L\n\nTaskStatus\022\013\n\007kInited\020\001\022"
      "\n\n\006kDoing\020\002\022\t\n\005kDone\020\003\022\013\n\007kFailed\020\004\022\r\n\tk"
      "Canceled\020\005*#\n\nMethodType\022\010\n\004kPut\020\001\022\013\n\007kD"
      "elete\020\0022\373%\n\014TabletServer\022:\n\003Put\022\030.openml"
      "db.api.PutRequest\032\031.openmldb.api.PutResp"
      "onse\022:\n\003Get\022\030.openmldb.api.GetRequest\032\031."
      "openmldb.api.GetResponse\022=\n\004Scan\022\031.openm"
      "ldb.api.ScanRequest\032\032.openmldb.api.ScanR"
      "esponse\022D\n\006Delete\022\033.openmldb.api.DeleteR"
      "equest\032\035.openmldb.api.GeneralResponse\022@\n"
      "\005Count\022\032.openmldb.api.CountRequest\032\033.ope"
      "nmldb.api.CountResponse\022I\n\010Traverse\022\035.op"
      "enmldb.api.TraverseRequest\032\036.openmldb.ap"
      "i.TraverseResponse\022@\n\005Query\022\032.openmldb.a"
      "pi.QueryRequest\032\033.openmldb.api.QueryResp"
      "onse\022C\n\010SubQuery\022\032.openmldb.api.QueryReq"
      "uest\032\033.openmldb.api.QueryResponse\022m\n\024SQL"
      "BatchRequestQuery\022).openmldb.api.SQLBatc"
      "hRequestQueryRequest\032*.openmldb.api.SQLB"
      "atchRequestQueryResponse\022m\n\024SubBatchRequ"
      "estQuery\022).openmldb.api.SQLBatchRequestQ"
      "ueryRequest\032*.openmldb.api.SQLBatchReque"
      "stQueryResponse\022R\n\013CreateTable\022 .openmld"
      "b.api.CreateTableRequest\032!.openmldb.api."
      "CreateTableResponse\022J\n\tLoadTable\022\036.openm"
      "ldb.api.LoadTableRequest\032\035.openmldb.api."
      "GeneralResponse\022L\n\tDropTable\022\036.openmldb."
      "api.DropTableRequest\032\037.openmldb.api.Drop"
      "TableResponse\022[\n\016GetTableStatus\022#.openml"
      "db.api.GetTableStatusRequest\032$.openmldb."
      "api.GetTableStatusResponse\022[\n\016GetTableSc"
      "hema\022#.openmldb.api.GetTableSchemaReques"
      "t\032$.openmldb.api.GetTableSchemaResponse\022"
      "a\n\020GetTableFollower\022%.openmldb.api.GetTa"
      "bleFollowerRequest\032&.openmldb.api.GetTab"
      "leFollowerResponse\022L\n\tUpdateTTL\022\036.openml"
      "db.api.UpdateTTLRequest\032\037.openmldb.api.U"
      "pdateTTLResponse\022J\n\tExecuteGc\022\036.openmldb"
      ".api.ExecuteGcRequest\032\035.openmldb.api.Gen"
      "eralResponse\022X\n\rAppendEntries\022\".openmldb"
      ".api.AppendEntriesRequest\032#.openmldb.api"
      ".AppendEntriesResponse\022L\n\nAddReplica\022\034.o"
      "penmldb.api.ReplicaRequest\032 .openmldb.ap"
      "i.AddReplicaResponse\022I\n\nDelReplica\022\034.ope"
      "nmldb.api.ReplicaRequest\032\035.openmldb.api."
      "GeneralResponse\022O\n\nChangeRole\022\037.openmldb"
      ".api.ChangeRoleRequest\032 .openmldb.api.Ch"
      "angeRoleResponse\022K\n\014MakeSnapshot\022\034.openm"
      "ldb.api.GeneralRequest\032\035.openmldb.api.Ge"
      "neralResponse\022L\n\rPauseSnapshot\022\034.openmld"
      "b.api.GeneralRequest\032\035.openmldb.api.Gene"
      "ralResponse\022N\n\017RecoverSnapshot\022\034.openmld"
      "b.api.GeneralRequest\032\035.openmldb.api.Gene"
      "ralResponse\022P\n\014SendSnapshot\022!.openmldb.a"
      "pi.SendSnapshotRequest\032\035.openmldb.api.Ge"
      "neralResponse\022H\n\010SendData\022\035.openmldb.api"
      ".SendDataRequest\032\035.openmldb.api.GeneralR"
      "esponse\022J\n\tSetExpire\022\036.openmldb.api.SetE"
      "xpireRequest\032\035.openmldb.api.GeneralRespo"
      "nse\022R\n\rGetTaskStatus\022\037.openmldb.api.Task"
      "StatusRequest\032 .openmldb.api.TaskStatusR"
      "esponse\022N\n\014DeleteOPTask\022\037.openmldb.api.D"
      "eleteTaskRequest\032\035.openmldb.api.GeneralR"
      "esponse\022R\n\013GetTermPair\022 .openmldb.api.Ge"
      "tTermPairRequest\032!.openmldb.api.GetTermP"
      "airResponse\022R\n\013GetManifest\022 .openmldb.ap"
      "i.GetManifestRequest\032!.openmldb.api.GetM"
      "anifestResponse\022J\n\tCheckFile\022\036.openmldb."
      "api.CheckFileRequest\032\035.openmldb.api.Gene"
      "ralResponse\022K\n\014DeleteBinlog\022\034.openmldb.a"
      "pi.GeneralRequest\032\035.openmldb.api.General"
      "Response\022D\n\013ShowMemPool\022\031.openmldb.api.H"
      "ttpRequest\032\032.openmldb.api.HttpResponse\022O"
      "\n\nGetCatalog\022\037.openmldb.api.GetCatalogRe"
      "quest\032 .openmldb.api.GetCatalogResponse\022"
      "J\n\tConnectZK\022\036.openmldb.api.ConnectZKReq"
      "uest\032\035.openmldb.api.GeneralResponse\022P\n\014D"
      "isConnectZK\022!.openmldb.api.DisConnectZKR"
      "equest\032\035.openmldb.api.GeneralResponse\022l\n"
      "\032UpdateTableMetaForAddField\022/.openmldb.a"
      "pi.UpdateTableMetaForAddFieldRequest\032\035.o"
      "penmldb.api.GeneralResponse\022F\n\007SetMode\022\034"
      ".openmldb.api.SetModeRequest\032\035.openmldb."
      "api.GeneralResponse\022]\n\024GetAllSnapshotOff"
      "set\022\032.openmldb.api.EmptyRequest\032).openml"
      "db.api.TableSnapshotOffsetResponse\022H\n\010Ad"
      "dIndex\022\035.openmldb.api.AddIndexRequest\032\035."
      "openmldb.api.GeneralResponse\022R\n\rSendInde"
      "xData\022\".openmldb.api.SendIndexDataReques"
      "t\032\035.openmldb.api.GeneralResponse\022N\n\013Dele"
      "teIndex\022 .openmldb.api.DeleteIndexReques"
      "t\032\035.openmldb.api.GeneralResponse\022R\n\rDump"
      "IndexData\022\".openmldb.api.DumpIndexDataRe"
      "quest\032\035.openmldb.api.GeneralResponse\022R\n\r"
      "LoadIndexData\022\".openmldb.api.LoadIndexDa"
      "taRequest\032\035.openmldb.api.GeneralResponse"
      "\022X\n\020ExtractIndexData\022%.openmldb.api.Extr"
      "actIndexDataRequest\032\035.openmldb.api.Gener"
      "alResponse\022b\n\025ExtractMultiIndexData\022*.op"
      "enmldb.api.ExtractMultiIndexDataRequest\032"
      "\035.openmldb.api.GeneralResponse\022H\n\010Cancel"
      "OP\022\035.openmldb.api.CancelOPRequest\032\035.open"
      "mldb.api.GeneralResponse\022b\n\025UpdateRealEn"
      "dpointMap\022*.openmldb.api.UpdateRealEndpo"
      "intMapRequest\032\035.openmldb.api.GeneralResp"
      "onse\022V\n\017CreateProcedure\022$.openmldb.api.C"
      "reateProcedureRequest\032\035.openmldb.api.Gen"
      "eralResponse\022R\n\rDropProcedure\022\".openmldb"
      ".api.DropProcedureRequest\032\035.openmldb.api"
      ".GeneralResponse\022F\n\007Refresh\022\034.openmldb.a"
      "pi.RefreshRequest\032\035.openmldb.api.General"
      "Response\022X\n\017GetBulkLoadInfo\022!.openmldb.a"
      "pi.BulkLoadInfoRequest\032\".openmldb.api.Bu"
      "lkLoadInfoResponse\022H\n\010BulkLoad\022\035.openmld"
      "b.api.BulkLoadRequest\032\035.openmldb.api.Gen"
      "eralResponse\022[\n\016CreateFunction\022#.openmld"
      "b.api.CreateFunctionRequest\032$.openmldb.a"
      "pi.CreateFunctionResponse\022U\n\014DropFunctio"
      "n\022!.openmldb.api.DropFunctionRequest\032\".o"
      "penmldb.api.DropFunctionResponse\022a\n\020Crea"
      "teAggregator\022%.openmldb.api.CreateAggreg"
      "atorRequest\032&.openmldb.api.CreateAggrega"
      "torResponse\022`\n\026GetAndFlushDeployStats\022#."
      "openmldb.api.GAFDeployStatsRequest\032!.ope"
      "nmldb.api.DeployStatsResponseB*\n\035com._4p"
      "aradigm.openmldb.protoB\006Tablet\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 18713);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tablet.proto", &protobuf_RegisterTypes);
  ::protobuf_type_2eproto::AddDescriptors();
  ::protobuf_common_2eproto::AddDescriptors();
  ::protobuf_sql_5fprocedure_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tablet_2eproto
namespace openmldb {
namespace api {
const ::google::protobuf::EnumDescriptor* TableMode_descriptor() {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tablet_2eproto::file_level_enum_descriptors[0];
}
bool TableMode_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TableState_descriptor() {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tablet_2eproto::file_level_enum_descriptors[1];
}
bool TableState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GetType_descriptor() {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tablet_2eproto::file_level_enum_descriptors[2];
}
bool GetType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* OPType_descriptor() {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tablet_2eproto::file_level_enum_descriptors[3];
}
bool OPType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TaskType_descriptor() {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tablet_2eproto::file_level_enum_descriptors[4];
}
bool TaskType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TaskStatus_descriptor() {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tablet_2eproto::file_level_enum_descriptors[5];
}
bool TaskStatus_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MethodType_descriptor() {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tablet_2eproto::file_level_enum_descriptors[6];
}
bool MethodType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void TaskInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskInfo::kOpIdFieldNumber;
const int TaskInfo::kOpTypeFieldNumber;
const int TaskInfo::kTaskTypeFieldNumber;
const int TaskInfo::kStatusFieldNumber;
const int TaskInfo::kEndpointFieldNumber;
const int TaskInfo::kIsRpcSendFieldNumber;
const int TaskInfo::kRepClusterOpIdFieldNumber;
const int TaskInfo::kTaskIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskInfo::TaskInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_TaskInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.TaskInfo)
}
TaskInfo::TaskInfo(const TaskInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      rep_cluster_op_id_(from.rep_cluster_op_id_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_endpoint()) {
    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  ::memcpy(&op_id_, &from.op_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&task_type_) -
    reinterpret_cast<char*>(&op_id_)) + sizeof(task_type_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.TaskInfo)
}

void TaskInfo::SharedCtor() {
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&op_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_rpc_send_) -
      reinterpret_cast<char*>(&op_id_)) + sizeof(is_rpc_send_));
  status_ = 1;
  op_type_ = 1;
  task_type_ = 1;
}

TaskInfo::~TaskInfo() {
  // @@protoc_insertion_point(destructor:openmldb.api.TaskInfo)
  SharedDtor();
}

void TaskInfo::SharedDtor() {
  endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TaskInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TaskInfo::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskInfo& TaskInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_TaskInfo.base);
  return *internal_default_instance();
}


void TaskInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.TaskInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rep_cluster_op_id_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    endpoint_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 126u) {
    ::memset(&op_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_rpc_send_) -
        reinterpret_cast<char*>(&op_id_)) + sizeof(is_rpc_send_));
    status_ = 1;
    op_type_ = 1;
    task_type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TaskInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.TaskInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 op_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_op_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &op_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .openmldb.api.OPType op_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::api::OPType_IsValid(value)) {
            set_op_type(static_cast< ::openmldb::api::OPType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .openmldb.api.TaskType task_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::api::TaskType_IsValid(value)) {
            set_task_type(static_cast< ::openmldb::api::TaskType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .openmldb.api.TaskStatus status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::api::TaskStatus_IsValid(value)) {
            set_status(static_cast< ::openmldb::api::TaskStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string endpoint = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->endpoint().data(), static_cast<int>(this->endpoint().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.TaskInfo.endpoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_rpc_send = 6 [default = false];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_is_rpc_send();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_rpc_send_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 rep_cluster_op_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 56u, input, this->mutable_rep_cluster_op_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_rep_cluster_op_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 task_id = 8 [default = 0];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_task_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.TaskInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.TaskInfo)
  return false;
#undef DO_
}

void TaskInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.TaskInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 op_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->op_id(), output);
  }

  // required .openmldb.api.OPType op_type = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->op_type(), output);
  }

  // required .openmldb.api.TaskType task_type = 3;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->task_type(), output);
  }

  // required .openmldb.api.TaskStatus status = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->status(), output);
  }

  // optional string endpoint = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.TaskInfo.endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->endpoint(), output);
  }

  // optional bool is_rpc_send = 6 [default = false];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_rpc_send(), output);
  }

  // repeated uint64 rep_cluster_op_id = 7;
  for (int i = 0, n = this->rep_cluster_op_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      7, this->rep_cluster_op_id(i), output);
  }

  // optional uint64 task_id = 8 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->task_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.TaskInfo)
}

::google::protobuf::uint8* TaskInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.TaskInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 op_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->op_id(), target);
  }

  // required .openmldb.api.OPType op_type = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->op_type(), target);
  }

  // required .openmldb.api.TaskType task_type = 3;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->task_type(), target);
  }

  // required .openmldb.api.TaskStatus status = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->status(), target);
  }

  // optional string endpoint = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.TaskInfo.endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->endpoint(), target);
  }

  // optional bool is_rpc_send = 6 [default = false];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_rpc_send(), target);
  }

  // repeated uint64 rep_cluster_op_id = 7;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(7, this->rep_cluster_op_id_, target);

  // optional uint64 task_id = 8 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->task_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.TaskInfo)
  return target;
}

size_t TaskInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openmldb.api.TaskInfo)
  size_t total_size = 0;

  if (has_op_id()) {
    // required uint64 op_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->op_id());
  }

  if (has_status()) {
    // required .openmldb.api.TaskStatus status = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  if (has_op_type()) {
    // required .openmldb.api.OPType op_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  if (has_task_type()) {
    // required .openmldb.api.TaskType task_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->task_type());
  }

  return total_size;
}
size_t TaskInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.TaskInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000072) ^ 0x00000072) == 0) {  // All required fields are present.
    // required uint64 op_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->op_id());

    // required .openmldb.api.TaskStatus status = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());

    // required .openmldb.api.OPType op_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());

    // required .openmldb.api.TaskType task_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->task_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated uint64 rep_cluster_op_id = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->rep_cluster_op_id_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->rep_cluster_op_id_size());
    total_size += data_size;
  }

  // optional string endpoint = 5;
  if (has_endpoint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->endpoint());
  }

  if (_has_bits_[0 / 32] & 12u) {
    // optional uint64 task_id = 8 [default = 0];
    if (has_task_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->task_id());
    }

    // optional bool is_rpc_send = 6 [default = false];
    if (has_is_rpc_send()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TaskInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.TaskInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.TaskInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.TaskInfo)
    MergeFrom(*source);
  }
}

void TaskInfo::MergeFrom(const TaskInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.TaskInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rep_cluster_op_id_.MergeFrom(from.rep_cluster_op_id_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_endpoint();
      endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
    }
    if (cached_has_bits & 0x00000002u) {
      op_id_ = from.op_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      task_id_ = from.task_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      is_rpc_send_ = from.is_rpc_send_;
    }
    if (cached_has_bits & 0x00000010u) {
      status_ = from.status_;
    }
    if (cached_has_bits & 0x00000020u) {
      op_type_ = from.op_type_;
    }
    if (cached_has_bits & 0x00000040u) {
      task_type_ = from.task_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TaskInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.TaskInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskInfo::CopyFrom(const TaskInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.TaskInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000072) != 0x00000072) return false;
  return true;
}

void TaskInfo::Swap(TaskInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskInfo::InternalSwap(TaskInfo* other) {
  using std::swap;
  rep_cluster_op_id_.InternalSwap(&other->rep_cluster_op_id_);
  endpoint_.Swap(&other->endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(op_id_, other->op_id_);
  swap(task_id_, other->task_id_);
  swap(is_rpc_send_, other->is_rpc_send_);
  swap(status_, other->status_);
  swap(op_type_, other->op_type_);
  swap(task_type_, other->task_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TaskInfo::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OPInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OPInfo::kOpIdFieldNumber;
const int OPInfo::kOpTypeFieldNumber;
const int OPInfo::kTaskIndexFieldNumber;
const int OPInfo::kDataFieldNumber;
const int OPInfo::kTaskStatusFieldNumber;
const int OPInfo::kStartTimeFieldNumber;
const int OPInfo::kEndTimeFieldNumber;
const int OPInfo::kNameFieldNumber;
const int OPInfo::kPidFieldNumber;
const int OPInfo::kParentIdFieldNumber;
const int OPInfo::kVecIdxFieldNumber;
const int OPInfo::kRemoteOpIdFieldNumber;
const int OPInfo::kForReplicaClusterFieldNumber;
const int OPInfo::kDbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OPInfo::OPInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_OPInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.OPInfo)
}
OPInfo::OPInfo(const OPInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  ::memcpy(&op_id_, &from.op_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&task_status_) -
    reinterpret_cast<char*>(&op_id_)) + sizeof(task_status_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.OPInfo)
}

void OPInfo::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&op_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&for_replica_cluster_) -
      reinterpret_cast<char*>(&op_id_)) + sizeof(for_replica_cluster_));
  op_type_ = 1;
  task_status_ = 1;
}

OPInfo::~OPInfo() {
  // @@protoc_insertion_point(destructor:openmldb.api.OPInfo)
  SharedDtor();
}

void OPInfo::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OPInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OPInfo::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OPInfo& OPInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_OPInfo.base);
  return *internal_default_instance();
}


void OPInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.OPInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      data_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&op_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&end_time_) -
        reinterpret_cast<char*>(&op_id_)) + sizeof(end_time_));
  }
  if (cached_has_bits & 16128u) {
    ::memset(&parent_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&for_replica_cluster_) -
        reinterpret_cast<char*>(&parent_id_)) + sizeof(for_replica_cluster_));
    op_type_ = 1;
    task_status_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OPInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.OPInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 op_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_op_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &op_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .openmldb.api.OPType op_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::api::OPType_IsValid(value)) {
            set_op_type(static_cast< ::openmldb::api::OPType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 task_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_task_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &task_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.OPInfo.data");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.api.TaskStatus task_status = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::api::TaskStatus_IsValid(value)) {
            set_task_status(static_cast< ::openmldb::api::TaskStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                5, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 start_time = 6 [default = 0];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_start_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 end_time = 7 [default = 0];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_end_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.OPInfo.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 parent_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_parent_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &parent_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 vec_idx = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_vec_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vec_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 remote_op_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_remote_op_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &remote_op_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 for_replica_cluster = 13 [default = 0];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_for_replica_cluster();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &for_replica_cluster_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.OPInfo.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.OPInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.OPInfo)
  return false;
#undef DO_
}

void OPInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.OPInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 op_id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->op_id(), output);
  }

  // required .openmldb.api.OPType op_type = 2;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->op_type(), output);
  }

  // required uint32 task_index = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->task_index(), output);
  }

  // required string data = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.OPInfo.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->data(), output);
  }

  // optional .openmldb.api.TaskStatus task_status = 5;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->task_status(), output);
  }

  // optional uint64 start_time = 6 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->start_time(), output);
  }

  // optional uint64 end_time = 7 [default = 0];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->end_time(), output);
  }

  // optional string name = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.OPInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->name(), output);
  }

  // optional uint32 pid = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->pid(), output);
  }

  // optional uint64 parent_id = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->parent_id(), output);
  }

  // optional uint32 vec_idx = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->vec_idx(), output);
  }

  // optional uint64 remote_op_id = 12;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(12, this->remote_op_id(), output);
  }

  // optional int32 for_replica_cluster = 13 [default = 0];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->for_replica_cluster(), output);
  }

  // optional string db = 14;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.OPInfo.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->db(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.OPInfo)
}

::google::protobuf::uint8* OPInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.OPInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 op_id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->op_id(), target);
  }

  // required .openmldb.api.OPType op_type = 2;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->op_type(), target);
  }

  // required uint32 task_index = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->task_index(), target);
  }

  // required string data = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.OPInfo.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->data(), target);
  }

  // optional .openmldb.api.TaskStatus task_status = 5;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->task_status(), target);
  }

  // optional uint64 start_time = 6 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->start_time(), target);
  }

  // optional uint64 end_time = 7 [default = 0];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->end_time(), target);
  }

  // optional string name = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.OPInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->name(), target);
  }

  // optional uint32 pid = 9;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->pid(), target);
  }

  // optional uint64 parent_id = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->parent_id(), target);
  }

  // optional uint32 vec_idx = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->vec_idx(), target);
  }

  // optional uint64 remote_op_id = 12;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(12, this->remote_op_id(), target);
  }

  // optional int32 for_replica_cluster = 13 [default = 0];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->for_replica_cluster(), target);
  }

  // optional string db = 14;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.OPInfo.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->db(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.OPInfo)
  return target;
}

size_t OPInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openmldb.api.OPInfo)
  size_t total_size = 0;

  if (has_data()) {
    // required string data = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (has_op_id()) {
    // required uint64 op_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->op_id());
  }

  if (has_task_index()) {
    // required uint32 task_index = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->task_index());
  }

  if (has_op_type()) {
    // required .openmldb.api.OPType op_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  return total_size;
}
size_t OPInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.OPInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00001029) ^ 0x00001029) == 0) {  // All required fields are present.
    // required string data = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());

    // required uint64 op_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->op_id());

    // required uint32 task_index = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->task_index());

    // required .openmldb.api.OPType op_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional string name = 8;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string db = 14;
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

  }
  // optional uint64 start_time = 6 [default = 0];
  if (has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_time());
  }

  if (_has_bits_[0 / 32] & 192u) {
    // optional uint32 pid = 9;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional uint64 end_time = 7 [default = 0];
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->end_time());
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional uint64 parent_id = 10;
    if (has_parent_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->parent_id());
    }

    // optional uint64 remote_op_id = 12;
    if (has_remote_op_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->remote_op_id());
    }

    // optional uint32 vec_idx = 11;
    if (has_vec_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->vec_idx());
    }

    // optional int32 for_replica_cluster = 13 [default = 0];
    if (has_for_replica_cluster()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->for_replica_cluster());
    }

  }
  // optional .openmldb.api.TaskStatus task_status = 5;
  if (has_task_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->task_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OPInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.OPInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const OPInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OPInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.OPInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.OPInfo)
    MergeFrom(*source);
  }
}

void OPInfo::MergeFrom(const OPInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.OPInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000008u) {
      op_id_ = from.op_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      start_time_ = from.start_time_;
    }
    if (cached_has_bits & 0x00000020u) {
      task_index_ = from.task_index_;
    }
    if (cached_has_bits & 0x00000040u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000080u) {
      end_time_ = from.end_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      parent_id_ = from.parent_id_;
    }
    if (cached_has_bits & 0x00000200u) {
      remote_op_id_ = from.remote_op_id_;
    }
    if (cached_has_bits & 0x00000400u) {
      vec_idx_ = from.vec_idx_;
    }
    if (cached_has_bits & 0x00000800u) {
      for_replica_cluster_ = from.for_replica_cluster_;
    }
    if (cached_has_bits & 0x00001000u) {
      op_type_ = from.op_type_;
    }
    if (cached_has_bits & 0x00002000u) {
      task_status_ = from.task_status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OPInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.OPInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OPInfo::CopyFrom(const OPInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.OPInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OPInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00001029) != 0x00001029) return false;
  return true;
}

void OPInfo::Swap(OPInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OPInfo::InternalSwap(OPInfo* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(op_id_, other->op_id_);
  swap(start_time_, other->start_time_);
  swap(task_index_, other->task_index_);
  swap(pid_, other->pid_);
  swap(end_time_, other->end_time_);
  swap(parent_id_, other->parent_id_);
  swap(remote_op_id_, other->remote_op_id_);
  swap(vec_idx_, other->vec_idx_);
  swap(for_replica_cluster_, other->for_replica_cluster_);
  swap(op_type_, other->op_type_);
  swap(task_status_, other->task_status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OPInfo::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PartSnapshotOffset::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PartSnapshotOffset::kPidFieldNumber;
const int PartSnapshotOffset::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PartSnapshotOffset::PartSnapshotOffset()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_PartSnapshotOffset.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.PartSnapshotOffset)
}
PartSnapshotOffset::PartSnapshotOffset(const PartSnapshotOffset& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&pid_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(pid_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.PartSnapshotOffset)
}

void PartSnapshotOffset::SharedCtor() {
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(pid_));
}

PartSnapshotOffset::~PartSnapshotOffset() {
  // @@protoc_insertion_point(destructor:openmldb.api.PartSnapshotOffset)
  SharedDtor();
}

void PartSnapshotOffset::SharedDtor() {
}

void PartSnapshotOffset::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PartSnapshotOffset::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PartSnapshotOffset& PartSnapshotOffset::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_PartSnapshotOffset.base);
  return *internal_default_instance();
}


void PartSnapshotOffset::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.PartSnapshotOffset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pid_) -
        reinterpret_cast<char*>(&offset_)) + sizeof(pid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PartSnapshotOffset::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.PartSnapshotOffset)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.PartSnapshotOffset)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.PartSnapshotOffset)
  return false;
#undef DO_
}

void PartSnapshotOffset::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.PartSnapshotOffset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional uint64 offset = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->offset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.PartSnapshotOffset)
}

::google::protobuf::uint8* PartSnapshotOffset::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.PartSnapshotOffset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional uint64 offset = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->offset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.PartSnapshotOffset)
  return target;
}

size_t PartSnapshotOffset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.PartSnapshotOffset)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 offset = 3;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->offset());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PartSnapshotOffset::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.PartSnapshotOffset)
  GOOGLE_DCHECK_NE(&from, this);
  const PartSnapshotOffset* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PartSnapshotOffset>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.PartSnapshotOffset)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.PartSnapshotOffset)
    MergeFrom(*source);
  }
}

void PartSnapshotOffset::MergeFrom(const PartSnapshotOffset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.PartSnapshotOffset)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000002u) {
      pid_ = from.pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PartSnapshotOffset::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.PartSnapshotOffset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PartSnapshotOffset::CopyFrom(const PartSnapshotOffset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.PartSnapshotOffset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PartSnapshotOffset::IsInitialized() const {
  return true;
}

void PartSnapshotOffset::Swap(PartSnapshotOffset* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PartSnapshotOffset::InternalSwap(PartSnapshotOffset* other) {
  using std::swap;
  swap(offset_, other->offset_);
  swap(pid_, other->pid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PartSnapshotOffset::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TableSnapshotOffsetResponse_Table::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TableSnapshotOffsetResponse_Table::kTidFieldNumber;
const int TableSnapshotOffsetResponse_Table::kPartsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TableSnapshotOffsetResponse_Table::TableSnapshotOffsetResponse_Table()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_TableSnapshotOffsetResponse_Table.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.TableSnapshotOffsetResponse.Table)
}
TableSnapshotOffsetResponse_Table::TableSnapshotOffsetResponse_Table(const TableSnapshotOffsetResponse_Table& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      parts_(from.parts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tid_ = from.tid_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.TableSnapshotOffsetResponse.Table)
}

void TableSnapshotOffsetResponse_Table::SharedCtor() {
  tid_ = 0u;
}

TableSnapshotOffsetResponse_Table::~TableSnapshotOffsetResponse_Table() {
  // @@protoc_insertion_point(destructor:openmldb.api.TableSnapshotOffsetResponse.Table)
  SharedDtor();
}

void TableSnapshotOffsetResponse_Table::SharedDtor() {
}

void TableSnapshotOffsetResponse_Table::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TableSnapshotOffsetResponse_Table::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TableSnapshotOffsetResponse_Table& TableSnapshotOffsetResponse_Table::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_TableSnapshotOffsetResponse_Table.base);
  return *internal_default_instance();
}


void TableSnapshotOffsetResponse_Table::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.TableSnapshotOffsetResponse.Table)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parts_.Clear();
  tid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TableSnapshotOffsetResponse_Table::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.TableSnapshotOffsetResponse.Table)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.api.PartSnapshotOffset parts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_parts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.TableSnapshotOffsetResponse.Table)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.TableSnapshotOffsetResponse.Table)
  return false;
#undef DO_
}

void TableSnapshotOffsetResponse_Table::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.TableSnapshotOffsetResponse.Table)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // repeated .openmldb.api.PartSnapshotOffset parts = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->parts(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.TableSnapshotOffsetResponse.Table)
}

::google::protobuf::uint8* TableSnapshotOffsetResponse_Table::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.TableSnapshotOffsetResponse.Table)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // repeated .openmldb.api.PartSnapshotOffset parts = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->parts(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.TableSnapshotOffsetResponse.Table)
  return target;
}

size_t TableSnapshotOffsetResponse_Table::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.TableSnapshotOffsetResponse.Table)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.api.PartSnapshotOffset parts = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->parts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->parts(static_cast<int>(i)));
    }
  }

  // optional uint32 tid = 1;
  if (has_tid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TableSnapshotOffsetResponse_Table::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.TableSnapshotOffsetResponse.Table)
  GOOGLE_DCHECK_NE(&from, this);
  const TableSnapshotOffsetResponse_Table* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TableSnapshotOffsetResponse_Table>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.TableSnapshotOffsetResponse.Table)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.TableSnapshotOffsetResponse.Table)
    MergeFrom(*source);
  }
}

void TableSnapshotOffsetResponse_Table::MergeFrom(const TableSnapshotOffsetResponse_Table& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.TableSnapshotOffsetResponse.Table)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parts_.MergeFrom(from.parts_);
  if (from.has_tid()) {
    set_tid(from.tid());
  }
}

void TableSnapshotOffsetResponse_Table::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.TableSnapshotOffsetResponse.Table)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableSnapshotOffsetResponse_Table::CopyFrom(const TableSnapshotOffsetResponse_Table& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.TableSnapshotOffsetResponse.Table)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableSnapshotOffsetResponse_Table::IsInitialized() const {
  return true;
}

void TableSnapshotOffsetResponse_Table::Swap(TableSnapshotOffsetResponse_Table* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TableSnapshotOffsetResponse_Table::InternalSwap(TableSnapshotOffsetResponse_Table* other) {
  using std::swap;
  CastToBase(&parts_)->InternalSwap(CastToBase(&other->parts_));
  swap(tid_, other->tid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TableSnapshotOffsetResponse_Table::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TableSnapshotOffsetResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TableSnapshotOffsetResponse::kCodeFieldNumber;
const int TableSnapshotOffsetResponse::kMsgFieldNumber;
const int TableSnapshotOffsetResponse::kTablesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TableSnapshotOffsetResponse::TableSnapshotOffsetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_TableSnapshotOffsetResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.TableSnapshotOffsetResponse)
}
TableSnapshotOffsetResponse::TableSnapshotOffsetResponse(const TableSnapshotOffsetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tables_(from.tables_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.TableSnapshotOffsetResponse)
}

void TableSnapshotOffsetResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

TableSnapshotOffsetResponse::~TableSnapshotOffsetResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.TableSnapshotOffsetResponse)
  SharedDtor();
}

void TableSnapshotOffsetResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TableSnapshotOffsetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TableSnapshotOffsetResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TableSnapshotOffsetResponse& TableSnapshotOffsetResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_TableSnapshotOffsetResponse.base);
  return *internal_default_instance();
}


void TableSnapshotOffsetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.TableSnapshotOffsetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tables_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TableSnapshotOffsetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.TableSnapshotOffsetResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.TableSnapshotOffsetResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.api.TableSnapshotOffsetResponse.Table tables = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.TableSnapshotOffsetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.TableSnapshotOffsetResponse)
  return false;
#undef DO_
}

void TableSnapshotOffsetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.TableSnapshotOffsetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.TableSnapshotOffsetResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // repeated .openmldb.api.TableSnapshotOffsetResponse.Table tables = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tables_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->tables(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.TableSnapshotOffsetResponse)
}

::google::protobuf::uint8* TableSnapshotOffsetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.TableSnapshotOffsetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.TableSnapshotOffsetResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // repeated .openmldb.api.TableSnapshotOffsetResponse.Table tables = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tables_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->tables(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.TableSnapshotOffsetResponse)
  return target;
}

size_t TableSnapshotOffsetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.TableSnapshotOffsetResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.api.TableSnapshotOffsetResponse.Table tables = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->tables_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tables(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TableSnapshotOffsetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.TableSnapshotOffsetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TableSnapshotOffsetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TableSnapshotOffsetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.TableSnapshotOffsetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.TableSnapshotOffsetResponse)
    MergeFrom(*source);
  }
}

void TableSnapshotOffsetResponse::MergeFrom(const TableSnapshotOffsetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.TableSnapshotOffsetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tables_.MergeFrom(from.tables_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TableSnapshotOffsetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.TableSnapshotOffsetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableSnapshotOffsetResponse::CopyFrom(const TableSnapshotOffsetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.TableSnapshotOffsetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableSnapshotOffsetResponse::IsInitialized() const {
  return true;
}

void TableSnapshotOffsetResponse::Swap(TableSnapshotOffsetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TableSnapshotOffsetResponse::InternalSwap(TableSnapshotOffsetResponse* other) {
  using std::swap;
  CastToBase(&tables_)->InternalSwap(CastToBase(&other->tables_));
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TableSnapshotOffsetResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Manifest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Manifest::kOffsetFieldNumber;
const int Manifest::kNameFieldNumber;
const int Manifest::kCountFieldNumber;
const int Manifest::kTermFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Manifest::Manifest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_Manifest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.Manifest)
}
Manifest::Manifest(const Manifest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&term_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(term_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.Manifest)
}

void Manifest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&term_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(term_));
}

Manifest::~Manifest() {
  // @@protoc_insertion_point(destructor:openmldb.api.Manifest)
  SharedDtor();
}

void Manifest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Manifest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Manifest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Manifest& Manifest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_Manifest.base);
  return *internal_default_instance();
}


void Manifest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.Manifest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&term_) -
        reinterpret_cast<char*>(&offset_)) + sizeof(term_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Manifest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.Manifest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 offset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.Manifest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 term = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_term();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.Manifest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.Manifest)
  return false;
#undef DO_
}

void Manifest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.Manifest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 offset = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->offset(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.Manifest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional uint64 count = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->count(), output);
  }

  // optional uint64 term = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->term(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.Manifest)
}

::google::protobuf::uint8* Manifest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.Manifest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 offset = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->offset(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.Manifest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional uint64 count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->count(), target);
  }

  // optional uint64 term = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->term(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.Manifest)
  return target;
}

size_t Manifest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.Manifest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint64 offset = 1;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->offset());
    }

    // optional uint64 count = 3;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->count());
    }

    // optional uint64 term = 4;
    if (has_term()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->term());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Manifest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.Manifest)
  GOOGLE_DCHECK_NE(&from, this);
  const Manifest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Manifest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.Manifest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.Manifest)
    MergeFrom(*source);
  }
}

void Manifest::MergeFrom(const Manifest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.Manifest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000004u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000008u) {
      term_ = from.term_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Manifest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.Manifest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Manifest::CopyFrom(const Manifest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.Manifest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Manifest::IsInitialized() const {
  return true;
}

void Manifest::Swap(Manifest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Manifest::InternalSwap(Manifest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(offset_, other->offset_);
  swap(count_, other->count_);
  swap(term_, other->term_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Manifest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Dimension::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Dimension::kKeyFieldNumber;
const int Dimension::kIdxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Dimension::Dimension()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_Dimension.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.Dimension)
}
Dimension::Dimension(const Dimension& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  idx_ = from.idx_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.Dimension)
}

void Dimension::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idx_ = 0u;
}

Dimension::~Dimension() {
  // @@protoc_insertion_point(destructor:openmldb.api.Dimension)
  SharedDtor();
}

void Dimension::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Dimension::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Dimension::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Dimension& Dimension::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_Dimension.base);
  return *internal_default_instance();
}


void Dimension::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.Dimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    key_.ClearNonDefaultToEmptyNoArena();
  }
  idx_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Dimension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.Dimension)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.Dimension.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 idx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.Dimension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.Dimension)
  return false;
#undef DO_
}

void Dimension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.Dimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.Dimension.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional uint32 idx = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->idx(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.Dimension)
}

::google::protobuf::uint8* Dimension::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.Dimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.Dimension.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional uint32 idx = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->idx(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.Dimension)
  return target;
}

size_t Dimension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.Dimension)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional uint32 idx = 2;
    if (has_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->idx());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Dimension::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.Dimension)
  GOOGLE_DCHECK_NE(&from, this);
  const Dimension* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Dimension>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.Dimension)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.Dimension)
    MergeFrom(*source);
  }
}

void Dimension::MergeFrom(const Dimension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.Dimension)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      idx_ = from.idx_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Dimension::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.Dimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Dimension::CopyFrom(const Dimension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.Dimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Dimension::IsInitialized() const {
  return true;
}

void Dimension::Swap(Dimension* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Dimension::InternalSwap(Dimension* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(idx_, other->idx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Dimension::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TSDimension::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TSDimension::kTsFieldNumber;
const int TSDimension::kIdxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TSDimension::TSDimension()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_TSDimension.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.TSDimension)
}
TSDimension::TSDimension(const TSDimension& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ts_, &from.ts_,
    static_cast<size_t>(reinterpret_cast<char*>(&idx_) -
    reinterpret_cast<char*>(&ts_)) + sizeof(idx_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.TSDimension)
}

void TSDimension::SharedCtor() {
  ::memset(&ts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&idx_) -
      reinterpret_cast<char*>(&ts_)) + sizeof(idx_));
}

TSDimension::~TSDimension() {
  // @@protoc_insertion_point(destructor:openmldb.api.TSDimension)
  SharedDtor();
}

void TSDimension::SharedDtor() {
}

void TSDimension::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TSDimension::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TSDimension& TSDimension::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_TSDimension.base);
  return *internal_default_instance();
}


void TSDimension::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.TSDimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&ts_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&idx_) -
        reinterpret_cast<char*>(&ts_)) + sizeof(idx_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TSDimension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.TSDimension)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 ts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 idx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.TSDimension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.TSDimension)
  return false;
#undef DO_
}

void TSDimension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.TSDimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 ts = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ts(), output);
  }

  // optional uint32 idx = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->idx(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.TSDimension)
}

::google::protobuf::uint8* TSDimension::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.TSDimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 ts = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ts(), target);
  }

  // optional uint32 idx = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->idx(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.TSDimension)
  return target;
}

size_t TSDimension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.TSDimension)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 ts = 1;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->ts());
    }

    // optional uint32 idx = 2;
    if (has_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->idx());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TSDimension::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.TSDimension)
  GOOGLE_DCHECK_NE(&from, this);
  const TSDimension* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TSDimension>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.TSDimension)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.TSDimension)
    MergeFrom(*source);
  }
}

void TSDimension::MergeFrom(const TSDimension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.TSDimension)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      ts_ = from.ts_;
    }
    if (cached_has_bits & 0x00000002u) {
      idx_ = from.idx_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TSDimension::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.TSDimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSDimension::CopyFrom(const TSDimension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.TSDimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSDimension::IsInitialized() const {
  return true;
}

void TSDimension::Swap(TSDimension* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TSDimension::InternalSwap(TSDimension* other) {
  using std::swap;
  swap(ts_, other->ts_);
  swap(idx_, other->idx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TSDimension::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PutRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PutRequest::kPkFieldNumber;
const int PutRequest::kTimeFieldNumber;
const int PutRequest::kValueFieldNumber;
const int PutRequest::kTidFieldNumber;
const int PutRequest::kPidFieldNumber;
const int PutRequest::kDimensionsFieldNumber;
const int PutRequest::kTsDimensionsFieldNumber;
const int PutRequest::kFormatVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutRequest::PutRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_PutRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.PutRequest)
}
PutRequest::PutRequest(const PutRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      dimensions_(from.dimensions_),
      ts_dimensions_(from.ts_dimensions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pk()) {
    pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pk_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&format_version_) -
    reinterpret_cast<char*>(&time_)) + sizeof(format_version_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.PutRequest)
}

void PutRequest::SharedCtor() {
  pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&format_version_) -
      reinterpret_cast<char*>(&time_)) + sizeof(format_version_));
}

PutRequest::~PutRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.PutRequest)
  SharedDtor();
}

void PutRequest::SharedDtor() {
  pk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PutRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PutRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PutRequest& PutRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_PutRequest.base);
  return *internal_default_instance();
}


void PutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.PutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dimensions_.Clear();
  ts_dimensions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      pk_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&format_version_) -
        reinterpret_cast<char*>(&time_)) + sizeof(format_version_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PutRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.PutRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string pk = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pk()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pk().data(), static_cast<int>(this->pk().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.PutRequest.pk");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 tid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.api.Dimension dimensions = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dimensions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.api.TSDimension ts_dimensions = 7 [deprecated = true];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ts_dimensions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 format_version = 8 [default = 0];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_format_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &format_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.PutRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.PutRequest)
  return false;
#undef DO_
}

void PutRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.PutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string pk = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pk().data(), static_cast<int>(this->pk().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.PutRequest.pk");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pk(), output);
  }

  // optional int64 time = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->time(), output);
  }

  // optional bytes value = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->value(), output);
  }

  // optional uint32 tid = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->tid(), output);
  }

  // optional uint32 pid = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pid(), output);
  }

  // repeated .openmldb.api.Dimension dimensions = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dimensions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->dimensions(static_cast<int>(i)),
      output);
  }

  // repeated .openmldb.api.TSDimension ts_dimensions = 7 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ts_dimensions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->ts_dimensions(static_cast<int>(i)),
      output);
  }

  // optional uint32 format_version = 8 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->format_version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.PutRequest)
}

::google::protobuf::uint8* PutRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.PutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string pk = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pk().data(), static_cast<int>(this->pk().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.PutRequest.pk");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pk(), target);
  }

  // optional int64 time = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->time(), target);
  }

  // optional bytes value = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->value(), target);
  }

  // optional uint32 tid = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->tid(), target);
  }

  // optional uint32 pid = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pid(), target);
  }

  // repeated .openmldb.api.Dimension dimensions = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dimensions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->dimensions(static_cast<int>(i)), deterministic, target);
  }

  // repeated .openmldb.api.TSDimension ts_dimensions = 7 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ts_dimensions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->ts_dimensions(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 format_version = 8 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->format_version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.PutRequest)
  return target;
}

size_t PutRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.PutRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.api.Dimension dimensions = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->dimensions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dimensions(static_cast<int>(i)));
    }
  }

  // repeated .openmldb.api.TSDimension ts_dimensions = 7 [deprecated = true];
  {
    unsigned int count = static_cast<unsigned int>(this->ts_dimensions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ts_dimensions(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional string pk = 1;
    if (has_pk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pk());
    }

    // optional bytes value = 3;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

    // optional int64 time = 2;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->time());
    }

    // optional uint32 tid = 4;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 pid = 5;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional uint32 format_version = 8 [default = 0];
    if (has_format_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->format_version());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PutRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.PutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PutRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PutRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.PutRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.PutRequest)
    MergeFrom(*source);
  }
}

void PutRequest::MergeFrom(const PutRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.PutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dimensions_.MergeFrom(from.dimensions_);
  ts_dimensions_.MergeFrom(from.ts_dimensions_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_pk();
      pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pk_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000004u) {
      time_ = from.time_;
    }
    if (cached_has_bits & 0x00000008u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000010u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000020u) {
      format_version_ = from.format_version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PutRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.PutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutRequest::CopyFrom(const PutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.PutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutRequest::IsInitialized() const {
  return true;
}

void PutRequest::Swap(PutRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutRequest::InternalSwap(PutRequest* other) {
  using std::swap;
  CastToBase(&dimensions_)->InternalSwap(CastToBase(&other->dimensions_));
  CastToBase(&ts_dimensions_)->InternalSwap(CastToBase(&other->ts_dimensions_));
  pk_.Swap(&other->pk_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(time_, other->time_);
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(format_version_, other->format_version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PutRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PutResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PutResponse::kCodeFieldNumber;
const int PutResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutResponse::PutResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_PutResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.PutResponse)
}
PutResponse::PutResponse(const PutResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.PutResponse)
}

void PutResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

PutResponse::~PutResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.PutResponse)
  SharedDtor();
}

void PutResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PutResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PutResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PutResponse& PutResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_PutResponse.base);
  return *internal_default_instance();
}


void PutResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.PutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PutResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.PutResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.PutResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.PutResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.PutResponse)
  return false;
#undef DO_
}

void PutResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.PutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.PutResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.PutResponse)
}

::google::protobuf::uint8* PutResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.PutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.PutResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.PutResponse)
  return target;
}

size_t PutResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.PutResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PutResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.PutResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PutResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PutResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.PutResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.PutResponse)
    MergeFrom(*source);
  }
}

void PutResponse::MergeFrom(const PutResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.PutResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PutResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.PutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutResponse::CopyFrom(const PutResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.PutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutResponse::IsInitialized() const {
  return true;
}

void PutResponse::Swap(PutResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutResponse::InternalSwap(PutResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PutResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteRequest::kTidFieldNumber;
const int DeleteRequest::kPidFieldNumber;
const int DeleteRequest::kKeyFieldNumber;
const int DeleteRequest::kIdxNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteRequest::DeleteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_DeleteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.DeleteRequest)
}
DeleteRequest::DeleteRequest(const DeleteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  idx_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_idx_name()) {
    idx_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idx_name_);
  }
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pid_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.DeleteRequest)
}

void DeleteRequest::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idx_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
}

DeleteRequest::~DeleteRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.DeleteRequest)
  SharedDtor();
}

void DeleteRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idx_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteRequest& DeleteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_DeleteRequest.base);
  return *internal_default_instance();
}


void DeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.DeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      idx_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pid_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeleteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.DeleteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.DeleteRequest.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string idx_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_idx_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->idx_name().data(), static_cast<int>(this->idx_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.DeleteRequest.idx_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.DeleteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.DeleteRequest)
  return false;
#undef DO_
}

void DeleteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.DeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional string key = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.DeleteRequest.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->key(), output);
  }

  // optional string idx_name = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->idx_name().data(), static_cast<int>(this->idx_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.DeleteRequest.idx_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->idx_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.DeleteRequest)
}

::google::protobuf::uint8* DeleteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.DeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional string key = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.DeleteRequest.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->key(), target);
  }

  // optional string idx_name = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->idx_name().data(), static_cast<int>(this->idx_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.DeleteRequest.idx_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->idx_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.DeleteRequest)
  return target;
}

size_t DeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.DeleteRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string key = 3;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string idx_name = 4;
    if (has_idx_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->idx_name());
    }

    // optional uint32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.DeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.DeleteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.DeleteRequest)
    MergeFrom(*source);
  }
}

void DeleteRequest::MergeFrom(const DeleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.DeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_idx_name();
      idx_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idx_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000008u) {
      pid_ = from.pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DeleteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.DeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRequest::CopyFrom(const DeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.DeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRequest::IsInitialized() const {
  return true;
}

void DeleteRequest::Swap(DeleteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteRequest::InternalSwap(DeleteRequest* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  idx_name_.Swap(&other->idx_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecuteGcRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecuteGcRequest::kTidFieldNumber;
const int ExecuteGcRequest::kPidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecuteGcRequest::ExecuteGcRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_ExecuteGcRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.ExecuteGcRequest)
}
ExecuteGcRequest::ExecuteGcRequest(const ExecuteGcRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pid_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.ExecuteGcRequest)
}

void ExecuteGcRequest::SharedCtor() {
  ::memset(&tid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
}

ExecuteGcRequest::~ExecuteGcRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.ExecuteGcRequest)
  SharedDtor();
}

void ExecuteGcRequest::SharedDtor() {
}

void ExecuteGcRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExecuteGcRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecuteGcRequest& ExecuteGcRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_ExecuteGcRequest.base);
  return *internal_default_instance();
}


void ExecuteGcRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.ExecuteGcRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pid_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExecuteGcRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.ExecuteGcRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.ExecuteGcRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.ExecuteGcRequest)
  return false;
#undef DO_
}

void ExecuteGcRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.ExecuteGcRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.ExecuteGcRequest)
}

::google::protobuf::uint8* ExecuteGcRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.ExecuteGcRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.ExecuteGcRequest)
  return target;
}

size_t ExecuteGcRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.ExecuteGcRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecuteGcRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.ExecuteGcRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteGcRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecuteGcRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.ExecuteGcRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.ExecuteGcRequest)
    MergeFrom(*source);
  }
}

void ExecuteGcRequest::MergeFrom(const ExecuteGcRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.ExecuteGcRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000002u) {
      pid_ = from.pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExecuteGcRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.ExecuteGcRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteGcRequest::CopyFrom(const ExecuteGcRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.ExecuteGcRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteGcRequest::IsInitialized() const {
  return true;
}

void ExecuteGcRequest::Swap(ExecuteGcRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecuteGcRequest::InternalSwap(ExecuteGcRequest* other) {
  using std::swap;
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExecuteGcRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GeneralRequest::InitAsDefaultInstance() {
  ::openmldb::api::_GeneralRequest_default_instance_._instance.get_mutable()->task_info_ = const_cast< ::openmldb::api::TaskInfo*>(
      ::openmldb::api::TaskInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GeneralRequest::kTidFieldNumber;
const int GeneralRequest::kPidFieldNumber;
const int GeneralRequest::kTaskInfoFieldNumber;
const int GeneralRequest::kOffsetFieldNumber;
const int GeneralRequest::kStorageModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GeneralRequest::GeneralRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_GeneralRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.GeneralRequest)
}
GeneralRequest::GeneralRequest(const GeneralRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_task_info()) {
    task_info_ = new ::openmldb::api::TaskInfo(*from.task_info_);
  } else {
    task_info_ = NULL;
  }
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&storage_mode_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(storage_mode_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.GeneralRequest)
}

void GeneralRequest::SharedCtor() {
  ::memset(&task_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offset_) -
      reinterpret_cast<char*>(&task_info_)) + sizeof(offset_));
  storage_mode_ = 1;
}

GeneralRequest::~GeneralRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.GeneralRequest)
  SharedDtor();
}

void GeneralRequest::SharedDtor() {
  if (this != internal_default_instance()) delete task_info_;
}

void GeneralRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GeneralRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GeneralRequest& GeneralRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_GeneralRequest.base);
  return *internal_default_instance();
}


void GeneralRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.GeneralRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(task_info_ != NULL);
    task_info_->Clear();
  }
  if (cached_has_bits & 30u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&offset_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(offset_));
    storage_mode_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GeneralRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.GeneralRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.api.TaskInfo task_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_task_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 offset = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.common.StorageMode storage_mode = 5 [default = kMemory];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::common::StorageMode_IsValid(value)) {
            set_storage_mode(static_cast< ::openmldb::common::StorageMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                5, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.GeneralRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.GeneralRequest)
  return false;
#undef DO_
}

void GeneralRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.GeneralRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 tid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tid(), output);
  }

  // required int32 pid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pid(), output);
  }

  // optional .openmldb.api.TaskInfo task_info = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_task_info(), output);
  }

  // optional uint64 offset = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->offset(), output);
  }

  // optional .openmldb.common.StorageMode storage_mode = 5 [default = kMemory];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->storage_mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.GeneralRequest)
}

::google::protobuf::uint8* GeneralRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.GeneralRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 tid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tid(), target);
  }

  // required int32 pid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pid(), target);
  }

  // optional .openmldb.api.TaskInfo task_info = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_task_info(), deterministic, target);
  }

  // optional uint64 offset = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->offset(), target);
  }

  // optional .openmldb.common.StorageMode storage_mode = 5 [default = kMemory];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->storage_mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.GeneralRequest)
  return target;
}

size_t GeneralRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openmldb.api.GeneralRequest)
  size_t total_size = 0;

  if (has_tid()) {
    // required int32 tid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tid());
  }

  if (has_pid()) {
    // required int32 pid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pid());
  }

  return total_size;
}
size_t GeneralRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.GeneralRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required int32 tid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tid());

    // required int32 pid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .openmldb.api.TaskInfo task_info = 3;
  if (has_task_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *task_info_);
  }

  if (_has_bits_[0 / 32] & 24u) {
    // optional uint64 offset = 4;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->offset());
    }

    // optional .openmldb.common.StorageMode storage_mode = 5 [default = kMemory];
    if (has_storage_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->storage_mode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GeneralRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.GeneralRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GeneralRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GeneralRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.GeneralRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.GeneralRequest)
    MergeFrom(*source);
  }
}

void GeneralRequest::MergeFrom(const GeneralRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.GeneralRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_task_info()->::openmldb::api::TaskInfo::MergeFrom(from.task_info());
    }
    if (cached_has_bits & 0x00000002u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000008u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000010u) {
      storage_mode_ = from.storage_mode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GeneralRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.GeneralRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GeneralRequest::CopyFrom(const GeneralRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.GeneralRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GeneralRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (has_task_info()) {
    if (!this->task_info_->IsInitialized()) return false;
  }
  return true;
}

void GeneralRequest::Swap(GeneralRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GeneralRequest::InternalSwap(GeneralRequest* other) {
  using std::swap;
  swap(task_info_, other->task_info_);
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(offset_, other->offset_);
  swap(storage_mode_, other->storage_mode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GeneralRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TaskStatusRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskStatusRequest::TaskStatusRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_TaskStatusRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.TaskStatusRequest)
}
TaskStatusRequest::TaskStatusRequest(const TaskStatusRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openmldb.api.TaskStatusRequest)
}

void TaskStatusRequest::SharedCtor() {
}

TaskStatusRequest::~TaskStatusRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.TaskStatusRequest)
  SharedDtor();
}

void TaskStatusRequest::SharedDtor() {
}

void TaskStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TaskStatusRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskStatusRequest& TaskStatusRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_TaskStatusRequest.base);
  return *internal_default_instance();
}


void TaskStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.TaskStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TaskStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.TaskStatusRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.TaskStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.TaskStatusRequest)
  return false;
#undef DO_
}

void TaskStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.TaskStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.TaskStatusRequest)
}

::google::protobuf::uint8* TaskStatusRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.TaskStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.TaskStatusRequest)
  return target;
}

size_t TaskStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.TaskStatusRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TaskStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.TaskStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskStatusRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskStatusRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.TaskStatusRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.TaskStatusRequest)
    MergeFrom(*source);
  }
}

void TaskStatusRequest::MergeFrom(const TaskStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.TaskStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TaskStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.TaskStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskStatusRequest::CopyFrom(const TaskStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.TaskStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskStatusRequest::IsInitialized() const {
  return true;
}

void TaskStatusRequest::Swap(TaskStatusRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskStatusRequest::InternalSwap(TaskStatusRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TaskStatusRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TaskStatusResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskStatusResponse::kCodeFieldNumber;
const int TaskStatusResponse::kMsgFieldNumber;
const int TaskStatusResponse::kTaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskStatusResponse::TaskStatusResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_TaskStatusResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.TaskStatusResponse)
}
TaskStatusResponse::TaskStatusResponse(const TaskStatusResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      task_(from.task_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.TaskStatusResponse)
}

void TaskStatusResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

TaskStatusResponse::~TaskStatusResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.TaskStatusResponse)
  SharedDtor();
}

void TaskStatusResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TaskStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TaskStatusResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskStatusResponse& TaskStatusResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_TaskStatusResponse.base);
  return *internal_default_instance();
}


void TaskStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.TaskStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  task_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TaskStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.TaskStatusResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.TaskStatusResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.api.TaskInfo task = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_task()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.TaskStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.TaskStatusResponse)
  return false;
#undef DO_
}

void TaskStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.TaskStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.TaskStatusResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // repeated .openmldb.api.TaskInfo task = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->task_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->task(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.TaskStatusResponse)
}

::google::protobuf::uint8* TaskStatusResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.TaskStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.TaskStatusResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // repeated .openmldb.api.TaskInfo task = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->task_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->task(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.TaskStatusResponse)
  return target;
}

size_t TaskStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.TaskStatusResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.api.TaskInfo task = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->task_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->task(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TaskStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.TaskStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskStatusResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskStatusResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.TaskStatusResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.TaskStatusResponse)
    MergeFrom(*source);
  }
}

void TaskStatusResponse::MergeFrom(const TaskStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.TaskStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  task_.MergeFrom(from.task_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TaskStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.TaskStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskStatusResponse::CopyFrom(const TaskStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.TaskStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskStatusResponse::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->task())) return false;
  return true;
}

void TaskStatusResponse::Swap(TaskStatusResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskStatusResponse::InternalSwap(TaskStatusResponse* other) {
  using std::swap;
  CastToBase(&task_)->InternalSwap(CastToBase(&other->task_));
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TaskStatusResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteTaskRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteTaskRequest::kOpIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteTaskRequest::DeleteTaskRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_DeleteTaskRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.DeleteTaskRequest)
}
DeleteTaskRequest::DeleteTaskRequest(const DeleteTaskRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      op_id_(from.op_id_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openmldb.api.DeleteTaskRequest)
}

void DeleteTaskRequest::SharedCtor() {
}

DeleteTaskRequest::~DeleteTaskRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.DeleteTaskRequest)
  SharedDtor();
}

void DeleteTaskRequest::SharedDtor() {
}

void DeleteTaskRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteTaskRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteTaskRequest& DeleteTaskRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_DeleteTaskRequest.base);
  return *internal_default_instance();
}


void DeleteTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.DeleteTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  op_id_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeleteTaskRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.DeleteTaskRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 op_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_op_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_op_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.DeleteTaskRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.DeleteTaskRequest)
  return false;
#undef DO_
}

void DeleteTaskRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.DeleteTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 op_id = 1;
  for (int i = 0, n = this->op_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->op_id(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.DeleteTaskRequest)
}

::google::protobuf::uint8* DeleteTaskRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.DeleteTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 op_id = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->op_id_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.DeleteTaskRequest)
  return target;
}

size_t DeleteTaskRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.DeleteTaskRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 op_id = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->op_id_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->op_id_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteTaskRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.DeleteTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteTaskRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteTaskRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.DeleteTaskRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.DeleteTaskRequest)
    MergeFrom(*source);
  }
}

void DeleteTaskRequest::MergeFrom(const DeleteTaskRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.DeleteTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  op_id_.MergeFrom(from.op_id_);
}

void DeleteTaskRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.DeleteTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteTaskRequest::CopyFrom(const DeleteTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.DeleteTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteTaskRequest::IsInitialized() const {
  return true;
}

void DeleteTaskRequest::Swap(DeleteTaskRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteTaskRequest::InternalSwap(DeleteTaskRequest* other) {
  using std::swap;
  op_id_.InternalSwap(&other->op_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteTaskRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GeneralResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GeneralResponse::kCodeFieldNumber;
const int GeneralResponse::kMsgFieldNumber;
const int GeneralResponse::kAdditionalIdsFieldNumber;
const int GeneralResponse::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GeneralResponse::GeneralResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_GeneralResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.GeneralResponse)
}
GeneralResponse::GeneralResponse(const GeneralResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      additional_ids_(from.additional_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&code_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.GeneralResponse)
}

void GeneralResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&code_)) + sizeof(count_));
}

GeneralResponse::~GeneralResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.GeneralResponse)
  SharedDtor();
}

void GeneralResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GeneralResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GeneralResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GeneralResponse& GeneralResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_GeneralResponse.base);
  return *internal_default_instance();
}


void GeneralResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.GeneralResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  additional_ids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&code_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&count_) -
        reinterpret_cast<char*>(&code_)) + sizeof(count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GeneralResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.GeneralResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.GeneralResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 additional_ids = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24u, input, this->mutable_additional_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_additional_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.GeneralResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.GeneralResponse)
  return false;
#undef DO_
}

void GeneralResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.GeneralResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.GeneralResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // repeated int64 additional_ids = 3;
  for (int i = 0, n = this->additional_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->additional_ids(i), output);
  }

  // optional uint32 count = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.GeneralResponse)
}

::google::protobuf::uint8* GeneralResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.GeneralResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.GeneralResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // repeated int64 additional_ids = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(3, this->additional_ids_, target);

  // optional uint32 count = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.GeneralResponse)
  return target;
}

size_t GeneralResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.GeneralResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int64 additional_ids = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->additional_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->additional_ids_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

    // optional uint32 count = 4;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GeneralResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.GeneralResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GeneralResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GeneralResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.GeneralResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.GeneralResponse)
    MergeFrom(*source);
  }
}

void GeneralResponse::MergeFrom(const GeneralResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.GeneralResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  additional_ids_.MergeFrom(from.additional_ids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    if (cached_has_bits & 0x00000004u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GeneralResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.GeneralResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GeneralResponse::CopyFrom(const GeneralResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.GeneralResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GeneralResponse::IsInitialized() const {
  return true;
}

void GeneralResponse::Swap(GeneralResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GeneralResponse::InternalSwap(GeneralResponse* other) {
  using std::swap;
  additional_ids_.InternalSwap(&other->additional_ids_);
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GeneralResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScanRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScanRequest::kPkFieldNumber;
const int ScanRequest::kStFieldNumber;
const int ScanRequest::kEtFieldNumber;
const int ScanRequest::kLimitFieldNumber;
const int ScanRequest::kTidFieldNumber;
const int ScanRequest::kPidFieldNumber;
const int ScanRequest::kEnableRemoveDuplicatedRecordFieldNumber;
const int ScanRequest::kIdxNameFieldNumber;
const int ScanRequest::kEnableRemoveTsFieldNumber;
const int ScanRequest::kProjectionFieldNumber;
const int ScanRequest::kPidGroupFieldNumber;
const int ScanRequest::kUseAttachmentFieldNumber;
const int ScanRequest::kSkipRecordNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScanRequest::ScanRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_ScanRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.ScanRequest)
}
ScanRequest::ScanRequest(const ScanRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      projection_(from.projection_),
      pid_group_(from.pid_group_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pk()) {
    pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pk_);
  }
  idx_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_idx_name()) {
    idx_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idx_name_);
  }
  ::memcpy(&st_, &from.st_,
    static_cast<size_t>(reinterpret_cast<char*>(&skip_record_num_) -
    reinterpret_cast<char*>(&st_)) + sizeof(skip_record_num_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.ScanRequest)
}

void ScanRequest::SharedCtor() {
  pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idx_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&st_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skip_record_num_) -
      reinterpret_cast<char*>(&st_)) + sizeof(skip_record_num_));
}

ScanRequest::~ScanRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.ScanRequest)
  SharedDtor();
}

void ScanRequest::SharedDtor() {
  pk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idx_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ScanRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScanRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScanRequest& ScanRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_ScanRequest.base);
  return *internal_default_instance();
}


void ScanRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.ScanRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  projection_.Clear();
  pid_group_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      pk_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      idx_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&st_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&enable_remove_duplicated_record_) -
        reinterpret_cast<char*>(&st_)) + sizeof(enable_remove_duplicated_record_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&enable_remove_ts_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&skip_record_num_) -
        reinterpret_cast<char*>(&enable_remove_ts_)) + sizeof(skip_record_num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ScanRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.ScanRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string pk = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pk()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pk().data(), static_cast<int>(this->pk().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.ScanRequest.pk");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 st = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_st();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &st_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 et = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_et();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &et_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 limit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 tid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool enable_remove_duplicated_record = 7 [default = false];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_enable_remove_duplicated_record();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_remove_duplicated_record_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string idx_name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_idx_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->idx_name().data(), static_cast<int>(this->idx_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.ScanRequest.idx_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool enable_remove_ts = 9 [default = false];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_enable_remove_ts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_remove_ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 projection = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 80u, input, this->mutable_projection())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_projection())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 pid_group = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 88u, input, this->mutable_pid_group())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_pid_group())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool use_attachment = 12 [default = false];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_use_attachment();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_attachment_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 skip_record_num = 13 [default = 0];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_skip_record_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skip_record_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.ScanRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.ScanRequest)
  return false;
#undef DO_
}

void ScanRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.ScanRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string pk = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pk().data(), static_cast<int>(this->pk().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ScanRequest.pk");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pk(), output);
  }

  // optional uint64 st = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->st(), output);
  }

  // optional uint64 et = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->et(), output);
  }

  // optional uint32 limit = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->limit(), output);
  }

  // optional uint32 tid = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->tid(), output);
  }

  // optional uint32 pid = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->pid(), output);
  }

  // optional bool enable_remove_duplicated_record = 7 [default = false];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->enable_remove_duplicated_record(), output);
  }

  // optional string idx_name = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->idx_name().data(), static_cast<int>(this->idx_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ScanRequest.idx_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->idx_name(), output);
  }

  // optional bool enable_remove_ts = 9 [default = false];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->enable_remove_ts(), output);
  }

  // repeated uint32 projection = 10;
  for (int i = 0, n = this->projection_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      10, this->projection(i), output);
  }

  // repeated uint32 pid_group = 11;
  for (int i = 0, n = this->pid_group_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      11, this->pid_group(i), output);
  }

  // optional bool use_attachment = 12 [default = false];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->use_attachment(), output);
  }

  // optional uint32 skip_record_num = 13 [default = 0];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->skip_record_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.ScanRequest)
}

::google::protobuf::uint8* ScanRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.ScanRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string pk = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pk().data(), static_cast<int>(this->pk().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ScanRequest.pk");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pk(), target);
  }

  // optional uint64 st = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->st(), target);
  }

  // optional uint64 et = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->et(), target);
  }

  // optional uint32 limit = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->limit(), target);
  }

  // optional uint32 tid = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->tid(), target);
  }

  // optional uint32 pid = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->pid(), target);
  }

  // optional bool enable_remove_duplicated_record = 7 [default = false];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->enable_remove_duplicated_record(), target);
  }

  // optional string idx_name = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->idx_name().data(), static_cast<int>(this->idx_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ScanRequest.idx_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->idx_name(), target);
  }

  // optional bool enable_remove_ts = 9 [default = false];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->enable_remove_ts(), target);
  }

  // repeated uint32 projection = 10;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(10, this->projection_, target);

  // repeated uint32 pid_group = 11;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(11, this->pid_group_, target);

  // optional bool use_attachment = 12 [default = false];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->use_attachment(), target);
  }

  // optional uint32 skip_record_num = 13 [default = 0];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->skip_record_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.ScanRequest)
  return target;
}

size_t ScanRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.ScanRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 projection = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->projection_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->projection_size());
    total_size += data_size;
  }

  // repeated uint32 pid_group = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->pid_group_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->pid_group_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string pk = 1;
    if (has_pk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pk());
    }

    // optional string idx_name = 8;
    if (has_idx_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->idx_name());
    }

    // optional uint64 st = 2;
    if (has_st()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->st());
    }

    // optional uint64 et = 3;
    if (has_et()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->et());
    }

    // optional uint32 limit = 4;
    if (has_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->limit());
    }

    // optional uint32 tid = 5;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 pid = 6;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional bool enable_remove_duplicated_record = 7 [default = false];
    if (has_enable_remove_duplicated_record()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional bool enable_remove_ts = 9 [default = false];
    if (has_enable_remove_ts()) {
      total_size += 1 + 1;
    }

    // optional bool use_attachment = 12 [default = false];
    if (has_use_attachment()) {
      total_size += 1 + 1;
    }

    // optional uint32 skip_record_num = 13 [default = 0];
    if (has_skip_record_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->skip_record_num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScanRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.ScanRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ScanRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScanRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.ScanRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.ScanRequest)
    MergeFrom(*source);
  }
}

void ScanRequest::MergeFrom(const ScanRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.ScanRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  projection_.MergeFrom(from.projection_);
  pid_group_.MergeFrom(from.pid_group_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_pk();
      pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pk_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_idx_name();
      idx_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idx_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      st_ = from.st_;
    }
    if (cached_has_bits & 0x00000008u) {
      et_ = from.et_;
    }
    if (cached_has_bits & 0x00000010u) {
      limit_ = from.limit_;
    }
    if (cached_has_bits & 0x00000020u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000040u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000080u) {
      enable_remove_duplicated_record_ = from.enable_remove_duplicated_record_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      enable_remove_ts_ = from.enable_remove_ts_;
    }
    if (cached_has_bits & 0x00000200u) {
      use_attachment_ = from.use_attachment_;
    }
    if (cached_has_bits & 0x00000400u) {
      skip_record_num_ = from.skip_record_num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ScanRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.ScanRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScanRequest::CopyFrom(const ScanRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.ScanRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScanRequest::IsInitialized() const {
  return true;
}

void ScanRequest::Swap(ScanRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScanRequest::InternalSwap(ScanRequest* other) {
  using std::swap;
  projection_.InternalSwap(&other->projection_);
  pid_group_.InternalSwap(&other->pid_group_);
  pk_.Swap(&other->pk_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  idx_name_.Swap(&other->idx_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(st_, other->st_);
  swap(et_, other->et_);
  swap(limit_, other->limit_);
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(enable_remove_duplicated_record_, other->enable_remove_duplicated_record_);
  swap(enable_remove_ts_, other->enable_remove_ts_);
  swap(use_attachment_, other->use_attachment_);
  swap(skip_record_num_, other->skip_record_num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScanRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TraverseRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TraverseRequest::kTidFieldNumber;
const int TraverseRequest::kPidFieldNumber;
const int TraverseRequest::kIdxNameFieldNumber;
const int TraverseRequest::kLimitFieldNumber;
const int TraverseRequest::kPkFieldNumber;
const int TraverseRequest::kTsFieldNumber;
const int TraverseRequest::kEnableRemoveDuplicatedRecordFieldNumber;
const int TraverseRequest::kSkipCurrentPkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TraverseRequest::TraverseRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_TraverseRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.TraverseRequest)
}
TraverseRequest::TraverseRequest(const TraverseRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  idx_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_idx_name()) {
    idx_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idx_name_);
  }
  pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pk()) {
    pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pk_);
  }
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.TraverseRequest)
}

void TraverseRequest::SharedCtor() {
  idx_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skip_current_pk_) -
      reinterpret_cast<char*>(&tid_)) + sizeof(skip_current_pk_));
  limit_ = 100u;
}

TraverseRequest::~TraverseRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.TraverseRequest)
  SharedDtor();
}

void TraverseRequest::SharedDtor() {
  idx_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TraverseRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TraverseRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TraverseRequest& TraverseRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_TraverseRequest.base);
  return *internal_default_instance();
}


void TraverseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.TraverseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      idx_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      pk_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&skip_current_pk_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(skip_current_pk_));
    limit_ = 100u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TraverseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.TraverseRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string idx_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_idx_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->idx_name().data(), static_cast<int>(this->idx_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.TraverseRequest.idx_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 limit = 4 [default = 100];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string pk = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pk()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pk().data(), static_cast<int>(this->pk().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.TraverseRequest.pk");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 ts = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_ts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool enable_remove_duplicated_record = 7 [default = false];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_enable_remove_duplicated_record();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_remove_duplicated_record_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool skip_current_pk = 8 [default = false];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_skip_current_pk();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &skip_current_pk_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.TraverseRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.TraverseRequest)
  return false;
#undef DO_
}

void TraverseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.TraverseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional string idx_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->idx_name().data(), static_cast<int>(this->idx_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.TraverseRequest.idx_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->idx_name(), output);
  }

  // optional uint32 limit = 4 [default = 100];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->limit(), output);
  }

  // optional string pk = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pk().data(), static_cast<int>(this->pk().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.TraverseRequest.pk");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->pk(), output);
  }

  // optional uint64 ts = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->ts(), output);
  }

  // optional bool enable_remove_duplicated_record = 7 [default = false];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->enable_remove_duplicated_record(), output);
  }

  // optional bool skip_current_pk = 8 [default = false];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->skip_current_pk(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.TraverseRequest)
}

::google::protobuf::uint8* TraverseRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.TraverseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional string idx_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->idx_name().data(), static_cast<int>(this->idx_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.TraverseRequest.idx_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->idx_name(), target);
  }

  // optional uint32 limit = 4 [default = 100];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->limit(), target);
  }

  // optional string pk = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pk().data(), static_cast<int>(this->pk().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.TraverseRequest.pk");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->pk(), target);
  }

  // optional uint64 ts = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->ts(), target);
  }

  // optional bool enable_remove_duplicated_record = 7 [default = false];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->enable_remove_duplicated_record(), target);
  }

  // optional bool skip_current_pk = 8 [default = false];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->skip_current_pk(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.TraverseRequest)
  return target;
}

size_t TraverseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.TraverseRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string idx_name = 3;
    if (has_idx_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->idx_name());
    }

    // optional string pk = 5;
    if (has_pk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pk());
    }

    // optional uint32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional uint64 ts = 6;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->ts());
    }

    // optional bool enable_remove_duplicated_record = 7 [default = false];
    if (has_enable_remove_duplicated_record()) {
      total_size += 1 + 1;
    }

    // optional bool skip_current_pk = 8 [default = false];
    if (has_skip_current_pk()) {
      total_size += 1 + 1;
    }

    // optional uint32 limit = 4 [default = 100];
    if (has_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->limit());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TraverseRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.TraverseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TraverseRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TraverseRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.TraverseRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.TraverseRequest)
    MergeFrom(*source);
  }
}

void TraverseRequest::MergeFrom(const TraverseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.TraverseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_idx_name();
      idx_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idx_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_pk();
      pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pk_);
    }
    if (cached_has_bits & 0x00000004u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000008u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000010u) {
      ts_ = from.ts_;
    }
    if (cached_has_bits & 0x00000020u) {
      enable_remove_duplicated_record_ = from.enable_remove_duplicated_record_;
    }
    if (cached_has_bits & 0x00000040u) {
      skip_current_pk_ = from.skip_current_pk_;
    }
    if (cached_has_bits & 0x00000080u) {
      limit_ = from.limit_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TraverseRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.TraverseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TraverseRequest::CopyFrom(const TraverseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.TraverseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraverseRequest::IsInitialized() const {
  return true;
}

void TraverseRequest::Swap(TraverseRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TraverseRequest::InternalSwap(TraverseRequest* other) {
  using std::swap;
  idx_name_.Swap(&other->idx_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pk_.Swap(&other->pk_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(ts_, other->ts_);
  swap(enable_remove_duplicated_record_, other->enable_remove_duplicated_record_);
  swap(skip_current_pk_, other->skip_current_pk_);
  swap(limit_, other->limit_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TraverseRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TraverseResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TraverseResponse::kPairsFieldNumber;
const int TraverseResponse::kMsgFieldNumber;
const int TraverseResponse::kCodeFieldNumber;
const int TraverseResponse::kCountFieldNumber;
const int TraverseResponse::kPkFieldNumber;
const int TraverseResponse::kTsFieldNumber;
const int TraverseResponse::kIsFinishFieldNumber;
const int TraverseResponse::kSnapshotIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TraverseResponse::TraverseResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_TraverseResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.TraverseResponse)
}
TraverseResponse::TraverseResponse(const TraverseResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pairs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pairs()) {
    pairs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pairs_);
  }
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pk()) {
    pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pk_);
  }
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_finish_) -
    reinterpret_cast<char*>(&code_)) + sizeof(is_finish_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.TraverseResponse)
}

void TraverseResponse::SharedCtor() {
  pairs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_finish_) -
      reinterpret_cast<char*>(&code_)) + sizeof(is_finish_));
}

TraverseResponse::~TraverseResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.TraverseResponse)
  SharedDtor();
}

void TraverseResponse::SharedDtor() {
  pairs_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TraverseResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TraverseResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TraverseResponse& TraverseResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_TraverseResponse.base);
  return *internal_default_instance();
}


void TraverseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.TraverseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      pairs_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      msg_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      pk_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&code_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_finish_) -
        reinterpret_cast<char*>(&code_)) + sizeof(is_finish_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TraverseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.TraverseResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pairs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pairs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.TraverseResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string pk = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pk()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pk().data(), static_cast<int>(this->pk().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.TraverseResponse.pk");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 ts = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_ts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_finish = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_is_finish();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_finish_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 snapshot_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_snapshot_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &snapshot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.TraverseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.TraverseResponse)
  return false;
#undef DO_
}

void TraverseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.TraverseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pairs = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->pairs(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.TraverseResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // optional int32 code = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->code(), output);
  }

  // optional uint32 count = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->count(), output);
  }

  // optional string pk = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pk().data(), static_cast<int>(this->pk().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.TraverseResponse.pk");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->pk(), output);
  }

  // optional uint64 ts = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->ts(), output);
  }

  // optional bool is_finish = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_finish(), output);
  }

  // optional uint64 snapshot_id = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->snapshot_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.TraverseResponse)
}

::google::protobuf::uint8* TraverseResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.TraverseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pairs = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->pairs(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.TraverseResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // optional int32 code = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->code(), target);
  }

  // optional uint32 count = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->count(), target);
  }

  // optional string pk = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pk().data(), static_cast<int>(this->pk().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.TraverseResponse.pk");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->pk(), target);
  }

  // optional uint64 ts = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->ts(), target);
  }

  // optional bool is_finish = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_finish(), target);
  }

  // optional uint64 snapshot_id = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->snapshot_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.TraverseResponse)
  return target;
}

size_t TraverseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.TraverseResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes pairs = 1;
    if (has_pairs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pairs());
    }

    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional string pk = 5;
    if (has_pk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pk());
    }

    // optional int32 code = 3;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

    // optional uint32 count = 4;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

    // optional uint64 ts = 6;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->ts());
    }

    // optional uint64 snapshot_id = 8;
    if (has_snapshot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->snapshot_id());
    }

    // optional bool is_finish = 7;
    if (has_is_finish()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TraverseResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.TraverseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TraverseResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TraverseResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.TraverseResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.TraverseResponse)
    MergeFrom(*source);
  }
}

void TraverseResponse::MergeFrom(const TraverseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.TraverseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_pairs();
      pairs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pairs_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_pk();
      pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pk_);
    }
    if (cached_has_bits & 0x00000008u) {
      code_ = from.code_;
    }
    if (cached_has_bits & 0x00000010u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000020u) {
      ts_ = from.ts_;
    }
    if (cached_has_bits & 0x00000040u) {
      snapshot_id_ = from.snapshot_id_;
    }
    if (cached_has_bits & 0x00000080u) {
      is_finish_ = from.is_finish_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TraverseResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.TraverseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TraverseResponse::CopyFrom(const TraverseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.TraverseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraverseResponse::IsInitialized() const {
  return true;
}

void TraverseResponse::Swap(TraverseResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TraverseResponse::InternalSwap(TraverseResponse* other) {
  using std::swap;
  pairs_.Swap(&other->pairs_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pk_.Swap(&other->pk_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(count_, other->count_);
  swap(ts_, other->ts_);
  swap(snapshot_id_, other->snapshot_id_);
  swap(is_finish_, other->is_finish_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TraverseResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScanResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScanResponse::kPairsFieldNumber;
const int ScanResponse::kMsgFieldNumber;
const int ScanResponse::kCodeFieldNumber;
const int ScanResponse::kCountFieldNumber;
const int ScanResponse::kBufSizeFieldNumber;
const int ScanResponse::kIsFinishFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScanResponse::ScanResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_ScanResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.ScanResponse)
}
ScanResponse::ScanResponse(const ScanResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pairs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pairs()) {
    pairs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pairs_);
  }
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_finish_) -
    reinterpret_cast<char*>(&code_)) + sizeof(is_finish_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.ScanResponse)
}

void ScanResponse::SharedCtor() {
  pairs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&buf_size_) -
      reinterpret_cast<char*>(&code_)) + sizeof(buf_size_));
  is_finish_ = true;
}

ScanResponse::~ScanResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.ScanResponse)
  SharedDtor();
}

void ScanResponse::SharedDtor() {
  pairs_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ScanResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScanResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScanResponse& ScanResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_ScanResponse.base);
  return *internal_default_instance();
}


void ScanResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.ScanResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      pairs_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      msg_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&code_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&buf_size_) -
        reinterpret_cast<char*>(&code_)) + sizeof(buf_size_));
    is_finish_ = true;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ScanResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.ScanResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pairs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pairs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.ScanResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 buf_size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_buf_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buf_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_finish = 6 [default = true];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_is_finish();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_finish_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.ScanResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.ScanResponse)
  return false;
#undef DO_
}

void ScanResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.ScanResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pairs = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->pairs(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ScanResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // optional int32 code = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->code(), output);
  }

  // optional uint32 count = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->count(), output);
  }

  // optional uint32 buf_size = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->buf_size(), output);
  }

  // optional bool is_finish = 6 [default = true];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_finish(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.ScanResponse)
}

::google::protobuf::uint8* ScanResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.ScanResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pairs = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->pairs(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ScanResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // optional int32 code = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->code(), target);
  }

  // optional uint32 count = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->count(), target);
  }

  // optional uint32 buf_size = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->buf_size(), target);
  }

  // optional bool is_finish = 6 [default = true];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_finish(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.ScanResponse)
  return target;
}

size_t ScanResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.ScanResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes pairs = 1;
    if (has_pairs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pairs());
    }

    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 3;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

    // optional uint32 count = 4;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

    // optional uint32 buf_size = 5;
    if (has_buf_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buf_size());
    }

    // optional bool is_finish = 6 [default = true];
    if (has_is_finish()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScanResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.ScanResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ScanResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScanResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.ScanResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.ScanResponse)
    MergeFrom(*source);
  }
}

void ScanResponse::MergeFrom(const ScanResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.ScanResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_pairs();
      pairs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pairs_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000004u) {
      code_ = from.code_;
    }
    if (cached_has_bits & 0x00000008u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000010u) {
      buf_size_ = from.buf_size_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_finish_ = from.is_finish_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ScanResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.ScanResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScanResponse::CopyFrom(const ScanResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.ScanResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScanResponse::IsInitialized() const {
  return true;
}

void ScanResponse::Swap(ScanResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScanResponse::InternalSwap(ScanResponse* other) {
  using std::swap;
  pairs_.Swap(&other->pairs_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(count_, other->count_);
  swap(buf_size_, other->buf_size_);
  swap(is_finish_, other->is_finish_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScanResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReplicaRequest::InitAsDefaultInstance() {
  ::openmldb::api::_ReplicaRequest_default_instance_._instance.get_mutable()->task_info_ = const_cast< ::openmldb::api::TaskInfo*>(
      ::openmldb::api::TaskInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReplicaRequest::kTidFieldNumber;
const int ReplicaRequest::kPidFieldNumber;
const int ReplicaRequest::kEndpointFieldNumber;
const int ReplicaRequest::kTaskInfoFieldNumber;
const int ReplicaRequest::kRemoteTidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReplicaRequest::ReplicaRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_ReplicaRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.ReplicaRequest)
}
ReplicaRequest::ReplicaRequest(const ReplicaRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_endpoint()) {
    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  if (from.has_task_info()) {
    task_info_ = new ::openmldb::api::TaskInfo(*from.task_info_);
  } else {
    task_info_ = NULL;
  }
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&remote_tid_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(remote_tid_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.ReplicaRequest)
}

void ReplicaRequest::SharedCtor() {
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&task_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remote_tid_) -
      reinterpret_cast<char*>(&task_info_)) + sizeof(remote_tid_));
}

ReplicaRequest::~ReplicaRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.ReplicaRequest)
  SharedDtor();
}

void ReplicaRequest::SharedDtor() {
  endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete task_info_;
}

void ReplicaRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReplicaRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReplicaRequest& ReplicaRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_ReplicaRequest.base);
  return *internal_default_instance();
}


void ReplicaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.ReplicaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      endpoint_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(task_info_ != NULL);
      task_info_->Clear();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&remote_tid_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(remote_tid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ReplicaRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.ReplicaRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string endpoint = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->endpoint().data(), static_cast<int>(this->endpoint().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.ReplicaRequest.endpoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.api.TaskInfo task_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_task_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 remote_tid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_remote_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remote_tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.ReplicaRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.ReplicaRequest)
  return false;
#undef DO_
}

void ReplicaRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.ReplicaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional string endpoint = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ReplicaRequest.endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->endpoint(), output);
  }

  // optional .openmldb.api.TaskInfo task_info = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_task_info(), output);
  }

  // optional uint32 remote_tid = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->remote_tid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.ReplicaRequest)
}

::google::protobuf::uint8* ReplicaRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.ReplicaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional string endpoint = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ReplicaRequest.endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->endpoint(), target);
  }

  // optional .openmldb.api.TaskInfo task_info = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_task_info(), deterministic, target);
  }

  // optional uint32 remote_tid = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->remote_tid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.ReplicaRequest)
  return target;
}

size_t ReplicaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.ReplicaRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string endpoint = 3;
    if (has_endpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->endpoint());
    }

    // optional .openmldb.api.TaskInfo task_info = 4;
    if (has_task_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_info_);
    }

    // optional uint32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional uint32 remote_tid = 5;
    if (has_remote_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->remote_tid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReplicaRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.ReplicaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReplicaRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReplicaRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.ReplicaRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.ReplicaRequest)
    MergeFrom(*source);
  }
}

void ReplicaRequest::MergeFrom(const ReplicaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.ReplicaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_endpoint();
      endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_task_info()->::openmldb::api::TaskInfo::MergeFrom(from.task_info());
    }
    if (cached_has_bits & 0x00000004u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000008u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000010u) {
      remote_tid_ = from.remote_tid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ReplicaRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.ReplicaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplicaRequest::CopyFrom(const ReplicaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.ReplicaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplicaRequest::IsInitialized() const {
  if (has_task_info()) {
    if (!this->task_info_->IsInitialized()) return false;
  }
  return true;
}

void ReplicaRequest::Swap(ReplicaRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReplicaRequest::InternalSwap(ReplicaRequest* other) {
  using std::swap;
  endpoint_.Swap(&other->endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(task_info_, other->task_info_);
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(remote_tid_, other->remote_tid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReplicaRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddReplicaResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddReplicaResponse::kCodeFieldNumber;
const int AddReplicaResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddReplicaResponse::AddReplicaResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_AddReplicaResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.AddReplicaResponse)
}
AddReplicaResponse::AddReplicaResponse(const AddReplicaResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.AddReplicaResponse)
}

void AddReplicaResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

AddReplicaResponse::~AddReplicaResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.AddReplicaResponse)
  SharedDtor();
}

void AddReplicaResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddReplicaResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddReplicaResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddReplicaResponse& AddReplicaResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_AddReplicaResponse.base);
  return *internal_default_instance();
}


void AddReplicaResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.AddReplicaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AddReplicaResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.AddReplicaResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.AddReplicaResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.AddReplicaResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.AddReplicaResponse)
  return false;
#undef DO_
}

void AddReplicaResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.AddReplicaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.AddReplicaResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.AddReplicaResponse)
}

::google::protobuf::uint8* AddReplicaResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.AddReplicaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.AddReplicaResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.AddReplicaResponse)
  return target;
}

size_t AddReplicaResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.AddReplicaResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddReplicaResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.AddReplicaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddReplicaResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddReplicaResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.AddReplicaResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.AddReplicaResponse)
    MergeFrom(*source);
  }
}

void AddReplicaResponse::MergeFrom(const AddReplicaResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.AddReplicaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AddReplicaResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.AddReplicaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddReplicaResponse::CopyFrom(const AddReplicaResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.AddReplicaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddReplicaResponse::IsInitialized() const {
  return true;
}

void AddReplicaResponse::Swap(AddReplicaResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddReplicaResponse::InternalSwap(AddReplicaResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddReplicaResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TableMeta::InitAsDefaultInstance() {
}
void TableMeta::clear_column_desc() {
  column_desc_.Clear();
}
void TableMeta::clear_column_key() {
  column_key_.Clear();
}
void TableMeta::clear_added_column_desc() {
  added_column_desc_.Clear();
}
void TableMeta::clear_schema_versions() {
  schema_versions_.Clear();
}
void TableMeta::clear_table_partition() {
  table_partition_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TableMeta::kTidFieldNumber;
const int TableMeta::kNameFieldNumber;
const int TableMeta::kPidFieldNumber;
const int TableMeta::kSegCntFieldNumber;
const int TableMeta::kReplicasFieldNumber;
const int TableMeta::kModeFieldNumber;
const int TableMeta::kTermFieldNumber;
const int TableMeta::kCompressTypeFieldNumber;
const int TableMeta::kKeyEntryMaxHeightFieldNumber;
const int TableMeta::kColumnDescFieldNumber;
const int TableMeta::kColumnKeyFieldNumber;
const int TableMeta::kAddedColumnDescFieldNumber;
const int TableMeta::kFormatVersionFieldNumber;
const int TableMeta::kDbFieldNumber;
const int TableMeta::kSchemaVersionsFieldNumber;
const int TableMeta::kTablePartitionFieldNumber;
const int TableMeta::kStorageModeFieldNumber;
const int TableMeta::kBaseTableTidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TableMeta::TableMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_TableMeta.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.TableMeta)
}
TableMeta::TableMeta(const TableMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      replicas_(from.replicas_),
      column_desc_(from.column_desc_),
      column_key_(from.column_key_),
      added_column_desc_(from.added_column_desc_),
      schema_versions_(from.schema_versions_),
      table_partition_(from.table_partition_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&storage_mode_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(storage_mode_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.TableMeta)
}

void TableMeta::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&base_table_tid_) -
      reinterpret_cast<char*>(&tid_)) + sizeof(base_table_tid_));
  mode_ = 1;
  storage_mode_ = 1;
}

TableMeta::~TableMeta() {
  // @@protoc_insertion_point(destructor:openmldb.api.TableMeta)
  SharedDtor();
}

void TableMeta::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TableMeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TableMeta::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TableMeta& TableMeta::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_TableMeta.base);
  return *internal_default_instance();
}


void TableMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.TableMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  replicas_.Clear();
  column_desc_.Clear();
  column_key_.Clear();
  added_column_desc_.Clear();
  schema_versions_.Clear();
  table_partition_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&key_entry_max_height_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(key_entry_max_height_));
  }
  if (cached_has_bits & 3840u) {
    ::memset(&format_version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&base_table_tid_) -
        reinterpret_cast<char*>(&format_version_)) + sizeof(base_table_tid_));
    mode_ = 1;
    storage_mode_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TableMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.TableMeta)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.TableMeta.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 seg_cnt = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_seg_cnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seg_cnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string replicas = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_replicas()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->replicas(this->replicas_size() - 1).data(),
            static_cast<int>(this->replicas(this->replicas_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.TableMeta.replicas");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.api.TableMode mode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::api::TableMode_IsValid(value)) {
            set_mode(static_cast< ::openmldb::api::TableMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                6, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 term = 7 [default = 0];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_term();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.type.CompressType compress_type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::type::CompressType_IsValid(value)) {
            set_compress_type(static_cast< ::openmldb::type::CompressType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                8, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 key_entry_max_height = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_key_entry_max_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &key_entry_max_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.common.ColumnDesc column_desc = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_column_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.common.ColumnKey column_key = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_column_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.common.ColumnDesc added_column_desc = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_added_column_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 format_version = 13 [default = 0];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_format_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &format_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 14 [default = ""];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.TableMeta.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.common.VersionPair schema_versions = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_schema_versions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.common.TablePartition table_partition = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_table_partition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.common.StorageMode storage_mode = 17 [default = kMemory];
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::common::StorageMode_IsValid(value)) {
            set_storage_mode(static_cast< ::openmldb::common::StorageMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                17, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 base_table_tid = 18 [default = 0];
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_base_table_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &base_table_tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.TableMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.TableMeta)
  return false;
#undef DO_
}

void TableMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.TableMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 tid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tid(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.TableMeta.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional int32 pid = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pid(), output);
  }

  // optional int32 seg_cnt = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->seg_cnt(), output);
  }

  // repeated string replicas = 5;
  for (int i = 0, n = this->replicas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->replicas(i).data(), static_cast<int>(this->replicas(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.TableMeta.replicas");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->replicas(i), output);
  }

  // optional .openmldb.api.TableMode mode = 6;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->mode(), output);
  }

  // optional uint64 term = 7 [default = 0];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->term(), output);
  }

  // optional .openmldb.type.CompressType compress_type = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->compress_type(), output);
  }

  // optional uint32 key_entry_max_height = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->key_entry_max_height(), output);
  }

  // repeated .openmldb.common.ColumnDesc column_desc = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->column_desc_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->column_desc(static_cast<int>(i)),
      output);
  }

  // repeated .openmldb.common.ColumnKey column_key = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->column_key_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->column_key(static_cast<int>(i)),
      output);
  }

  // repeated .openmldb.common.ColumnDesc added_column_desc = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->added_column_desc_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->added_column_desc(static_cast<int>(i)),
      output);
  }

  // optional uint32 format_version = 13 [default = 0];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->format_version(), output);
  }

  // optional string db = 14 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.TableMeta.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->db(), output);
  }

  // repeated .openmldb.common.VersionPair schema_versions = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->schema_versions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->schema_versions(static_cast<int>(i)),
      output);
  }

  // repeated .openmldb.common.TablePartition table_partition = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->table_partition_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16,
      this->table_partition(static_cast<int>(i)),
      output);
  }

  // optional .openmldb.common.StorageMode storage_mode = 17 [default = kMemory];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      17, this->storage_mode(), output);
  }

  // optional uint32 base_table_tid = 18 [default = 0];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->base_table_tid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.TableMeta)
}

::google::protobuf::uint8* TableMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.TableMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 tid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tid(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.TableMeta.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional int32 pid = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pid(), target);
  }

  // optional int32 seg_cnt = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->seg_cnt(), target);
  }

  // repeated string replicas = 5;
  for (int i = 0, n = this->replicas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->replicas(i).data(), static_cast<int>(this->replicas(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.TableMeta.replicas");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->replicas(i), target);
  }

  // optional .openmldb.api.TableMode mode = 6;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->mode(), target);
  }

  // optional uint64 term = 7 [default = 0];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->term(), target);
  }

  // optional .openmldb.type.CompressType compress_type = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->compress_type(), target);
  }

  // optional uint32 key_entry_max_height = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->key_entry_max_height(), target);
  }

  // repeated .openmldb.common.ColumnDesc column_desc = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->column_desc_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->column_desc(static_cast<int>(i)), deterministic, target);
  }

  // repeated .openmldb.common.ColumnKey column_key = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->column_key_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->column_key(static_cast<int>(i)), deterministic, target);
  }

  // repeated .openmldb.common.ColumnDesc added_column_desc = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->added_column_desc_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->added_column_desc(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 format_version = 13 [default = 0];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->format_version(), target);
  }

  // optional string db = 14 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.TableMeta.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->db(), target);
  }

  // repeated .openmldb.common.VersionPair schema_versions = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->schema_versions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->schema_versions(static_cast<int>(i)), deterministic, target);
  }

  // repeated .openmldb.common.TablePartition table_partition = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->table_partition_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->table_partition(static_cast<int>(i)), deterministic, target);
  }

  // optional .openmldb.common.StorageMode storage_mode = 17 [default = kMemory];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      17, this->storage_mode(), target);
  }

  // optional uint32 base_table_tid = 18 [default = 0];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->base_table_tid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.TableMeta)
  return target;
}

size_t TableMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.TableMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string replicas = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->replicas_size());
  for (int i = 0, n = this->replicas_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->replicas(i));
  }

  // repeated .openmldb.common.ColumnDesc column_desc = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->column_desc_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->column_desc(static_cast<int>(i)));
    }
  }

  // repeated .openmldb.common.ColumnKey column_key = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->column_key_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->column_key(static_cast<int>(i)));
    }
  }

  // repeated .openmldb.common.ColumnDesc added_column_desc = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->added_column_desc_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->added_column_desc(static_cast<int>(i)));
    }
  }

  // repeated .openmldb.common.VersionPair schema_versions = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->schema_versions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->schema_versions(static_cast<int>(i)));
    }
  }

  // repeated .openmldb.common.TablePartition table_partition = 16;
  {
    unsigned int count = static_cast<unsigned int>(this->table_partition_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->table_partition(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string db = 14 [default = ""];
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional int32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tid());
    }

    // optional int32 pid = 3;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pid());
    }

    // optional int32 seg_cnt = 4;
    if (has_seg_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->seg_cnt());
    }

    // optional .openmldb.type.CompressType compress_type = 8;
    if (has_compress_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->compress_type());
    }

    // optional uint64 term = 7 [default = 0];
    if (has_term()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->term());
    }

    // optional uint32 key_entry_max_height = 9;
    if (has_key_entry_max_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->key_entry_max_height());
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional uint32 format_version = 13 [default = 0];
    if (has_format_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->format_version());
    }

    // optional uint32 base_table_tid = 18 [default = 0];
    if (has_base_table_tid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->base_table_tid());
    }

    // optional .openmldb.api.TableMode mode = 6;
    if (has_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
    }

    // optional .openmldb.common.StorageMode storage_mode = 17 [default = kMemory];
    if (has_storage_mode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->storage_mode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TableMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.TableMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const TableMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TableMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.TableMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.TableMeta)
    MergeFrom(*source);
  }
}

void TableMeta::MergeFrom(const TableMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.TableMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  replicas_.MergeFrom(from.replicas_);
  column_desc_.MergeFrom(from.column_desc_);
  column_key_.MergeFrom(from.column_key_);
  added_column_desc_.MergeFrom(from.added_column_desc_);
  schema_versions_.MergeFrom(from.schema_versions_);
  table_partition_.MergeFrom(from.table_partition_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000004u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000008u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000010u) {
      seg_cnt_ = from.seg_cnt_;
    }
    if (cached_has_bits & 0x00000020u) {
      compress_type_ = from.compress_type_;
    }
    if (cached_has_bits & 0x00000040u) {
      term_ = from.term_;
    }
    if (cached_has_bits & 0x00000080u) {
      key_entry_max_height_ = from.key_entry_max_height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      format_version_ = from.format_version_;
    }
    if (cached_has_bits & 0x00000200u) {
      base_table_tid_ = from.base_table_tid_;
    }
    if (cached_has_bits & 0x00000400u) {
      mode_ = from.mode_;
    }
    if (cached_has_bits & 0x00000800u) {
      storage_mode_ = from.storage_mode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TableMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.TableMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableMeta::CopyFrom(const TableMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.TableMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableMeta::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->column_desc())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->added_column_desc())) return false;
  return true;
}

void TableMeta::Swap(TableMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TableMeta::InternalSwap(TableMeta* other) {
  using std::swap;
  replicas_.InternalSwap(CastToBase(&other->replicas_));
  CastToBase(&column_desc_)->InternalSwap(CastToBase(&other->column_desc_));
  CastToBase(&column_key_)->InternalSwap(CastToBase(&other->column_key_));
  CastToBase(&added_column_desc_)->InternalSwap(CastToBase(&other->added_column_desc_));
  CastToBase(&schema_versions_)->InternalSwap(CastToBase(&other->schema_versions_));
  CastToBase(&table_partition_)->InternalSwap(CastToBase(&other->table_partition_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(seg_cnt_, other->seg_cnt_);
  swap(compress_type_, other->compress_type_);
  swap(term_, other->term_);
  swap(key_entry_max_height_, other->key_entry_max_height_);
  swap(format_version_, other->format_version_);
  swap(base_table_tid_, other->base_table_tid_);
  swap(mode_, other->mode_);
  swap(storage_mode_, other->storage_mode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TableMeta::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateTableRequest::InitAsDefaultInstance() {
  ::openmldb::api::_CreateTableRequest_default_instance_._instance.get_mutable()->table_meta_ = const_cast< ::openmldb::api::TableMeta*>(
      ::openmldb::api::TableMeta::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateTableRequest::kTableMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateTableRequest::CreateTableRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_CreateTableRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.CreateTableRequest)
}
CreateTableRequest::CreateTableRequest(const CreateTableRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_table_meta()) {
    table_meta_ = new ::openmldb::api::TableMeta(*from.table_meta_);
  } else {
    table_meta_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.api.CreateTableRequest)
}

void CreateTableRequest::SharedCtor() {
  table_meta_ = NULL;
}

CreateTableRequest::~CreateTableRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.CreateTableRequest)
  SharedDtor();
}

void CreateTableRequest::SharedDtor() {
  if (this != internal_default_instance()) delete table_meta_;
}

void CreateTableRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateTableRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateTableRequest& CreateTableRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_CreateTableRequest.base);
  return *internal_default_instance();
}


void CreateTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.CreateTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(table_meta_ != NULL);
    table_meta_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateTableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.CreateTableRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .openmldb.api.TableMeta table_meta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.CreateTableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.CreateTableRequest)
  return false;
#undef DO_
}

void CreateTableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.CreateTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.api.TableMeta table_meta = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_table_meta(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.CreateTableRequest)
}

::google::protobuf::uint8* CreateTableRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.CreateTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.api.TableMeta table_meta = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_table_meta(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.CreateTableRequest)
  return target;
}

size_t CreateTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.CreateTableRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .openmldb.api.TableMeta table_meta = 1;
  if (has_table_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *table_meta_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateTableRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.CreateTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTableRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateTableRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.CreateTableRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.CreateTableRequest)
    MergeFrom(*source);
  }
}

void CreateTableRequest::MergeFrom(const CreateTableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.CreateTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_table_meta()) {
    mutable_table_meta()->::openmldb::api::TableMeta::MergeFrom(from.table_meta());
  }
}

void CreateTableRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.CreateTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTableRequest::CopyFrom(const CreateTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.CreateTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTableRequest::IsInitialized() const {
  if (has_table_meta()) {
    if (!this->table_meta_->IsInitialized()) return false;
  }
  return true;
}

void CreateTableRequest::Swap(CreateTableRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateTableRequest::InternalSwap(CreateTableRequest* other) {
  using std::swap;
  swap(table_meta_, other->table_meta_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateTableRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateTableMetaForAddFieldRequest::InitAsDefaultInstance() {
  ::openmldb::api::_UpdateTableMetaForAddFieldRequest_default_instance_._instance.get_mutable()->column_desc_ = const_cast< ::openmldb::common::ColumnDesc*>(
      ::openmldb::common::ColumnDesc::internal_default_instance());
  ::openmldb::api::_UpdateTableMetaForAddFieldRequest_default_instance_._instance.get_mutable()->version_pair_ = const_cast< ::openmldb::common::VersionPair*>(
      ::openmldb::common::VersionPair::internal_default_instance());
}
void UpdateTableMetaForAddFieldRequest::clear_column_desc() {
  if (column_desc_ != NULL) column_desc_->Clear();
  clear_has_column_desc();
}
void UpdateTableMetaForAddFieldRequest::clear_column_descs() {
  column_descs_.Clear();
}
void UpdateTableMetaForAddFieldRequest::clear_version_pair() {
  if (version_pair_ != NULL) version_pair_->Clear();
  clear_has_version_pair();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateTableMetaForAddFieldRequest::kTidFieldNumber;
const int UpdateTableMetaForAddFieldRequest::kColumnDescFieldNumber;
const int UpdateTableMetaForAddFieldRequest::kColumnDescsFieldNumber;
const int UpdateTableMetaForAddFieldRequest::kVersionPairFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateTableMetaForAddFieldRequest::UpdateTableMetaForAddFieldRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_UpdateTableMetaForAddFieldRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.UpdateTableMetaForAddFieldRequest)
}
UpdateTableMetaForAddFieldRequest::UpdateTableMetaForAddFieldRequest(const UpdateTableMetaForAddFieldRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      column_descs_(from.column_descs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_column_desc()) {
    column_desc_ = new ::openmldb::common::ColumnDesc(*from.column_desc_);
  } else {
    column_desc_ = NULL;
  }
  if (from.has_version_pair()) {
    version_pair_ = new ::openmldb::common::VersionPair(*from.version_pair_);
  } else {
    version_pair_ = NULL;
  }
  tid_ = from.tid_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.UpdateTableMetaForAddFieldRequest)
}

void UpdateTableMetaForAddFieldRequest::SharedCtor() {
  ::memset(&column_desc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tid_) -
      reinterpret_cast<char*>(&column_desc_)) + sizeof(tid_));
}

UpdateTableMetaForAddFieldRequest::~UpdateTableMetaForAddFieldRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.UpdateTableMetaForAddFieldRequest)
  SharedDtor();
}

void UpdateTableMetaForAddFieldRequest::SharedDtor() {
  if (this != internal_default_instance()) delete column_desc_;
  if (this != internal_default_instance()) delete version_pair_;
}

void UpdateTableMetaForAddFieldRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateTableMetaForAddFieldRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateTableMetaForAddFieldRequest& UpdateTableMetaForAddFieldRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_UpdateTableMetaForAddFieldRequest.base);
  return *internal_default_instance();
}


void UpdateTableMetaForAddFieldRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.UpdateTableMetaForAddFieldRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  column_descs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(column_desc_ != NULL);
      column_desc_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(version_pair_ != NULL);
      version_pair_->Clear();
    }
  }
  tid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UpdateTableMetaForAddFieldRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.UpdateTableMetaForAddFieldRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.common.ColumnDesc column_desc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_column_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.common.ColumnDesc column_descs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_column_descs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.common.VersionPair version_pair = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_version_pair()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.UpdateTableMetaForAddFieldRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.UpdateTableMetaForAddFieldRequest)
  return false;
#undef DO_
}

void UpdateTableMetaForAddFieldRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.UpdateTableMetaForAddFieldRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional .openmldb.common.ColumnDesc column_desc = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_column_desc(), output);
  }

  // repeated .openmldb.common.ColumnDesc column_descs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->column_descs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->column_descs(static_cast<int>(i)),
      output);
  }

  // optional .openmldb.common.VersionPair version_pair = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_version_pair(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.UpdateTableMetaForAddFieldRequest)
}

::google::protobuf::uint8* UpdateTableMetaForAddFieldRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.UpdateTableMetaForAddFieldRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional .openmldb.common.ColumnDesc column_desc = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_column_desc(), deterministic, target);
  }

  // repeated .openmldb.common.ColumnDesc column_descs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->column_descs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->column_descs(static_cast<int>(i)), deterministic, target);
  }

  // optional .openmldb.common.VersionPair version_pair = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_version_pair(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.UpdateTableMetaForAddFieldRequest)
  return target;
}

size_t UpdateTableMetaForAddFieldRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.UpdateTableMetaForAddFieldRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.common.ColumnDesc column_descs = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->column_descs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->column_descs(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional .openmldb.common.ColumnDesc column_desc = 2;
    if (has_column_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *column_desc_);
    }

    // optional .openmldb.common.VersionPair version_pair = 4;
    if (has_version_pair()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *version_pair_);
    }

    // optional uint32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateTableMetaForAddFieldRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.UpdateTableMetaForAddFieldRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateTableMetaForAddFieldRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateTableMetaForAddFieldRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.UpdateTableMetaForAddFieldRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.UpdateTableMetaForAddFieldRequest)
    MergeFrom(*source);
  }
}

void UpdateTableMetaForAddFieldRequest::MergeFrom(const UpdateTableMetaForAddFieldRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.UpdateTableMetaForAddFieldRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  column_descs_.MergeFrom(from.column_descs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_column_desc()->::openmldb::common::ColumnDesc::MergeFrom(from.column_desc());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_version_pair()->::openmldb::common::VersionPair::MergeFrom(from.version_pair());
    }
    if (cached_has_bits & 0x00000004u) {
      tid_ = from.tid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UpdateTableMetaForAddFieldRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.UpdateTableMetaForAddFieldRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateTableMetaForAddFieldRequest::CopyFrom(const UpdateTableMetaForAddFieldRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.UpdateTableMetaForAddFieldRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateTableMetaForAddFieldRequest::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->column_descs())) return false;
  if (has_column_desc()) {
    if (!this->column_desc_->IsInitialized()) return false;
  }
  return true;
}

void UpdateTableMetaForAddFieldRequest::Swap(UpdateTableMetaForAddFieldRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateTableMetaForAddFieldRequest::InternalSwap(UpdateTableMetaForAddFieldRequest* other) {
  using std::swap;
  CastToBase(&column_descs_)->InternalSwap(CastToBase(&other->column_descs_));
  swap(column_desc_, other->column_desc_);
  swap(version_pair_, other->version_pair_);
  swap(tid_, other->tid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateTableMetaForAddFieldRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateTableResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateTableResponse::kCodeFieldNumber;
const int CreateTableResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateTableResponse::CreateTableResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_CreateTableResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.CreateTableResponse)
}
CreateTableResponse::CreateTableResponse(const CreateTableResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.CreateTableResponse)
}

void CreateTableResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

CreateTableResponse::~CreateTableResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.CreateTableResponse)
  SharedDtor();
}

void CreateTableResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateTableResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateTableResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateTableResponse& CreateTableResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_CreateTableResponse.base);
  return *internal_default_instance();
}


void CreateTableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.CreateTableResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateTableResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.CreateTableResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.CreateTableResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.CreateTableResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.CreateTableResponse)
  return false;
#undef DO_
}

void CreateTableResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.CreateTableResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.CreateTableResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.CreateTableResponse)
}

::google::protobuf::uint8* CreateTableResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.CreateTableResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.CreateTableResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.CreateTableResponse)
  return target;
}

size_t CreateTableResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.CreateTableResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateTableResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.CreateTableResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTableResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateTableResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.CreateTableResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.CreateTableResponse)
    MergeFrom(*source);
  }
}

void CreateTableResponse::MergeFrom(const CreateTableResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.CreateTableResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CreateTableResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.CreateTableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTableResponse::CopyFrom(const CreateTableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.CreateTableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTableResponse::IsInitialized() const {
  return true;
}

void CreateTableResponse::Swap(CreateTableResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateTableResponse::InternalSwap(CreateTableResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateTableResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoadTableRequest::InitAsDefaultInstance() {
  ::openmldb::api::_LoadTableRequest_default_instance_._instance.get_mutable()->table_meta_ = const_cast< ::openmldb::api::TableMeta*>(
      ::openmldb::api::TableMeta::internal_default_instance());
  ::openmldb::api::_LoadTableRequest_default_instance_._instance.get_mutable()->task_info_ = const_cast< ::openmldb::api::TaskInfo*>(
      ::openmldb::api::TaskInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadTableRequest::kTableMetaFieldNumber;
const int LoadTableRequest::kTaskInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadTableRequest::LoadTableRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_LoadTableRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.LoadTableRequest)
}
LoadTableRequest::LoadTableRequest(const LoadTableRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_table_meta()) {
    table_meta_ = new ::openmldb::api::TableMeta(*from.table_meta_);
  } else {
    table_meta_ = NULL;
  }
  if (from.has_task_info()) {
    task_info_ = new ::openmldb::api::TaskInfo(*from.task_info_);
  } else {
    task_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.api.LoadTableRequest)
}

void LoadTableRequest::SharedCtor() {
  ::memset(&table_meta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&task_info_) -
      reinterpret_cast<char*>(&table_meta_)) + sizeof(task_info_));
}

LoadTableRequest::~LoadTableRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.LoadTableRequest)
  SharedDtor();
}

void LoadTableRequest::SharedDtor() {
  if (this != internal_default_instance()) delete table_meta_;
  if (this != internal_default_instance()) delete task_info_;
}

void LoadTableRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoadTableRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoadTableRequest& LoadTableRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_LoadTableRequest.base);
  return *internal_default_instance();
}


void LoadTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.LoadTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(table_meta_ != NULL);
      table_meta_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(task_info_ != NULL);
      task_info_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LoadTableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.LoadTableRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .openmldb.api.TableMeta table_meta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.api.TaskInfo task_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_task_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.LoadTableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.LoadTableRequest)
  return false;
#undef DO_
}

void LoadTableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.LoadTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.api.TableMeta table_meta = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_table_meta(), output);
  }

  // optional .openmldb.api.TaskInfo task_info = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_task_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.LoadTableRequest)
}

::google::protobuf::uint8* LoadTableRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.LoadTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.api.TableMeta table_meta = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_table_meta(), deterministic, target);
  }

  // optional .openmldb.api.TaskInfo task_info = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_task_info(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.LoadTableRequest)
  return target;
}

size_t LoadTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.LoadTableRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .openmldb.api.TableMeta table_meta = 1;
    if (has_table_meta()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *table_meta_);
    }

    // optional .openmldb.api.TaskInfo task_info = 2;
    if (has_task_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_info_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadTableRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.LoadTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadTableRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoadTableRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.LoadTableRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.LoadTableRequest)
    MergeFrom(*source);
  }
}

void LoadTableRequest::MergeFrom(const LoadTableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.LoadTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_table_meta()->::openmldb::api::TableMeta::MergeFrom(from.table_meta());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_task_info()->::openmldb::api::TaskInfo::MergeFrom(from.task_info());
    }
  }
}

void LoadTableRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.LoadTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadTableRequest::CopyFrom(const LoadTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.LoadTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadTableRequest::IsInitialized() const {
  if (has_table_meta()) {
    if (!this->table_meta_->IsInitialized()) return false;
  }
  if (has_task_info()) {
    if (!this->task_info_->IsInitialized()) return false;
  }
  return true;
}

void LoadTableRequest::Swap(LoadTableRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadTableRequest::InternalSwap(LoadTableRequest* other) {
  using std::swap;
  swap(table_meta_, other->table_meta_);
  swap(task_info_, other->task_info_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoadTableRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DropTableRequest::InitAsDefaultInstance() {
  ::openmldb::api::_DropTableRequest_default_instance_._instance.get_mutable()->task_info_ = const_cast< ::openmldb::api::TaskInfo*>(
      ::openmldb::api::TaskInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DropTableRequest::kTidFieldNumber;
const int DropTableRequest::kPidFieldNumber;
const int DropTableRequest::kTaskInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DropTableRequest::DropTableRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_DropTableRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.DropTableRequest)
}
DropTableRequest::DropTableRequest(const DropTableRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_task_info()) {
    task_info_ = new ::openmldb::api::TaskInfo(*from.task_info_);
  } else {
    task_info_ = NULL;
  }
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pid_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.DropTableRequest)
}

void DropTableRequest::SharedCtor() {
  ::memset(&task_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&task_info_)) + sizeof(pid_));
}

DropTableRequest::~DropTableRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.DropTableRequest)
  SharedDtor();
}

void DropTableRequest::SharedDtor() {
  if (this != internal_default_instance()) delete task_info_;
}

void DropTableRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DropTableRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DropTableRequest& DropTableRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_DropTableRequest.base);
  return *internal_default_instance();
}


void DropTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.DropTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(task_info_ != NULL);
    task_info_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pid_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DropTableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.DropTableRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.api.TaskInfo task_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_task_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.DropTableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.DropTableRequest)
  return false;
#undef DO_
}

void DropTableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.DropTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 tid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tid(), output);
  }

  // optional int32 pid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pid(), output);
  }

  // optional .openmldb.api.TaskInfo task_info = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_task_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.DropTableRequest)
}

::google::protobuf::uint8* DropTableRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.DropTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 tid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tid(), target);
  }

  // optional int32 pid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pid(), target);
  }

  // optional .openmldb.api.TaskInfo task_info = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_task_info(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.DropTableRequest)
  return target;
}

size_t DropTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.DropTableRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .openmldb.api.TaskInfo task_info = 3;
    if (has_task_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_info_);
    }

    // optional int32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tid());
    }

    // optional int32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DropTableRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.DropTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DropTableRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DropTableRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.DropTableRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.DropTableRequest)
    MergeFrom(*source);
  }
}

void DropTableRequest::MergeFrom(const DropTableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.DropTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_task_info()->::openmldb::api::TaskInfo::MergeFrom(from.task_info());
    }
    if (cached_has_bits & 0x00000002u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pid_ = from.pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DropTableRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.DropTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropTableRequest::CopyFrom(const DropTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.DropTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropTableRequest::IsInitialized() const {
  if (has_task_info()) {
    if (!this->task_info_->IsInitialized()) return false;
  }
  return true;
}

void DropTableRequest::Swap(DropTableRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DropTableRequest::InternalSwap(DropTableRequest* other) {
  using std::swap;
  swap(task_info_, other->task_info_);
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DropTableRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DropTableResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DropTableResponse::kCodeFieldNumber;
const int DropTableResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DropTableResponse::DropTableResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_DropTableResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.DropTableResponse)
}
DropTableResponse::DropTableResponse(const DropTableResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.DropTableResponse)
}

void DropTableResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

DropTableResponse::~DropTableResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.DropTableResponse)
  SharedDtor();
}

void DropTableResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DropTableResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DropTableResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DropTableResponse& DropTableResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_DropTableResponse.base);
  return *internal_default_instance();
}


void DropTableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.DropTableResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DropTableResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.DropTableResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.DropTableResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.DropTableResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.DropTableResponse)
  return false;
#undef DO_
}

void DropTableResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.DropTableResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.DropTableResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.DropTableResponse)
}

::google::protobuf::uint8* DropTableResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.DropTableResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.DropTableResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.DropTableResponse)
  return target;
}

size_t DropTableResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.DropTableResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DropTableResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.DropTableResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DropTableResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DropTableResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.DropTableResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.DropTableResponse)
    MergeFrom(*source);
  }
}

void DropTableResponse::MergeFrom(const DropTableResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.DropTableResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DropTableResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.DropTableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropTableResponse::CopyFrom(const DropTableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.DropTableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropTableResponse::IsInitialized() const {
  return true;
}

void DropTableResponse::Swap(DropTableResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DropTableResponse::InternalSwap(DropTableResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DropTableResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetTableSchemaRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTableSchemaRequest::kTidFieldNumber;
const int GetTableSchemaRequest::kPidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTableSchemaRequest::GetTableSchemaRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_GetTableSchemaRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.GetTableSchemaRequest)
}
GetTableSchemaRequest::GetTableSchemaRequest(const GetTableSchemaRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pid_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.GetTableSchemaRequest)
}

void GetTableSchemaRequest::SharedCtor() {
  ::memset(&tid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
}

GetTableSchemaRequest::~GetTableSchemaRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.GetTableSchemaRequest)
  SharedDtor();
}

void GetTableSchemaRequest::SharedDtor() {
}

void GetTableSchemaRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetTableSchemaRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetTableSchemaRequest& GetTableSchemaRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_GetTableSchemaRequest.base);
  return *internal_default_instance();
}


void GetTableSchemaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.GetTableSchemaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pid_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetTableSchemaRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.GetTableSchemaRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.GetTableSchemaRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.GetTableSchemaRequest)
  return false;
#undef DO_
}

void GetTableSchemaRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.GetTableSchemaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 tid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tid(), output);
  }

  // optional int32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.GetTableSchemaRequest)
}

::google::protobuf::uint8* GetTableSchemaRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.GetTableSchemaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 tid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tid(), target);
  }

  // optional int32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.GetTableSchemaRequest)
  return target;
}

size_t GetTableSchemaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.GetTableSchemaRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tid());
    }

    // optional int32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTableSchemaRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.GetTableSchemaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTableSchemaRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTableSchemaRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.GetTableSchemaRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.GetTableSchemaRequest)
    MergeFrom(*source);
  }
}

void GetTableSchemaRequest::MergeFrom(const GetTableSchemaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.GetTableSchemaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000002u) {
      pid_ = from.pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetTableSchemaRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.GetTableSchemaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTableSchemaRequest::CopyFrom(const GetTableSchemaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.GetTableSchemaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTableSchemaRequest::IsInitialized() const {
  return true;
}

void GetTableSchemaRequest::Swap(GetTableSchemaRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTableSchemaRequest::InternalSwap(GetTableSchemaRequest* other) {
  using std::swap;
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetTableSchemaRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetExpireRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetExpireRequest::kTidFieldNumber;
const int SetExpireRequest::kPidFieldNumber;
const int SetExpireRequest::kIsExpireFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetExpireRequest::SetExpireRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_SetExpireRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.SetExpireRequest)
}
SetExpireRequest::SetExpireRequest(const SetExpireRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_expire_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(is_expire_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.SetExpireRequest)
}

void SetExpireRequest::SharedCtor() {
  ::memset(&tid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_expire_) -
      reinterpret_cast<char*>(&tid_)) + sizeof(is_expire_));
}

SetExpireRequest::~SetExpireRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.SetExpireRequest)
  SharedDtor();
}

void SetExpireRequest::SharedDtor() {
}

void SetExpireRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetExpireRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetExpireRequest& SetExpireRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_SetExpireRequest.base);
  return *internal_default_instance();
}


void SetExpireRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.SetExpireRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_expire_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(is_expire_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetExpireRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.SetExpireRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_expire = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_is_expire();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_expire_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.SetExpireRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.SetExpireRequest)
  return false;
#undef DO_
}

void SetExpireRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.SetExpireRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 tid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tid(), output);
  }

  // optional int32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pid(), output);
  }

  // optional bool is_expire = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_expire(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.SetExpireRequest)
}

::google::protobuf::uint8* SetExpireRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.SetExpireRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 tid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tid(), target);
  }

  // optional int32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pid(), target);
  }

  // optional bool is_expire = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_expire(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.SetExpireRequest)
  return target;
}

size_t SetExpireRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.SetExpireRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tid());
    }

    // optional int32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pid());
    }

    // optional bool is_expire = 3;
    if (has_is_expire()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetExpireRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.SetExpireRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetExpireRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetExpireRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.SetExpireRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.SetExpireRequest)
    MergeFrom(*source);
  }
}

void SetExpireRequest::MergeFrom(const SetExpireRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.SetExpireRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000002u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000004u) {
      is_expire_ = from.is_expire_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SetExpireRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.SetExpireRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetExpireRequest::CopyFrom(const SetExpireRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.SetExpireRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetExpireRequest::IsInitialized() const {
  return true;
}

void SetExpireRequest::Swap(SetExpireRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetExpireRequest::InternalSwap(SetExpireRequest* other) {
  using std::swap;
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(is_expire_, other->is_expire_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetExpireRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetTableSchemaResponse::InitAsDefaultInstance() {
  ::openmldb::api::_GetTableSchemaResponse_default_instance_._instance.get_mutable()->table_meta_ = const_cast< ::openmldb::api::TableMeta*>(
      ::openmldb::api::TableMeta::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTableSchemaResponse::kCodeFieldNumber;
const int GetTableSchemaResponse::kMsgFieldNumber;
const int GetTableSchemaResponse::kTableMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTableSchemaResponse::GetTableSchemaResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_GetTableSchemaResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.GetTableSchemaResponse)
}
GetTableSchemaResponse::GetTableSchemaResponse(const GetTableSchemaResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_table_meta()) {
    table_meta_ = new ::openmldb::api::TableMeta(*from.table_meta_);
  } else {
    table_meta_ = NULL;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.GetTableSchemaResponse)
}

void GetTableSchemaResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&table_meta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&table_meta_)) + sizeof(code_));
}

GetTableSchemaResponse::~GetTableSchemaResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.GetTableSchemaResponse)
  SharedDtor();
}

void GetTableSchemaResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete table_meta_;
}

void GetTableSchemaResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetTableSchemaResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetTableSchemaResponse& GetTableSchemaResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_GetTableSchemaResponse.base);
  return *internal_default_instance();
}


void GetTableSchemaResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.GetTableSchemaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      msg_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(table_meta_ != NULL);
      table_meta_->Clear();
    }
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetTableSchemaResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.GetTableSchemaResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.GetTableSchemaResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.api.TableMeta table_meta = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.GetTableSchemaResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.GetTableSchemaResponse)
  return false;
#undef DO_
}

void GetTableSchemaResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.GetTableSchemaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.GetTableSchemaResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // optional .openmldb.api.TableMeta table_meta = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_table_meta(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.GetTableSchemaResponse)
}

::google::protobuf::uint8* GetTableSchemaResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.GetTableSchemaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.GetTableSchemaResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // optional .openmldb.api.TableMeta table_meta = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_table_meta(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.GetTableSchemaResponse)
  return target;
}

size_t GetTableSchemaResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.GetTableSchemaResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional .openmldb.api.TableMeta table_meta = 3;
    if (has_table_meta()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *table_meta_);
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTableSchemaResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.GetTableSchemaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTableSchemaResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTableSchemaResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.GetTableSchemaResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.GetTableSchemaResponse)
    MergeFrom(*source);
  }
}

void GetTableSchemaResponse::MergeFrom(const GetTableSchemaResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.GetTableSchemaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_table_meta()->::openmldb::api::TableMeta::MergeFrom(from.table_meta());
    }
    if (cached_has_bits & 0x00000004u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetTableSchemaResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.GetTableSchemaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTableSchemaResponse::CopyFrom(const GetTableSchemaResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.GetTableSchemaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTableSchemaResponse::IsInitialized() const {
  if (has_table_meta()) {
    if (!this->table_meta_->IsInitialized()) return false;
  }
  return true;
}

void GetTableSchemaResponse::Swap(GetTableSchemaResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTableSchemaResponse::InternalSwap(GetTableSchemaResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(table_meta_, other->table_meta_);
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetTableSchemaResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateTTLRequest::InitAsDefaultInstance() {
  ::openmldb::api::_UpdateTTLRequest_default_instance_._instance.get_mutable()->ttl_ = const_cast< ::openmldb::common::TTLSt*>(
      ::openmldb::common::TTLSt::internal_default_instance());
}
void UpdateTTLRequest::clear_ttl() {
  if (ttl_ != NULL) ttl_->Clear();
  clear_has_ttl();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateTTLRequest::kTidFieldNumber;
const int UpdateTTLRequest::kPidFieldNumber;
const int UpdateTTLRequest::kTtlFieldNumber;
const int UpdateTTLRequest::kIndexNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateTTLRequest::UpdateTTLRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_UpdateTTLRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.UpdateTTLRequest)
}
UpdateTTLRequest::UpdateTTLRequest(const UpdateTTLRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_index_name()) {
    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
  if (from.has_ttl()) {
    ttl_ = new ::openmldb::common::TTLSt(*from.ttl_);
  } else {
    ttl_ = NULL;
  }
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pid_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.UpdateTTLRequest)
}

void UpdateTTLRequest::SharedCtor() {
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ttl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&ttl_)) + sizeof(pid_));
}

UpdateTTLRequest::~UpdateTTLRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.UpdateTTLRequest)
  SharedDtor();
}

void UpdateTTLRequest::SharedDtor() {
  index_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete ttl_;
}

void UpdateTTLRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateTTLRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateTTLRequest& UpdateTTLRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_UpdateTTLRequest.base);
  return *internal_default_instance();
}


void UpdateTTLRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.UpdateTTLRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      index_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(ttl_ != NULL);
      ttl_->Clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pid_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UpdateTTLRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.UpdateTTLRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.common.TTLSt ttl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ttl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string index_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_index_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->index_name().data(), static_cast<int>(this->index_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.UpdateTTLRequest.index_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.UpdateTTLRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.UpdateTTLRequest)
  return false;
#undef DO_
}

void UpdateTTLRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.UpdateTTLRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 tid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tid(), output);
  }

  // optional int32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pid(), output);
  }

  // optional .openmldb.common.TTLSt ttl = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_ttl(), output);
  }

  // optional string index_name = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.UpdateTTLRequest.index_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->index_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.UpdateTTLRequest)
}

::google::protobuf::uint8* UpdateTTLRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.UpdateTTLRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 tid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tid(), target);
  }

  // optional int32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pid(), target);
  }

  // optional .openmldb.common.TTLSt ttl = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_ttl(), deterministic, target);
  }

  // optional string index_name = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.UpdateTTLRequest.index_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->index_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.UpdateTTLRequest)
  return target;
}

size_t UpdateTTLRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.UpdateTTLRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string index_name = 5;
    if (has_index_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->index_name());
    }

    // optional .openmldb.common.TTLSt ttl = 3;
    if (has_ttl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ttl_);
    }

    // optional int32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tid());
    }

    // optional int32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateTTLRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.UpdateTTLRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateTTLRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateTTLRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.UpdateTTLRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.UpdateTTLRequest)
    MergeFrom(*source);
  }
}

void UpdateTTLRequest::MergeFrom(const UpdateTTLRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.UpdateTTLRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_index_name();
      index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_ttl()->::openmldb::common::TTLSt::MergeFrom(from.ttl());
    }
    if (cached_has_bits & 0x00000004u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000008u) {
      pid_ = from.pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UpdateTTLRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.UpdateTTLRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateTTLRequest::CopyFrom(const UpdateTTLRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.UpdateTTLRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateTTLRequest::IsInitialized() const {
  return true;
}

void UpdateTTLRequest::Swap(UpdateTTLRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateTTLRequest::InternalSwap(UpdateTTLRequest* other) {
  using std::swap;
  index_name_.Swap(&other->index_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ttl_, other->ttl_);
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateTTLRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateTTLResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateTTLResponse::kCodeFieldNumber;
const int UpdateTTLResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateTTLResponse::UpdateTTLResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_UpdateTTLResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.UpdateTTLResponse)
}
UpdateTTLResponse::UpdateTTLResponse(const UpdateTTLResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.UpdateTTLResponse)
}

void UpdateTTLResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

UpdateTTLResponse::~UpdateTTLResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.UpdateTTLResponse)
  SharedDtor();
}

void UpdateTTLResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateTTLResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateTTLResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateTTLResponse& UpdateTTLResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_UpdateTTLResponse.base);
  return *internal_default_instance();
}


void UpdateTTLResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.UpdateTTLResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UpdateTTLResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.UpdateTTLResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.UpdateTTLResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.UpdateTTLResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.UpdateTTLResponse)
  return false;
#undef DO_
}

void UpdateTTLResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.UpdateTTLResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.UpdateTTLResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.UpdateTTLResponse)
}

::google::protobuf::uint8* UpdateTTLResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.UpdateTTLResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.UpdateTTLResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.UpdateTTLResponse)
  return target;
}

size_t UpdateTTLResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.UpdateTTLResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateTTLResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.UpdateTTLResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateTTLResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateTTLResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.UpdateTTLResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.UpdateTTLResponse)
    MergeFrom(*source);
  }
}

void UpdateTTLResponse::MergeFrom(const UpdateTTLResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.UpdateTTLResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UpdateTTLResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.UpdateTTLResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateTTLResponse::CopyFrom(const UpdateTTLResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.UpdateTTLResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateTTLResponse::IsInitialized() const {
  return true;
}

void UpdateTTLResponse::Swap(UpdateTTLResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateTTLResponse::InternalSwap(UpdateTTLResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateTTLResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogEntry::kTermFieldNumber;
const int LogEntry::kLogIndexFieldNumber;
const int LogEntry::kPkFieldNumber;
const int LogEntry::kValueFieldNumber;
const int LogEntry::kTsFieldNumber;
const int LogEntry::kDimensionsFieldNumber;
const int LogEntry::kMethodTypeFieldNumber;
const int LogEntry::kTsDimensionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogEntry::LogEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_LogEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.LogEntry)
}
LogEntry::LogEntry(const LogEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      dimensions_(from.dimensions_),
      ts_dimensions_(from.ts_dimensions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pk()) {
    pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pk_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  ::memcpy(&term_, &from.term_,
    static_cast<size_t>(reinterpret_cast<char*>(&method_type_) -
    reinterpret_cast<char*>(&term_)) + sizeof(method_type_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.LogEntry)
}

void LogEntry::SharedCtor() {
  pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&term_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ts_) -
      reinterpret_cast<char*>(&term_)) + sizeof(ts_));
  method_type_ = 1;
}

LogEntry::~LogEntry() {
  // @@protoc_insertion_point(destructor:openmldb.api.LogEntry)
  SharedDtor();
}

void LogEntry::SharedDtor() {
  pk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LogEntry::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogEntry& LogEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_LogEntry.base);
  return *internal_default_instance();
}


void LogEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.LogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dimensions_.Clear();
  ts_dimensions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      pk_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&term_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ts_) -
        reinterpret_cast<char*>(&term_)) + sizeof(ts_));
    method_type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LogEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.LogEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 term = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_term();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 log_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_log_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &log_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string pk = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pk()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pk().data(), static_cast<int>(this->pk().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.LogEntry.pk");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 ts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_ts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.api.Dimension dimensions = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dimensions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.api.MethodType method_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::api::MethodType_IsValid(value)) {
            set_method_type(static_cast< ::openmldb::api::MethodType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                7, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.api.TSDimension ts_dimensions = 8 [deprecated = true];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ts_dimensions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.LogEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.LogEntry)
  return false;
#undef DO_
}

void LogEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.LogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 term = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->term(), output);
  }

  // optional uint64 log_index = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->log_index(), output);
  }

  // optional string pk = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pk().data(), static_cast<int>(this->pk().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.LogEntry.pk");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->pk(), output);
  }

  // optional bytes value = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->value(), output);
  }

  // optional uint64 ts = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->ts(), output);
  }

  // repeated .openmldb.api.Dimension dimensions = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dimensions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->dimensions(static_cast<int>(i)),
      output);
  }

  // optional .openmldb.api.MethodType method_type = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->method_type(), output);
  }

  // repeated .openmldb.api.TSDimension ts_dimensions = 8 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ts_dimensions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->ts_dimensions(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.LogEntry)
}

::google::protobuf::uint8* LogEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.LogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 term = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->term(), target);
  }

  // optional uint64 log_index = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->log_index(), target);
  }

  // optional string pk = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pk().data(), static_cast<int>(this->pk().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.LogEntry.pk");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->pk(), target);
  }

  // optional bytes value = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->value(), target);
  }

  // optional uint64 ts = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->ts(), target);
  }

  // repeated .openmldb.api.Dimension dimensions = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dimensions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->dimensions(static_cast<int>(i)), deterministic, target);
  }

  // optional .openmldb.api.MethodType method_type = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->method_type(), target);
  }

  // repeated .openmldb.api.TSDimension ts_dimensions = 8 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ts_dimensions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->ts_dimensions(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.LogEntry)
  return target;
}

size_t LogEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.LogEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.api.Dimension dimensions = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->dimensions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dimensions(static_cast<int>(i)));
    }
  }

  // repeated .openmldb.api.TSDimension ts_dimensions = 8 [deprecated = true];
  {
    unsigned int count = static_cast<unsigned int>(this->ts_dimensions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ts_dimensions(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional string pk = 3;
    if (has_pk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pk());
    }

    // optional bytes value = 4;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

    // optional uint64 term = 1;
    if (has_term()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->term());
    }

    // optional uint64 log_index = 2;
    if (has_log_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->log_index());
    }

    // optional uint64 ts = 5;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->ts());
    }

    // optional .openmldb.api.MethodType method_type = 7;
    if (has_method_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->method_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.LogEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const LogEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.LogEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.LogEntry)
    MergeFrom(*source);
  }
}

void LogEntry::MergeFrom(const LogEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.LogEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dimensions_.MergeFrom(from.dimensions_);
  ts_dimensions_.MergeFrom(from.ts_dimensions_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_pk();
      pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pk_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000004u) {
      term_ = from.term_;
    }
    if (cached_has_bits & 0x00000008u) {
      log_index_ = from.log_index_;
    }
    if (cached_has_bits & 0x00000010u) {
      ts_ = from.ts_;
    }
    if (cached_has_bits & 0x00000020u) {
      method_type_ = from.method_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LogEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.LogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogEntry::CopyFrom(const LogEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.LogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogEntry::IsInitialized() const {
  return true;
}

void LogEntry::Swap(LogEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogEntry::InternalSwap(LogEntry* other) {
  using std::swap;
  CastToBase(&dimensions_)->InternalSwap(CastToBase(&other->dimensions_));
  CastToBase(&ts_dimensions_)->InternalSwap(CastToBase(&other->ts_dimensions_));
  pk_.Swap(&other->pk_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(term_, other->term_);
  swap(log_index_, other->log_index_);
  swap(ts_, other->ts_);
  swap(method_type_, other->method_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LogEntry::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AppendEntriesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppendEntriesRequest::kPreLogIndexFieldNumber;
const int AppendEntriesRequest::kEntriesFieldNumber;
const int AppendEntriesRequest::kTidFieldNumber;
const int AppendEntriesRequest::kPidFieldNumber;
const int AppendEntriesRequest::kTermFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppendEntriesRequest::AppendEntriesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_AppendEntriesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.AppendEntriesRequest)
}
AppendEntriesRequest::AppendEntriesRequest(const AppendEntriesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pre_log_index_, &from.pre_log_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&term_) -
    reinterpret_cast<char*>(&pre_log_index_)) + sizeof(term_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.AppendEntriesRequest)
}

void AppendEntriesRequest::SharedCtor() {
  ::memset(&pre_log_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&term_) -
      reinterpret_cast<char*>(&pre_log_index_)) + sizeof(term_));
}

AppendEntriesRequest::~AppendEntriesRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.AppendEntriesRequest)
  SharedDtor();
}

void AppendEntriesRequest::SharedDtor() {
}

void AppendEntriesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AppendEntriesRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppendEntriesRequest& AppendEntriesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_AppendEntriesRequest.base);
  return *internal_default_instance();
}


void AppendEntriesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.AppendEntriesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&pre_log_index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&term_) -
        reinterpret_cast<char*>(&pre_log_index_)) + sizeof(term_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AppendEntriesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.AppendEntriesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 pre_log_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pre_log_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pre_log_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.api.LogEntry entries = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 tid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 term = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_term();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.AppendEntriesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.AppendEntriesRequest)
  return false;
#undef DO_
}

void AppendEntriesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.AppendEntriesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 pre_log_index = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->pre_log_index(), output);
  }

  // repeated .openmldb.api.LogEntry entries = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->entries(static_cast<int>(i)),
      output);
  }

  // optional uint32 tid = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->tid(), output);
  }

  // optional uint32 pid = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->pid(), output);
  }

  // optional uint64 term = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->term(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.AppendEntriesRequest)
}

::google::protobuf::uint8* AppendEntriesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.AppendEntriesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 pre_log_index = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->pre_log_index(), target);
  }

  // repeated .openmldb.api.LogEntry entries = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->entries(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 tid = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->tid(), target);
  }

  // optional uint32 pid = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->pid(), target);
  }

  // optional uint64 term = 8;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->term(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.AppendEntriesRequest)
  return target;
}

size_t AppendEntriesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.AppendEntriesRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.api.LogEntry entries = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint64 pre_log_index = 2;
    if (has_pre_log_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->pre_log_index());
    }

    // optional uint32 tid = 6;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 pid = 7;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional uint64 term = 8;
    if (has_term()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->term());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppendEntriesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.AppendEntriesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AppendEntriesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppendEntriesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.AppendEntriesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.AppendEntriesRequest)
    MergeFrom(*source);
  }
}

void AppendEntriesRequest::MergeFrom(const AppendEntriesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.AppendEntriesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      pre_log_index_ = from.pre_log_index_;
    }
    if (cached_has_bits & 0x00000002u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000008u) {
      term_ = from.term_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AppendEntriesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.AppendEntriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppendEntriesRequest::CopyFrom(const AppendEntriesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.AppendEntriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppendEntriesRequest::IsInitialized() const {
  return true;
}

void AppendEntriesRequest::Swap(AppendEntriesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppendEntriesRequest::InternalSwap(AppendEntriesRequest* other) {
  using std::swap;
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
  swap(pre_log_index_, other->pre_log_index_);
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(term_, other->term_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AppendEntriesRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AppendEntriesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppendEntriesResponse::kLogOffsetFieldNumber;
const int AppendEntriesResponse::kCodeFieldNumber;
const int AppendEntriesResponse::kMsgFieldNumber;
const int AppendEntriesResponse::kTermFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppendEntriesResponse::AppendEntriesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_AppendEntriesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.AppendEntriesResponse)
}
AppendEntriesResponse::AppendEntriesResponse(const AppendEntriesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&log_offset_, &from.log_offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&log_offset_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.AppendEntriesResponse)
}

void AppendEntriesResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&log_offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&log_offset_)) + sizeof(code_));
}

AppendEntriesResponse::~AppendEntriesResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.AppendEntriesResponse)
  SharedDtor();
}

void AppendEntriesResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AppendEntriesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AppendEntriesResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppendEntriesResponse& AppendEntriesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_AppendEntriesResponse.base);
  return *internal_default_instance();
}


void AppendEntriesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.AppendEntriesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&log_offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&code_) -
        reinterpret_cast<char*>(&log_offset_)) + sizeof(code_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AppendEntriesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.AppendEntriesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 log_offset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_log_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &log_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.AppendEntriesResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 term = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_term();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.AppendEntriesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.AppendEntriesResponse)
  return false;
#undef DO_
}

void AppendEntriesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.AppendEntriesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 log_offset = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->log_offset(), output);
  }

  // optional int32 code = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->code(), output);
  }

  // optional string msg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.AppendEntriesResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  // optional uint64 term = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->term(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.AppendEntriesResponse)
}

::google::protobuf::uint8* AppendEntriesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.AppendEntriesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 log_offset = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->log_offset(), target);
  }

  // optional int32 code = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->code(), target);
  }

  // optional string msg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.AppendEntriesResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  // optional uint64 term = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->term(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.AppendEntriesResponse)
  return target;
}

size_t AppendEntriesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.AppendEntriesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string msg = 3;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional uint64 log_offset = 1;
    if (has_log_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->log_offset());
    }

    // optional uint64 term = 4;
    if (has_term()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->term());
    }

    // optional int32 code = 2;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppendEntriesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.AppendEntriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AppendEntriesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppendEntriesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.AppendEntriesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.AppendEntriesResponse)
    MergeFrom(*source);
  }
}

void AppendEntriesResponse::MergeFrom(const AppendEntriesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.AppendEntriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      log_offset_ = from.log_offset_;
    }
    if (cached_has_bits & 0x00000004u) {
      term_ = from.term_;
    }
    if (cached_has_bits & 0x00000008u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AppendEntriesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.AppendEntriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppendEntriesResponse::CopyFrom(const AppendEntriesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.AppendEntriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppendEntriesResponse::IsInitialized() const {
  return true;
}

void AppendEntriesResponse::Swap(AppendEntriesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppendEntriesResponse::InternalSwap(AppendEntriesResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(log_offset_, other->log_offset_);
  swap(term_, other->term_);
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AppendEntriesResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChangeRoleRequest::InitAsDefaultInstance() {
}
void ChangeRoleRequest::clear_endpoint_tid() {
  endpoint_tid_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeRoleRequest::kTidFieldNumber;
const int ChangeRoleRequest::kPidFieldNumber;
const int ChangeRoleRequest::kTermFieldNumber;
const int ChangeRoleRequest::kModeFieldNumber;
const int ChangeRoleRequest::kReplicasFieldNumber;
const int ChangeRoleRequest::kEndpointTidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeRoleRequest::ChangeRoleRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_ChangeRoleRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.ChangeRoleRequest)
}
ChangeRoleRequest::ChangeRoleRequest(const ChangeRoleRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      replicas_(from.replicas_),
      endpoint_tid_(from.endpoint_tid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&mode_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(mode_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.ChangeRoleRequest)
}

void ChangeRoleRequest::SharedCtor() {
  ::memset(&tid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&term_) -
      reinterpret_cast<char*>(&tid_)) + sizeof(term_));
  mode_ = 1;
}

ChangeRoleRequest::~ChangeRoleRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.ChangeRoleRequest)
  SharedDtor();
}

void ChangeRoleRequest::SharedDtor() {
}

void ChangeRoleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChangeRoleRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeRoleRequest& ChangeRoleRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_ChangeRoleRequest.base);
  return *internal_default_instance();
}


void ChangeRoleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.ChangeRoleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  replicas_.Clear();
  endpoint_tid_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&term_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(term_));
    mode_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChangeRoleRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.ChangeRoleRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 term = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_term();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.api.TableMode mode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::api::TableMode_IsValid(value)) {
            set_mode(static_cast< ::openmldb::api::TableMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string replicas = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_replicas()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->replicas(this->replicas_size() - 1).data(),
            static_cast<int>(this->replicas(this->replicas_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.ChangeRoleRequest.replicas");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.common.EndpointAndTid endpoint_tid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_endpoint_tid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.ChangeRoleRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.ChangeRoleRequest)
  return false;
#undef DO_
}

void ChangeRoleRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.ChangeRoleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional uint64 term = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->term(), output);
  }

  // optional .openmldb.api.TableMode mode = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->mode(), output);
  }

  // repeated string replicas = 5;
  for (int i = 0, n = this->replicas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->replicas(i).data(), static_cast<int>(this->replicas(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ChangeRoleRequest.replicas");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->replicas(i), output);
  }

  // repeated .openmldb.common.EndpointAndTid endpoint_tid = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->endpoint_tid_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->endpoint_tid(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.ChangeRoleRequest)
}

::google::protobuf::uint8* ChangeRoleRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.ChangeRoleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional uint64 term = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->term(), target);
  }

  // optional .openmldb.api.TableMode mode = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->mode(), target);
  }

  // repeated string replicas = 5;
  for (int i = 0, n = this->replicas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->replicas(i).data(), static_cast<int>(this->replicas(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ChangeRoleRequest.replicas");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->replicas(i), target);
  }

  // repeated .openmldb.common.EndpointAndTid endpoint_tid = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->endpoint_tid_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->endpoint_tid(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.ChangeRoleRequest)
  return target;
}

size_t ChangeRoleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.ChangeRoleRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string replicas = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->replicas_size());
  for (int i = 0, n = this->replicas_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->replicas(i));
  }

  // repeated .openmldb.common.EndpointAndTid endpoint_tid = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->endpoint_tid_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->endpoint_tid(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional uint64 term = 3;
    if (has_term()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->term());
    }

    // optional .openmldb.api.TableMode mode = 4;
    if (has_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChangeRoleRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.ChangeRoleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeRoleRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeRoleRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.ChangeRoleRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.ChangeRoleRequest)
    MergeFrom(*source);
  }
}

void ChangeRoleRequest::MergeFrom(const ChangeRoleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.ChangeRoleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  replicas_.MergeFrom(from.replicas_);
  endpoint_tid_.MergeFrom(from.endpoint_tid_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000002u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000004u) {
      term_ = from.term_;
    }
    if (cached_has_bits & 0x00000008u) {
      mode_ = from.mode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChangeRoleRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.ChangeRoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeRoleRequest::CopyFrom(const ChangeRoleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.ChangeRoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeRoleRequest::IsInitialized() const {
  return true;
}

void ChangeRoleRequest::Swap(ChangeRoleRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeRoleRequest::InternalSwap(ChangeRoleRequest* other) {
  using std::swap;
  replicas_.InternalSwap(CastToBase(&other->replicas_));
  CastToBase(&endpoint_tid_)->InternalSwap(CastToBase(&other->endpoint_tid_));
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(term_, other->term_);
  swap(mode_, other->mode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChangeRoleRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendSnapshotRequest::InitAsDefaultInstance() {
  ::openmldb::api::_SendSnapshotRequest_default_instance_._instance.get_mutable()->task_info_ = const_cast< ::openmldb::api::TaskInfo*>(
      ::openmldb::api::TaskInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendSnapshotRequest::kTidFieldNumber;
const int SendSnapshotRequest::kPidFieldNumber;
const int SendSnapshotRequest::kEndpointFieldNumber;
const int SendSnapshotRequest::kTaskInfoFieldNumber;
const int SendSnapshotRequest::kRemoteTidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendSnapshotRequest::SendSnapshotRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_SendSnapshotRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.SendSnapshotRequest)
}
SendSnapshotRequest::SendSnapshotRequest(const SendSnapshotRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_endpoint()) {
    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  if (from.has_task_info()) {
    task_info_ = new ::openmldb::api::TaskInfo(*from.task_info_);
  } else {
    task_info_ = NULL;
  }
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&remote_tid_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(remote_tid_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.SendSnapshotRequest)
}

void SendSnapshotRequest::SharedCtor() {
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&task_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remote_tid_) -
      reinterpret_cast<char*>(&task_info_)) + sizeof(remote_tid_));
}

SendSnapshotRequest::~SendSnapshotRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.SendSnapshotRequest)
  SharedDtor();
}

void SendSnapshotRequest::SharedDtor() {
  endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete task_info_;
}

void SendSnapshotRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendSnapshotRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendSnapshotRequest& SendSnapshotRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_SendSnapshotRequest.base);
  return *internal_default_instance();
}


void SendSnapshotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.SendSnapshotRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      endpoint_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(task_info_ != NULL);
      task_info_->Clear();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&remote_tid_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(remote_tid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SendSnapshotRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.SendSnapshotRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string endpoint = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->endpoint().data(), static_cast<int>(this->endpoint().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.SendSnapshotRequest.endpoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.api.TaskInfo task_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_task_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 remote_tid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_remote_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remote_tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.SendSnapshotRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.SendSnapshotRequest)
  return false;
#undef DO_
}

void SendSnapshotRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.SendSnapshotRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 tid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // required uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // required string endpoint = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.SendSnapshotRequest.endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->endpoint(), output);
  }

  // optional .openmldb.api.TaskInfo task_info = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_task_info(), output);
  }

  // optional uint32 remote_tid = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->remote_tid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.SendSnapshotRequest)
}

::google::protobuf::uint8* SendSnapshotRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.SendSnapshotRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 tid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // required uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // required string endpoint = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.SendSnapshotRequest.endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->endpoint(), target);
  }

  // optional .openmldb.api.TaskInfo task_info = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_task_info(), deterministic, target);
  }

  // optional uint32 remote_tid = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->remote_tid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.SendSnapshotRequest)
  return target;
}

size_t SendSnapshotRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openmldb.api.SendSnapshotRequest)
  size_t total_size = 0;

  if (has_endpoint()) {
    // required string endpoint = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->endpoint());
  }

  if (has_tid()) {
    // required uint32 tid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tid());
  }

  if (has_pid()) {
    // required uint32 pid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pid());
  }

  return total_size;
}
size_t SendSnapshotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.SendSnapshotRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000d) ^ 0x0000000d) == 0) {  // All required fields are present.
    // required string endpoint = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->endpoint());

    // required uint32 tid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tid());

    // required uint32 pid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .openmldb.api.TaskInfo task_info = 4;
  if (has_task_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *task_info_);
  }

  // optional uint32 remote_tid = 5;
  if (has_remote_tid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->remote_tid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendSnapshotRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.SendSnapshotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendSnapshotRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendSnapshotRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.SendSnapshotRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.SendSnapshotRequest)
    MergeFrom(*source);
  }
}

void SendSnapshotRequest::MergeFrom(const SendSnapshotRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.SendSnapshotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_endpoint();
      endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_task_info()->::openmldb::api::TaskInfo::MergeFrom(from.task_info());
    }
    if (cached_has_bits & 0x00000004u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000008u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000010u) {
      remote_tid_ = from.remote_tid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SendSnapshotRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.SendSnapshotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendSnapshotRequest::CopyFrom(const SendSnapshotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.SendSnapshotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendSnapshotRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000d) != 0x0000000d) return false;
  if (has_task_info()) {
    if (!this->task_info_->IsInitialized()) return false;
  }
  return true;
}

void SendSnapshotRequest::Swap(SendSnapshotRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendSnapshotRequest::InternalSwap(SendSnapshotRequest* other) {
  using std::swap;
  endpoint_.Swap(&other->endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(task_info_, other->task_info_);
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(remote_tid_, other->remote_tid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendSnapshotRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendIndexDataRequest_EndpointPair::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendIndexDataRequest_EndpointPair::kPidFieldNumber;
const int SendIndexDataRequest_EndpointPair::kEndpointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendIndexDataRequest_EndpointPair::SendIndexDataRequest_EndpointPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_SendIndexDataRequest_EndpointPair.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.SendIndexDataRequest.EndpointPair)
}
SendIndexDataRequest_EndpointPair::SendIndexDataRequest_EndpointPair(const SendIndexDataRequest_EndpointPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_endpoint()) {
    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  pid_ = from.pid_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.SendIndexDataRequest.EndpointPair)
}

void SendIndexDataRequest_EndpointPair::SharedCtor() {
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pid_ = 0u;
}

SendIndexDataRequest_EndpointPair::~SendIndexDataRequest_EndpointPair() {
  // @@protoc_insertion_point(destructor:openmldb.api.SendIndexDataRequest.EndpointPair)
  SharedDtor();
}

void SendIndexDataRequest_EndpointPair::SharedDtor() {
  endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendIndexDataRequest_EndpointPair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendIndexDataRequest_EndpointPair::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendIndexDataRequest_EndpointPair& SendIndexDataRequest_EndpointPair::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_SendIndexDataRequest_EndpointPair.base);
  return *internal_default_instance();
}


void SendIndexDataRequest_EndpointPair::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.SendIndexDataRequest.EndpointPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    endpoint_.ClearNonDefaultToEmptyNoArena();
  }
  pid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SendIndexDataRequest_EndpointPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.SendIndexDataRequest.EndpointPair)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 pid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string endpoint = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->endpoint().data(), static_cast<int>(this->endpoint().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.SendIndexDataRequest.EndpointPair.endpoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.SendIndexDataRequest.EndpointPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.SendIndexDataRequest.EndpointPair)
  return false;
#undef DO_
}

void SendIndexDataRequest_EndpointPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.SendIndexDataRequest.EndpointPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 pid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pid(), output);
  }

  // optional string endpoint = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.SendIndexDataRequest.EndpointPair.endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->endpoint(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.SendIndexDataRequest.EndpointPair)
}

::google::protobuf::uint8* SendIndexDataRequest_EndpointPair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.SendIndexDataRequest.EndpointPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 pid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pid(), target);
  }

  // optional string endpoint = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.SendIndexDataRequest.EndpointPair.endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->endpoint(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.SendIndexDataRequest.EndpointPair)
  return target;
}

size_t SendIndexDataRequest_EndpointPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.SendIndexDataRequest.EndpointPair)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string endpoint = 2;
    if (has_endpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->endpoint());
    }

    // optional uint32 pid = 1;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendIndexDataRequest_EndpointPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.SendIndexDataRequest.EndpointPair)
  GOOGLE_DCHECK_NE(&from, this);
  const SendIndexDataRequest_EndpointPair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendIndexDataRequest_EndpointPair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.SendIndexDataRequest.EndpointPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.SendIndexDataRequest.EndpointPair)
    MergeFrom(*source);
  }
}

void SendIndexDataRequest_EndpointPair::MergeFrom(const SendIndexDataRequest_EndpointPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.SendIndexDataRequest.EndpointPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_endpoint();
      endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
    }
    if (cached_has_bits & 0x00000002u) {
      pid_ = from.pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SendIndexDataRequest_EndpointPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.SendIndexDataRequest.EndpointPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendIndexDataRequest_EndpointPair::CopyFrom(const SendIndexDataRequest_EndpointPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.SendIndexDataRequest.EndpointPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendIndexDataRequest_EndpointPair::IsInitialized() const {
  return true;
}

void SendIndexDataRequest_EndpointPair::Swap(SendIndexDataRequest_EndpointPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendIndexDataRequest_EndpointPair::InternalSwap(SendIndexDataRequest_EndpointPair* other) {
  using std::swap;
  endpoint_.Swap(&other->endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pid_, other->pid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendIndexDataRequest_EndpointPair::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendIndexDataRequest::InitAsDefaultInstance() {
  ::openmldb::api::_SendIndexDataRequest_default_instance_._instance.get_mutable()->task_info_ = const_cast< ::openmldb::api::TaskInfo*>(
      ::openmldb::api::TaskInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendIndexDataRequest::kTidFieldNumber;
const int SendIndexDataRequest::kPidFieldNumber;
const int SendIndexDataRequest::kPairsFieldNumber;
const int SendIndexDataRequest::kTaskInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendIndexDataRequest::SendIndexDataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_SendIndexDataRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.SendIndexDataRequest)
}
SendIndexDataRequest::SendIndexDataRequest(const SendIndexDataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      pairs_(from.pairs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_task_info()) {
    task_info_ = new ::openmldb::api::TaskInfo(*from.task_info_);
  } else {
    task_info_ = NULL;
  }
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pid_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.SendIndexDataRequest)
}

void SendIndexDataRequest::SharedCtor() {
  ::memset(&task_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&task_info_)) + sizeof(pid_));
}

SendIndexDataRequest::~SendIndexDataRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.SendIndexDataRequest)
  SharedDtor();
}

void SendIndexDataRequest::SharedDtor() {
  if (this != internal_default_instance()) delete task_info_;
}

void SendIndexDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendIndexDataRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendIndexDataRequest& SendIndexDataRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_SendIndexDataRequest.base);
  return *internal_default_instance();
}


void SendIndexDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.SendIndexDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pairs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(task_info_ != NULL);
    task_info_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pid_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SendIndexDataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.SendIndexDataRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.api.SendIndexDataRequest.EndpointPair pairs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pairs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.api.TaskInfo task_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_task_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.SendIndexDataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.SendIndexDataRequest)
  return false;
#undef DO_
}

void SendIndexDataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.SendIndexDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // repeated .openmldb.api.SendIndexDataRequest.EndpointPair pairs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pairs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->pairs(static_cast<int>(i)),
      output);
  }

  // optional .openmldb.api.TaskInfo task_info = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_task_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.SendIndexDataRequest)
}

::google::protobuf::uint8* SendIndexDataRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.SendIndexDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // repeated .openmldb.api.SendIndexDataRequest.EndpointPair pairs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pairs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->pairs(static_cast<int>(i)), deterministic, target);
  }

  // optional .openmldb.api.TaskInfo task_info = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_task_info(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.SendIndexDataRequest)
  return target;
}

size_t SendIndexDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.SendIndexDataRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.api.SendIndexDataRequest.EndpointPair pairs = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->pairs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pairs(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional .openmldb.api.TaskInfo task_info = 4;
    if (has_task_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_info_);
    }

    // optional uint32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendIndexDataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.SendIndexDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendIndexDataRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendIndexDataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.SendIndexDataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.SendIndexDataRequest)
    MergeFrom(*source);
  }
}

void SendIndexDataRequest::MergeFrom(const SendIndexDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.SendIndexDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pairs_.MergeFrom(from.pairs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_task_info()->::openmldb::api::TaskInfo::MergeFrom(from.task_info());
    }
    if (cached_has_bits & 0x00000002u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pid_ = from.pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SendIndexDataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.SendIndexDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendIndexDataRequest::CopyFrom(const SendIndexDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.SendIndexDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendIndexDataRequest::IsInitialized() const {
  if (has_task_info()) {
    if (!this->task_info_->IsInitialized()) return false;
  }
  return true;
}

void SendIndexDataRequest::Swap(SendIndexDataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendIndexDataRequest::InternalSwap(SendIndexDataRequest* other) {
  using std::swap;
  CastToBase(&pairs_)->InternalSwap(CastToBase(&other->pairs_));
  swap(task_info_, other->task_info_);
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendIndexDataRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendDataRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendDataRequest::kTidFieldNumber;
const int SendDataRequest::kPidFieldNumber;
const int SendDataRequest::kFileNameFieldNumber;
const int SendDataRequest::kBlockIdFieldNumber;
const int SendDataRequest::kBlockSizeFieldNumber;
const int SendDataRequest::kEofFieldNumber;
const int SendDataRequest::kDirNameFieldNumber;
const int SendDataRequest::kStorageModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendDataRequest::SendDataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_SendDataRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.SendDataRequest)
}
SendDataRequest::SendDataRequest(const SendDataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_name()) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  dir_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dir_name()) {
    dir_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dir_name_);
  }
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&storage_mode_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(storage_mode_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.SendDataRequest)
}

void SendDataRequest::SharedCtor() {
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dir_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&eof_) -
      reinterpret_cast<char*>(&tid_)) + sizeof(eof_));
  storage_mode_ = 1;
}

SendDataRequest::~SendDataRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.SendDataRequest)
  SharedDtor();
}

void SendDataRequest::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dir_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendDataRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendDataRequest& SendDataRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_SendDataRequest.base);
  return *internal_default_instance();
}


void SendDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.SendDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      file_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      dir_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&eof_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(eof_));
    storage_mode_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SendDataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.SendDataRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string file_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.SendDataRequest.file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 block_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_block_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &block_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 block_size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_block_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &block_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool eof = 6 [default = false];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_eof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &eof_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string dir_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dir_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dir_name().data(), static_cast<int>(this->dir_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.SendDataRequest.dir_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.common.StorageMode storage_mode = 8 [default = kMemory];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::common::StorageMode_IsValid(value)) {
            set_storage_mode(static_cast< ::openmldb::common::StorageMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                8, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.SendDataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.SendDataRequest)
  return false;
#undef DO_
}

void SendDataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.SendDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 tid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // required uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // required string file_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.SendDataRequest.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->file_name(), output);
  }

  // required uint64 block_id = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->block_id(), output);
  }

  // optional uint32 block_size = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->block_size(), output);
  }

  // optional bool eof = 6 [default = false];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->eof(), output);
  }

  // optional string dir_name = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dir_name().data(), static_cast<int>(this->dir_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.SendDataRequest.dir_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->dir_name(), output);
  }

  // optional .openmldb.common.StorageMode storage_mode = 8 [default = kMemory];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->storage_mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.SendDataRequest)
}

::google::protobuf::uint8* SendDataRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.SendDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 tid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // required uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // required string file_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.SendDataRequest.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->file_name(), target);
  }

  // required uint64 block_id = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->block_id(), target);
  }

  // optional uint32 block_size = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->block_size(), target);
  }

  // optional bool eof = 6 [default = false];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->eof(), target);
  }

  // optional string dir_name = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dir_name().data(), static_cast<int>(this->dir_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.SendDataRequest.dir_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->dir_name(), target);
  }

  // optional .openmldb.common.StorageMode storage_mode = 8 [default = kMemory];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->storage_mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.SendDataRequest)
  return target;
}

size_t SendDataRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openmldb.api.SendDataRequest)
  size_t total_size = 0;

  if (has_file_name()) {
    // required string file_name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());
  }

  if (has_tid()) {
    // required uint32 tid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tid());
  }

  if (has_pid()) {
    // required uint32 pid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pid());
  }

  if (has_block_id()) {
    // required uint64 block_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->block_id());
  }

  return total_size;
}
size_t SendDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.SendDataRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001d) ^ 0x0000001d) == 0) {  // All required fields are present.
    // required string file_name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());

    // required uint32 tid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tid());

    // required uint32 pid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pid());

    // required uint64 block_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->block_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string dir_name = 7;
  if (has_dir_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dir_name());
  }

  if (_has_bits_[0 / 32] & 224u) {
    // optional uint32 block_size = 5;
    if (has_block_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->block_size());
    }

    // optional bool eof = 6 [default = false];
    if (has_eof()) {
      total_size += 1 + 1;
    }

    // optional .openmldb.common.StorageMode storage_mode = 8 [default = kMemory];
    if (has_storage_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->storage_mode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendDataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.SendDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendDataRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendDataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.SendDataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.SendDataRequest)
    MergeFrom(*source);
  }
}

void SendDataRequest::MergeFrom(const SendDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.SendDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_file_name();
      file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_dir_name();
      dir_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dir_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000008u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000010u) {
      block_id_ = from.block_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      block_size_ = from.block_size_;
    }
    if (cached_has_bits & 0x00000040u) {
      eof_ = from.eof_;
    }
    if (cached_has_bits & 0x00000080u) {
      storage_mode_ = from.storage_mode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SendDataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.SendDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendDataRequest::CopyFrom(const SendDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.SendDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendDataRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001d) != 0x0000001d) return false;
  return true;
}

void SendDataRequest::Swap(SendDataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendDataRequest::InternalSwap(SendDataRequest* other) {
  using std::swap;
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  dir_name_.Swap(&other->dir_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(block_id_, other->block_id_);
  swap(block_size_, other->block_size_);
  swap(eof_, other->eof_);
  swap(storage_mode_, other->storage_mode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendDataRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChangeRoleResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeRoleResponse::kCodeFieldNumber;
const int ChangeRoleResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeRoleResponse::ChangeRoleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_ChangeRoleResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.ChangeRoleResponse)
}
ChangeRoleResponse::ChangeRoleResponse(const ChangeRoleResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.ChangeRoleResponse)
}

void ChangeRoleResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

ChangeRoleResponse::~ChangeRoleResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.ChangeRoleResponse)
  SharedDtor();
}

void ChangeRoleResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChangeRoleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChangeRoleResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeRoleResponse& ChangeRoleResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_ChangeRoleResponse.base);
  return *internal_default_instance();
}


void ChangeRoleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.ChangeRoleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChangeRoleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.ChangeRoleResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.ChangeRoleResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.ChangeRoleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.ChangeRoleResponse)
  return false;
#undef DO_
}

void ChangeRoleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.ChangeRoleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ChangeRoleResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.ChangeRoleResponse)
}

::google::protobuf::uint8* ChangeRoleResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.ChangeRoleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ChangeRoleResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.ChangeRoleResponse)
  return target;
}

size_t ChangeRoleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.ChangeRoleResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChangeRoleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.ChangeRoleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeRoleResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeRoleResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.ChangeRoleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.ChangeRoleResponse)
    MergeFrom(*source);
  }
}

void ChangeRoleResponse::MergeFrom(const ChangeRoleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.ChangeRoleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChangeRoleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.ChangeRoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeRoleResponse::CopyFrom(const ChangeRoleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.ChangeRoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeRoleResponse::IsInitialized() const {
  return true;
}

void ChangeRoleResponse::Swap(ChangeRoleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeRoleResponse::InternalSwap(ChangeRoleResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChangeRoleResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetTableStatusRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTableStatusRequest::kTidFieldNumber;
const int GetTableStatusRequest::kPidFieldNumber;
const int GetTableStatusRequest::kNeedSchemaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTableStatusRequest::GetTableStatusRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_GetTableStatusRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.GetTableStatusRequest)
}
GetTableStatusRequest::GetTableStatusRequest(const GetTableStatusRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&need_schema_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(need_schema_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.GetTableStatusRequest)
}

void GetTableStatusRequest::SharedCtor() {
  ::memset(&tid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&need_schema_) -
      reinterpret_cast<char*>(&tid_)) + sizeof(need_schema_));
}

GetTableStatusRequest::~GetTableStatusRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.GetTableStatusRequest)
  SharedDtor();
}

void GetTableStatusRequest::SharedDtor() {
}

void GetTableStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetTableStatusRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetTableStatusRequest& GetTableStatusRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_GetTableStatusRequest.base);
  return *internal_default_instance();
}


void GetTableStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.GetTableStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&need_schema_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(need_schema_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetTableStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.GetTableStatusRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool need_schema = 3 [default = false];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_need_schema();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &need_schema_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.GetTableStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.GetTableStatusRequest)
  return false;
#undef DO_
}

void GetTableStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.GetTableStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional bool need_schema = 3 [default = false];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->need_schema(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.GetTableStatusRequest)
}

::google::protobuf::uint8* GetTableStatusRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.GetTableStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional bool need_schema = 3 [default = false];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->need_schema(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.GetTableStatusRequest)
  return target;
}

size_t GetTableStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.GetTableStatusRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional bool need_schema = 3 [default = false];
    if (has_need_schema()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTableStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.GetTableStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTableStatusRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTableStatusRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.GetTableStatusRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.GetTableStatusRequest)
    MergeFrom(*source);
  }
}

void GetTableStatusRequest::MergeFrom(const GetTableStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.GetTableStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000002u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000004u) {
      need_schema_ = from.need_schema_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetTableStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.GetTableStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTableStatusRequest::CopyFrom(const GetTableStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.GetTableStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTableStatusRequest::IsInitialized() const {
  return true;
}

void GetTableStatusRequest::Swap(GetTableStatusRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTableStatusRequest::InternalSwap(GetTableStatusRequest* other) {
  using std::swap;
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(need_schema_, other->need_schema_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetTableStatusRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TsIdxStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TsIdxStatus::kIdxNameFieldNumber;
const int TsIdxStatus::kSegCntsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TsIdxStatus::TsIdxStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_TsIdxStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.TsIdxStatus)
}
TsIdxStatus::TsIdxStatus(const TsIdxStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      seg_cnts_(from.seg_cnts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  idx_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_idx_name()) {
    idx_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idx_name_);
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.api.TsIdxStatus)
}

void TsIdxStatus::SharedCtor() {
  idx_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TsIdxStatus::~TsIdxStatus() {
  // @@protoc_insertion_point(destructor:openmldb.api.TsIdxStatus)
  SharedDtor();
}

void TsIdxStatus::SharedDtor() {
  idx_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TsIdxStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TsIdxStatus::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TsIdxStatus& TsIdxStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_TsIdxStatus.base);
  return *internal_default_instance();
}


void TsIdxStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.TsIdxStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  seg_cnts_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    idx_name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TsIdxStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.TsIdxStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string idx_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_idx_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->idx_name().data(), static_cast<int>(this->idx_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.TsIdxStatus.idx_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 seg_cnts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16u, input, this->mutable_seg_cnts())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_seg_cnts())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.TsIdxStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.TsIdxStatus)
  return false;
#undef DO_
}

void TsIdxStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.TsIdxStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string idx_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->idx_name().data(), static_cast<int>(this->idx_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.TsIdxStatus.idx_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->idx_name(), output);
  }

  // repeated uint64 seg_cnts = 2;
  for (int i = 0, n = this->seg_cnts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->seg_cnts(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.TsIdxStatus)
}

::google::protobuf::uint8* TsIdxStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.TsIdxStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string idx_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->idx_name().data(), static_cast<int>(this->idx_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.TsIdxStatus.idx_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->idx_name(), target);
  }

  // repeated uint64 seg_cnts = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(2, this->seg_cnts_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.TsIdxStatus)
  return target;
}

size_t TsIdxStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.TsIdxStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 seg_cnts = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->seg_cnts_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->seg_cnts_size());
    total_size += data_size;
  }

  // optional string idx_name = 1;
  if (has_idx_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->idx_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TsIdxStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.TsIdxStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const TsIdxStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TsIdxStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.TsIdxStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.TsIdxStatus)
    MergeFrom(*source);
  }
}

void TsIdxStatus::MergeFrom(const TsIdxStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.TsIdxStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  seg_cnts_.MergeFrom(from.seg_cnts_);
  if (from.has_idx_name()) {
    set_has_idx_name();
    idx_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idx_name_);
  }
}

void TsIdxStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.TsIdxStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TsIdxStatus::CopyFrom(const TsIdxStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.TsIdxStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TsIdxStatus::IsInitialized() const {
  return true;
}

void TsIdxStatus::Swap(TsIdxStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TsIdxStatus::InternalSwap(TsIdxStatus* other) {
  using std::swap;
  seg_cnts_.InternalSwap(&other->seg_cnts_);
  idx_name_.Swap(&other->idx_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TsIdxStatus::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TableStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TableStatus::kTidFieldNumber;
const int TableStatus::kPidFieldNumber;
const int TableStatus::kOffsetFieldNumber;
const int TableStatus::kModeFieldNumber;
const int TableStatus::kStateFieldNumber;
const int TableStatus::kIsExpireFieldNumber;
const int TableStatus::kTimeOffsetFieldNumber;
const int TableStatus::kRecordCntFieldNumber;
const int TableStatus::kIdxCntFieldNumber;
const int TableStatus::kTsIdxStatusFieldNumber;
const int TableStatus::kNameFieldNumber;
const int TableStatus::kRecordByteSizeFieldNumber;
const int TableStatus::kRecordIdxByteSizeFieldNumber;
const int TableStatus::kRecordPkCntFieldNumber;
const int TableStatus::kCompressTypeFieldNumber;
const int TableStatus::kSkiplistHeightFieldNumber;
const int TableStatus::kDiskusedFieldNumber;
const int TableStatus::kStorageModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TableStatus::TableStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_TableStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.TableStatus)
}
TableStatus::TableStatus(const TableStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      ts_idx_status_(from.ts_idx_status_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&storage_mode_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(storage_mode_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.TableStatus)
}

void TableStatus::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&diskused_) -
      reinterpret_cast<char*>(&tid_)) + sizeof(diskused_));
  mode_ = 1;
  storage_mode_ = 1;
}

TableStatus::~TableStatus() {
  // @@protoc_insertion_point(destructor:openmldb.api.TableStatus)
  SharedDtor();
}

void TableStatus::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TableStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TableStatus::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TableStatus& TableStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_TableStatus.base);
  return *internal_default_instance();
}


void TableStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.TableStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ts_idx_status_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 254u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&record_cnt_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(record_cnt_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&idx_cnt_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&diskused_) -
        reinterpret_cast<char*>(&idx_cnt_)) + sizeof(diskused_));
    mode_ = 1;
  }
  storage_mode_ = 1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TableStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.TableStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.api.TableMode mode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::api::TableMode_IsValid(value)) {
            set_mode(static_cast< ::openmldb::api::TableMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.api.TableState state = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::api::TableState_IsValid(value)) {
            set_state(static_cast< ::openmldb::api::TableState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                5, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_expire = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_is_expire();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_expire_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 time_offset = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_time_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 record_cnt = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_record_cnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &record_cnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 idx_cnt = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_idx_cnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &idx_cnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.api.TsIdxStatus ts_idx_status = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ts_idx_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.TableStatus.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 record_byte_size = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_record_byte_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &record_byte_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 record_idx_byte_size = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_record_idx_byte_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &record_idx_byte_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 record_pk_cnt = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_record_pk_cnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &record_pk_cnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.type.CompressType compress_type = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::type::CompressType_IsValid(value)) {
            set_compress_type(static_cast< ::openmldb::type::CompressType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                17, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 skiplist_height = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_skiplist_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skiplist_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 diskused = 19 [default = 0];
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_diskused();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &diskused_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.common.StorageMode storage_mode = 20 [default = kMemory];
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::common::StorageMode_IsValid(value)) {
            set_storage_mode(static_cast< ::openmldb::common::StorageMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                20, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.TableStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.TableStatus)
  return false;
#undef DO_
}

void TableStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.TableStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional uint64 offset = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->offset(), output);
  }

  // optional .openmldb.api.TableMode mode = 4;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->mode(), output);
  }

  // optional .openmldb.api.TableState state = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->state(), output);
  }

  // optional bool is_expire = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_expire(), output);
  }

  // optional int64 time_offset = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->time_offset(), output);
  }

  // optional uint64 record_cnt = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->record_cnt(), output);
  }

  // optional uint64 idx_cnt = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->idx_cnt(), output);
  }

  // repeated .openmldb.api.TsIdxStatus ts_idx_status = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ts_idx_status_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->ts_idx_status(static_cast<int>(i)),
      output);
  }

  // optional string name = 12;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.TableStatus.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->name(), output);
  }

  // optional uint64 record_byte_size = 13;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->record_byte_size(), output);
  }

  // optional uint64 record_idx_byte_size = 14;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(14, this->record_idx_byte_size(), output);
  }

  // optional uint64 record_pk_cnt = 15;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(15, this->record_pk_cnt(), output);
  }

  // optional .openmldb.type.CompressType compress_type = 17;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      17, this->compress_type(), output);
  }

  // optional uint32 skiplist_height = 18;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->skiplist_height(), output);
  }

  // optional uint64 diskused = 19 [default = 0];
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(19, this->diskused(), output);
  }

  // optional .openmldb.common.StorageMode storage_mode = 20 [default = kMemory];
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      20, this->storage_mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.TableStatus)
}

::google::protobuf::uint8* TableStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.TableStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional uint64 offset = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->offset(), target);
  }

  // optional .openmldb.api.TableMode mode = 4;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->mode(), target);
  }

  // optional .openmldb.api.TableState state = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->state(), target);
  }

  // optional bool is_expire = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_expire(), target);
  }

  // optional int64 time_offset = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->time_offset(), target);
  }

  // optional uint64 record_cnt = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->record_cnt(), target);
  }

  // optional uint64 idx_cnt = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->idx_cnt(), target);
  }

  // repeated .openmldb.api.TsIdxStatus ts_idx_status = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ts_idx_status_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->ts_idx_status(static_cast<int>(i)), deterministic, target);
  }

  // optional string name = 12;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.TableStatus.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->name(), target);
  }

  // optional uint64 record_byte_size = 13;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->record_byte_size(), target);
  }

  // optional uint64 record_idx_byte_size = 14;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(14, this->record_idx_byte_size(), target);
  }

  // optional uint64 record_pk_cnt = 15;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(15, this->record_pk_cnt(), target);
  }

  // optional .openmldb.type.CompressType compress_type = 17;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      17, this->compress_type(), target);
  }

  // optional uint32 skiplist_height = 18;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->skiplist_height(), target);
  }

  // optional uint64 diskused = 19 [default = 0];
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(19, this->diskused(), target);
  }

  // optional .openmldb.common.StorageMode storage_mode = 20 [default = kMemory];
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      20, this->storage_mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.TableStatus)
  return target;
}

size_t TableStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.TableStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.api.TsIdxStatus ts_idx_status = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->ts_idx_status_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ts_idx_status(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string name = 12;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional uint64 offset = 3;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->offset());
    }

    // optional .openmldb.api.TableState state = 5;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
    }

    // optional bool is_expire = 7;
    if (has_is_expire()) {
      total_size += 1 + 1;
    }

    // optional int64 time_offset = 8;
    if (has_time_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->time_offset());
    }

    // optional uint64 record_cnt = 9;
    if (has_record_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->record_cnt());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional uint64 idx_cnt = 10;
    if (has_idx_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->idx_cnt());
    }

    // optional uint64 record_byte_size = 13;
    if (has_record_byte_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->record_byte_size());
    }

    // optional uint64 record_idx_byte_size = 14;
    if (has_record_idx_byte_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->record_idx_byte_size());
    }

    // optional uint64 record_pk_cnt = 15;
    if (has_record_pk_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->record_pk_cnt());
    }

    // optional .openmldb.type.CompressType compress_type = 17;
    if (has_compress_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->compress_type());
    }

    // optional uint32 skiplist_height = 18;
    if (has_skiplist_height()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->skiplist_height());
    }

    // optional uint64 diskused = 19 [default = 0];
    if (has_diskused()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->diskused());
    }

    // optional .openmldb.api.TableMode mode = 4;
    if (has_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
    }

  }
  // optional .openmldb.common.StorageMode storage_mode = 20 [default = kMemory];
  if (has_storage_mode()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->storage_mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TableStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.TableStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const TableStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TableStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.TableStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.TableStatus)
    MergeFrom(*source);
  }
}

void TableStatus::MergeFrom(const TableStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.TableStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ts_idx_status_.MergeFrom(from.ts_idx_status_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000008u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000010u) {
      state_ = from.state_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_expire_ = from.is_expire_;
    }
    if (cached_has_bits & 0x00000040u) {
      time_offset_ = from.time_offset_;
    }
    if (cached_has_bits & 0x00000080u) {
      record_cnt_ = from.record_cnt_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      idx_cnt_ = from.idx_cnt_;
    }
    if (cached_has_bits & 0x00000200u) {
      record_byte_size_ = from.record_byte_size_;
    }
    if (cached_has_bits & 0x00000400u) {
      record_idx_byte_size_ = from.record_idx_byte_size_;
    }
    if (cached_has_bits & 0x00000800u) {
      record_pk_cnt_ = from.record_pk_cnt_;
    }
    if (cached_has_bits & 0x00001000u) {
      compress_type_ = from.compress_type_;
    }
    if (cached_has_bits & 0x00002000u) {
      skiplist_height_ = from.skiplist_height_;
    }
    if (cached_has_bits & 0x00004000u) {
      diskused_ = from.diskused_;
    }
    if (cached_has_bits & 0x00008000u) {
      mode_ = from.mode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00010000u) {
    set_storage_mode(from.storage_mode());
  }
}

void TableStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.TableStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableStatus::CopyFrom(const TableStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.TableStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableStatus::IsInitialized() const {
  return true;
}

void TableStatus::Swap(TableStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TableStatus::InternalSwap(TableStatus* other) {
  using std::swap;
  CastToBase(&ts_idx_status_)->InternalSwap(CastToBase(&other->ts_idx_status_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(offset_, other->offset_);
  swap(state_, other->state_);
  swap(is_expire_, other->is_expire_);
  swap(time_offset_, other->time_offset_);
  swap(record_cnt_, other->record_cnt_);
  swap(idx_cnt_, other->idx_cnt_);
  swap(record_byte_size_, other->record_byte_size_);
  swap(record_idx_byte_size_, other->record_idx_byte_size_);
  swap(record_pk_cnt_, other->record_pk_cnt_);
  swap(compress_type_, other->compress_type_);
  swap(skiplist_height_, other->skiplist_height_);
  swap(diskused_, other->diskused_);
  swap(mode_, other->mode_);
  swap(storage_mode_, other->storage_mode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TableStatus::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetTableStatusResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTableStatusResponse::kAllTableStatusFieldNumber;
const int GetTableStatusResponse::kCodeFieldNumber;
const int GetTableStatusResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTableStatusResponse::GetTableStatusResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_GetTableStatusResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.GetTableStatusResponse)
}
GetTableStatusResponse::GetTableStatusResponse(const GetTableStatusResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      all_table_status_(from.all_table_status_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.GetTableStatusResponse)
}

void GetTableStatusResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

GetTableStatusResponse::~GetTableStatusResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.GetTableStatusResponse)
  SharedDtor();
}

void GetTableStatusResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetTableStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetTableStatusResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetTableStatusResponse& GetTableStatusResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_GetTableStatusResponse.base);
  return *internal_default_instance();
}


void GetTableStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.GetTableStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  all_table_status_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetTableStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.GetTableStatusResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openmldb.api.TableStatus all_table_status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_all_table_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.GetTableStatusResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.GetTableStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.GetTableStatusResponse)
  return false;
#undef DO_
}

void GetTableStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.GetTableStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openmldb.api.TableStatus all_table_status = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->all_table_status_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->all_table_status(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->code(), output);
  }

  // optional string msg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.GetTableStatusResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.GetTableStatusResponse)
}

::google::protobuf::uint8* GetTableStatusResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.GetTableStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openmldb.api.TableStatus all_table_status = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->all_table_status_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->all_table_status(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->code(), target);
  }

  // optional string msg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.GetTableStatusResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.GetTableStatusResponse)
  return target;
}

size_t GetTableStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.GetTableStatusResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.api.TableStatus all_table_status = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->all_table_status_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->all_table_status(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 3;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 2;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTableStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.GetTableStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTableStatusResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTableStatusResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.GetTableStatusResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.GetTableStatusResponse)
    MergeFrom(*source);
  }
}

void GetTableStatusResponse::MergeFrom(const GetTableStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.GetTableStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  all_table_status_.MergeFrom(from.all_table_status_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetTableStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.GetTableStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTableStatusResponse::CopyFrom(const GetTableStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.GetTableStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTableStatusResponse::IsInitialized() const {
  return true;
}

void GetTableStatusResponse::Swap(GetTableStatusResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTableStatusResponse::InternalSwap(GetTableStatusResponse* other) {
  using std::swap;
  CastToBase(&all_table_status_)->InternalSwap(CastToBase(&other->all_table_status_));
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetTableStatusResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRequest::kTidFieldNumber;
const int GetRequest::kPidFieldNumber;
const int GetRequest::kKeyFieldNumber;
const int GetRequest::kTsFieldNumber;
const int GetRequest::kIdxNameFieldNumber;
const int GetRequest::kTypeFieldNumber;
const int GetRequest::kEtFieldNumber;
const int GetRequest::kEtTypeFieldNumber;
const int GetRequest::kProjectionFieldNumber;
const int GetRequest::kPidGroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRequest::GetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_GetRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.GetRequest)
}
GetRequest::GetRequest(const GetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      projection_(from.projection_),
      pid_group_(from.pid_group_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  idx_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_idx_name()) {
    idx_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idx_name_);
  }
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&et_type_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(et_type_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.GetRequest)
}

void GetRequest::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idx_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&et_) -
      reinterpret_cast<char*>(&tid_)) + sizeof(et_));
  type_ = 1;
  et_type_ = 5;
}

GetRequest::~GetRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.GetRequest)
  SharedDtor();
}

void GetRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idx_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRequest& GetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_GetRequest.base);
  return *internal_default_instance();
}


void GetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.GetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  projection_.Clear();
  pid_group_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      idx_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&et_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(et_));
    type_ = 1;
    et_type_ = 5;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.GetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.GetRequest.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 ts = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_ts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string idx_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_idx_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->idx_name().data(), static_cast<int>(this->idx_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.GetRequest.idx_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.api.GetType type = 6 [default = kSubKeyEq];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::api::GetType_IsValid(value)) {
            set_type(static_cast< ::openmldb::api::GetType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                6, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 et = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_et();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &et_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.api.GetType et_type = 8 [default = kSubKeyGe];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::api::GetType_IsValid(value)) {
            set_et_type(static_cast< ::openmldb::api::GetType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                8, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 projection = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 72u, input, this->mutable_projection())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_projection())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 pid_group = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 80u, input, this->mutable_pid_group())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_pid_group())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.GetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.GetRequest)
  return false;
#undef DO_
}

void GetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.GetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional string key = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.GetRequest.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->key(), output);
  }

  // optional uint64 ts = 4 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->ts(), output);
  }

  // optional string idx_name = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->idx_name().data(), static_cast<int>(this->idx_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.GetRequest.idx_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->idx_name(), output);
  }

  // optional .openmldb.api.GetType type = 6 [default = kSubKeyEq];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->type(), output);
  }

  // optional uint64 et = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->et(), output);
  }

  // optional .openmldb.api.GetType et_type = 8 [default = kSubKeyGe];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->et_type(), output);
  }

  // repeated uint32 projection = 9;
  for (int i = 0, n = this->projection_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      9, this->projection(i), output);
  }

  // repeated uint32 pid_group = 10;
  for (int i = 0, n = this->pid_group_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      10, this->pid_group(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.GetRequest)
}

::google::protobuf::uint8* GetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.GetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional string key = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.GetRequest.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->key(), target);
  }

  // optional uint64 ts = 4 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->ts(), target);
  }

  // optional string idx_name = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->idx_name().data(), static_cast<int>(this->idx_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.GetRequest.idx_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->idx_name(), target);
  }

  // optional .openmldb.api.GetType type = 6 [default = kSubKeyEq];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->type(), target);
  }

  // optional uint64 et = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->et(), target);
  }

  // optional .openmldb.api.GetType et_type = 8 [default = kSubKeyGe];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->et_type(), target);
  }

  // repeated uint32 projection = 9;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(9, this->projection_, target);

  // repeated uint32 pid_group = 10;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(10, this->pid_group_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.GetRequest)
  return target;
}

size_t GetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.GetRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 projection = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->projection_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->projection_size());
    total_size += data_size;
  }

  // repeated uint32 pid_group = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->pid_group_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->pid_group_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string key = 3;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string idx_name = 5;
    if (has_idx_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->idx_name());
    }

    // optional uint32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional uint64 ts = 4 [default = 0];
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->ts());
    }

    // optional uint64 et = 7;
    if (has_et()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->et());
    }

    // optional .openmldb.api.GetType type = 6 [default = kSubKeyEq];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional .openmldb.api.GetType et_type = 8 [default = kSubKeyGe];
    if (has_et_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->et_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.GetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.GetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.GetRequest)
    MergeFrom(*source);
  }
}

void GetRequest::MergeFrom(const GetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.GetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  projection_.MergeFrom(from.projection_);
  pid_group_.MergeFrom(from.pid_group_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_idx_name();
      idx_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idx_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000008u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000010u) {
      ts_ = from.ts_;
    }
    if (cached_has_bits & 0x00000020u) {
      et_ = from.et_;
    }
    if (cached_has_bits & 0x00000040u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000080u) {
      et_type_ = from.et_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.GetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRequest::CopyFrom(const GetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.GetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRequest::IsInitialized() const {
  return true;
}

void GetRequest::Swap(GetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRequest::InternalSwap(GetRequest* other) {
  using std::swap;
  projection_.InternalSwap(&other->projection_);
  pid_group_.InternalSwap(&other->pid_group_);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  idx_name_.Swap(&other->idx_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(ts_, other->ts_);
  swap(et_, other->et_);
  swap(type_, other->type_);
  swap(et_type_, other->et_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetResponse::kCodeFieldNumber;
const int GetResponse::kMsgFieldNumber;
const int GetResponse::kKeyFieldNumber;
const int GetResponse::kTsFieldNumber;
const int GetResponse::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetResponse::GetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_GetResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.GetResponse)
}
GetResponse::GetResponse(const GetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  ::memcpy(&ts_, &from.ts_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&ts_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.GetResponse)
}

void GetResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&ts_)) + sizeof(code_));
}

GetResponse::~GetResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.GetResponse)
  SharedDtor();
}

void GetResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetResponse& GetResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_GetResponse.base);
  return *internal_default_instance();
}


void GetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.GetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      msg_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&ts_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&code_) -
        reinterpret_cast<char*>(&ts_)) + sizeof(code_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.GetResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.GetResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.GetResponse.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 ts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_ts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.GetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.GetResponse)
  return false;
#undef DO_
}

void GetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.GetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.GetResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // optional string key = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.GetResponse.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->key(), output);
  }

  // optional uint64 ts = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->ts(), output);
  }

  // optional bytes value = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.GetResponse)
}

::google::protobuf::uint8* GetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.GetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.GetResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // optional string key = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.GetResponse.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->key(), target);
  }

  // optional uint64 ts = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->ts(), target);
  }

  // optional bytes value = 5;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.GetResponse)
  return target;
}

size_t GetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.GetResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional string key = 3;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional bytes value = 5;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

    // optional uint64 ts = 4;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->ts());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.GetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.GetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.GetResponse)
    MergeFrom(*source);
  }
}

void GetResponse::MergeFrom(const GetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.GetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000008u) {
      ts_ = from.ts_;
    }
    if (cached_has_bits & 0x00000010u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.GetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResponse::CopyFrom(const GetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.GetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResponse::IsInitialized() const {
  return true;
}

void GetResponse::Swap(GetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetResponse::InternalSwap(GetResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ts_, other->ts_);
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CountRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CountRequest::kTidFieldNumber;
const int CountRequest::kPidFieldNumber;
const int CountRequest::kIdxNameFieldNumber;
const int CountRequest::kKeyFieldNumber;
const int CountRequest::kFilterExpiredDataFieldNumber;
const int CountRequest::kEnableRemoveDuplicatedRecordFieldNumber;
const int CountRequest::kStFieldNumber;
const int CountRequest::kStTypeFieldNumber;
const int CountRequest::kEtFieldNumber;
const int CountRequest::kEtTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CountRequest::CountRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_CountRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.CountRequest)
}
CountRequest::CountRequest(const CountRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  idx_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_idx_name()) {
    idx_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idx_name_);
  }
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&et_type_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(et_type_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.CountRequest)
}

void CountRequest::SharedCtor() {
  idx_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_remove_duplicated_record_) -
      reinterpret_cast<char*>(&tid_)) + sizeof(enable_remove_duplicated_record_));
  st_type_ = 3;
  et_type_ = 4;
}

CountRequest::~CountRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.CountRequest)
  SharedDtor();
}

void CountRequest::SharedDtor() {
  idx_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CountRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CountRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CountRequest& CountRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_CountRequest.base);
  return *internal_default_instance();
}


void CountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.CountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      idx_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&enable_remove_duplicated_record_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(enable_remove_duplicated_record_));
  }
  if (cached_has_bits & 768u) {
    st_type_ = 3;
    et_type_ = 4;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CountRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.CountRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string idx_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_idx_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->idx_name().data(), static_cast<int>(this->idx_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.CountRequest.idx_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string key = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.CountRequest.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool filter_expired_data = 5 [default = false];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_filter_expired_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &filter_expired_data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool enable_remove_duplicated_record = 6 [default = false];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_enable_remove_duplicated_record();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_remove_duplicated_record_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 st = 7 [default = 0];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_st();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &st_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.api.GetType st_type = 8 [default = kSubKeyLe];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::api::GetType_IsValid(value)) {
            set_st_type(static_cast< ::openmldb::api::GetType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                8, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 et = 9 [default = 0];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_et();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &et_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.api.GetType et_type = 10 [default = kSubKeyGt];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::api::GetType_IsValid(value)) {
            set_et_type(static_cast< ::openmldb::api::GetType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                10, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.CountRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.CountRequest)
  return false;
#undef DO_
}

void CountRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.CountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional string idx_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->idx_name().data(), static_cast<int>(this->idx_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.CountRequest.idx_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->idx_name(), output);
  }

  // optional string key = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.CountRequest.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->key(), output);
  }

  // optional bool filter_expired_data = 5 [default = false];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->filter_expired_data(), output);
  }

  // optional bool enable_remove_duplicated_record = 6 [default = false];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->enable_remove_duplicated_record(), output);
  }

  // optional uint64 st = 7 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->st(), output);
  }

  // optional .openmldb.api.GetType st_type = 8 [default = kSubKeyLe];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->st_type(), output);
  }

  // optional uint64 et = 9 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->et(), output);
  }

  // optional .openmldb.api.GetType et_type = 10 [default = kSubKeyGt];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->et_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.CountRequest)
}

::google::protobuf::uint8* CountRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.CountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional string idx_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->idx_name().data(), static_cast<int>(this->idx_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.CountRequest.idx_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->idx_name(), target);
  }

  // optional string key = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.CountRequest.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->key(), target);
  }

  // optional bool filter_expired_data = 5 [default = false];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->filter_expired_data(), target);
  }

  // optional bool enable_remove_duplicated_record = 6 [default = false];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->enable_remove_duplicated_record(), target);
  }

  // optional uint64 st = 7 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->st(), target);
  }

  // optional .openmldb.api.GetType st_type = 8 [default = kSubKeyLe];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->st_type(), target);
  }

  // optional uint64 et = 9 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->et(), target);
  }

  // optional .openmldb.api.GetType et_type = 10 [default = kSubKeyGt];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->et_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.CountRequest)
  return target;
}

size_t CountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.CountRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string idx_name = 3;
    if (has_idx_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->idx_name());
    }

    // optional string key = 4;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional uint32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional uint64 st = 7 [default = 0];
    if (has_st()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->st());
    }

    // optional uint64 et = 9 [default = 0];
    if (has_et()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->et());
    }

    // optional bool filter_expired_data = 5 [default = false];
    if (has_filter_expired_data()) {
      total_size += 1 + 1;
    }

    // optional bool enable_remove_duplicated_record = 6 [default = false];
    if (has_enable_remove_duplicated_record()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional .openmldb.api.GetType st_type = 8 [default = kSubKeyLe];
    if (has_st_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->st_type());
    }

    // optional .openmldb.api.GetType et_type = 10 [default = kSubKeyGt];
    if (has_et_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->et_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CountRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.CountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CountRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CountRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.CountRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.CountRequest)
    MergeFrom(*source);
  }
}

void CountRequest::MergeFrom(const CountRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.CountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_idx_name();
      idx_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idx_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000004u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000008u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000010u) {
      st_ = from.st_;
    }
    if (cached_has_bits & 0x00000020u) {
      et_ = from.et_;
    }
    if (cached_has_bits & 0x00000040u) {
      filter_expired_data_ = from.filter_expired_data_;
    }
    if (cached_has_bits & 0x00000080u) {
      enable_remove_duplicated_record_ = from.enable_remove_duplicated_record_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      st_type_ = from.st_type_;
    }
    if (cached_has_bits & 0x00000200u) {
      et_type_ = from.et_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CountRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.CountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CountRequest::CopyFrom(const CountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.CountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CountRequest::IsInitialized() const {
  return true;
}

void CountRequest::Swap(CountRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CountRequest::InternalSwap(CountRequest* other) {
  using std::swap;
  idx_name_.Swap(&other->idx_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(st_, other->st_);
  swap(et_, other->et_);
  swap(filter_expired_data_, other->filter_expired_data_);
  swap(enable_remove_duplicated_record_, other->enable_remove_duplicated_record_);
  swap(st_type_, other->st_type_);
  swap(et_type_, other->et_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CountRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CountResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CountResponse::kCodeFieldNumber;
const int CountResponse::kMsgFieldNumber;
const int CountResponse::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CountResponse::CountResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_CountResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.CountResponse)
}
CountResponse::CountResponse(const CountResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&code_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.CountResponse)
}

void CountResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&code_)) + sizeof(count_));
}

CountResponse::~CountResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.CountResponse)
  SharedDtor();
}

void CountResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CountResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CountResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CountResponse& CountResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_CountResponse.base);
  return *internal_default_instance();
}


void CountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.CountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&code_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&count_) -
        reinterpret_cast<char*>(&code_)) + sizeof(count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CountResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.CountResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.CountResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.CountResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.CountResponse)
  return false;
#undef DO_
}

void CountResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.CountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.CountResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // optional uint32 count = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.CountResponse)
}

::google::protobuf::uint8* CountResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.CountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.CountResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // optional uint32 count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.CountResponse)
  return target;
}

size_t CountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.CountResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

    // optional uint32 count = 3;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CountResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.CountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CountResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CountResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.CountResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.CountResponse)
    MergeFrom(*source);
  }
}

void CountResponse::MergeFrom(const CountResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.CountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    if (cached_has_bits & 0x00000004u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CountResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.CountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CountResponse::CopyFrom(const CountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.CountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CountResponse::IsInitialized() const {
  return true;
}

void CountResponse::Swap(CountResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CountResponse::InternalSwap(CountResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CountResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetTermPairRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTermPairRequest::kTidFieldNumber;
const int GetTermPairRequest::kPidFieldNumber;
const int GetTermPairRequest::kStorageModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTermPairRequest::GetTermPairRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_GetTermPairRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.GetTermPairRequest)
}
GetTermPairRequest::GetTermPairRequest(const GetTermPairRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&storage_mode_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(storage_mode_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.GetTermPairRequest)
}

void GetTermPairRequest::SharedCtor() {
  ::memset(&tid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
  storage_mode_ = 1;
}

GetTermPairRequest::~GetTermPairRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.GetTermPairRequest)
  SharedDtor();
}

void GetTermPairRequest::SharedDtor() {
}

void GetTermPairRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetTermPairRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetTermPairRequest& GetTermPairRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_GetTermPairRequest.base);
  return *internal_default_instance();
}


void GetTermPairRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.GetTermPairRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pid_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
    storage_mode_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetTermPairRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.GetTermPairRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.common.StorageMode storage_mode = 3 [default = kMemory];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::common::StorageMode_IsValid(value)) {
            set_storage_mode(static_cast< ::openmldb::common::StorageMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.GetTermPairRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.GetTermPairRequest)
  return false;
#undef DO_
}

void GetTermPairRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.GetTermPairRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional .openmldb.common.StorageMode storage_mode = 3 [default = kMemory];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->storage_mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.GetTermPairRequest)
}

::google::protobuf::uint8* GetTermPairRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.GetTermPairRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional .openmldb.common.StorageMode storage_mode = 3 [default = kMemory];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->storage_mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.GetTermPairRequest)
  return target;
}

size_t GetTermPairRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.GetTermPairRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional .openmldb.common.StorageMode storage_mode = 3 [default = kMemory];
    if (has_storage_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->storage_mode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTermPairRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.GetTermPairRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTermPairRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTermPairRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.GetTermPairRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.GetTermPairRequest)
    MergeFrom(*source);
  }
}

void GetTermPairRequest::MergeFrom(const GetTermPairRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.GetTermPairRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000002u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000004u) {
      storage_mode_ = from.storage_mode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetTermPairRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.GetTermPairRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTermPairRequest::CopyFrom(const GetTermPairRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.GetTermPairRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTermPairRequest::IsInitialized() const {
  return true;
}

void GetTermPairRequest::Swap(GetTermPairRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTermPairRequest::InternalSwap(GetTermPairRequest* other) {
  using std::swap;
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(storage_mode_, other->storage_mode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetTermPairRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetTermPairResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTermPairResponse::kCodeFieldNumber;
const int GetTermPairResponse::kMsgFieldNumber;
const int GetTermPairResponse::kTermFieldNumber;
const int GetTermPairResponse::kOffsetFieldNumber;
const int GetTermPairResponse::kHasTableFieldNumber;
const int GetTermPairResponse::kIsLeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTermPairResponse::GetTermPairResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_GetTermPairResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.GetTermPairResponse)
}
GetTermPairResponse::GetTermPairResponse(const GetTermPairResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&term_, &from.term_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_leader_) -
    reinterpret_cast<char*>(&term_)) + sizeof(is_leader_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.GetTermPairResponse)
}

void GetTermPairResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&term_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_leader_) -
      reinterpret_cast<char*>(&term_)) + sizeof(is_leader_));
}

GetTermPairResponse::~GetTermPairResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.GetTermPairResponse)
  SharedDtor();
}

void GetTermPairResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetTermPairResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetTermPairResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetTermPairResponse& GetTermPairResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_GetTermPairResponse.base);
  return *internal_default_instance();
}


void GetTermPairResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.GetTermPairResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 62u) {
    ::memset(&term_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_leader_) -
        reinterpret_cast<char*>(&term_)) + sizeof(is_leader_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetTermPairResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.GetTermPairResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.GetTermPairResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 term = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_term();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 offset = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool has_table = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_has_table();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_table_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_leader = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_is_leader();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_leader_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.GetTermPairResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.GetTermPairResponse)
  return false;
#undef DO_
}

void GetTermPairResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.GetTermPairResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.GetTermPairResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // optional uint64 term = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->term(), output);
  }

  // optional uint64 offset = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->offset(), output);
  }

  // optional bool has_table = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->has_table(), output);
  }

  // optional bool is_leader = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_leader(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.GetTermPairResponse)
}

::google::protobuf::uint8* GetTermPairResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.GetTermPairResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.GetTermPairResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // optional uint64 term = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->term(), target);
  }

  // optional uint64 offset = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->offset(), target);
  }

  // optional bool has_table = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->has_table(), target);
  }

  // optional bool is_leader = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_leader(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.GetTermPairResponse)
  return target;
}

size_t GetTermPairResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.GetTermPairResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional uint64 term = 3;
    if (has_term()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->term());
    }

    // optional uint64 offset = 4;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->offset());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

    // optional bool has_table = 5;
    if (has_has_table()) {
      total_size += 1 + 1;
    }

    // optional bool is_leader = 6;
    if (has_is_leader()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTermPairResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.GetTermPairResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTermPairResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTermPairResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.GetTermPairResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.GetTermPairResponse)
    MergeFrom(*source);
  }
}

void GetTermPairResponse::MergeFrom(const GetTermPairResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.GetTermPairResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      term_ = from.term_;
    }
    if (cached_has_bits & 0x00000004u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000008u) {
      code_ = from.code_;
    }
    if (cached_has_bits & 0x00000010u) {
      has_table_ = from.has_table_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_leader_ = from.is_leader_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetTermPairResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.GetTermPairResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTermPairResponse::CopyFrom(const GetTermPairResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.GetTermPairResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTermPairResponse::IsInitialized() const {
  return true;
}

void GetTermPairResponse::Swap(GetTermPairResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTermPairResponse::InternalSwap(GetTermPairResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(term_, other->term_);
  swap(offset_, other->offset_);
  swap(code_, other->code_);
  swap(has_table_, other->has_table_);
  swap(is_leader_, other->is_leader_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetTermPairResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetManifestRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetManifestRequest::kTidFieldNumber;
const int GetManifestRequest::kPidFieldNumber;
const int GetManifestRequest::kStorageModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetManifestRequest::GetManifestRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_GetManifestRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.GetManifestRequest)
}
GetManifestRequest::GetManifestRequest(const GetManifestRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&storage_mode_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(storage_mode_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.GetManifestRequest)
}

void GetManifestRequest::SharedCtor() {
  ::memset(&tid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
  storage_mode_ = 1;
}

GetManifestRequest::~GetManifestRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.GetManifestRequest)
  SharedDtor();
}

void GetManifestRequest::SharedDtor() {
}

void GetManifestRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetManifestRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetManifestRequest& GetManifestRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_GetManifestRequest.base);
  return *internal_default_instance();
}


void GetManifestRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.GetManifestRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pid_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
    storage_mode_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetManifestRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.GetManifestRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.common.StorageMode storage_mode = 3 [default = kMemory];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::common::StorageMode_IsValid(value)) {
            set_storage_mode(static_cast< ::openmldb::common::StorageMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.GetManifestRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.GetManifestRequest)
  return false;
#undef DO_
}

void GetManifestRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.GetManifestRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional .openmldb.common.StorageMode storage_mode = 3 [default = kMemory];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->storage_mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.GetManifestRequest)
}

::google::protobuf::uint8* GetManifestRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.GetManifestRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional .openmldb.common.StorageMode storage_mode = 3 [default = kMemory];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->storage_mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.GetManifestRequest)
  return target;
}

size_t GetManifestRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.GetManifestRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional .openmldb.common.StorageMode storage_mode = 3 [default = kMemory];
    if (has_storage_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->storage_mode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetManifestRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.GetManifestRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetManifestRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetManifestRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.GetManifestRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.GetManifestRequest)
    MergeFrom(*source);
  }
}

void GetManifestRequest::MergeFrom(const GetManifestRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.GetManifestRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000002u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000004u) {
      storage_mode_ = from.storage_mode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetManifestRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.GetManifestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetManifestRequest::CopyFrom(const GetManifestRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.GetManifestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetManifestRequest::IsInitialized() const {
  return true;
}

void GetManifestRequest::Swap(GetManifestRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetManifestRequest::InternalSwap(GetManifestRequest* other) {
  using std::swap;
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(storage_mode_, other->storage_mode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetManifestRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetManifestResponse::InitAsDefaultInstance() {
  ::openmldb::api::_GetManifestResponse_default_instance_._instance.get_mutable()->manifest_ = const_cast< ::openmldb::api::Manifest*>(
      ::openmldb::api::Manifest::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetManifestResponse::kCodeFieldNumber;
const int GetManifestResponse::kMsgFieldNumber;
const int GetManifestResponse::kManifestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetManifestResponse::GetManifestResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_GetManifestResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.GetManifestResponse)
}
GetManifestResponse::GetManifestResponse(const GetManifestResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_manifest()) {
    manifest_ = new ::openmldb::api::Manifest(*from.manifest_);
  } else {
    manifest_ = NULL;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.GetManifestResponse)
}

void GetManifestResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&manifest_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&manifest_)) + sizeof(code_));
}

GetManifestResponse::~GetManifestResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.GetManifestResponse)
  SharedDtor();
}

void GetManifestResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete manifest_;
}

void GetManifestResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetManifestResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetManifestResponse& GetManifestResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_GetManifestResponse.base);
  return *internal_default_instance();
}


void GetManifestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.GetManifestResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      msg_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(manifest_ != NULL);
      manifest_->Clear();
    }
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetManifestResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.GetManifestResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.GetManifestResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.api.Manifest manifest = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_manifest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.GetManifestResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.GetManifestResponse)
  return false;
#undef DO_
}

void GetManifestResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.GetManifestResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.GetManifestResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // optional .openmldb.api.Manifest manifest = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_manifest(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.GetManifestResponse)
}

::google::protobuf::uint8* GetManifestResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.GetManifestResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.GetManifestResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // optional .openmldb.api.Manifest manifest = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_manifest(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.GetManifestResponse)
  return target;
}

size_t GetManifestResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.GetManifestResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional .openmldb.api.Manifest manifest = 3;
    if (has_manifest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *manifest_);
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetManifestResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.GetManifestResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetManifestResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetManifestResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.GetManifestResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.GetManifestResponse)
    MergeFrom(*source);
  }
}

void GetManifestResponse::MergeFrom(const GetManifestResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.GetManifestResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_manifest()->::openmldb::api::Manifest::MergeFrom(from.manifest());
    }
    if (cached_has_bits & 0x00000004u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetManifestResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.GetManifestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetManifestResponse::CopyFrom(const GetManifestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.GetManifestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetManifestResponse::IsInitialized() const {
  return true;
}

void GetManifestResponse::Swap(GetManifestResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetManifestResponse::InternalSwap(GetManifestResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(manifest_, other->manifest_);
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetManifestResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetTableFollowerRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTableFollowerRequest::kTidFieldNumber;
const int GetTableFollowerRequest::kPidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTableFollowerRequest::GetTableFollowerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_GetTableFollowerRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.GetTableFollowerRequest)
}
GetTableFollowerRequest::GetTableFollowerRequest(const GetTableFollowerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pid_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.GetTableFollowerRequest)
}

void GetTableFollowerRequest::SharedCtor() {
  ::memset(&tid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
}

GetTableFollowerRequest::~GetTableFollowerRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.GetTableFollowerRequest)
  SharedDtor();
}

void GetTableFollowerRequest::SharedDtor() {
}

void GetTableFollowerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetTableFollowerRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetTableFollowerRequest& GetTableFollowerRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_GetTableFollowerRequest.base);
  return *internal_default_instance();
}


void GetTableFollowerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.GetTableFollowerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pid_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetTableFollowerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.GetTableFollowerRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.GetTableFollowerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.GetTableFollowerRequest)
  return false;
#undef DO_
}

void GetTableFollowerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.GetTableFollowerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.GetTableFollowerRequest)
}

::google::protobuf::uint8* GetTableFollowerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.GetTableFollowerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.GetTableFollowerRequest)
  return target;
}

size_t GetTableFollowerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.GetTableFollowerRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTableFollowerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.GetTableFollowerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTableFollowerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTableFollowerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.GetTableFollowerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.GetTableFollowerRequest)
    MergeFrom(*source);
  }
}

void GetTableFollowerRequest::MergeFrom(const GetTableFollowerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.GetTableFollowerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000002u) {
      pid_ = from.pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetTableFollowerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.GetTableFollowerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTableFollowerRequest::CopyFrom(const GetTableFollowerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.GetTableFollowerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTableFollowerRequest::IsInitialized() const {
  return true;
}

void GetTableFollowerRequest::Swap(GetTableFollowerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTableFollowerRequest::InternalSwap(GetTableFollowerRequest* other) {
  using std::swap;
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetTableFollowerRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FollowerInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FollowerInfo::kEndpointFieldNumber;
const int FollowerInfo::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FollowerInfo::FollowerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_FollowerInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.FollowerInfo)
}
FollowerInfo::FollowerInfo(const FollowerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_endpoint()) {
    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  offset_ = from.offset_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.FollowerInfo)
}

void FollowerInfo::SharedCtor() {
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offset_ = GOOGLE_ULONGLONG(0);
}

FollowerInfo::~FollowerInfo() {
  // @@protoc_insertion_point(destructor:openmldb.api.FollowerInfo)
  SharedDtor();
}

void FollowerInfo::SharedDtor() {
  endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FollowerInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FollowerInfo::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FollowerInfo& FollowerInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_FollowerInfo.base);
  return *internal_default_instance();
}


void FollowerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.FollowerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    endpoint_.ClearNonDefaultToEmptyNoArena();
  }
  offset_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FollowerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.FollowerInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string endpoint = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->endpoint().data(), static_cast<int>(this->endpoint().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.FollowerInfo.endpoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.FollowerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.FollowerInfo)
  return false;
#undef DO_
}

void FollowerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.FollowerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string endpoint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.FollowerInfo.endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->endpoint(), output);
  }

  // optional uint64 offset = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->offset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.FollowerInfo)
}

::google::protobuf::uint8* FollowerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.FollowerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string endpoint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.FollowerInfo.endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->endpoint(), target);
  }

  // optional uint64 offset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->offset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.FollowerInfo)
  return target;
}

size_t FollowerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.FollowerInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string endpoint = 1;
    if (has_endpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->endpoint());
    }

    // optional uint64 offset = 2;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->offset());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FollowerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.FollowerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const FollowerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FollowerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.FollowerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.FollowerInfo)
    MergeFrom(*source);
  }
}

void FollowerInfo::MergeFrom(const FollowerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.FollowerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_endpoint();
      endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
    }
    if (cached_has_bits & 0x00000002u) {
      offset_ = from.offset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FollowerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.FollowerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FollowerInfo::CopyFrom(const FollowerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.FollowerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FollowerInfo::IsInitialized() const {
  return true;
}

void FollowerInfo::Swap(FollowerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FollowerInfo::InternalSwap(FollowerInfo* other) {
  using std::swap;
  endpoint_.Swap(&other->endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(offset_, other->offset_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FollowerInfo::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetTableFollowerResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTableFollowerResponse::kCodeFieldNumber;
const int GetTableFollowerResponse::kMsgFieldNumber;
const int GetTableFollowerResponse::kOffsetFieldNumber;
const int GetTableFollowerResponse::kFollowerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTableFollowerResponse::GetTableFollowerResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_GetTableFollowerResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.GetTableFollowerResponse)
}
GetTableFollowerResponse::GetTableFollowerResponse(const GetTableFollowerResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      follower_info_(from.follower_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.GetTableFollowerResponse)
}

void GetTableFollowerResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(code_));
}

GetTableFollowerResponse::~GetTableFollowerResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.GetTableFollowerResponse)
  SharedDtor();
}

void GetTableFollowerResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetTableFollowerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetTableFollowerResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetTableFollowerResponse& GetTableFollowerResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_GetTableFollowerResponse.base);
  return *internal_default_instance();
}


void GetTableFollowerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.GetTableFollowerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  follower_info_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&code_) -
        reinterpret_cast<char*>(&offset_)) + sizeof(code_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetTableFollowerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.GetTableFollowerResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.GetTableFollowerResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.api.FollowerInfo follower_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_follower_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.GetTableFollowerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.GetTableFollowerResponse)
  return false;
#undef DO_
}

void GetTableFollowerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.GetTableFollowerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.GetTableFollowerResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // optional uint64 offset = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->offset(), output);
  }

  // repeated .openmldb.api.FollowerInfo follower_info = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->follower_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->follower_info(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.GetTableFollowerResponse)
}

::google::protobuf::uint8* GetTableFollowerResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.GetTableFollowerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.GetTableFollowerResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // optional uint64 offset = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->offset(), target);
  }

  // repeated .openmldb.api.FollowerInfo follower_info = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->follower_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->follower_info(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.GetTableFollowerResponse)
  return target;
}

size_t GetTableFollowerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.GetTableFollowerResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.api.FollowerInfo follower_info = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->follower_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->follower_info(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional uint64 offset = 3;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->offset());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTableFollowerResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.GetTableFollowerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTableFollowerResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTableFollowerResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.GetTableFollowerResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.GetTableFollowerResponse)
    MergeFrom(*source);
  }
}

void GetTableFollowerResponse::MergeFrom(const GetTableFollowerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.GetTableFollowerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  follower_info_.MergeFrom(from.follower_info_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000004u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetTableFollowerResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.GetTableFollowerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTableFollowerResponse::CopyFrom(const GetTableFollowerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.GetTableFollowerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTableFollowerResponse::IsInitialized() const {
  return true;
}

void GetTableFollowerResponse::Swap(GetTableFollowerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTableFollowerResponse::InternalSwap(GetTableFollowerResponse* other) {
  using std::swap;
  CastToBase(&follower_info_)->InternalSwap(CastToBase(&other->follower_info_));
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(offset_, other->offset_);
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetTableFollowerResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CheckFileRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckFileRequest::kTidFieldNumber;
const int CheckFileRequest::kPidFieldNumber;
const int CheckFileRequest::kFileFieldNumber;
const int CheckFileRequest::kSizeFieldNumber;
const int CheckFileRequest::kDirNameFieldNumber;
const int CheckFileRequest::kStorageModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckFileRequest::CheckFileRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_CheckFileRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.CheckFileRequest)
}
CheckFileRequest::CheckFileRequest(const CheckFileRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file()) {
    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  dir_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dir_name()) {
    dir_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dir_name_);
  }
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&storage_mode_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(storage_mode_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.CheckFileRequest)
}

void CheckFileRequest::SharedCtor() {
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dir_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&tid_)) + sizeof(size_));
  storage_mode_ = 1;
}

CheckFileRequest::~CheckFileRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.CheckFileRequest)
  SharedDtor();
}

void CheckFileRequest::SharedDtor() {
  file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dir_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CheckFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CheckFileRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckFileRequest& CheckFileRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_CheckFileRequest.base);
  return *internal_default_instance();
}


void CheckFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.CheckFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      file_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      dir_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&size_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(size_));
    storage_mode_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CheckFileRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.CheckFileRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string file = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file().data(), static_cast<int>(this->file().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.CheckFileRequest.file");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string dir_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dir_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dir_name().data(), static_cast<int>(this->dir_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.CheckFileRequest.dir_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.common.StorageMode storage_mode = 6 [default = kMemory];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::common::StorageMode_IsValid(value)) {
            set_storage_mode(static_cast< ::openmldb::common::StorageMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                6, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.CheckFileRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.CheckFileRequest)
  return false;
#undef DO_
}

void CheckFileRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.CheckFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional string file = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.CheckFileRequest.file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->file(), output);
  }

  // optional uint64 size = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->size(), output);
  }

  // optional string dir_name = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dir_name().data(), static_cast<int>(this->dir_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.CheckFileRequest.dir_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->dir_name(), output);
  }

  // optional .openmldb.common.StorageMode storage_mode = 6 [default = kMemory];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->storage_mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.CheckFileRequest)
}

::google::protobuf::uint8* CheckFileRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.CheckFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional string file = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.CheckFileRequest.file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->file(), target);
  }

  // optional uint64 size = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->size(), target);
  }

  // optional string dir_name = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dir_name().data(), static_cast<int>(this->dir_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.CheckFileRequest.dir_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->dir_name(), target);
  }

  // optional .openmldb.common.StorageMode storage_mode = 6 [default = kMemory];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->storage_mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.CheckFileRequest)
  return target;
}

size_t CheckFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.CheckFileRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string file = 3;
    if (has_file()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file());
    }

    // optional string dir_name = 5;
    if (has_dir_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dir_name());
    }

    // optional uint32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional uint64 size = 4;
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->size());
    }

    // optional .openmldb.common.StorageMode storage_mode = 6 [default = kMemory];
    if (has_storage_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->storage_mode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckFileRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.CheckFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckFileRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckFileRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.CheckFileRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.CheckFileRequest)
    MergeFrom(*source);
  }
}

void CheckFileRequest::MergeFrom(const CheckFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.CheckFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_file();
      file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_dir_name();
      dir_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dir_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000008u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000010u) {
      size_ = from.size_;
    }
    if (cached_has_bits & 0x00000020u) {
      storage_mode_ = from.storage_mode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CheckFileRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.CheckFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckFileRequest::CopyFrom(const CheckFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.CheckFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckFileRequest::IsInitialized() const {
  return true;
}

void CheckFileRequest::Swap(CheckFileRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckFileRequest::InternalSwap(CheckFileRequest* other) {
  using std::swap;
  file_.Swap(&other->file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  dir_name_.Swap(&other->dir_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(size_, other->size_);
  swap(storage_mode_, other->storage_mode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CheckFileRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddIndexRequest::InitAsDefaultInstance() {
  ::openmldb::api::_AddIndexRequest_default_instance_._instance.get_mutable()->column_key_ = const_cast< ::openmldb::common::ColumnKey*>(
      ::openmldb::common::ColumnKey::internal_default_instance());
}
void AddIndexRequest::clear_column_key() {
  if (column_key_ != NULL) column_key_->Clear();
  clear_has_column_key();
}
void AddIndexRequest::clear_column_keys() {
  column_keys_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddIndexRequest::kTidFieldNumber;
const int AddIndexRequest::kPidFieldNumber;
const int AddIndexRequest::kColumnKeyFieldNumber;
const int AddIndexRequest::kColumnKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddIndexRequest::AddIndexRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_AddIndexRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.AddIndexRequest)
}
AddIndexRequest::AddIndexRequest(const AddIndexRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      column_keys_(from.column_keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_column_key()) {
    column_key_ = new ::openmldb::common::ColumnKey(*from.column_key_);
  } else {
    column_key_ = NULL;
  }
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pid_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.AddIndexRequest)
}

void AddIndexRequest::SharedCtor() {
  ::memset(&column_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&column_key_)) + sizeof(pid_));
}

AddIndexRequest::~AddIndexRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.AddIndexRequest)
  SharedDtor();
}

void AddIndexRequest::SharedDtor() {
  if (this != internal_default_instance()) delete column_key_;
}

void AddIndexRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddIndexRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddIndexRequest& AddIndexRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_AddIndexRequest.base);
  return *internal_default_instance();
}


void AddIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.AddIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  column_keys_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(column_key_ != NULL);
    column_key_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pid_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AddIndexRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.AddIndexRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.common.ColumnKey column_key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_column_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.common.ColumnKey column_keys = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_column_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.AddIndexRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.AddIndexRequest)
  return false;
#undef DO_
}

void AddIndexRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.AddIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional .openmldb.common.ColumnKey column_key = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_column_key(), output);
  }

  // repeated .openmldb.common.ColumnKey column_keys = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->column_keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->column_keys(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.AddIndexRequest)
}

::google::protobuf::uint8* AddIndexRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.AddIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional .openmldb.common.ColumnKey column_key = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_column_key(), deterministic, target);
  }

  // repeated .openmldb.common.ColumnKey column_keys = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->column_keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->column_keys(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.AddIndexRequest)
  return target;
}

size_t AddIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.AddIndexRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.common.ColumnKey column_keys = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->column_keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->column_keys(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional .openmldb.common.ColumnKey column_key = 3;
    if (has_column_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *column_key_);
    }

    // optional uint32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddIndexRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.AddIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddIndexRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddIndexRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.AddIndexRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.AddIndexRequest)
    MergeFrom(*source);
  }
}

void AddIndexRequest::MergeFrom(const AddIndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.AddIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  column_keys_.MergeFrom(from.column_keys_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_column_key()->::openmldb::common::ColumnKey::MergeFrom(from.column_key());
    }
    if (cached_has_bits & 0x00000002u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pid_ = from.pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AddIndexRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.AddIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddIndexRequest::CopyFrom(const AddIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.AddIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddIndexRequest::IsInitialized() const {
  return true;
}

void AddIndexRequest::Swap(AddIndexRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddIndexRequest::InternalSwap(AddIndexRequest* other) {
  using std::swap;
  CastToBase(&column_keys_)->InternalSwap(CastToBase(&other->column_keys_));
  swap(column_key_, other->column_key_);
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddIndexRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetModeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetModeRequest::kFollowerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetModeRequest::SetModeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_SetModeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.SetModeRequest)
}
SetModeRequest::SetModeRequest(const SetModeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  follower_ = from.follower_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.SetModeRequest)
}

void SetModeRequest::SharedCtor() {
  follower_ = false;
}

SetModeRequest::~SetModeRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.SetModeRequest)
  SharedDtor();
}

void SetModeRequest::SharedDtor() {
}

void SetModeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetModeRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetModeRequest& SetModeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_SetModeRequest.base);
  return *internal_default_instance();
}


void SetModeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.SetModeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  follower_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetModeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.SetModeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool follower = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_follower();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &follower_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.SetModeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.SetModeRequest)
  return false;
#undef DO_
}

void SetModeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.SetModeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool follower = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->follower(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.SetModeRequest)
}

::google::protobuf::uint8* SetModeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.SetModeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool follower = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->follower(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.SetModeRequest)
  return target;
}

size_t SetModeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.SetModeRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool follower = 1;
  if (has_follower()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetModeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.SetModeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetModeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetModeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.SetModeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.SetModeRequest)
    MergeFrom(*source);
  }
}

void SetModeRequest::MergeFrom(const SetModeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.SetModeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_follower()) {
    set_follower(from.follower());
  }
}

void SetModeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.SetModeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetModeRequest::CopyFrom(const SetModeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.SetModeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetModeRequest::IsInitialized() const {
  return true;
}

void SetModeRequest::Swap(SetModeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetModeRequest::InternalSwap(SetModeRequest* other) {
  using std::swap;
  swap(follower_, other->follower_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetModeRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EmptyRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmptyRequest::EmptyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_EmptyRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.EmptyRequest)
}
EmptyRequest::EmptyRequest(const EmptyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openmldb.api.EmptyRequest)
}

void EmptyRequest::SharedCtor() {
}

EmptyRequest::~EmptyRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.EmptyRequest)
  SharedDtor();
}

void EmptyRequest::SharedDtor() {
}

void EmptyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EmptyRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EmptyRequest& EmptyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_EmptyRequest.base);
  return *internal_default_instance();
}


void EmptyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.EmptyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EmptyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.EmptyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.EmptyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.EmptyRequest)
  return false;
#undef DO_
}

void EmptyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.EmptyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.EmptyRequest)
}

::google::protobuf::uint8* EmptyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.EmptyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.EmptyRequest)
  return target;
}

size_t EmptyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.EmptyRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmptyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.EmptyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EmptyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmptyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.EmptyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.EmptyRequest)
    MergeFrom(*source);
  }
}

void EmptyRequest::MergeFrom(const EmptyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.EmptyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EmptyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.EmptyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmptyRequest::CopyFrom(const EmptyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.EmptyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmptyRequest::IsInitialized() const {
  return true;
}

void EmptyRequest::Swap(EmptyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmptyRequest::InternalSwap(EmptyRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EmptyRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConnectZKRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectZKRequest::ConnectZKRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_ConnectZKRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.ConnectZKRequest)
}
ConnectZKRequest::ConnectZKRequest(const ConnectZKRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openmldb.api.ConnectZKRequest)
}

void ConnectZKRequest::SharedCtor() {
}

ConnectZKRequest::~ConnectZKRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.ConnectZKRequest)
  SharedDtor();
}

void ConnectZKRequest::SharedDtor() {
}

void ConnectZKRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConnectZKRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectZKRequest& ConnectZKRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_ConnectZKRequest.base);
  return *internal_default_instance();
}


void ConnectZKRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.ConnectZKRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConnectZKRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.ConnectZKRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.ConnectZKRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.ConnectZKRequest)
  return false;
#undef DO_
}

void ConnectZKRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.ConnectZKRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.ConnectZKRequest)
}

::google::protobuf::uint8* ConnectZKRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.ConnectZKRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.ConnectZKRequest)
  return target;
}

size_t ConnectZKRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.ConnectZKRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectZKRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.ConnectZKRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectZKRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectZKRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.ConnectZKRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.ConnectZKRequest)
    MergeFrom(*source);
  }
}

void ConnectZKRequest::MergeFrom(const ConnectZKRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.ConnectZKRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ConnectZKRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.ConnectZKRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectZKRequest::CopyFrom(const ConnectZKRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.ConnectZKRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectZKRequest::IsInitialized() const {
  return true;
}

void ConnectZKRequest::Swap(ConnectZKRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectZKRequest::InternalSwap(ConnectZKRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConnectZKRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DisConnectZKRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisConnectZKRequest::DisConnectZKRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_DisConnectZKRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.DisConnectZKRequest)
}
DisConnectZKRequest::DisConnectZKRequest(const DisConnectZKRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openmldb.api.DisConnectZKRequest)
}

void DisConnectZKRequest::SharedCtor() {
}

DisConnectZKRequest::~DisConnectZKRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.DisConnectZKRequest)
  SharedDtor();
}

void DisConnectZKRequest::SharedDtor() {
}

void DisConnectZKRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DisConnectZKRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DisConnectZKRequest& DisConnectZKRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_DisConnectZKRequest.base);
  return *internal_default_instance();
}


void DisConnectZKRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.DisConnectZKRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DisConnectZKRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.DisConnectZKRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.DisConnectZKRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.DisConnectZKRequest)
  return false;
#undef DO_
}

void DisConnectZKRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.DisConnectZKRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.DisConnectZKRequest)
}

::google::protobuf::uint8* DisConnectZKRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.DisConnectZKRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.DisConnectZKRequest)
  return target;
}

size_t DisConnectZKRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.DisConnectZKRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisConnectZKRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.DisConnectZKRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DisConnectZKRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DisConnectZKRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.DisConnectZKRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.DisConnectZKRequest)
    MergeFrom(*source);
  }
}

void DisConnectZKRequest::MergeFrom(const DisConnectZKRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.DisConnectZKRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DisConnectZKRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.DisConnectZKRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisConnectZKRequest::CopyFrom(const DisConnectZKRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.DisConnectZKRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisConnectZKRequest::IsInitialized() const {
  return true;
}

void DisConnectZKRequest::Swap(DisConnectZKRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisConnectZKRequest::InternalSwap(DisConnectZKRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DisConnectZKRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HttpRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HttpRequest::HttpRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_HttpRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.HttpRequest)
}
HttpRequest::HttpRequest(const HttpRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openmldb.api.HttpRequest)
}

void HttpRequest::SharedCtor() {
}

HttpRequest::~HttpRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.HttpRequest)
  SharedDtor();
}

void HttpRequest::SharedDtor() {
}

void HttpRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HttpRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HttpRequest& HttpRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_HttpRequest.base);
  return *internal_default_instance();
}


void HttpRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.HttpRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HttpRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.HttpRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.HttpRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.HttpRequest)
  return false;
#undef DO_
}

void HttpRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.HttpRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.HttpRequest)
}

::google::protobuf::uint8* HttpRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.HttpRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.HttpRequest)
  return target;
}

size_t HttpRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.HttpRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HttpRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.HttpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HttpRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HttpRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.HttpRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.HttpRequest)
    MergeFrom(*source);
  }
}

void HttpRequest::MergeFrom(const HttpRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.HttpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HttpRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.HttpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HttpRequest::CopyFrom(const HttpRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.HttpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HttpRequest::IsInitialized() const {
  return true;
}

void HttpRequest::Swap(HttpRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HttpRequest::InternalSwap(HttpRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HttpRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HttpResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HttpResponse::HttpResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_HttpResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.HttpResponse)
}
HttpResponse::HttpResponse(const HttpResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openmldb.api.HttpResponse)
}

void HttpResponse::SharedCtor() {
}

HttpResponse::~HttpResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.HttpResponse)
  SharedDtor();
}

void HttpResponse::SharedDtor() {
}

void HttpResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HttpResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HttpResponse& HttpResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_HttpResponse.base);
  return *internal_default_instance();
}


void HttpResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.HttpResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HttpResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.HttpResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.HttpResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.HttpResponse)
  return false;
#undef DO_
}

void HttpResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.HttpResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.HttpResponse)
}

::google::protobuf::uint8* HttpResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.HttpResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.HttpResponse)
  return target;
}

size_t HttpResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.HttpResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HttpResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.HttpResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HttpResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HttpResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.HttpResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.HttpResponse)
    MergeFrom(*source);
  }
}

void HttpResponse::MergeFrom(const HttpResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.HttpResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HttpResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.HttpResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HttpResponse::CopyFrom(const HttpResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.HttpResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HttpResponse::IsInitialized() const {
  return true;
}

void HttpResponse::Swap(HttpResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HttpResponse::InternalSwap(HttpResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HttpResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteIndexRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteIndexRequest::kTidFieldNumber;
const int DeleteIndexRequest::kPidFieldNumber;
const int DeleteIndexRequest::kIdxNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteIndexRequest::DeleteIndexRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_DeleteIndexRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.DeleteIndexRequest)
}
DeleteIndexRequest::DeleteIndexRequest(const DeleteIndexRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  idx_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_idx_name()) {
    idx_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idx_name_);
  }
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pid_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.DeleteIndexRequest)
}

void DeleteIndexRequest::SharedCtor() {
  idx_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
}

DeleteIndexRequest::~DeleteIndexRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.DeleteIndexRequest)
  SharedDtor();
}

void DeleteIndexRequest::SharedDtor() {
  idx_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteIndexRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteIndexRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteIndexRequest& DeleteIndexRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_DeleteIndexRequest.base);
  return *internal_default_instance();
}


void DeleteIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.DeleteIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    idx_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pid_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeleteIndexRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.DeleteIndexRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string idx_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_idx_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->idx_name().data(), static_cast<int>(this->idx_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.DeleteIndexRequest.idx_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.DeleteIndexRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.DeleteIndexRequest)
  return false;
#undef DO_
}

void DeleteIndexRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.DeleteIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional string idx_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->idx_name().data(), static_cast<int>(this->idx_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.DeleteIndexRequest.idx_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->idx_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.DeleteIndexRequest)
}

::google::protobuf::uint8* DeleteIndexRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.DeleteIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional string idx_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->idx_name().data(), static_cast<int>(this->idx_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.DeleteIndexRequest.idx_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->idx_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.DeleteIndexRequest)
  return target;
}

size_t DeleteIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.DeleteIndexRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string idx_name = 3;
    if (has_idx_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->idx_name());
    }

    // optional uint32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteIndexRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.DeleteIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteIndexRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteIndexRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.DeleteIndexRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.DeleteIndexRequest)
    MergeFrom(*source);
  }
}

void DeleteIndexRequest::MergeFrom(const DeleteIndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.DeleteIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_idx_name();
      idx_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idx_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pid_ = from.pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DeleteIndexRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.DeleteIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteIndexRequest::CopyFrom(const DeleteIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.DeleteIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteIndexRequest::IsInitialized() const {
  return true;
}

void DeleteIndexRequest::Swap(DeleteIndexRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteIndexRequest::InternalSwap(DeleteIndexRequest* other) {
  using std::swap;
  idx_name_.Swap(&other->idx_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteIndexRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DumpIndexDataRequest::InitAsDefaultInstance() {
  ::openmldb::api::_DumpIndexDataRequest_default_instance_._instance.get_mutable()->column_key_ = const_cast< ::openmldb::common::ColumnKey*>(
      ::openmldb::common::ColumnKey::internal_default_instance());
  ::openmldb::api::_DumpIndexDataRequest_default_instance_._instance.get_mutable()->task_info_ = const_cast< ::openmldb::api::TaskInfo*>(
      ::openmldb::api::TaskInfo::internal_default_instance());
}
void DumpIndexDataRequest::clear_column_key() {
  if (column_key_ != NULL) column_key_->Clear();
  clear_has_column_key();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DumpIndexDataRequest::kTidFieldNumber;
const int DumpIndexDataRequest::kPidFieldNumber;
const int DumpIndexDataRequest::kPartitionNumFieldNumber;
const int DumpIndexDataRequest::kIdxFieldNumber;
const int DumpIndexDataRequest::kColumnKeyFieldNumber;
const int DumpIndexDataRequest::kTaskInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DumpIndexDataRequest::DumpIndexDataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_DumpIndexDataRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.DumpIndexDataRequest)
}
DumpIndexDataRequest::DumpIndexDataRequest(const DumpIndexDataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_column_key()) {
    column_key_ = new ::openmldb::common::ColumnKey(*from.column_key_);
  } else {
    column_key_ = NULL;
  }
  if (from.has_task_info()) {
    task_info_ = new ::openmldb::api::TaskInfo(*from.task_info_);
  } else {
    task_info_ = NULL;
  }
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&idx_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(idx_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.DumpIndexDataRequest)
}

void DumpIndexDataRequest::SharedCtor() {
  ::memset(&column_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&idx_) -
      reinterpret_cast<char*>(&column_key_)) + sizeof(idx_));
}

DumpIndexDataRequest::~DumpIndexDataRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.DumpIndexDataRequest)
  SharedDtor();
}

void DumpIndexDataRequest::SharedDtor() {
  if (this != internal_default_instance()) delete column_key_;
  if (this != internal_default_instance()) delete task_info_;
}

void DumpIndexDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DumpIndexDataRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DumpIndexDataRequest& DumpIndexDataRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_DumpIndexDataRequest.base);
  return *internal_default_instance();
}


void DumpIndexDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.DumpIndexDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(column_key_ != NULL);
      column_key_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(task_info_ != NULL);
      task_info_->Clear();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&idx_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(idx_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DumpIndexDataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.DumpIndexDataRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 partition_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_partition_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &partition_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 idx = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.common.ColumnKey column_key = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_column_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.api.TaskInfo task_info = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_task_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.DumpIndexDataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.DumpIndexDataRequest)
  return false;
#undef DO_
}

void DumpIndexDataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.DumpIndexDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional uint32 partition_num = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->partition_num(), output);
  }

  // optional uint32 idx = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->idx(), output);
  }

  // optional .openmldb.common.ColumnKey column_key = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_column_key(), output);
  }

  // optional .openmldb.api.TaskInfo task_info = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_task_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.DumpIndexDataRequest)
}

::google::protobuf::uint8* DumpIndexDataRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.DumpIndexDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional uint32 partition_num = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->partition_num(), target);
  }

  // optional uint32 idx = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->idx(), target);
  }

  // optional .openmldb.common.ColumnKey column_key = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_column_key(), deterministic, target);
  }

  // optional .openmldb.api.TaskInfo task_info = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_task_info(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.DumpIndexDataRequest)
  return target;
}

size_t DumpIndexDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.DumpIndexDataRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional .openmldb.common.ColumnKey column_key = 5;
    if (has_column_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *column_key_);
    }

    // optional .openmldb.api.TaskInfo task_info = 6;
    if (has_task_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_info_);
    }

    // optional uint32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional uint32 partition_num = 3;
    if (has_partition_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->partition_num());
    }

    // optional uint32 idx = 4;
    if (has_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->idx());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DumpIndexDataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.DumpIndexDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DumpIndexDataRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DumpIndexDataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.DumpIndexDataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.DumpIndexDataRequest)
    MergeFrom(*source);
  }
}

void DumpIndexDataRequest::MergeFrom(const DumpIndexDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.DumpIndexDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_column_key()->::openmldb::common::ColumnKey::MergeFrom(from.column_key());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_task_info()->::openmldb::api::TaskInfo::MergeFrom(from.task_info());
    }
    if (cached_has_bits & 0x00000004u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000008u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000010u) {
      partition_num_ = from.partition_num_;
    }
    if (cached_has_bits & 0x00000020u) {
      idx_ = from.idx_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DumpIndexDataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.DumpIndexDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DumpIndexDataRequest::CopyFrom(const DumpIndexDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.DumpIndexDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DumpIndexDataRequest::IsInitialized() const {
  if (has_task_info()) {
    if (!this->task_info_->IsInitialized()) return false;
  }
  return true;
}

void DumpIndexDataRequest::Swap(DumpIndexDataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DumpIndexDataRequest::InternalSwap(DumpIndexDataRequest* other) {
  using std::swap;
  swap(column_key_, other->column_key_);
  swap(task_info_, other->task_info_);
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(partition_num_, other->partition_num_);
  swap(idx_, other->idx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DumpIndexDataRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoadIndexDataRequest::InitAsDefaultInstance() {
  ::openmldb::api::_LoadIndexDataRequest_default_instance_._instance.get_mutable()->task_info_ = const_cast< ::openmldb::api::TaskInfo*>(
      ::openmldb::api::TaskInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadIndexDataRequest::kTidFieldNumber;
const int LoadIndexDataRequest::kPidFieldNumber;
const int LoadIndexDataRequest::kPartitionNumFieldNumber;
const int LoadIndexDataRequest::kTaskInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadIndexDataRequest::LoadIndexDataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_LoadIndexDataRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.LoadIndexDataRequest)
}
LoadIndexDataRequest::LoadIndexDataRequest(const LoadIndexDataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_task_info()) {
    task_info_ = new ::openmldb::api::TaskInfo(*from.task_info_);
  } else {
    task_info_ = NULL;
  }
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&partition_num_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(partition_num_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.LoadIndexDataRequest)
}

void LoadIndexDataRequest::SharedCtor() {
  ::memset(&task_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&partition_num_) -
      reinterpret_cast<char*>(&task_info_)) + sizeof(partition_num_));
}

LoadIndexDataRequest::~LoadIndexDataRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.LoadIndexDataRequest)
  SharedDtor();
}

void LoadIndexDataRequest::SharedDtor() {
  if (this != internal_default_instance()) delete task_info_;
}

void LoadIndexDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoadIndexDataRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoadIndexDataRequest& LoadIndexDataRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_LoadIndexDataRequest.base);
  return *internal_default_instance();
}


void LoadIndexDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.LoadIndexDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(task_info_ != NULL);
    task_info_->Clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&partition_num_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(partition_num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LoadIndexDataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.LoadIndexDataRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 partition_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_partition_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &partition_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.api.TaskInfo task_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_task_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.LoadIndexDataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.LoadIndexDataRequest)
  return false;
#undef DO_
}

void LoadIndexDataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.LoadIndexDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional uint32 partition_num = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->partition_num(), output);
  }

  // optional .openmldb.api.TaskInfo task_info = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_task_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.LoadIndexDataRequest)
}

::google::protobuf::uint8* LoadIndexDataRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.LoadIndexDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional uint32 partition_num = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->partition_num(), target);
  }

  // optional .openmldb.api.TaskInfo task_info = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_task_info(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.LoadIndexDataRequest)
  return target;
}

size_t LoadIndexDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.LoadIndexDataRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .openmldb.api.TaskInfo task_info = 4;
    if (has_task_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_info_);
    }

    // optional uint32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional uint32 partition_num = 3;
    if (has_partition_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->partition_num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadIndexDataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.LoadIndexDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadIndexDataRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoadIndexDataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.LoadIndexDataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.LoadIndexDataRequest)
    MergeFrom(*source);
  }
}

void LoadIndexDataRequest::MergeFrom(const LoadIndexDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.LoadIndexDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_task_info()->::openmldb::api::TaskInfo::MergeFrom(from.task_info());
    }
    if (cached_has_bits & 0x00000002u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000008u) {
      partition_num_ = from.partition_num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LoadIndexDataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.LoadIndexDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadIndexDataRequest::CopyFrom(const LoadIndexDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.LoadIndexDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadIndexDataRequest::IsInitialized() const {
  if (has_task_info()) {
    if (!this->task_info_->IsInitialized()) return false;
  }
  return true;
}

void LoadIndexDataRequest::Swap(LoadIndexDataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadIndexDataRequest::InternalSwap(LoadIndexDataRequest* other) {
  using std::swap;
  swap(task_info_, other->task_info_);
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(partition_num_, other->partition_num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoadIndexDataRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExtractMultiIndexDataRequest::InitAsDefaultInstance() {
}
void ExtractMultiIndexDataRequest::clear_column_key() {
  column_key_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExtractMultiIndexDataRequest::kTidFieldNumber;
const int ExtractMultiIndexDataRequest::kPidFieldNumber;
const int ExtractMultiIndexDataRequest::kPartitionNumFieldNumber;
const int ExtractMultiIndexDataRequest::kColumnKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExtractMultiIndexDataRequest::ExtractMultiIndexDataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_ExtractMultiIndexDataRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.ExtractMultiIndexDataRequest)
}
ExtractMultiIndexDataRequest::ExtractMultiIndexDataRequest(const ExtractMultiIndexDataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      column_key_(from.column_key_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&partition_num_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(partition_num_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.ExtractMultiIndexDataRequest)
}

void ExtractMultiIndexDataRequest::SharedCtor() {
  ::memset(&tid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&partition_num_) -
      reinterpret_cast<char*>(&tid_)) + sizeof(partition_num_));
}

ExtractMultiIndexDataRequest::~ExtractMultiIndexDataRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.ExtractMultiIndexDataRequest)
  SharedDtor();
}

void ExtractMultiIndexDataRequest::SharedDtor() {
}

void ExtractMultiIndexDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExtractMultiIndexDataRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExtractMultiIndexDataRequest& ExtractMultiIndexDataRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_ExtractMultiIndexDataRequest.base);
  return *internal_default_instance();
}


void ExtractMultiIndexDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.ExtractMultiIndexDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  column_key_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&partition_num_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(partition_num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExtractMultiIndexDataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.ExtractMultiIndexDataRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 partition_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_partition_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &partition_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.common.ColumnKey column_key = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_column_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.ExtractMultiIndexDataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.ExtractMultiIndexDataRequest)
  return false;
#undef DO_
}

void ExtractMultiIndexDataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.ExtractMultiIndexDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional uint32 partition_num = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->partition_num(), output);
  }

  // repeated .openmldb.common.ColumnKey column_key = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->column_key_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->column_key(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.ExtractMultiIndexDataRequest)
}

::google::protobuf::uint8* ExtractMultiIndexDataRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.ExtractMultiIndexDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional uint32 partition_num = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->partition_num(), target);
  }

  // repeated .openmldb.common.ColumnKey column_key = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->column_key_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->column_key(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.ExtractMultiIndexDataRequest)
  return target;
}

size_t ExtractMultiIndexDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.ExtractMultiIndexDataRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.common.ColumnKey column_key = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->column_key_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->column_key(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional uint32 partition_num = 3;
    if (has_partition_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->partition_num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExtractMultiIndexDataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.ExtractMultiIndexDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExtractMultiIndexDataRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExtractMultiIndexDataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.ExtractMultiIndexDataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.ExtractMultiIndexDataRequest)
    MergeFrom(*source);
  }
}

void ExtractMultiIndexDataRequest::MergeFrom(const ExtractMultiIndexDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.ExtractMultiIndexDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  column_key_.MergeFrom(from.column_key_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000002u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000004u) {
      partition_num_ = from.partition_num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExtractMultiIndexDataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.ExtractMultiIndexDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtractMultiIndexDataRequest::CopyFrom(const ExtractMultiIndexDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.ExtractMultiIndexDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtractMultiIndexDataRequest::IsInitialized() const {
  return true;
}

void ExtractMultiIndexDataRequest::Swap(ExtractMultiIndexDataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExtractMultiIndexDataRequest::InternalSwap(ExtractMultiIndexDataRequest* other) {
  using std::swap;
  CastToBase(&column_key_)->InternalSwap(CastToBase(&other->column_key_));
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(partition_num_, other->partition_num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExtractMultiIndexDataRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExtractIndexDataRequest::InitAsDefaultInstance() {
  ::openmldb::api::_ExtractIndexDataRequest_default_instance_._instance.get_mutable()->column_key_ = const_cast< ::openmldb::common::ColumnKey*>(
      ::openmldb::common::ColumnKey::internal_default_instance());
  ::openmldb::api::_ExtractIndexDataRequest_default_instance_._instance.get_mutable()->task_info_ = const_cast< ::openmldb::api::TaskInfo*>(
      ::openmldb::api::TaskInfo::internal_default_instance());
}
void ExtractIndexDataRequest::clear_column_key() {
  if (column_key_ != NULL) column_key_->Clear();
  clear_has_column_key();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExtractIndexDataRequest::kTidFieldNumber;
const int ExtractIndexDataRequest::kPidFieldNumber;
const int ExtractIndexDataRequest::kPartitionNumFieldNumber;
const int ExtractIndexDataRequest::kIdxFieldNumber;
const int ExtractIndexDataRequest::kColumnKeyFieldNumber;
const int ExtractIndexDataRequest::kTaskInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExtractIndexDataRequest::ExtractIndexDataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_ExtractIndexDataRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.ExtractIndexDataRequest)
}
ExtractIndexDataRequest::ExtractIndexDataRequest(const ExtractIndexDataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_column_key()) {
    column_key_ = new ::openmldb::common::ColumnKey(*from.column_key_);
  } else {
    column_key_ = NULL;
  }
  if (from.has_task_info()) {
    task_info_ = new ::openmldb::api::TaskInfo(*from.task_info_);
  } else {
    task_info_ = NULL;
  }
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&idx_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(idx_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.ExtractIndexDataRequest)
}

void ExtractIndexDataRequest::SharedCtor() {
  ::memset(&column_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&idx_) -
      reinterpret_cast<char*>(&column_key_)) + sizeof(idx_));
}

ExtractIndexDataRequest::~ExtractIndexDataRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.ExtractIndexDataRequest)
  SharedDtor();
}

void ExtractIndexDataRequest::SharedDtor() {
  if (this != internal_default_instance()) delete column_key_;
  if (this != internal_default_instance()) delete task_info_;
}

void ExtractIndexDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExtractIndexDataRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExtractIndexDataRequest& ExtractIndexDataRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_ExtractIndexDataRequest.base);
  return *internal_default_instance();
}


void ExtractIndexDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.ExtractIndexDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(column_key_ != NULL);
      column_key_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(task_info_ != NULL);
      task_info_->Clear();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&idx_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(idx_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExtractIndexDataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.ExtractIndexDataRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 partition_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_partition_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &partition_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 idx = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.common.ColumnKey column_key = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_column_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.api.TaskInfo task_info = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_task_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.ExtractIndexDataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.ExtractIndexDataRequest)
  return false;
#undef DO_
}

void ExtractIndexDataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.ExtractIndexDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional uint32 partition_num = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->partition_num(), output);
  }

  // optional uint32 idx = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->idx(), output);
  }

  // optional .openmldb.common.ColumnKey column_key = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_column_key(), output);
  }

  // optional .openmldb.api.TaskInfo task_info = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_task_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.ExtractIndexDataRequest)
}

::google::protobuf::uint8* ExtractIndexDataRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.ExtractIndexDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional uint32 partition_num = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->partition_num(), target);
  }

  // optional uint32 idx = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->idx(), target);
  }

  // optional .openmldb.common.ColumnKey column_key = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_column_key(), deterministic, target);
  }

  // optional .openmldb.api.TaskInfo task_info = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_task_info(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.ExtractIndexDataRequest)
  return target;
}

size_t ExtractIndexDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.ExtractIndexDataRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional .openmldb.common.ColumnKey column_key = 5;
    if (has_column_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *column_key_);
    }

    // optional .openmldb.api.TaskInfo task_info = 6;
    if (has_task_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_info_);
    }

    // optional uint32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional uint32 partition_num = 3;
    if (has_partition_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->partition_num());
    }

    // optional uint32 idx = 4;
    if (has_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->idx());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExtractIndexDataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.ExtractIndexDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExtractIndexDataRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExtractIndexDataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.ExtractIndexDataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.ExtractIndexDataRequest)
    MergeFrom(*source);
  }
}

void ExtractIndexDataRequest::MergeFrom(const ExtractIndexDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.ExtractIndexDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_column_key()->::openmldb::common::ColumnKey::MergeFrom(from.column_key());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_task_info()->::openmldb::api::TaskInfo::MergeFrom(from.task_info());
    }
    if (cached_has_bits & 0x00000004u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000008u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000010u) {
      partition_num_ = from.partition_num_;
    }
    if (cached_has_bits & 0x00000020u) {
      idx_ = from.idx_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExtractIndexDataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.ExtractIndexDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtractIndexDataRequest::CopyFrom(const ExtractIndexDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.ExtractIndexDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtractIndexDataRequest::IsInitialized() const {
  if (has_task_info()) {
    if (!this->task_info_->IsInitialized()) return false;
  }
  return true;
}

void ExtractIndexDataRequest::Swap(ExtractIndexDataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExtractIndexDataRequest::InternalSwap(ExtractIndexDataRequest* other) {
  using std::swap;
  swap(column_key_, other->column_key_);
  swap(task_info_, other->task_info_);
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(partition_num_, other->partition_num_);
  swap(idx_, other->idx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExtractIndexDataRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Columns::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Columns::kNameFieldNumber;
const int Columns::kValueFieldNumber;
const int Columns::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Columns::Columns()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_Columns.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.Columns)
}
Columns::Columns(const Columns& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      name_(from.name_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.Columns)
}

void Columns::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 1;
}

Columns::~Columns() {
  // @@protoc_insertion_point(destructor:openmldb.api.Columns)
  SharedDtor();
}

void Columns::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Columns::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Columns::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Columns& Columns::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_Columns.base);
  return *internal_default_instance();
}


void Columns::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.Columns)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
    type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Columns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.Columns)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name(this->name_size() - 1).data(),
            static_cast<int>(this->name(this->name_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.Columns.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value = 2 [default = ""];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .openmldb.api.GetType type = 3 [default = kSubKeyEq];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::api::GetType_IsValid(value)) {
            set_type(static_cast< ::openmldb::api::GetType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.Columns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.Columns)
  return false;
#undef DO_
}

void Columns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.Columns)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string name = 1;
  for (int i = 0, n = this->name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name(i).data(), static_cast<int>(this->name(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.Columns.name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes value = 2 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  // optional .openmldb.api.GetType type = 3 [default = kSubKeyEq];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.Columns)
}

::google::protobuf::uint8* Columns::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.Columns)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string name = 1;
  for (int i = 0, n = this->name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name(i).data(), static_cast<int>(this->name(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.Columns.name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->name(i), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes value = 2 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  // optional .openmldb.api.GetType type = 3 [default = kSubKeyEq];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.Columns)
  return target;
}

size_t Columns::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.Columns)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string name = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->name_size());
  for (int i = 0, n = this->name_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->name(i));
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes value = 2 [default = ""];
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

    // optional .openmldb.api.GetType type = 3 [default = kSubKeyEq];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Columns::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.Columns)
  GOOGLE_DCHECK_NE(&from, this);
  const Columns* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Columns>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.Columns)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.Columns)
    MergeFrom(*source);
  }
}

void Columns::MergeFrom(const Columns& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.Columns)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  name_.MergeFrom(from.name_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Columns::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.Columns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Columns::CopyFrom(const Columns& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.Columns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Columns::IsInitialized() const {
  return true;
}

void Columns::Swap(Columns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Columns::InternalSwap(Columns* other) {
  using std::swap;
  name_.InternalSwap(CastToBase(&other->name_));
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Columns::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CancelOPRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelOPRequest::kOpIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelOPRequest::CancelOPRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_CancelOPRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.CancelOPRequest)
}
CancelOPRequest::CancelOPRequest(const CancelOPRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  op_id_ = from.op_id_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.CancelOPRequest)
}

void CancelOPRequest::SharedCtor() {
  op_id_ = GOOGLE_ULONGLONG(0);
}

CancelOPRequest::~CancelOPRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.CancelOPRequest)
  SharedDtor();
}

void CancelOPRequest::SharedDtor() {
}

void CancelOPRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CancelOPRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CancelOPRequest& CancelOPRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_CancelOPRequest.base);
  return *internal_default_instance();
}


void CancelOPRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.CancelOPRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  op_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CancelOPRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.CancelOPRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 op_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_op_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &op_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.CancelOPRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.CancelOPRequest)
  return false;
#undef DO_
}

void CancelOPRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.CancelOPRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 op_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->op_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.CancelOPRequest)
}

::google::protobuf::uint8* CancelOPRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.CancelOPRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 op_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->op_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.CancelOPRequest)
  return target;
}

size_t CancelOPRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.CancelOPRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint64 op_id = 1;
  if (has_op_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->op_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CancelOPRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.CancelOPRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelOPRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CancelOPRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.CancelOPRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.CancelOPRequest)
    MergeFrom(*source);
  }
}

void CancelOPRequest::MergeFrom(const CancelOPRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.CancelOPRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_op_id()) {
    set_op_id(from.op_id());
  }
}

void CancelOPRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.CancelOPRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelOPRequest::CopyFrom(const CancelOPRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.CancelOPRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelOPRequest::IsInitialized() const {
  return true;
}

void CancelOPRequest::Swap(CancelOPRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelOPRequest::InternalSwap(CancelOPRequest* other) {
  using std::swap;
  swap(op_id_, other->op_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CancelOPRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RealEndpointPair::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RealEndpointPair::kNameFieldNumber;
const int RealEndpointPair::kRealEndpointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RealEndpointPair::RealEndpointPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_RealEndpointPair.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.RealEndpointPair)
}
RealEndpointPair::RealEndpointPair(const RealEndpointPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  real_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_real_endpoint()) {
    real_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.real_endpoint_);
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.api.RealEndpointPair)
}

void RealEndpointPair::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  real_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RealEndpointPair::~RealEndpointPair() {
  // @@protoc_insertion_point(destructor:openmldb.api.RealEndpointPair)
  SharedDtor();
}

void RealEndpointPair::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  real_endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RealEndpointPair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RealEndpointPair::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RealEndpointPair& RealEndpointPair::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_RealEndpointPair.base);
  return *internal_default_instance();
}


void RealEndpointPair::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.RealEndpointPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      real_endpoint_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RealEndpointPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.RealEndpointPair)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.RealEndpointPair.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string real_endpoint = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_real_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->real_endpoint().data(), static_cast<int>(this->real_endpoint().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.RealEndpointPair.real_endpoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.RealEndpointPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.RealEndpointPair)
  return false;
#undef DO_
}

void RealEndpointPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.RealEndpointPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.RealEndpointPair.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string real_endpoint = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->real_endpoint().data(), static_cast<int>(this->real_endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.RealEndpointPair.real_endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->real_endpoint(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.RealEndpointPair)
}

::google::protobuf::uint8* RealEndpointPair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.RealEndpointPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.RealEndpointPair.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string real_endpoint = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->real_endpoint().data(), static_cast<int>(this->real_endpoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.RealEndpointPair.real_endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->real_endpoint(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.RealEndpointPair)
  return target;
}

size_t RealEndpointPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.RealEndpointPair)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string real_endpoint = 2;
    if (has_real_endpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->real_endpoint());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RealEndpointPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.RealEndpointPair)
  GOOGLE_DCHECK_NE(&from, this);
  const RealEndpointPair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RealEndpointPair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.RealEndpointPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.RealEndpointPair)
    MergeFrom(*source);
  }
}

void RealEndpointPair::MergeFrom(const RealEndpointPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.RealEndpointPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_real_endpoint();
      real_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.real_endpoint_);
    }
  }
}

void RealEndpointPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.RealEndpointPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RealEndpointPair::CopyFrom(const RealEndpointPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.RealEndpointPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RealEndpointPair::IsInitialized() const {
  return true;
}

void RealEndpointPair::Swap(RealEndpointPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RealEndpointPair::InternalSwap(RealEndpointPair* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  real_endpoint_.Swap(&other->real_endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RealEndpointPair::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateRealEndpointMapRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateRealEndpointMapRequest::kRealEndpointMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateRealEndpointMapRequest::UpdateRealEndpointMapRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_UpdateRealEndpointMapRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.UpdateRealEndpointMapRequest)
}
UpdateRealEndpointMapRequest::UpdateRealEndpointMapRequest(const UpdateRealEndpointMapRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      real_endpoint_map_(from.real_endpoint_map_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openmldb.api.UpdateRealEndpointMapRequest)
}

void UpdateRealEndpointMapRequest::SharedCtor() {
}

UpdateRealEndpointMapRequest::~UpdateRealEndpointMapRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.UpdateRealEndpointMapRequest)
  SharedDtor();
}

void UpdateRealEndpointMapRequest::SharedDtor() {
}

void UpdateRealEndpointMapRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateRealEndpointMapRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateRealEndpointMapRequest& UpdateRealEndpointMapRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_UpdateRealEndpointMapRequest.base);
  return *internal_default_instance();
}


void UpdateRealEndpointMapRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.UpdateRealEndpointMapRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  real_endpoint_map_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UpdateRealEndpointMapRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.UpdateRealEndpointMapRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openmldb.api.RealEndpointPair real_endpoint_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_real_endpoint_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.UpdateRealEndpointMapRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.UpdateRealEndpointMapRequest)
  return false;
#undef DO_
}

void UpdateRealEndpointMapRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.UpdateRealEndpointMapRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openmldb.api.RealEndpointPair real_endpoint_map = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->real_endpoint_map_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->real_endpoint_map(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.UpdateRealEndpointMapRequest)
}

::google::protobuf::uint8* UpdateRealEndpointMapRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.UpdateRealEndpointMapRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openmldb.api.RealEndpointPair real_endpoint_map = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->real_endpoint_map_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->real_endpoint_map(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.UpdateRealEndpointMapRequest)
  return target;
}

size_t UpdateRealEndpointMapRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.UpdateRealEndpointMapRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.api.RealEndpointPair real_endpoint_map = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->real_endpoint_map_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->real_endpoint_map(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateRealEndpointMapRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.UpdateRealEndpointMapRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateRealEndpointMapRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateRealEndpointMapRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.UpdateRealEndpointMapRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.UpdateRealEndpointMapRequest)
    MergeFrom(*source);
  }
}

void UpdateRealEndpointMapRequest::MergeFrom(const UpdateRealEndpointMapRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.UpdateRealEndpointMapRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  real_endpoint_map_.MergeFrom(from.real_endpoint_map_);
}

void UpdateRealEndpointMapRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.UpdateRealEndpointMapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateRealEndpointMapRequest::CopyFrom(const UpdateRealEndpointMapRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.UpdateRealEndpointMapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRealEndpointMapRequest::IsInitialized() const {
  return true;
}

void UpdateRealEndpointMapRequest::Swap(UpdateRealEndpointMapRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateRealEndpointMapRequest::InternalSwap(UpdateRealEndpointMapRequest* other) {
  using std::swap;
  CastToBase(&real_endpoint_map_)->InternalSwap(CastToBase(&other->real_endpoint_map_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateRealEndpointMapRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryRequest::kSqlFieldNumber;
const int QueryRequest::kDbFieldNumber;
const int QueryRequest::kIsBatchFieldNumber;
const int QueryRequest::kIsDebugFieldNumber;
const int QueryRequest::kSpNameFieldNumber;
const int QueryRequest::kIsProcedureFieldNumber;
const int QueryRequest::kTaskIdFieldNumber;
const int QueryRequest::kRowSizeFieldNumber;
const int QueryRequest::kRowSlicesFieldNumber;
const int QueryRequest::kParameterRowSizeFieldNumber;
const int QueryRequest::kParameterRowSlicesFieldNumber;
const int QueryRequest::kParameterTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryRequest::QueryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_QueryRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.QueryRequest)
}
QueryRequest::QueryRequest(const QueryRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      parameter_types_(from.parameter_types_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sql()) {
    sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  sp_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sp_name()) {
    sp_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sp_name_);
  }
  ::memcpy(&is_batch_, &from.is_batch_,
    static_cast<size_t>(reinterpret_cast<char*>(&parameter_row_slices_) -
    reinterpret_cast<char*>(&is_batch_)) + sizeof(parameter_row_slices_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.QueryRequest)
}

void QueryRequest::SharedCtor() {
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sp_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_batch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parameter_row_slices_) -
      reinterpret_cast<char*>(&is_batch_)) + sizeof(parameter_row_slices_));
}

QueryRequest::~QueryRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.QueryRequest)
  SharedDtor();
}

void QueryRequest::SharedDtor() {
  sql_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sp_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryRequest& QueryRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_QueryRequest.base);
  return *internal_default_instance();
}


void QueryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.QueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameter_types_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      sql_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      sp_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&is_batch_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&task_id_) -
        reinterpret_cast<char*>(&is_batch_)) + sizeof(task_id_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&row_slices_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&parameter_row_slices_) -
        reinterpret_cast<char*>(&row_slices_)) + sizeof(parameter_row_slices_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool QueryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.QueryRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sql = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sql()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sql().data(), static_cast<int>(this->sql().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.QueryRequest.sql");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.QueryRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_batch = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_is_batch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_batch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_debug = 4 [default = false];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_is_debug();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_debug_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sp_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sp_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sp_name().data(), static_cast<int>(this->sp_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.QueryRequest.sp_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_procedure = 6 [default = false];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_is_procedure();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_procedure_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 task_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_task_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 row_size = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_row_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &row_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 row_slices = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_row_slices();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &row_slices_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 parameter_row_size = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_parameter_row_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parameter_row_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 parameter_row_slices = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_parameter_row_slices();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parameter_row_slices_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.type.DataType parameter_types = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::openmldb::type::DataType_IsValid(value)) {
            add_parameter_types(static_cast< ::openmldb::type::DataType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                12, static_cast< ::google::protobuf::uint64>(value));
          }
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 12,
                 ::openmldb::type::DataType_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_parameter_types())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.QueryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.QueryRequest)
  return false;
#undef DO_
}

void QueryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.QueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string sql = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), static_cast<int>(this->sql().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.QueryRequest.sql");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sql(), output);
  }

  // optional string db = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.QueryRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->db(), output);
  }

  // optional bool is_batch = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_batch(), output);
  }

  // optional bool is_debug = 4 [default = false];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_debug(), output);
  }

  // optional string sp_name = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sp_name().data(), static_cast<int>(this->sp_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.QueryRequest.sp_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sp_name(), output);
  }

  // optional bool is_procedure = 6 [default = false];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_procedure(), output);
  }

  // optional uint64 task_id = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->task_id(), output);
  }

  // optional uint32 row_size = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->row_size(), output);
  }

  // optional uint32 row_slices = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->row_slices(), output);
  }

  // optional uint32 parameter_row_size = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->parameter_row_size(), output);
  }

  // optional uint32 parameter_row_slices = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->parameter_row_slices(), output);
  }

  // repeated .openmldb.type.DataType parameter_types = 12;
  for (int i = 0, n = this->parameter_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->parameter_types(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.QueryRequest)
}

::google::protobuf::uint8* QueryRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.QueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string sql = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), static_cast<int>(this->sql().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.QueryRequest.sql");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sql(), target);
  }

  // optional string db = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.QueryRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->db(), target);
  }

  // optional bool is_batch = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_batch(), target);
  }

  // optional bool is_debug = 4 [default = false];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_debug(), target);
  }

  // optional string sp_name = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sp_name().data(), static_cast<int>(this->sp_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.QueryRequest.sp_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->sp_name(), target);
  }

  // optional bool is_procedure = 6 [default = false];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_procedure(), target);
  }

  // optional uint64 task_id = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->task_id(), target);
  }

  // optional uint32 row_size = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->row_size(), target);
  }

  // optional uint32 row_slices = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->row_slices(), target);
  }

  // optional uint32 parameter_row_size = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->parameter_row_size(), target);
  }

  // optional uint32 parameter_row_slices = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->parameter_row_slices(), target);
  }

  // repeated .openmldb.type.DataType parameter_types = 12;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    12, this->parameter_types_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.QueryRequest)
  return target;
}

size_t QueryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.QueryRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.type.DataType parameter_types = 12;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->parameter_types_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->parameter_types(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string sql = 1;
    if (has_sql()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sql());
    }

    // optional string db = 2;
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional string sp_name = 5;
    if (has_sp_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sp_name());
    }

    // optional bool is_batch = 3;
    if (has_is_batch()) {
      total_size += 1 + 1;
    }

    // optional bool is_debug = 4 [default = false];
    if (has_is_debug()) {
      total_size += 1 + 1;
    }

    // optional bool is_procedure = 6 [default = false];
    if (has_is_procedure()) {
      total_size += 1 + 1;
    }

    // optional uint32 row_size = 8;
    if (has_row_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->row_size());
    }

    // optional uint64 task_id = 7;
    if (has_task_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->task_id());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional uint32 row_slices = 9;
    if (has_row_slices()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->row_slices());
    }

    // optional uint32 parameter_row_size = 10;
    if (has_parameter_row_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->parameter_row_size());
    }

    // optional uint32 parameter_row_slices = 11;
    if (has_parameter_row_slices()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->parameter_row_slices());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.QueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.QueryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.QueryRequest)
    MergeFrom(*source);
  }
}

void QueryRequest::MergeFrom(const QueryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.QueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parameter_types_.MergeFrom(from.parameter_types_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sql();
      sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_sp_name();
      sp_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sp_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      is_batch_ = from.is_batch_;
    }
    if (cached_has_bits & 0x00000010u) {
      is_debug_ = from.is_debug_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_procedure_ = from.is_procedure_;
    }
    if (cached_has_bits & 0x00000040u) {
      row_size_ = from.row_size_;
    }
    if (cached_has_bits & 0x00000080u) {
      task_id_ = from.task_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      row_slices_ = from.row_slices_;
    }
    if (cached_has_bits & 0x00000200u) {
      parameter_row_size_ = from.parameter_row_size_;
    }
    if (cached_has_bits & 0x00000400u) {
      parameter_row_slices_ = from.parameter_row_slices_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void QueryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.QueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryRequest::CopyFrom(const QueryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.QueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryRequest::IsInitialized() const {
  return true;
}

void QueryRequest::Swap(QueryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryRequest::InternalSwap(QueryRequest* other) {
  using std::swap;
  parameter_types_.InternalSwap(&other->parameter_types_);
  sql_.Swap(&other->sql_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sp_name_.Swap(&other->sp_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_batch_, other->is_batch_);
  swap(is_debug_, other->is_debug_);
  swap(is_procedure_, other->is_procedure_);
  swap(row_size_, other->row_size_);
  swap(task_id_, other->task_id_);
  swap(row_slices_, other->row_slices_);
  swap(parameter_row_size_, other->parameter_row_size_);
  swap(parameter_row_slices_, other->parameter_row_slices_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryResponse::kCodeFieldNumber;
const int QueryResponse::kMsgFieldNumber;
const int QueryResponse::kCountFieldNumber;
const int QueryResponse::kByteSizeFieldNumber;
const int QueryResponse::kSchemaFieldNumber;
const int QueryResponse::kRowSlicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryResponse::QueryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_QueryResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.QueryResponse)
}
QueryResponse::QueryResponse(const QueryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  schema_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_schema()) {
    schema_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.schema_);
  }
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&row_slices_) -
    reinterpret_cast<char*>(&code_)) + sizeof(row_slices_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.QueryResponse)
}

void QueryResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  schema_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&row_slices_) -
      reinterpret_cast<char*>(&code_)) + sizeof(row_slices_));
}

QueryResponse::~QueryResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.QueryResponse)
  SharedDtor();
}

void QueryResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  schema_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryResponse& QueryResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_QueryResponse.base);
  return *internal_default_instance();
}


void QueryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.QueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      msg_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      schema_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&code_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&row_slices_) -
        reinterpret_cast<char*>(&code_)) + sizeof(row_slices_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool QueryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.QueryResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.QueryResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 byte_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_byte_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &byte_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes schema = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_schema()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 row_slices = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_row_slices();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &row_slices_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.QueryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.QueryResponse)
  return false;
#undef DO_
}

void QueryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.QueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.QueryResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // optional uint32 count = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->count(), output);
  }

  // optional uint32 byte_size = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->byte_size(), output);
  }

  // optional bytes schema = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->schema(), output);
  }

  // optional uint32 row_slices = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->row_slices(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.QueryResponse)
}

::google::protobuf::uint8* QueryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.QueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.QueryResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // optional uint32 count = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->count(), target);
  }

  // optional uint32 byte_size = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->byte_size(), target);
  }

  // optional bytes schema = 5;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->schema(), target);
  }

  // optional uint32 row_slices = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->row_slices(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.QueryResponse)
  return target;
}

size_t QueryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.QueryResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional bytes schema = 5;
    if (has_schema()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->schema());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

    // optional uint32 count = 3;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

    // optional uint32 byte_size = 4;
    if (has_byte_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->byte_size());
    }

    // optional uint32 row_slices = 6;
    if (has_row_slices()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->row_slices());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.QueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.QueryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.QueryResponse)
    MergeFrom(*source);
  }
}

void QueryResponse::MergeFrom(const QueryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.QueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_schema();
      schema_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.schema_);
    }
    if (cached_has_bits & 0x00000004u) {
      code_ = from.code_;
    }
    if (cached_has_bits & 0x00000008u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000010u) {
      byte_size_ = from.byte_size_;
    }
    if (cached_has_bits & 0x00000020u) {
      row_slices_ = from.row_slices_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void QueryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.QueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryResponse::CopyFrom(const QueryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.QueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryResponse::IsInitialized() const {
  return true;
}

void QueryResponse::Swap(QueryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryResponse::InternalSwap(QueryResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  schema_.Swap(&other->schema_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(count_, other->count_);
  swap(byte_size_, other->byte_size_);
  swap(row_slices_, other->row_slices_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SQLBatchRequestQueryRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SQLBatchRequestQueryRequest::kSqlFieldNumber;
const int SQLBatchRequestQueryRequest::kDbFieldNumber;
const int SQLBatchRequestQueryRequest::kCommonColumnIndicesFieldNumber;
const int SQLBatchRequestQueryRequest::kIsDebugFieldNumber;
const int SQLBatchRequestQueryRequest::kSpNameFieldNumber;
const int SQLBatchRequestQueryRequest::kIsProcedureFieldNumber;
const int SQLBatchRequestQueryRequest::kRowSizesFieldNumber;
const int SQLBatchRequestQueryRequest::kCommonSlicesFieldNumber;
const int SQLBatchRequestQueryRequest::kNonCommonSlicesFieldNumber;
const int SQLBatchRequestQueryRequest::kTaskIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SQLBatchRequestQueryRequest::SQLBatchRequestQueryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_SQLBatchRequestQueryRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.SQLBatchRequestQueryRequest)
}
SQLBatchRequestQueryRequest::SQLBatchRequestQueryRequest(const SQLBatchRequestQueryRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      common_column_indices_(from.common_column_indices_),
      row_sizes_(from.row_sizes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sql()) {
    sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  sp_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sp_name()) {
    sp_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sp_name_);
  }
  ::memcpy(&is_debug_, &from.is_debug_,
    static_cast<size_t>(reinterpret_cast<char*>(&non_common_slices_) -
    reinterpret_cast<char*>(&is_debug_)) + sizeof(non_common_slices_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.SQLBatchRequestQueryRequest)
}

void SQLBatchRequestQueryRequest::SharedCtor() {
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sp_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_debug_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&non_common_slices_) -
      reinterpret_cast<char*>(&is_debug_)) + sizeof(non_common_slices_));
}

SQLBatchRequestQueryRequest::~SQLBatchRequestQueryRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.SQLBatchRequestQueryRequest)
  SharedDtor();
}

void SQLBatchRequestQueryRequest::SharedDtor() {
  sql_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sp_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SQLBatchRequestQueryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SQLBatchRequestQueryRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SQLBatchRequestQueryRequest& SQLBatchRequestQueryRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_SQLBatchRequestQueryRequest.base);
  return *internal_default_instance();
}


void SQLBatchRequestQueryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.SQLBatchRequestQueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  common_column_indices_.Clear();
  row_sizes_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      sql_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      sp_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&is_debug_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&non_common_slices_) -
        reinterpret_cast<char*>(&is_debug_)) + sizeof(non_common_slices_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SQLBatchRequestQueryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.SQLBatchRequestQueryRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sql = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sql()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sql().data(), static_cast<int>(this->sql().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.SQLBatchRequestQueryRequest.sql");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.SQLBatchRequestQueryRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 common_column_indices = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24u, input, this->mutable_common_column_indices())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_common_column_indices())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_debug = 4 [default = false];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_is_debug();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_debug_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sp_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sp_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sp_name().data(), static_cast<int>(this->sp_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.SQLBatchRequestQueryRequest.sp_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_procedure = 6 [default = false];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_is_procedure();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_procedure_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 row_sizes = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 56u, input, this->mutable_row_sizes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_row_sizes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 common_slices = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_common_slices();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &common_slices_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 non_common_slices = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_non_common_slices();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &non_common_slices_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 task_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_task_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.SQLBatchRequestQueryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.SQLBatchRequestQueryRequest)
  return false;
#undef DO_
}

void SQLBatchRequestQueryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.SQLBatchRequestQueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string sql = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), static_cast<int>(this->sql().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.SQLBatchRequestQueryRequest.sql");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sql(), output);
  }

  // optional string db = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.SQLBatchRequestQueryRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->db(), output);
  }

  // repeated uint32 common_column_indices = 3;
  for (int i = 0, n = this->common_column_indices_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->common_column_indices(i), output);
  }

  // optional bool is_debug = 4 [default = false];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_debug(), output);
  }

  // optional string sp_name = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sp_name().data(), static_cast<int>(this->sp_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.SQLBatchRequestQueryRequest.sp_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sp_name(), output);
  }

  // optional bool is_procedure = 6 [default = false];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_procedure(), output);
  }

  // repeated uint32 row_sizes = 7;
  for (int i = 0, n = this->row_sizes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      7, this->row_sizes(i), output);
  }

  // optional uint32 common_slices = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->common_slices(), output);
  }

  // optional uint32 non_common_slices = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->non_common_slices(), output);
  }

  // optional uint64 task_id = 10;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->task_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.SQLBatchRequestQueryRequest)
}

::google::protobuf::uint8* SQLBatchRequestQueryRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.SQLBatchRequestQueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string sql = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), static_cast<int>(this->sql().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.SQLBatchRequestQueryRequest.sql");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sql(), target);
  }

  // optional string db = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.SQLBatchRequestQueryRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->db(), target);
  }

  // repeated uint32 common_column_indices = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(3, this->common_column_indices_, target);

  // optional bool is_debug = 4 [default = false];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_debug(), target);
  }

  // optional string sp_name = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sp_name().data(), static_cast<int>(this->sp_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.SQLBatchRequestQueryRequest.sp_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->sp_name(), target);
  }

  // optional bool is_procedure = 6 [default = false];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_procedure(), target);
  }

  // repeated uint32 row_sizes = 7;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(7, this->row_sizes_, target);

  // optional uint32 common_slices = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->common_slices(), target);
  }

  // optional uint32 non_common_slices = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->non_common_slices(), target);
  }

  // optional uint64 task_id = 10;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->task_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.SQLBatchRequestQueryRequest)
  return target;
}

size_t SQLBatchRequestQueryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.SQLBatchRequestQueryRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 common_column_indices = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->common_column_indices_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->common_column_indices_size());
    total_size += data_size;
  }

  // repeated uint32 row_sizes = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->row_sizes_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->row_sizes_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string sql = 1;
    if (has_sql()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sql());
    }

    // optional string db = 2;
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional string sp_name = 5;
    if (has_sp_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sp_name());
    }

    // optional bool is_debug = 4 [default = false];
    if (has_is_debug()) {
      total_size += 1 + 1;
    }

    // optional bool is_procedure = 6 [default = false];
    if (has_is_procedure()) {
      total_size += 1 + 1;
    }

    // optional uint32 common_slices = 8;
    if (has_common_slices()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->common_slices());
    }

    // optional uint64 task_id = 10;
    if (has_task_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->task_id());
    }

    // optional uint32 non_common_slices = 9;
    if (has_non_common_slices()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->non_common_slices());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SQLBatchRequestQueryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.SQLBatchRequestQueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SQLBatchRequestQueryRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SQLBatchRequestQueryRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.SQLBatchRequestQueryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.SQLBatchRequestQueryRequest)
    MergeFrom(*source);
  }
}

void SQLBatchRequestQueryRequest::MergeFrom(const SQLBatchRequestQueryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.SQLBatchRequestQueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  common_column_indices_.MergeFrom(from.common_column_indices_);
  row_sizes_.MergeFrom(from.row_sizes_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sql();
      sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_sp_name();
      sp_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sp_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      is_debug_ = from.is_debug_;
    }
    if (cached_has_bits & 0x00000010u) {
      is_procedure_ = from.is_procedure_;
    }
    if (cached_has_bits & 0x00000020u) {
      common_slices_ = from.common_slices_;
    }
    if (cached_has_bits & 0x00000040u) {
      task_id_ = from.task_id_;
    }
    if (cached_has_bits & 0x00000080u) {
      non_common_slices_ = from.non_common_slices_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SQLBatchRequestQueryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.SQLBatchRequestQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SQLBatchRequestQueryRequest::CopyFrom(const SQLBatchRequestQueryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.SQLBatchRequestQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SQLBatchRequestQueryRequest::IsInitialized() const {
  return true;
}

void SQLBatchRequestQueryRequest::Swap(SQLBatchRequestQueryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SQLBatchRequestQueryRequest::InternalSwap(SQLBatchRequestQueryRequest* other) {
  using std::swap;
  common_column_indices_.InternalSwap(&other->common_column_indices_);
  row_sizes_.InternalSwap(&other->row_sizes_);
  sql_.Swap(&other->sql_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sp_name_.Swap(&other->sp_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_debug_, other->is_debug_);
  swap(is_procedure_, other->is_procedure_);
  swap(common_slices_, other->common_slices_);
  swap(task_id_, other->task_id_);
  swap(non_common_slices_, other->non_common_slices_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SQLBatchRequestQueryRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SQLBatchRequestQueryResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SQLBatchRequestQueryResponse::kCodeFieldNumber;
const int SQLBatchRequestQueryResponse::kMsgFieldNumber;
const int SQLBatchRequestQueryResponse::kCountFieldNumber;
const int SQLBatchRequestQueryResponse::kSchemaFieldNumber;
const int SQLBatchRequestQueryResponse::kCommonColumnIndicesFieldNumber;
const int SQLBatchRequestQueryResponse::kRowSizesFieldNumber;
const int SQLBatchRequestQueryResponse::kCommonSlicesFieldNumber;
const int SQLBatchRequestQueryResponse::kNonCommonSlicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SQLBatchRequestQueryResponse::SQLBatchRequestQueryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_SQLBatchRequestQueryResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.SQLBatchRequestQueryResponse)
}
SQLBatchRequestQueryResponse::SQLBatchRequestQueryResponse(const SQLBatchRequestQueryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      common_column_indices_(from.common_column_indices_),
      row_sizes_(from.row_sizes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  schema_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_schema()) {
    schema_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.schema_);
  }
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&non_common_slices_) -
    reinterpret_cast<char*>(&code_)) + sizeof(non_common_slices_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.SQLBatchRequestQueryResponse)
}

void SQLBatchRequestQueryResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  schema_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&non_common_slices_) -
      reinterpret_cast<char*>(&code_)) + sizeof(non_common_slices_));
}

SQLBatchRequestQueryResponse::~SQLBatchRequestQueryResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.SQLBatchRequestQueryResponse)
  SharedDtor();
}

void SQLBatchRequestQueryResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  schema_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SQLBatchRequestQueryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SQLBatchRequestQueryResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SQLBatchRequestQueryResponse& SQLBatchRequestQueryResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_SQLBatchRequestQueryResponse.base);
  return *internal_default_instance();
}


void SQLBatchRequestQueryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.SQLBatchRequestQueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  common_column_indices_.Clear();
  row_sizes_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      msg_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      schema_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&code_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&non_common_slices_) -
        reinterpret_cast<char*>(&code_)) + sizeof(non_common_slices_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SQLBatchRequestQueryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.SQLBatchRequestQueryResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.SQLBatchRequestQueryResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes schema = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_schema()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 common_column_indices = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40u, input, this->mutable_common_column_indices())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_common_column_indices())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 row_sizes = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 48u, input, this->mutable_row_sizes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_row_sizes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 common_slices = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_common_slices();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &common_slices_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 non_common_slices = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_non_common_slices();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &non_common_slices_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.SQLBatchRequestQueryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.SQLBatchRequestQueryResponse)
  return false;
#undef DO_
}

void SQLBatchRequestQueryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.SQLBatchRequestQueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.SQLBatchRequestQueryResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // optional uint32 count = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->count(), output);
  }

  // optional bytes schema = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->schema(), output);
  }

  // repeated uint32 common_column_indices = 5;
  for (int i = 0, n = this->common_column_indices_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->common_column_indices(i), output);
  }

  // repeated uint32 row_sizes = 6;
  for (int i = 0, n = this->row_sizes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      6, this->row_sizes(i), output);
  }

  // optional uint32 common_slices = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->common_slices(), output);
  }

  // optional uint32 non_common_slices = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->non_common_slices(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.SQLBatchRequestQueryResponse)
}

::google::protobuf::uint8* SQLBatchRequestQueryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.SQLBatchRequestQueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.SQLBatchRequestQueryResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // optional uint32 count = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->count(), target);
  }

  // optional bytes schema = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->schema(), target);
  }

  // repeated uint32 common_column_indices = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(5, this->common_column_indices_, target);

  // repeated uint32 row_sizes = 6;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(6, this->row_sizes_, target);

  // optional uint32 common_slices = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->common_slices(), target);
  }

  // optional uint32 non_common_slices = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->non_common_slices(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.SQLBatchRequestQueryResponse)
  return target;
}

size_t SQLBatchRequestQueryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.SQLBatchRequestQueryResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 common_column_indices = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->common_column_indices_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->common_column_indices_size());
    total_size += data_size;
  }

  // repeated uint32 row_sizes = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->row_sizes_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->row_sizes_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional bytes schema = 4;
    if (has_schema()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->schema());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

    // optional uint32 count = 3;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

    // optional uint32 common_slices = 7;
    if (has_common_slices()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->common_slices());
    }

    // optional uint32 non_common_slices = 8;
    if (has_non_common_slices()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->non_common_slices());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SQLBatchRequestQueryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.SQLBatchRequestQueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SQLBatchRequestQueryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SQLBatchRequestQueryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.SQLBatchRequestQueryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.SQLBatchRequestQueryResponse)
    MergeFrom(*source);
  }
}

void SQLBatchRequestQueryResponse::MergeFrom(const SQLBatchRequestQueryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.SQLBatchRequestQueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  common_column_indices_.MergeFrom(from.common_column_indices_);
  row_sizes_.MergeFrom(from.row_sizes_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_schema();
      schema_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.schema_);
    }
    if (cached_has_bits & 0x00000004u) {
      code_ = from.code_;
    }
    if (cached_has_bits & 0x00000008u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000010u) {
      common_slices_ = from.common_slices_;
    }
    if (cached_has_bits & 0x00000020u) {
      non_common_slices_ = from.non_common_slices_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SQLBatchRequestQueryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.SQLBatchRequestQueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SQLBatchRequestQueryResponse::CopyFrom(const SQLBatchRequestQueryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.SQLBatchRequestQueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SQLBatchRequestQueryResponse::IsInitialized() const {
  return true;
}

void SQLBatchRequestQueryResponse::Swap(SQLBatchRequestQueryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SQLBatchRequestQueryResponse::InternalSwap(SQLBatchRequestQueryResponse* other) {
  using std::swap;
  common_column_indices_.InternalSwap(&other->common_column_indices_);
  row_sizes_.InternalSwap(&other->row_sizes_);
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  schema_.Swap(&other->schema_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(count_, other->count_);
  swap(common_slices_, other->common_slices_);
  swap(non_common_slices_, other->non_common_slices_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SQLBatchRequestQueryResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExplainRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExplainRequest::kSqlFieldNumber;
const int ExplainRequest::kDbFieldNumber;
const int ExplainRequest::kIsBatchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExplainRequest::ExplainRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_ExplainRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.ExplainRequest)
}
ExplainRequest::ExplainRequest(const ExplainRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sql()) {
    sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
  }
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_db()) {
    db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
  }
  is_batch_ = from.is_batch_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.ExplainRequest)
}

void ExplainRequest::SharedCtor() {
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_batch_ = false;
}

ExplainRequest::~ExplainRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.ExplainRequest)
  SharedDtor();
}

void ExplainRequest::SharedDtor() {
  sql_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExplainRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExplainRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExplainRequest& ExplainRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_ExplainRequest.base);
  return *internal_default_instance();
}


void ExplainRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.ExplainRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      sql_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      db_.ClearNonDefaultToEmptyNoArena();
    }
  }
  is_batch_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExplainRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.ExplainRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sql = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sql()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sql().data(), static_cast<int>(this->sql().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.ExplainRequest.sql");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string db = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->db().data(), static_cast<int>(this->db().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.ExplainRequest.db");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_batch = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_is_batch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_batch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.ExplainRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.ExplainRequest)
  return false;
#undef DO_
}

void ExplainRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.ExplainRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string sql = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), static_cast<int>(this->sql().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ExplainRequest.sql");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sql(), output);
  }

  // optional string db = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ExplainRequest.db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->db(), output);
  }

  // optional bool is_batch = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_batch(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.ExplainRequest)
}

::google::protobuf::uint8* ExplainRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.ExplainRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string sql = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), static_cast<int>(this->sql().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ExplainRequest.sql");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sql(), target);
  }

  // optional string db = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->db().data(), static_cast<int>(this->db().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ExplainRequest.db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->db(), target);
  }

  // optional bool is_batch = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_batch(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.ExplainRequest)
  return target;
}

size_t ExplainRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.ExplainRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string sql = 1;
    if (has_sql()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sql());
    }

    // optional string db = 2;
    if (has_db()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->db());
    }

    // optional bool is_batch = 3;
    if (has_is_batch()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExplainRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.ExplainRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExplainRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExplainRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.ExplainRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.ExplainRequest)
    MergeFrom(*source);
  }
}

void ExplainRequest::MergeFrom(const ExplainRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.ExplainRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sql();
      sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_db();
      db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_);
    }
    if (cached_has_bits & 0x00000004u) {
      is_batch_ = from.is_batch_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExplainRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.ExplainRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExplainRequest::CopyFrom(const ExplainRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.ExplainRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExplainRequest::IsInitialized() const {
  return true;
}

void ExplainRequest::Swap(ExplainRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExplainRequest::InternalSwap(ExplainRequest* other) {
  using std::swap;
  sql_.Swap(&other->sql_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  db_.Swap(&other->db_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_batch_, other->is_batch_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExplainRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExplainResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExplainResponse::kInputSchemaFieldNumber;
const int ExplainResponse::kLogicalPlanFieldNumber;
const int ExplainResponse::kPhysicalPlanFieldNumber;
const int ExplainResponse::kIrFieldNumber;
const int ExplainResponse::kOutputSchemaFieldNumber;
const int ExplainResponse::kIsBatchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExplainResponse::ExplainResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_ExplainResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.ExplainResponse)
}
ExplainResponse::ExplainResponse(const ExplainResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  input_schema_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_input_schema()) {
    input_schema_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_schema_);
  }
  logical_plan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_logical_plan()) {
    logical_plan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logical_plan_);
  }
  physical_plan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_physical_plan()) {
    physical_plan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.physical_plan_);
  }
  ir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ir()) {
    ir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ir_);
  }
  output_schema_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_output_schema()) {
    output_schema_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_schema_);
  }
  is_batch_ = from.is_batch_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.ExplainResponse)
}

void ExplainResponse::SharedCtor() {
  input_schema_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logical_plan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  physical_plan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_schema_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_batch_ = false;
}

ExplainResponse::~ExplainResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.ExplainResponse)
  SharedDtor();
}

void ExplainResponse::SharedDtor() {
  input_schema_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logical_plan_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  physical_plan_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_schema_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExplainResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExplainResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExplainResponse& ExplainResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_ExplainResponse.base);
  return *internal_default_instance();
}


void ExplainResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.ExplainResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      input_schema_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      logical_plan_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      physical_plan_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      ir_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      output_schema_.ClearNonDefaultToEmptyNoArena();
    }
  }
  is_batch_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExplainResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.ExplainResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes input_schema = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_input_schema()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string logical_plan = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logical_plan()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->logical_plan().data(), static_cast<int>(this->logical_plan().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.ExplainResponse.logical_plan");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string physical_plan = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_physical_plan()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->physical_plan().data(), static_cast<int>(this->physical_plan().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.ExplainResponse.physical_plan");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ir = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ir()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ir().data(), static_cast<int>(this->ir().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.ExplainResponse.ir");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes output_schema = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_output_schema()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_batch = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_is_batch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_batch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.ExplainResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.ExplainResponse)
  return false;
#undef DO_
}

void ExplainResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.ExplainResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes input_schema = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->input_schema(), output);
  }

  // optional string logical_plan = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->logical_plan().data(), static_cast<int>(this->logical_plan().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ExplainResponse.logical_plan");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->logical_plan(), output);
  }

  // optional string physical_plan = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->physical_plan().data(), static_cast<int>(this->physical_plan().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ExplainResponse.physical_plan");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->physical_plan(), output);
  }

  // optional string ir = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ir().data(), static_cast<int>(this->ir().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ExplainResponse.ir");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->ir(), output);
  }

  // optional bytes output_schema = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->output_schema(), output);
  }

  // optional bool is_batch = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_batch(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.ExplainResponse)
}

::google::protobuf::uint8* ExplainResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.ExplainResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes input_schema = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->input_schema(), target);
  }

  // optional string logical_plan = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->logical_plan().data(), static_cast<int>(this->logical_plan().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ExplainResponse.logical_plan");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->logical_plan(), target);
  }

  // optional string physical_plan = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->physical_plan().data(), static_cast<int>(this->physical_plan().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ExplainResponse.physical_plan");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->physical_plan(), target);
  }

  // optional string ir = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ir().data(), static_cast<int>(this->ir().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.ExplainResponse.ir");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->ir(), target);
  }

  // optional bytes output_schema = 6;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->output_schema(), target);
  }

  // optional bool is_batch = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_batch(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.ExplainResponse)
  return target;
}

size_t ExplainResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.ExplainResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes input_schema = 1;
    if (has_input_schema()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->input_schema());
    }

    // optional string logical_plan = 3;
    if (has_logical_plan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->logical_plan());
    }

    // optional string physical_plan = 4;
    if (has_physical_plan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->physical_plan());
    }

    // optional string ir = 5;
    if (has_ir()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ir());
    }

    // optional bytes output_schema = 6;
    if (has_output_schema()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->output_schema());
    }

    // optional bool is_batch = 7;
    if (has_is_batch()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExplainResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.ExplainResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ExplainResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExplainResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.ExplainResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.ExplainResponse)
    MergeFrom(*source);
  }
}

void ExplainResponse::MergeFrom(const ExplainResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.ExplainResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_input_schema();
      input_schema_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_schema_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_logical_plan();
      logical_plan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logical_plan_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_physical_plan();
      physical_plan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.physical_plan_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_ir();
      ir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ir_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_output_schema();
      output_schema_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_schema_);
    }
    if (cached_has_bits & 0x00000020u) {
      is_batch_ = from.is_batch_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExplainResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.ExplainResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExplainResponse::CopyFrom(const ExplainResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.ExplainResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExplainResponse::IsInitialized() const {
  return true;
}

void ExplainResponse::Swap(ExplainResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExplainResponse::InternalSwap(ExplainResponse* other) {
  using std::swap;
  input_schema_.Swap(&other->input_schema_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  logical_plan_.Swap(&other->logical_plan_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  physical_plan_.Swap(&other->physical_plan_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ir_.Swap(&other->ir_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  output_schema_.Swap(&other->output_schema_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_batch_, other->is_batch_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExplainResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RefreshRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RefreshRequest::kTidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RefreshRequest::RefreshRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_RefreshRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.RefreshRequest)
}
RefreshRequest::RefreshRequest(const RefreshRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tid_ = from.tid_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.RefreshRequest)
}

void RefreshRequest::SharedCtor() {
  tid_ = 0u;
}

RefreshRequest::~RefreshRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.RefreshRequest)
  SharedDtor();
}

void RefreshRequest::SharedDtor() {
}

void RefreshRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RefreshRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RefreshRequest& RefreshRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_RefreshRequest.base);
  return *internal_default_instance();
}


void RefreshRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.RefreshRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RefreshRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.RefreshRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.RefreshRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.RefreshRequest)
  return false;
#undef DO_
}

void RefreshRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.RefreshRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.RefreshRequest)
}

::google::protobuf::uint8* RefreshRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.RefreshRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.RefreshRequest)
  return target;
}

size_t RefreshRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.RefreshRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 tid = 1;
  if (has_tid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RefreshRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.RefreshRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RefreshRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RefreshRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.RefreshRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.RefreshRequest)
    MergeFrom(*source);
  }
}

void RefreshRequest::MergeFrom(const RefreshRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.RefreshRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_tid()) {
    set_tid(from.tid());
  }
}

void RefreshRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.RefreshRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshRequest::CopyFrom(const RefreshRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.RefreshRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshRequest::IsInitialized() const {
  return true;
}

void RefreshRequest::Swap(RefreshRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RefreshRequest::InternalSwap(RefreshRequest* other) {
  using std::swap;
  swap(tid_, other->tid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RefreshRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetCatalogRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetCatalogRequest::GetCatalogRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_GetCatalogRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.GetCatalogRequest)
}
GetCatalogRequest::GetCatalogRequest(const GetCatalogRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openmldb.api.GetCatalogRequest)
}

void GetCatalogRequest::SharedCtor() {
}

GetCatalogRequest::~GetCatalogRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.GetCatalogRequest)
  SharedDtor();
}

void GetCatalogRequest::SharedDtor() {
}

void GetCatalogRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetCatalogRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetCatalogRequest& GetCatalogRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_GetCatalogRequest.base);
  return *internal_default_instance();
}


void GetCatalogRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.GetCatalogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetCatalogRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.GetCatalogRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.GetCatalogRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.GetCatalogRequest)
  return false;
#undef DO_
}

void GetCatalogRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.GetCatalogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.GetCatalogRequest)
}

::google::protobuf::uint8* GetCatalogRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.GetCatalogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.GetCatalogRequest)
  return target;
}

size_t GetCatalogRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.GetCatalogRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCatalogRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.GetCatalogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCatalogRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetCatalogRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.GetCatalogRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.GetCatalogRequest)
    MergeFrom(*source);
  }
}

void GetCatalogRequest::MergeFrom(const GetCatalogRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.GetCatalogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetCatalogRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.GetCatalogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCatalogRequest::CopyFrom(const GetCatalogRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.GetCatalogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCatalogRequest::IsInitialized() const {
  return true;
}

void GetCatalogRequest::Swap(GetCatalogRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetCatalogRequest::InternalSwap(GetCatalogRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetCatalogRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetCatalogResponse::InitAsDefaultInstance() {
  ::openmldb::api::_GetCatalogResponse_default_instance_._instance.get_mutable()->catalog_ = const_cast< ::openmldb::common::CatalogInfo*>(
      ::openmldb::common::CatalogInfo::internal_default_instance());
}
void GetCatalogResponse::clear_catalog() {
  if (catalog_ != NULL) catalog_->Clear();
  clear_has_catalog();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetCatalogResponse::kCatalogFieldNumber;
const int GetCatalogResponse::kCodeFieldNumber;
const int GetCatalogResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetCatalogResponse::GetCatalogResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_GetCatalogResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.GetCatalogResponse)
}
GetCatalogResponse::GetCatalogResponse(const GetCatalogResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_catalog()) {
    catalog_ = new ::openmldb::common::CatalogInfo(*from.catalog_);
  } else {
    catalog_ = NULL;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.GetCatalogResponse)
}

void GetCatalogResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&catalog_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&catalog_)) + sizeof(code_));
}

GetCatalogResponse::~GetCatalogResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.GetCatalogResponse)
  SharedDtor();
}

void GetCatalogResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete catalog_;
}

void GetCatalogResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetCatalogResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetCatalogResponse& GetCatalogResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_GetCatalogResponse.base);
  return *internal_default_instance();
}


void GetCatalogResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.GetCatalogResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      msg_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(catalog_ != NULL);
      catalog_->Clear();
    }
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetCatalogResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.GetCatalogResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .openmldb.common.CatalogInfo catalog = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_catalog()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.GetCatalogResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.GetCatalogResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.GetCatalogResponse)
  return false;
#undef DO_
}

void GetCatalogResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.GetCatalogResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.common.CatalogInfo catalog = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_catalog(), output);
  }

  // optional int32 code = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->code(), output);
  }

  // optional string msg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.GetCatalogResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.GetCatalogResponse)
}

::google::protobuf::uint8* GetCatalogResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.GetCatalogResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.common.CatalogInfo catalog = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_catalog(), deterministic, target);
  }

  // optional int32 code = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->code(), target);
  }

  // optional string msg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.GetCatalogResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.GetCatalogResponse)
  return target;
}

size_t GetCatalogResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.GetCatalogResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string msg = 3;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional .openmldb.common.CatalogInfo catalog = 1;
    if (has_catalog()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *catalog_);
    }

    // optional int32 code = 2;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCatalogResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.GetCatalogResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCatalogResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetCatalogResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.GetCatalogResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.GetCatalogResponse)
    MergeFrom(*source);
  }
}

void GetCatalogResponse::MergeFrom(const GetCatalogResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.GetCatalogResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_catalog()->::openmldb::common::CatalogInfo::MergeFrom(from.catalog());
    }
    if (cached_has_bits & 0x00000004u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetCatalogResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.GetCatalogResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCatalogResponse::CopyFrom(const GetCatalogResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.GetCatalogResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCatalogResponse::IsInitialized() const {
  return true;
}

void GetCatalogResponse::Swap(GetCatalogResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetCatalogResponse::InternalSwap(GetCatalogResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(catalog_, other->catalog_);
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetCatalogResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataBlockInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataBlockInfo::kRefCntFieldNumber;
const int DataBlockInfo::kOffsetFieldNumber;
const int DataBlockInfo::kLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataBlockInfo::DataBlockInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_DataBlockInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.DataBlockInfo)
}
DataBlockInfo::DataBlockInfo(const DataBlockInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&length_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(length_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.DataBlockInfo)
}

void DataBlockInfo::SharedCtor() {
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&length_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(length_));
}

DataBlockInfo::~DataBlockInfo() {
  // @@protoc_insertion_point(destructor:openmldb.api.DataBlockInfo)
  SharedDtor();
}

void DataBlockInfo::SharedDtor() {
}

void DataBlockInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataBlockInfo::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataBlockInfo& DataBlockInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_DataBlockInfo.base);
  return *internal_default_instance();
}


void DataBlockInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.DataBlockInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&length_) -
        reinterpret_cast<char*>(&offset_)) + sizeof(length_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DataBlockInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.DataBlockInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ref_cnt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ref_cnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ref_cnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 length = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_length();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.DataBlockInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.DataBlockInfo)
  return false;
#undef DO_
}

void DataBlockInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.DataBlockInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ref_cnt = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ref_cnt(), output);
  }

  // optional uint64 offset = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->offset(), output);
  }

  // optional uint32 length = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->length(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.DataBlockInfo)
}

::google::protobuf::uint8* DataBlockInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.DataBlockInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ref_cnt = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ref_cnt(), target);
  }

  // optional uint64 offset = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->offset(), target);
  }

  // optional uint32 length = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->length(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.DataBlockInfo)
  return target;
}

size_t DataBlockInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.DataBlockInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 offset = 2;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->offset());
    }

    // optional uint32 ref_cnt = 1;
    if (has_ref_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ref_cnt());
    }

    // optional uint32 length = 3;
    if (has_length()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->length());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataBlockInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.DataBlockInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DataBlockInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataBlockInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.DataBlockInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.DataBlockInfo)
    MergeFrom(*source);
  }
}

void DataBlockInfo::MergeFrom(const DataBlockInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.DataBlockInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000002u) {
      ref_cnt_ = from.ref_cnt_;
    }
    if (cached_has_bits & 0x00000004u) {
      length_ = from.length_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DataBlockInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.DataBlockInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataBlockInfo::CopyFrom(const DataBlockInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.DataBlockInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataBlockInfo::IsInitialized() const {
  return true;
}

void DataBlockInfo::Swap(DataBlockInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataBlockInfo::InternalSwap(DataBlockInfo* other) {
  using std::swap;
  swap(offset_, other->offset_);
  swap(ref_cnt_, other->ref_cnt_);
  swap(length_, other->length_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataBlockInfo::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BinlogInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BinlogInfo::kDimensionsFieldNumber;
const int BinlogInfo::kTsDimensionsFieldNumber;
const int BinlogInfo::kTimeFieldNumber;
const int BinlogInfo::kBlockIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BinlogInfo::BinlogInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_BinlogInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.BinlogInfo)
}
BinlogInfo::BinlogInfo(const BinlogInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      dimensions_(from.dimensions_),
      ts_dimensions_(from.ts_dimensions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&block_id_) -
    reinterpret_cast<char*>(&time_)) + sizeof(block_id_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.BinlogInfo)
}

void BinlogInfo::SharedCtor() {
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&block_id_) -
      reinterpret_cast<char*>(&time_)) + sizeof(block_id_));
}

BinlogInfo::~BinlogInfo() {
  // @@protoc_insertion_point(destructor:openmldb.api.BinlogInfo)
  SharedDtor();
}

void BinlogInfo::SharedDtor() {
}

void BinlogInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BinlogInfo::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BinlogInfo& BinlogInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_BinlogInfo.base);
  return *internal_default_instance();
}


void BinlogInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.BinlogInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dimensions_.Clear();
  ts_dimensions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&block_id_) -
        reinterpret_cast<char*>(&time_)) + sizeof(block_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BinlogInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.BinlogInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openmldb.api.Dimension dimensions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dimensions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.api.TSDimension ts_dimensions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ts_dimensions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 block_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_block_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &block_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.BinlogInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.BinlogInfo)
  return false;
#undef DO_
}

void BinlogInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.BinlogInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openmldb.api.Dimension dimensions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dimensions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->dimensions(static_cast<int>(i)),
      output);
  }

  // repeated .openmldb.api.TSDimension ts_dimensions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ts_dimensions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->ts_dimensions(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int64 time = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->time(), output);
  }

  // optional uint32 block_id = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->block_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.BinlogInfo)
}

::google::protobuf::uint8* BinlogInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.BinlogInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openmldb.api.Dimension dimensions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dimensions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->dimensions(static_cast<int>(i)), deterministic, target);
  }

  // repeated .openmldb.api.TSDimension ts_dimensions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ts_dimensions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->ts_dimensions(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int64 time = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->time(), target);
  }

  // optional uint32 block_id = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->block_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.BinlogInfo)
  return target;
}

size_t BinlogInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.BinlogInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.api.Dimension dimensions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->dimensions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dimensions(static_cast<int>(i)));
    }
  }

  // repeated .openmldb.api.TSDimension ts_dimensions = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->ts_dimensions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ts_dimensions(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 time = 3;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->time());
    }

    // optional uint32 block_id = 4;
    if (has_block_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->block_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BinlogInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.BinlogInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BinlogInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BinlogInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.BinlogInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.BinlogInfo)
    MergeFrom(*source);
  }
}

void BinlogInfo::MergeFrom(const BinlogInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.BinlogInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dimensions_.MergeFrom(from.dimensions_);
  ts_dimensions_.MergeFrom(from.ts_dimensions_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      time_ = from.time_;
    }
    if (cached_has_bits & 0x00000002u) {
      block_id_ = from.block_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BinlogInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.BinlogInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BinlogInfo::CopyFrom(const BinlogInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.BinlogInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BinlogInfo::IsInitialized() const {
  return true;
}

void BinlogInfo::Swap(BinlogInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BinlogInfo::InternalSwap(BinlogInfo* other) {
  using std::swap;
  CastToBase(&dimensions_)->InternalSwap(CastToBase(&other->dimensions_));
  CastToBase(&ts_dimensions_)->InternalSwap(CastToBase(&other->ts_dimensions_));
  swap(time_, other->time_);
  swap(block_id_, other->block_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BinlogInfo::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Segment_KeyEntries_KeyEntry_TimeEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Segment_KeyEntries_KeyEntry_TimeEntry::kTimeFieldNumber;
const int Segment_KeyEntries_KeyEntry_TimeEntry::kBlockIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Segment_KeyEntries_KeyEntry_TimeEntry::Segment_KeyEntries_KeyEntry_TimeEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_Segment_KeyEntries_KeyEntry_TimeEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry)
}
Segment_KeyEntries_KeyEntry_TimeEntry::Segment_KeyEntries_KeyEntry_TimeEntry(const Segment_KeyEntries_KeyEntry_TimeEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&block_id_) -
    reinterpret_cast<char*>(&time_)) + sizeof(block_id_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry)
}

void Segment_KeyEntries_KeyEntry_TimeEntry::SharedCtor() {
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&block_id_) -
      reinterpret_cast<char*>(&time_)) + sizeof(block_id_));
}

Segment_KeyEntries_KeyEntry_TimeEntry::~Segment_KeyEntries_KeyEntry_TimeEntry() {
  // @@protoc_insertion_point(destructor:openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry)
  SharedDtor();
}

void Segment_KeyEntries_KeyEntry_TimeEntry::SharedDtor() {
}

void Segment_KeyEntries_KeyEntry_TimeEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Segment_KeyEntries_KeyEntry_TimeEntry::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Segment_KeyEntries_KeyEntry_TimeEntry& Segment_KeyEntries_KeyEntry_TimeEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_Segment_KeyEntries_KeyEntry_TimeEntry.base);
  return *internal_default_instance();
}


void Segment_KeyEntries_KeyEntry_TimeEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&block_id_) -
        reinterpret_cast<char*>(&time_)) + sizeof(block_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Segment_KeyEntries_KeyEntry_TimeEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 block_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_block_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &block_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry)
  return false;
#undef DO_
}

void Segment_KeyEntries_KeyEntry_TimeEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 time = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->time(), output);
  }

  // optional uint32 block_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->block_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry)
}

::google::protobuf::uint8* Segment_KeyEntries_KeyEntry_TimeEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 time = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->time(), target);
  }

  // optional uint32 block_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->block_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry)
  return target;
}

size_t Segment_KeyEntries_KeyEntry_TimeEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 time = 1;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->time());
    }

    // optional uint32 block_id = 2;
    if (has_block_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->block_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Segment_KeyEntries_KeyEntry_TimeEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const Segment_KeyEntries_KeyEntry_TimeEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Segment_KeyEntries_KeyEntry_TimeEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry)
    MergeFrom(*source);
  }
}

void Segment_KeyEntries_KeyEntry_TimeEntry::MergeFrom(const Segment_KeyEntries_KeyEntry_TimeEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      time_ = from.time_;
    }
    if (cached_has_bits & 0x00000002u) {
      block_id_ = from.block_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Segment_KeyEntries_KeyEntry_TimeEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Segment_KeyEntries_KeyEntry_TimeEntry::CopyFrom(const Segment_KeyEntries_KeyEntry_TimeEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Segment_KeyEntries_KeyEntry_TimeEntry::IsInitialized() const {
  return true;
}

void Segment_KeyEntries_KeyEntry_TimeEntry::Swap(Segment_KeyEntries_KeyEntry_TimeEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Segment_KeyEntries_KeyEntry_TimeEntry::InternalSwap(Segment_KeyEntries_KeyEntry_TimeEntry* other) {
  using std::swap;
  swap(time_, other->time_);
  swap(block_id_, other->block_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Segment_KeyEntries_KeyEntry_TimeEntry::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Segment_KeyEntries_KeyEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Segment_KeyEntries_KeyEntry::kKeyEntryIdFieldNumber;
const int Segment_KeyEntries_KeyEntry::kTimeEntryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Segment_KeyEntries_KeyEntry::Segment_KeyEntries_KeyEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_Segment_KeyEntries_KeyEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.Segment.KeyEntries.KeyEntry)
}
Segment_KeyEntries_KeyEntry::Segment_KeyEntries_KeyEntry(const Segment_KeyEntries_KeyEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      time_entry_(from.time_entry_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_entry_id_ = from.key_entry_id_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.Segment.KeyEntries.KeyEntry)
}

void Segment_KeyEntries_KeyEntry::SharedCtor() {
  key_entry_id_ = 0u;
}

Segment_KeyEntries_KeyEntry::~Segment_KeyEntries_KeyEntry() {
  // @@protoc_insertion_point(destructor:openmldb.api.Segment.KeyEntries.KeyEntry)
  SharedDtor();
}

void Segment_KeyEntries_KeyEntry::SharedDtor() {
}

void Segment_KeyEntries_KeyEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Segment_KeyEntries_KeyEntry::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Segment_KeyEntries_KeyEntry& Segment_KeyEntries_KeyEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_Segment_KeyEntries_KeyEntry.base);
  return *internal_default_instance();
}


void Segment_KeyEntries_KeyEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.Segment.KeyEntries.KeyEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  time_entry_.Clear();
  key_entry_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Segment_KeyEntries_KeyEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.Segment.KeyEntries.KeyEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 key_entry_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_key_entry_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &key_entry_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry time_entry = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_time_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.Segment.KeyEntries.KeyEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.Segment.KeyEntries.KeyEntry)
  return false;
#undef DO_
}

void Segment_KeyEntries_KeyEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.Segment.KeyEntries.KeyEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 key_entry_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->key_entry_id(), output);
  }

  // repeated .openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry time_entry = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->time_entry_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->time_entry(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.Segment.KeyEntries.KeyEntry)
}

::google::protobuf::uint8* Segment_KeyEntries_KeyEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.Segment.KeyEntries.KeyEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 key_entry_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->key_entry_id(), target);
  }

  // repeated .openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry time_entry = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->time_entry_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->time_entry(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.Segment.KeyEntries.KeyEntry)
  return target;
}

size_t Segment_KeyEntries_KeyEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.Segment.KeyEntries.KeyEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.api.Segment.KeyEntries.KeyEntry.TimeEntry time_entry = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->time_entry_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->time_entry(static_cast<int>(i)));
    }
  }

  // optional uint32 key_entry_id = 1;
  if (has_key_entry_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->key_entry_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Segment_KeyEntries_KeyEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.Segment.KeyEntries.KeyEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const Segment_KeyEntries_KeyEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Segment_KeyEntries_KeyEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.Segment.KeyEntries.KeyEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.Segment.KeyEntries.KeyEntry)
    MergeFrom(*source);
  }
}

void Segment_KeyEntries_KeyEntry::MergeFrom(const Segment_KeyEntries_KeyEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.Segment.KeyEntries.KeyEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  time_entry_.MergeFrom(from.time_entry_);
  if (from.has_key_entry_id()) {
    set_key_entry_id(from.key_entry_id());
  }
}

void Segment_KeyEntries_KeyEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.Segment.KeyEntries.KeyEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Segment_KeyEntries_KeyEntry::CopyFrom(const Segment_KeyEntries_KeyEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.Segment.KeyEntries.KeyEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Segment_KeyEntries_KeyEntry::IsInitialized() const {
  return true;
}

void Segment_KeyEntries_KeyEntry::Swap(Segment_KeyEntries_KeyEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Segment_KeyEntries_KeyEntry::InternalSwap(Segment_KeyEntries_KeyEntry* other) {
  using std::swap;
  CastToBase(&time_entry_)->InternalSwap(CastToBase(&other->time_entry_));
  swap(key_entry_id_, other->key_entry_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Segment_KeyEntries_KeyEntry::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Segment_KeyEntries::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Segment_KeyEntries::kKeyFieldNumber;
const int Segment_KeyEntries::kKeyEntryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Segment_KeyEntries::Segment_KeyEntries()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_Segment_KeyEntries.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.Segment.KeyEntries)
}
Segment_KeyEntries::Segment_KeyEntries(const Segment_KeyEntries& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      key_entry_(from.key_entry_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.api.Segment.KeyEntries)
}

void Segment_KeyEntries::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Segment_KeyEntries::~Segment_KeyEntries() {
  // @@protoc_insertion_point(destructor:openmldb.api.Segment.KeyEntries)
  SharedDtor();
}

void Segment_KeyEntries::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Segment_KeyEntries::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Segment_KeyEntries::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Segment_KeyEntries& Segment_KeyEntries::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_Segment_KeyEntries.base);
  return *internal_default_instance();
}


void Segment_KeyEntries::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.Segment.KeyEntries)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_entry_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    key_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Segment_KeyEntries::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.Segment.KeyEntries)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.api.Segment.KeyEntries.KeyEntry key_entry = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_key_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.Segment.KeyEntries)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.Segment.KeyEntries)
  return false;
#undef DO_
}

void Segment_KeyEntries::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.Segment.KeyEntries)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // repeated .openmldb.api.Segment.KeyEntries.KeyEntry key_entry = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->key_entry_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->key_entry(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.Segment.KeyEntries)
}

::google::protobuf::uint8* Segment_KeyEntries::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.Segment.KeyEntries)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // repeated .openmldb.api.Segment.KeyEntries.KeyEntry key_entry = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->key_entry_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->key_entry(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.Segment.KeyEntries)
  return target;
}

size_t Segment_KeyEntries::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.Segment.KeyEntries)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.api.Segment.KeyEntries.KeyEntry key_entry = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->key_entry_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->key_entry(static_cast<int>(i)));
    }
  }

  // optional bytes key = 1;
  if (has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Segment_KeyEntries::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.Segment.KeyEntries)
  GOOGLE_DCHECK_NE(&from, this);
  const Segment_KeyEntries* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Segment_KeyEntries>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.Segment.KeyEntries)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.Segment.KeyEntries)
    MergeFrom(*source);
  }
}

void Segment_KeyEntries::MergeFrom(const Segment_KeyEntries& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.Segment.KeyEntries)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  key_entry_.MergeFrom(from.key_entry_);
  if (from.has_key()) {
    set_has_key();
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void Segment_KeyEntries::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.Segment.KeyEntries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Segment_KeyEntries::CopyFrom(const Segment_KeyEntries& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.Segment.KeyEntries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Segment_KeyEntries::IsInitialized() const {
  return true;
}

void Segment_KeyEntries::Swap(Segment_KeyEntries* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Segment_KeyEntries::InternalSwap(Segment_KeyEntries* other) {
  using std::swap;
  CastToBase(&key_entry_)->InternalSwap(CastToBase(&other->key_entry_));
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Segment_KeyEntries::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Segment::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Segment::kIdFieldNumber;
const int Segment::kKeyEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Segment::Segment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_Segment.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.Segment)
}
Segment::Segment(const Segment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      key_entries_(from.key_entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.Segment)
}

void Segment::SharedCtor() {
  id_ = 0u;
}

Segment::~Segment() {
  // @@protoc_insertion_point(destructor:openmldb.api.Segment)
  SharedDtor();
}

void Segment::SharedDtor() {
}

void Segment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Segment::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Segment& Segment::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_Segment.base);
  return *internal_default_instance();
}


void Segment::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.Segment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_entries_.Clear();
  id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Segment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.Segment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.api.Segment.KeyEntries key_entries = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_key_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.Segment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.Segment)
  return false;
#undef DO_
}

void Segment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.Segment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // repeated .openmldb.api.Segment.KeyEntries key_entries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->key_entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->key_entries(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.Segment)
}

::google::protobuf::uint8* Segment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.Segment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // repeated .openmldb.api.Segment.KeyEntries key_entries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->key_entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->key_entries(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.Segment)
  return target;
}

size_t Segment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.Segment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.api.Segment.KeyEntries key_entries = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->key_entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->key_entries(static_cast<int>(i)));
    }
  }

  // optional uint32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Segment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.Segment)
  GOOGLE_DCHECK_NE(&from, this);
  const Segment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Segment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.Segment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.Segment)
    MergeFrom(*source);
  }
}

void Segment::MergeFrom(const Segment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.Segment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  key_entries_.MergeFrom(from.key_entries_);
  if (from.has_id()) {
    set_id(from.id());
  }
}

void Segment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.Segment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Segment::CopyFrom(const Segment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.Segment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Segment::IsInitialized() const {
  return true;
}

void Segment::Swap(Segment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Segment::InternalSwap(Segment* other) {
  using std::swap;
  CastToBase(&key_entries_)->InternalSwap(CastToBase(&other->key_entries_));
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Segment::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BulkLoadIndex::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BulkLoadIndex::kInnerIndexIdFieldNumber;
const int BulkLoadIndex::kSegmentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BulkLoadIndex::BulkLoadIndex()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_BulkLoadIndex.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.BulkLoadIndex)
}
BulkLoadIndex::BulkLoadIndex(const BulkLoadIndex& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      segment_(from.segment_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  inner_index_id_ = from.inner_index_id_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.BulkLoadIndex)
}

void BulkLoadIndex::SharedCtor() {
  inner_index_id_ = 0u;
}

BulkLoadIndex::~BulkLoadIndex() {
  // @@protoc_insertion_point(destructor:openmldb.api.BulkLoadIndex)
  SharedDtor();
}

void BulkLoadIndex::SharedDtor() {
}

void BulkLoadIndex::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BulkLoadIndex::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BulkLoadIndex& BulkLoadIndex::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_BulkLoadIndex.base);
  return *internal_default_instance();
}


void BulkLoadIndex::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.BulkLoadIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  segment_.Clear();
  inner_index_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BulkLoadIndex::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.BulkLoadIndex)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 inner_index_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_inner_index_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &inner_index_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.api.Segment segment = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_segment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.BulkLoadIndex)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.BulkLoadIndex)
  return false;
#undef DO_
}

void BulkLoadIndex::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.BulkLoadIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 inner_index_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->inner_index_id(), output);
  }

  // repeated .openmldb.api.Segment segment = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->segment_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->segment(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.BulkLoadIndex)
}

::google::protobuf::uint8* BulkLoadIndex::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.BulkLoadIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 inner_index_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->inner_index_id(), target);
  }

  // repeated .openmldb.api.Segment segment = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->segment_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->segment(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.BulkLoadIndex)
  return target;
}

size_t BulkLoadIndex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.BulkLoadIndex)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.api.Segment segment = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->segment_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->segment(static_cast<int>(i)));
    }
  }

  // optional uint32 inner_index_id = 1;
  if (has_inner_index_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->inner_index_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BulkLoadIndex::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.BulkLoadIndex)
  GOOGLE_DCHECK_NE(&from, this);
  const BulkLoadIndex* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BulkLoadIndex>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.BulkLoadIndex)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.BulkLoadIndex)
    MergeFrom(*source);
  }
}

void BulkLoadIndex::MergeFrom(const BulkLoadIndex& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.BulkLoadIndex)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  segment_.MergeFrom(from.segment_);
  if (from.has_inner_index_id()) {
    set_inner_index_id(from.inner_index_id());
  }
}

void BulkLoadIndex::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.BulkLoadIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulkLoadIndex::CopyFrom(const BulkLoadIndex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.BulkLoadIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulkLoadIndex::IsInitialized() const {
  return true;
}

void BulkLoadIndex::Swap(BulkLoadIndex* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BulkLoadIndex::InternalSwap(BulkLoadIndex* other) {
  using std::swap;
  CastToBase(&segment_)->InternalSwap(CastToBase(&other->segment_));
  swap(inner_index_id_, other->inner_index_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BulkLoadIndex::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BulkLoadRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BulkLoadRequest::kTidFieldNumber;
const int BulkLoadRequest::kPidFieldNumber;
const int BulkLoadRequest::kPartIdFieldNumber;
const int BulkLoadRequest::kBlockInfoFieldNumber;
const int BulkLoadRequest::kBinlogInfoFieldNumber;
const int BulkLoadRequest::kIndexRegionFieldNumber;
const int BulkLoadRequest::kEofFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BulkLoadRequest::BulkLoadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_BulkLoadRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.BulkLoadRequest)
}
BulkLoadRequest::BulkLoadRequest(const BulkLoadRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      block_info_(from.block_info_),
      binlog_info_(from.binlog_info_),
      index_region_(from.index_region_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&eof_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(eof_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.BulkLoadRequest)
}

void BulkLoadRequest::SharedCtor() {
  ::memset(&tid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&eof_) -
      reinterpret_cast<char*>(&tid_)) + sizeof(eof_));
}

BulkLoadRequest::~BulkLoadRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.BulkLoadRequest)
  SharedDtor();
}

void BulkLoadRequest::SharedDtor() {
}

void BulkLoadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BulkLoadRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BulkLoadRequest& BulkLoadRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_BulkLoadRequest.base);
  return *internal_default_instance();
}


void BulkLoadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.BulkLoadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  block_info_.Clear();
  binlog_info_.Clear();
  index_region_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&eof_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(eof_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BulkLoadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.BulkLoadRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 part_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_part_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &part_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.api.DataBlockInfo block_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_block_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.api.BinlogInfo binlog_info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_binlog_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.api.BulkLoadIndex index_region = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_index_region()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool eof = 7 [default = false];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_eof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &eof_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.BulkLoadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.BulkLoadRequest)
  return false;
#undef DO_
}

void BulkLoadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.BulkLoadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional int32 part_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->part_id(), output);
  }

  // repeated .openmldb.api.DataBlockInfo block_info = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->block_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->block_info(static_cast<int>(i)),
      output);
  }

  // repeated .openmldb.api.BinlogInfo binlog_info = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->binlog_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->binlog_info(static_cast<int>(i)),
      output);
  }

  // repeated .openmldb.api.BulkLoadIndex index_region = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->index_region_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->index_region(static_cast<int>(i)),
      output);
  }

  // optional bool eof = 7 [default = false];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->eof(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.BulkLoadRequest)
}

::google::protobuf::uint8* BulkLoadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.BulkLoadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional int32 part_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->part_id(), target);
  }

  // repeated .openmldb.api.DataBlockInfo block_info = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->block_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->block_info(static_cast<int>(i)), deterministic, target);
  }

  // repeated .openmldb.api.BinlogInfo binlog_info = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->binlog_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->binlog_info(static_cast<int>(i)), deterministic, target);
  }

  // repeated .openmldb.api.BulkLoadIndex index_region = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->index_region_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->index_region(static_cast<int>(i)), deterministic, target);
  }

  // optional bool eof = 7 [default = false];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->eof(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.BulkLoadRequest)
  return target;
}

size_t BulkLoadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.BulkLoadRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.api.DataBlockInfo block_info = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->block_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->block_info(static_cast<int>(i)));
    }
  }

  // repeated .openmldb.api.BinlogInfo binlog_info = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->binlog_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->binlog_info(static_cast<int>(i)));
    }
  }

  // repeated .openmldb.api.BulkLoadIndex index_region = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->index_region_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->index_region(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional int32 part_id = 3;
    if (has_part_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->part_id());
    }

    // optional bool eof = 7 [default = false];
    if (has_eof()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BulkLoadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.BulkLoadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BulkLoadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BulkLoadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.BulkLoadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.BulkLoadRequest)
    MergeFrom(*source);
  }
}

void BulkLoadRequest::MergeFrom(const BulkLoadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.BulkLoadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  block_info_.MergeFrom(from.block_info_);
  binlog_info_.MergeFrom(from.binlog_info_);
  index_region_.MergeFrom(from.index_region_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000002u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000004u) {
      part_id_ = from.part_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      eof_ = from.eof_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BulkLoadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.BulkLoadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulkLoadRequest::CopyFrom(const BulkLoadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.BulkLoadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulkLoadRequest::IsInitialized() const {
  return true;
}

void BulkLoadRequest::Swap(BulkLoadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BulkLoadRequest::InternalSwap(BulkLoadRequest* other) {
  using std::swap;
  CastToBase(&block_info_)->InternalSwap(CastToBase(&other->block_info_));
  CastToBase(&binlog_info_)->InternalSwap(CastToBase(&other->binlog_info_));
  CastToBase(&index_region_)->InternalSwap(CastToBase(&other->index_region_));
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(part_id_, other->part_id_);
  swap(eof_, other->eof_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BulkLoadRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BulkLoadInfoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BulkLoadInfoRequest::kTidFieldNumber;
const int BulkLoadInfoRequest::kPidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BulkLoadInfoRequest::BulkLoadInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_BulkLoadInfoRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.BulkLoadInfoRequest)
}
BulkLoadInfoRequest::BulkLoadInfoRequest(const BulkLoadInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pid_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.BulkLoadInfoRequest)
}

void BulkLoadInfoRequest::SharedCtor() {
  ::memset(&tid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
}

BulkLoadInfoRequest::~BulkLoadInfoRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.BulkLoadInfoRequest)
  SharedDtor();
}

void BulkLoadInfoRequest::SharedDtor() {
}

void BulkLoadInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BulkLoadInfoRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BulkLoadInfoRequest& BulkLoadInfoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_BulkLoadInfoRequest.base);
  return *internal_default_instance();
}


void BulkLoadInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.BulkLoadInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pid_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(pid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BulkLoadInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.BulkLoadInfoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.BulkLoadInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.BulkLoadInfoRequest)
  return false;
#undef DO_
}

void BulkLoadInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.BulkLoadInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.BulkLoadInfoRequest)
}

::google::protobuf::uint8* BulkLoadInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.BulkLoadInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.BulkLoadInfoRequest)
  return target;
}

size_t BulkLoadInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.BulkLoadInfoRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BulkLoadInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.BulkLoadInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BulkLoadInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BulkLoadInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.BulkLoadInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.BulkLoadInfoRequest)
    MergeFrom(*source);
  }
}

void BulkLoadInfoRequest::MergeFrom(const BulkLoadInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.BulkLoadInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000002u) {
      pid_ = from.pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BulkLoadInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.BulkLoadInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulkLoadInfoRequest::CopyFrom(const BulkLoadInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.BulkLoadInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulkLoadInfoRequest::IsInitialized() const {
  return true;
}

void BulkLoadInfoRequest::Swap(BulkLoadInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BulkLoadInfoRequest::InternalSwap(BulkLoadInfoRequest* other) {
  using std::swap;
  swap(tid_, other->tid_);
  swap(pid_, other->pid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BulkLoadInfoRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BulkLoadInfoResponse_InnerIndexSt_IndexDef::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BulkLoadInfoResponse_InnerIndexSt_IndexDef::kTsIdxFieldNumber;
const int BulkLoadInfoResponse_InnerIndexSt_IndexDef::kIsReadyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BulkLoadInfoResponse_InnerIndexSt_IndexDef::BulkLoadInfoResponse_InnerIndexSt_IndexDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_BulkLoadInfoResponse_InnerIndexSt_IndexDef.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef)
}
BulkLoadInfoResponse_InnerIndexSt_IndexDef::BulkLoadInfoResponse_InnerIndexSt_IndexDef(const BulkLoadInfoResponse_InnerIndexSt_IndexDef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_ready_, &from.is_ready_,
    static_cast<size_t>(reinterpret_cast<char*>(&ts_idx_) -
    reinterpret_cast<char*>(&is_ready_)) + sizeof(ts_idx_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef)
}

void BulkLoadInfoResponse_InnerIndexSt_IndexDef::SharedCtor() {
  is_ready_ = false;
  ts_idx_ = -1;
}

BulkLoadInfoResponse_InnerIndexSt_IndexDef::~BulkLoadInfoResponse_InnerIndexSt_IndexDef() {
  // @@protoc_insertion_point(destructor:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef)
  SharedDtor();
}

void BulkLoadInfoResponse_InnerIndexSt_IndexDef::SharedDtor() {
}

void BulkLoadInfoResponse_InnerIndexSt_IndexDef::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BulkLoadInfoResponse_InnerIndexSt_IndexDef::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BulkLoadInfoResponse_InnerIndexSt_IndexDef& BulkLoadInfoResponse_InnerIndexSt_IndexDef::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_BulkLoadInfoResponse_InnerIndexSt_IndexDef.base);
  return *internal_default_instance();
}


void BulkLoadInfoResponse_InnerIndexSt_IndexDef::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    is_ready_ = false;
    ts_idx_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BulkLoadInfoResponse_InnerIndexSt_IndexDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ts_idx = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ts_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ts_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_ready = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_is_ready();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_ready_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef)
  return false;
#undef DO_
}

void BulkLoadInfoResponse_InnerIndexSt_IndexDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 ts_idx = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ts_idx(), output);
  }

  // optional bool is_ready = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_ready(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef)
}

::google::protobuf::uint8* BulkLoadInfoResponse_InnerIndexSt_IndexDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 ts_idx = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ts_idx(), target);
  }

  // optional bool is_ready = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_ready(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef)
  return target;
}

size_t BulkLoadInfoResponse_InnerIndexSt_IndexDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bool is_ready = 2;
    if (has_is_ready()) {
      total_size += 1 + 1;
    }

    // optional int32 ts_idx = 1 [default = -1];
    if (has_ts_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ts_idx());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BulkLoadInfoResponse_InnerIndexSt_IndexDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef)
  GOOGLE_DCHECK_NE(&from, this);
  const BulkLoadInfoResponse_InnerIndexSt_IndexDef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BulkLoadInfoResponse_InnerIndexSt_IndexDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef)
    MergeFrom(*source);
  }
}

void BulkLoadInfoResponse_InnerIndexSt_IndexDef::MergeFrom(const BulkLoadInfoResponse_InnerIndexSt_IndexDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      is_ready_ = from.is_ready_;
    }
    if (cached_has_bits & 0x00000002u) {
      ts_idx_ = from.ts_idx_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BulkLoadInfoResponse_InnerIndexSt_IndexDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulkLoadInfoResponse_InnerIndexSt_IndexDef::CopyFrom(const BulkLoadInfoResponse_InnerIndexSt_IndexDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulkLoadInfoResponse_InnerIndexSt_IndexDef::IsInitialized() const {
  return true;
}

void BulkLoadInfoResponse_InnerIndexSt_IndexDef::Swap(BulkLoadInfoResponse_InnerIndexSt_IndexDef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BulkLoadInfoResponse_InnerIndexSt_IndexDef::InternalSwap(BulkLoadInfoResponse_InnerIndexSt_IndexDef* other) {
  using std::swap;
  swap(is_ready_, other->is_ready_);
  swap(ts_idx_, other->ts_idx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BulkLoadInfoResponse_InnerIndexSt_IndexDef::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BulkLoadInfoResponse_InnerIndexSt::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BulkLoadInfoResponse_InnerIndexSt::kIndexDefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BulkLoadInfoResponse_InnerIndexSt::BulkLoadInfoResponse_InnerIndexSt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_BulkLoadInfoResponse_InnerIndexSt.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.BulkLoadInfoResponse.InnerIndexSt)
}
BulkLoadInfoResponse_InnerIndexSt::BulkLoadInfoResponse_InnerIndexSt(const BulkLoadInfoResponse_InnerIndexSt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      index_def_(from.index_def_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openmldb.api.BulkLoadInfoResponse.InnerIndexSt)
}

void BulkLoadInfoResponse_InnerIndexSt::SharedCtor() {
}

BulkLoadInfoResponse_InnerIndexSt::~BulkLoadInfoResponse_InnerIndexSt() {
  // @@protoc_insertion_point(destructor:openmldb.api.BulkLoadInfoResponse.InnerIndexSt)
  SharedDtor();
}

void BulkLoadInfoResponse_InnerIndexSt::SharedDtor() {
}

void BulkLoadInfoResponse_InnerIndexSt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BulkLoadInfoResponse_InnerIndexSt::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BulkLoadInfoResponse_InnerIndexSt& BulkLoadInfoResponse_InnerIndexSt::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_BulkLoadInfoResponse_InnerIndexSt.base);
  return *internal_default_instance();
}


void BulkLoadInfoResponse_InnerIndexSt::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.BulkLoadInfoResponse.InnerIndexSt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_def_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BulkLoadInfoResponse_InnerIndexSt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.BulkLoadInfoResponse.InnerIndexSt)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef index_def = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_index_def()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.BulkLoadInfoResponse.InnerIndexSt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.BulkLoadInfoResponse.InnerIndexSt)
  return false;
#undef DO_
}

void BulkLoadInfoResponse_InnerIndexSt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.BulkLoadInfoResponse.InnerIndexSt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef index_def = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->index_def_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->index_def(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.BulkLoadInfoResponse.InnerIndexSt)
}

::google::protobuf::uint8* BulkLoadInfoResponse_InnerIndexSt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.BulkLoadInfoResponse.InnerIndexSt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef index_def = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->index_def_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->index_def(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.BulkLoadInfoResponse.InnerIndexSt)
  return target;
}

size_t BulkLoadInfoResponse_InnerIndexSt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.BulkLoadInfoResponse.InnerIndexSt)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.api.BulkLoadInfoResponse.InnerIndexSt.IndexDef index_def = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->index_def_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->index_def(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BulkLoadInfoResponse_InnerIndexSt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.BulkLoadInfoResponse.InnerIndexSt)
  GOOGLE_DCHECK_NE(&from, this);
  const BulkLoadInfoResponse_InnerIndexSt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BulkLoadInfoResponse_InnerIndexSt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.BulkLoadInfoResponse.InnerIndexSt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.BulkLoadInfoResponse.InnerIndexSt)
    MergeFrom(*source);
  }
}

void BulkLoadInfoResponse_InnerIndexSt::MergeFrom(const BulkLoadInfoResponse_InnerIndexSt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.BulkLoadInfoResponse.InnerIndexSt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  index_def_.MergeFrom(from.index_def_);
}

void BulkLoadInfoResponse_InnerIndexSt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.BulkLoadInfoResponse.InnerIndexSt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulkLoadInfoResponse_InnerIndexSt::CopyFrom(const BulkLoadInfoResponse_InnerIndexSt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.BulkLoadInfoResponse.InnerIndexSt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulkLoadInfoResponse_InnerIndexSt::IsInitialized() const {
  return true;
}

void BulkLoadInfoResponse_InnerIndexSt::Swap(BulkLoadInfoResponse_InnerIndexSt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BulkLoadInfoResponse_InnerIndexSt::InternalSwap(BulkLoadInfoResponse_InnerIndexSt* other) {
  using std::swap;
  CastToBase(&index_def_)->InternalSwap(CastToBase(&other->index_def_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BulkLoadInfoResponse_InnerIndexSt::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::kKeyFieldNumber;
const int BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry)
}
BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry(const BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&key_, &from.key_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&key_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry)
}

void BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&key_)) + sizeof(value_));
}

BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::~BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry() {
  // @@protoc_insertion_point(destructor:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry)
  SharedDtor();
}

void BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::SharedDtor() {
}

void BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry& BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry.base);
  return *internal_default_instance();
}


void BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&key_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&value_) -
        reinterpret_cast<char*>(&key_)) + sizeof(value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_key();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry)
  return false;
#undef DO_
}

void BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->key(), output);
  }

  // required uint32 value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry)
}

::google::protobuf::uint8* BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 key = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->key(), target);
  }

  // required uint32 value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry)
  return target;
}

size_t BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry)
  size_t total_size = 0;

  if (has_key()) {
    // required uint32 key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->key());
  }

  if (has_value()) {
    // required uint32 value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());
  }

  return total_size;
}
size_t BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->key());

    // required uint32 value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry)
    MergeFrom(*source);
  }
}

void BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::MergeFrom(const BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      key_ = from.key_;
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::CopyFrom(const BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::Swap(BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::InternalSwap(BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BulkLoadInfoResponse_InnerSegments_Segment::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BulkLoadInfoResponse_InnerSegments_Segment::kTsCntFieldNumber;
const int BulkLoadInfoResponse_InnerSegments_Segment::kTsIdxMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BulkLoadInfoResponse_InnerSegments_Segment::BulkLoadInfoResponse_InnerSegments_Segment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_BulkLoadInfoResponse_InnerSegments_Segment.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment)
}
BulkLoadInfoResponse_InnerSegments_Segment::BulkLoadInfoResponse_InnerSegments_Segment(const BulkLoadInfoResponse_InnerSegments_Segment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      ts_idx_map_(from.ts_idx_map_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ts_cnt_ = from.ts_cnt_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment)
}

void BulkLoadInfoResponse_InnerSegments_Segment::SharedCtor() {
  ts_cnt_ = 0u;
}

BulkLoadInfoResponse_InnerSegments_Segment::~BulkLoadInfoResponse_InnerSegments_Segment() {
  // @@protoc_insertion_point(destructor:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment)
  SharedDtor();
}

void BulkLoadInfoResponse_InnerSegments_Segment::SharedDtor() {
}

void BulkLoadInfoResponse_InnerSegments_Segment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BulkLoadInfoResponse_InnerSegments_Segment::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BulkLoadInfoResponse_InnerSegments_Segment& BulkLoadInfoResponse_InnerSegments_Segment::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_BulkLoadInfoResponse_InnerSegments_Segment.base);
  return *internal_default_instance();
}


void BulkLoadInfoResponse_InnerSegments_Segment::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ts_idx_map_.Clear();
  ts_cnt_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BulkLoadInfoResponse_InnerSegments_Segment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ts_cnt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ts_cnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ts_cnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry ts_idx_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ts_idx_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment)
  return false;
#undef DO_
}

void BulkLoadInfoResponse_InnerSegments_Segment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ts_cnt = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ts_cnt(), output);
  }

  // repeated .openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry ts_idx_map = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ts_idx_map_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->ts_idx_map(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment)
}

::google::protobuf::uint8* BulkLoadInfoResponse_InnerSegments_Segment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ts_cnt = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ts_cnt(), target);
  }

  // repeated .openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry ts_idx_map = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ts_idx_map_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->ts_idx_map(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment)
  return target;
}

size_t BulkLoadInfoResponse_InnerSegments_Segment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment.MapFieldEntry ts_idx_map = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->ts_idx_map_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ts_idx_map(static_cast<int>(i)));
    }
  }

  // optional uint32 ts_cnt = 1;
  if (has_ts_cnt()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ts_cnt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BulkLoadInfoResponse_InnerSegments_Segment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment)
  GOOGLE_DCHECK_NE(&from, this);
  const BulkLoadInfoResponse_InnerSegments_Segment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BulkLoadInfoResponse_InnerSegments_Segment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment)
    MergeFrom(*source);
  }
}

void BulkLoadInfoResponse_InnerSegments_Segment::MergeFrom(const BulkLoadInfoResponse_InnerSegments_Segment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ts_idx_map_.MergeFrom(from.ts_idx_map_);
  if (from.has_ts_cnt()) {
    set_ts_cnt(from.ts_cnt());
  }
}

void BulkLoadInfoResponse_InnerSegments_Segment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulkLoadInfoResponse_InnerSegments_Segment::CopyFrom(const BulkLoadInfoResponse_InnerSegments_Segment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulkLoadInfoResponse_InnerSegments_Segment::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->ts_idx_map())) return false;
  return true;
}

void BulkLoadInfoResponse_InnerSegments_Segment::Swap(BulkLoadInfoResponse_InnerSegments_Segment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BulkLoadInfoResponse_InnerSegments_Segment::InternalSwap(BulkLoadInfoResponse_InnerSegments_Segment* other) {
  using std::swap;
  CastToBase(&ts_idx_map_)->InternalSwap(CastToBase(&other->ts_idx_map_));
  swap(ts_cnt_, other->ts_cnt_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BulkLoadInfoResponse_InnerSegments_Segment::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BulkLoadInfoResponse_InnerSegments::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BulkLoadInfoResponse_InnerSegments::kSegmentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BulkLoadInfoResponse_InnerSegments::BulkLoadInfoResponse_InnerSegments()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_BulkLoadInfoResponse_InnerSegments.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.BulkLoadInfoResponse.InnerSegments)
}
BulkLoadInfoResponse_InnerSegments::BulkLoadInfoResponse_InnerSegments(const BulkLoadInfoResponse_InnerSegments& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      segment_(from.segment_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openmldb.api.BulkLoadInfoResponse.InnerSegments)
}

void BulkLoadInfoResponse_InnerSegments::SharedCtor() {
}

BulkLoadInfoResponse_InnerSegments::~BulkLoadInfoResponse_InnerSegments() {
  // @@protoc_insertion_point(destructor:openmldb.api.BulkLoadInfoResponse.InnerSegments)
  SharedDtor();
}

void BulkLoadInfoResponse_InnerSegments::SharedDtor() {
}

void BulkLoadInfoResponse_InnerSegments::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BulkLoadInfoResponse_InnerSegments::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BulkLoadInfoResponse_InnerSegments& BulkLoadInfoResponse_InnerSegments::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_BulkLoadInfoResponse_InnerSegments.base);
  return *internal_default_instance();
}


void BulkLoadInfoResponse_InnerSegments::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.BulkLoadInfoResponse.InnerSegments)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  segment_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BulkLoadInfoResponse_InnerSegments::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.BulkLoadInfoResponse.InnerSegments)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment segment = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_segment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.BulkLoadInfoResponse.InnerSegments)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.BulkLoadInfoResponse.InnerSegments)
  return false;
#undef DO_
}

void BulkLoadInfoResponse_InnerSegments::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.BulkLoadInfoResponse.InnerSegments)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment segment = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->segment_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->segment(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.BulkLoadInfoResponse.InnerSegments)
}

::google::protobuf::uint8* BulkLoadInfoResponse_InnerSegments::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.BulkLoadInfoResponse.InnerSegments)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment segment = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->segment_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->segment(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.BulkLoadInfoResponse.InnerSegments)
  return target;
}

size_t BulkLoadInfoResponse_InnerSegments::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.BulkLoadInfoResponse.InnerSegments)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.api.BulkLoadInfoResponse.InnerSegments.Segment segment = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->segment_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->segment(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BulkLoadInfoResponse_InnerSegments::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.BulkLoadInfoResponse.InnerSegments)
  GOOGLE_DCHECK_NE(&from, this);
  const BulkLoadInfoResponse_InnerSegments* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BulkLoadInfoResponse_InnerSegments>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.BulkLoadInfoResponse.InnerSegments)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.BulkLoadInfoResponse.InnerSegments)
    MergeFrom(*source);
  }
}

void BulkLoadInfoResponse_InnerSegments::MergeFrom(const BulkLoadInfoResponse_InnerSegments& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.BulkLoadInfoResponse.InnerSegments)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  segment_.MergeFrom(from.segment_);
}

void BulkLoadInfoResponse_InnerSegments::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.BulkLoadInfoResponse.InnerSegments)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulkLoadInfoResponse_InnerSegments::CopyFrom(const BulkLoadInfoResponse_InnerSegments& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.BulkLoadInfoResponse.InnerSegments)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulkLoadInfoResponse_InnerSegments::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->segment())) return false;
  return true;
}

void BulkLoadInfoResponse_InnerSegments::Swap(BulkLoadInfoResponse_InnerSegments* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BulkLoadInfoResponse_InnerSegments::InternalSwap(BulkLoadInfoResponse_InnerSegments* other) {
  using std::swap;
  CastToBase(&segment_)->InternalSwap(CastToBase(&other->segment_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BulkLoadInfoResponse_InnerSegments::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BulkLoadInfoResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BulkLoadInfoResponse::kCodeFieldNumber;
const int BulkLoadInfoResponse::kMsgFieldNumber;
const int BulkLoadInfoResponse::kSegCntFieldNumber;
const int BulkLoadInfoResponse::kInnerIndexPosFieldNumber;
const int BulkLoadInfoResponse::kInnerIndexFieldNumber;
const int BulkLoadInfoResponse::kInnerSegmentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BulkLoadInfoResponse::BulkLoadInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_BulkLoadInfoResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.BulkLoadInfoResponse)
}
BulkLoadInfoResponse::BulkLoadInfoResponse(const BulkLoadInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      inner_index_pos_(from.inner_index_pos_),
      inner_index_(from.inner_index_),
      inner_segments_(from.inner_segments_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&seg_cnt_) -
    reinterpret_cast<char*>(&code_)) + sizeof(seg_cnt_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.BulkLoadInfoResponse)
}

void BulkLoadInfoResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seg_cnt_) -
      reinterpret_cast<char*>(&code_)) + sizeof(seg_cnt_));
}

BulkLoadInfoResponse::~BulkLoadInfoResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.BulkLoadInfoResponse)
  SharedDtor();
}

void BulkLoadInfoResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BulkLoadInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BulkLoadInfoResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BulkLoadInfoResponse& BulkLoadInfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_BulkLoadInfoResponse.base);
  return *internal_default_instance();
}


void BulkLoadInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.BulkLoadInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inner_index_pos_.Clear();
  inner_index_.Clear();
  inner_segments_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&code_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seg_cnt_) -
        reinterpret_cast<char*>(&code_)) + sizeof(seg_cnt_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BulkLoadInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.BulkLoadInfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.BulkLoadInfoResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 seg_cnt = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_seg_cnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seg_cnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 inner_index_pos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32u, input, this->mutable_inner_index_pos())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_inner_index_pos())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.api.BulkLoadInfoResponse.InnerIndexSt inner_index = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_inner_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.api.BulkLoadInfoResponse.InnerSegments inner_segments = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_inner_segments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.BulkLoadInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.BulkLoadInfoResponse)
  return false;
#undef DO_
}

void BulkLoadInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.BulkLoadInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.BulkLoadInfoResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // optional uint32 seg_cnt = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->seg_cnt(), output);
  }

  // repeated int32 inner_index_pos = 4;
  for (int i = 0, n = this->inner_index_pos_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->inner_index_pos(i), output);
  }

  // repeated .openmldb.api.BulkLoadInfoResponse.InnerIndexSt inner_index = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inner_index_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->inner_index(static_cast<int>(i)),
      output);
  }

  // repeated .openmldb.api.BulkLoadInfoResponse.InnerSegments inner_segments = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inner_segments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->inner_segments(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.BulkLoadInfoResponse)
}

::google::protobuf::uint8* BulkLoadInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.BulkLoadInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.BulkLoadInfoResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // optional uint32 seg_cnt = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->seg_cnt(), target);
  }

  // repeated int32 inner_index_pos = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(4, this->inner_index_pos_, target);

  // repeated .openmldb.api.BulkLoadInfoResponse.InnerIndexSt inner_index = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inner_index_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->inner_index(static_cast<int>(i)), deterministic, target);
  }

  // repeated .openmldb.api.BulkLoadInfoResponse.InnerSegments inner_segments = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inner_segments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->inner_segments(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.BulkLoadInfoResponse)
  return target;
}

size_t BulkLoadInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.BulkLoadInfoResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 inner_index_pos = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->inner_index_pos_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->inner_index_pos_size());
    total_size += data_size;
  }

  // repeated .openmldb.api.BulkLoadInfoResponse.InnerIndexSt inner_index = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->inner_index_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->inner_index(static_cast<int>(i)));
    }
  }

  // repeated .openmldb.api.BulkLoadInfoResponse.InnerSegments inner_segments = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->inner_segments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->inner_segments(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

    // optional uint32 seg_cnt = 3;
    if (has_seg_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->seg_cnt());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BulkLoadInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.BulkLoadInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BulkLoadInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BulkLoadInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.BulkLoadInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.BulkLoadInfoResponse)
    MergeFrom(*source);
  }
}

void BulkLoadInfoResponse::MergeFrom(const BulkLoadInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.BulkLoadInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inner_index_pos_.MergeFrom(from.inner_index_pos_);
  inner_index_.MergeFrom(from.inner_index_);
  inner_segments_.MergeFrom(from.inner_segments_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    if (cached_has_bits & 0x00000004u) {
      seg_cnt_ = from.seg_cnt_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BulkLoadInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.BulkLoadInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulkLoadInfoResponse::CopyFrom(const BulkLoadInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.BulkLoadInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulkLoadInfoResponse::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->inner_segments())) return false;
  return true;
}

void BulkLoadInfoResponse::Swap(BulkLoadInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BulkLoadInfoResponse::InternalSwap(BulkLoadInfoResponse* other) {
  using std::swap;
  inner_index_pos_.InternalSwap(&other->inner_index_pos_);
  CastToBase(&inner_index_)->InternalSwap(CastToBase(&other->inner_index_));
  CastToBase(&inner_segments_)->InternalSwap(CastToBase(&other->inner_segments_));
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(seg_cnt_, other->seg_cnt_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BulkLoadInfoResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateFunctionRequest::InitAsDefaultInstance() {
  ::openmldb::api::_CreateFunctionRequest_default_instance_._instance.get_mutable()->fun_ = const_cast< ::openmldb::common::ExternalFun*>(
      ::openmldb::common::ExternalFun::internal_default_instance());
}
void CreateFunctionRequest::clear_fun() {
  if (fun_ != NULL) fun_->Clear();
  clear_has_fun();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateFunctionRequest::kFunFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateFunctionRequest::CreateFunctionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_CreateFunctionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.CreateFunctionRequest)
}
CreateFunctionRequest::CreateFunctionRequest(const CreateFunctionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_fun()) {
    fun_ = new ::openmldb::common::ExternalFun(*from.fun_);
  } else {
    fun_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.api.CreateFunctionRequest)
}

void CreateFunctionRequest::SharedCtor() {
  fun_ = NULL;
}

CreateFunctionRequest::~CreateFunctionRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.CreateFunctionRequest)
  SharedDtor();
}

void CreateFunctionRequest::SharedDtor() {
  if (this != internal_default_instance()) delete fun_;
}

void CreateFunctionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateFunctionRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateFunctionRequest& CreateFunctionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_CreateFunctionRequest.base);
  return *internal_default_instance();
}


void CreateFunctionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.CreateFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(fun_ != NULL);
    fun_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateFunctionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.CreateFunctionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .openmldb.common.ExternalFun fun = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fun()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.CreateFunctionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.CreateFunctionRequest)
  return false;
#undef DO_
}

void CreateFunctionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.CreateFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.common.ExternalFun fun = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_fun(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.CreateFunctionRequest)
}

::google::protobuf::uint8* CreateFunctionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.CreateFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.common.ExternalFun fun = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_fun(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.CreateFunctionRequest)
  return target;
}

size_t CreateFunctionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.CreateFunctionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .openmldb.common.ExternalFun fun = 1;
  if (has_fun()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *fun_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateFunctionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.CreateFunctionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateFunctionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateFunctionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.CreateFunctionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.CreateFunctionRequest)
    MergeFrom(*source);
  }
}

void CreateFunctionRequest::MergeFrom(const CreateFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.CreateFunctionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_fun()) {
    mutable_fun()->::openmldb::common::ExternalFun::MergeFrom(from.fun());
  }
}

void CreateFunctionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.CreateFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateFunctionRequest::CopyFrom(const CreateFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.CreateFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateFunctionRequest::IsInitialized() const {
  return true;
}

void CreateFunctionRequest::Swap(CreateFunctionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateFunctionRequest::InternalSwap(CreateFunctionRequest* other) {
  using std::swap;
  swap(fun_, other->fun_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateFunctionRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateFunctionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateFunctionResponse::kCodeFieldNumber;
const int CreateFunctionResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateFunctionResponse::CreateFunctionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_CreateFunctionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.CreateFunctionResponse)
}
CreateFunctionResponse::CreateFunctionResponse(const CreateFunctionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.CreateFunctionResponse)
}

void CreateFunctionResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

CreateFunctionResponse::~CreateFunctionResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.CreateFunctionResponse)
  SharedDtor();
}

void CreateFunctionResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateFunctionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateFunctionResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateFunctionResponse& CreateFunctionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_CreateFunctionResponse.base);
  return *internal_default_instance();
}


void CreateFunctionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.CreateFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateFunctionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.CreateFunctionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.CreateFunctionResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.CreateFunctionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.CreateFunctionResponse)
  return false;
#undef DO_
}

void CreateFunctionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.CreateFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.CreateFunctionResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.CreateFunctionResponse)
}

::google::protobuf::uint8* CreateFunctionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.CreateFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.CreateFunctionResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.CreateFunctionResponse)
  return target;
}

size_t CreateFunctionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.CreateFunctionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateFunctionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.CreateFunctionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateFunctionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateFunctionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.CreateFunctionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.CreateFunctionResponse)
    MergeFrom(*source);
  }
}

void CreateFunctionResponse::MergeFrom(const CreateFunctionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.CreateFunctionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CreateFunctionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.CreateFunctionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateFunctionResponse::CopyFrom(const CreateFunctionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.CreateFunctionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateFunctionResponse::IsInitialized() const {
  return true;
}

void CreateFunctionResponse::Swap(CreateFunctionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateFunctionResponse::InternalSwap(CreateFunctionResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateFunctionResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DropFunctionRequest::InitAsDefaultInstance() {
  ::openmldb::api::_DropFunctionRequest_default_instance_._instance.get_mutable()->fun_ = const_cast< ::openmldb::common::ExternalFun*>(
      ::openmldb::common::ExternalFun::internal_default_instance());
}
void DropFunctionRequest::clear_fun() {
  if (fun_ != NULL) fun_->Clear();
  clear_has_fun();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DropFunctionRequest::kFunFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DropFunctionRequest::DropFunctionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_DropFunctionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.DropFunctionRequest)
}
DropFunctionRequest::DropFunctionRequest(const DropFunctionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_fun()) {
    fun_ = new ::openmldb::common::ExternalFun(*from.fun_);
  } else {
    fun_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openmldb.api.DropFunctionRequest)
}

void DropFunctionRequest::SharedCtor() {
  fun_ = NULL;
}

DropFunctionRequest::~DropFunctionRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.DropFunctionRequest)
  SharedDtor();
}

void DropFunctionRequest::SharedDtor() {
  if (this != internal_default_instance()) delete fun_;
}

void DropFunctionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DropFunctionRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DropFunctionRequest& DropFunctionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_DropFunctionRequest.base);
  return *internal_default_instance();
}


void DropFunctionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.DropFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(fun_ != NULL);
    fun_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DropFunctionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.DropFunctionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .openmldb.common.ExternalFun fun = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fun()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.DropFunctionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.DropFunctionRequest)
  return false;
#undef DO_
}

void DropFunctionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.DropFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.common.ExternalFun fun = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_fun(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.DropFunctionRequest)
}

::google::protobuf::uint8* DropFunctionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.DropFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.common.ExternalFun fun = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_fun(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.DropFunctionRequest)
  return target;
}

size_t DropFunctionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.DropFunctionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .openmldb.common.ExternalFun fun = 1;
  if (has_fun()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *fun_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DropFunctionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.DropFunctionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DropFunctionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DropFunctionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.DropFunctionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.DropFunctionRequest)
    MergeFrom(*source);
  }
}

void DropFunctionRequest::MergeFrom(const DropFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.DropFunctionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_fun()) {
    mutable_fun()->::openmldb::common::ExternalFun::MergeFrom(from.fun());
  }
}

void DropFunctionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.DropFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropFunctionRequest::CopyFrom(const DropFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.DropFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropFunctionRequest::IsInitialized() const {
  return true;
}

void DropFunctionRequest::Swap(DropFunctionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DropFunctionRequest::InternalSwap(DropFunctionRequest* other) {
  using std::swap;
  swap(fun_, other->fun_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DropFunctionRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DropFunctionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DropFunctionResponse::kCodeFieldNumber;
const int DropFunctionResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DropFunctionResponse::DropFunctionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_DropFunctionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.DropFunctionResponse)
}
DropFunctionResponse::DropFunctionResponse(const DropFunctionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.DropFunctionResponse)
}

void DropFunctionResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

DropFunctionResponse::~DropFunctionResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.DropFunctionResponse)
  SharedDtor();
}

void DropFunctionResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DropFunctionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DropFunctionResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DropFunctionResponse& DropFunctionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_DropFunctionResponse.base);
  return *internal_default_instance();
}


void DropFunctionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.DropFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DropFunctionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.DropFunctionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.DropFunctionResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.DropFunctionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.DropFunctionResponse)
  return false;
#undef DO_
}

void DropFunctionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.DropFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.DropFunctionResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.DropFunctionResponse)
}

::google::protobuf::uint8* DropFunctionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.DropFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.DropFunctionResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.DropFunctionResponse)
  return target;
}

size_t DropFunctionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.DropFunctionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DropFunctionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.DropFunctionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DropFunctionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DropFunctionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.DropFunctionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.DropFunctionResponse)
    MergeFrom(*source);
  }
}

void DropFunctionResponse::MergeFrom(const DropFunctionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.DropFunctionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DropFunctionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.DropFunctionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropFunctionResponse::CopyFrom(const DropFunctionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.DropFunctionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropFunctionResponse::IsInitialized() const {
  return true;
}

void DropFunctionResponse::Swap(DropFunctionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DropFunctionResponse::InternalSwap(DropFunctionResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DropFunctionResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateAggregatorRequest::InitAsDefaultInstance() {
  ::openmldb::api::_CreateAggregatorRequest_default_instance_._instance.get_mutable()->base_table_meta_ = const_cast< ::openmldb::api::TableMeta*>(
      ::openmldb::api::TableMeta::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateAggregatorRequest::kBaseTableMetaFieldNumber;
const int CreateAggregatorRequest::kAggrTableTidFieldNumber;
const int CreateAggregatorRequest::kAggrTablePidFieldNumber;
const int CreateAggregatorRequest::kIndexPosFieldNumber;
const int CreateAggregatorRequest::kAggrFuncFieldNumber;
const int CreateAggregatorRequest::kAggrColFieldNumber;
const int CreateAggregatorRequest::kOrderByColFieldNumber;
const int CreateAggregatorRequest::kBucketSizeFieldNumber;
const int CreateAggregatorRequest::kFilterColFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateAggregatorRequest::CreateAggregatorRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_CreateAggregatorRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.CreateAggregatorRequest)
}
CreateAggregatorRequest::CreateAggregatorRequest(const CreateAggregatorRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  aggr_func_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_aggr_func()) {
    aggr_func_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aggr_func_);
  }
  aggr_col_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_aggr_col()) {
    aggr_col_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aggr_col_);
  }
  order_by_col_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_order_by_col()) {
    order_by_col_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_by_col_);
  }
  bucket_size_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bucket_size()) {
    bucket_size_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bucket_size_);
  }
  filter_col_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filter_col()) {
    filter_col_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_col_);
  }
  if (from.has_base_table_meta()) {
    base_table_meta_ = new ::openmldb::api::TableMeta(*from.base_table_meta_);
  } else {
    base_table_meta_ = NULL;
  }
  ::memcpy(&aggr_table_tid_, &from.aggr_table_tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_pos_) -
    reinterpret_cast<char*>(&aggr_table_tid_)) + sizeof(index_pos_));
  // @@protoc_insertion_point(copy_constructor:openmldb.api.CreateAggregatorRequest)
}

void CreateAggregatorRequest::SharedCtor() {
  aggr_func_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aggr_col_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_by_col_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bucket_size_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_col_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&base_table_meta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_pos_) -
      reinterpret_cast<char*>(&base_table_meta_)) + sizeof(index_pos_));
}

CreateAggregatorRequest::~CreateAggregatorRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.CreateAggregatorRequest)
  SharedDtor();
}

void CreateAggregatorRequest::SharedDtor() {
  aggr_func_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aggr_col_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_by_col_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bucket_size_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_col_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete base_table_meta_;
}

void CreateAggregatorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateAggregatorRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateAggregatorRequest& CreateAggregatorRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_CreateAggregatorRequest.base);
  return *internal_default_instance();
}


void CreateAggregatorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.CreateAggregatorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      aggr_func_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      aggr_col_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      order_by_col_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      bucket_size_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      filter_col_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(base_table_meta_ != NULL);
      base_table_meta_->Clear();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&aggr_table_tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&aggr_table_pid_) -
        reinterpret_cast<char*>(&aggr_table_tid_)) + sizeof(aggr_table_pid_));
  }
  index_pos_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateAggregatorRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.CreateAggregatorRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .openmldb.api.TableMeta base_table_meta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base_table_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 aggr_table_tid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_aggr_table_tid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &aggr_table_tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 aggr_table_pid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_aggr_table_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &aggr_table_pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 index_pos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_index_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string aggr_func = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_aggr_func()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->aggr_func().data(), static_cast<int>(this->aggr_func().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.CreateAggregatorRequest.aggr_func");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string aggr_col = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_aggr_col()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->aggr_col().data(), static_cast<int>(this->aggr_col().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.CreateAggregatorRequest.aggr_col");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string order_by_col = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_by_col()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->order_by_col().data(), static_cast<int>(this->order_by_col().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.CreateAggregatorRequest.order_by_col");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bucket_size = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bucket_size()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bucket_size().data(), static_cast<int>(this->bucket_size().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.CreateAggregatorRequest.bucket_size");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string filter_col = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter_col()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filter_col().data(), static_cast<int>(this->filter_col().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.CreateAggregatorRequest.filter_col");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.CreateAggregatorRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.CreateAggregatorRequest)
  return false;
#undef DO_
}

void CreateAggregatorRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.CreateAggregatorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.api.TableMeta base_table_meta = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_base_table_meta(), output);
  }

  // optional uint32 aggr_table_tid = 2;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->aggr_table_tid(), output);
  }

  // optional uint32 aggr_table_pid = 3;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->aggr_table_pid(), output);
  }

  // optional uint32 index_pos = 4;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->index_pos(), output);
  }

  // optional string aggr_func = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->aggr_func().data(), static_cast<int>(this->aggr_func().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.CreateAggregatorRequest.aggr_func");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->aggr_func(), output);
  }

  // optional string aggr_col = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->aggr_col().data(), static_cast<int>(this->aggr_col().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.CreateAggregatorRequest.aggr_col");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->aggr_col(), output);
  }

  // optional string order_by_col = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->order_by_col().data(), static_cast<int>(this->order_by_col().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.CreateAggregatorRequest.order_by_col");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->order_by_col(), output);
  }

  // optional string bucket_size = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bucket_size().data(), static_cast<int>(this->bucket_size().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.CreateAggregatorRequest.bucket_size");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->bucket_size(), output);
  }

  // optional string filter_col = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filter_col().data(), static_cast<int>(this->filter_col().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.CreateAggregatorRequest.filter_col");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->filter_col(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.CreateAggregatorRequest)
}

::google::protobuf::uint8* CreateAggregatorRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.CreateAggregatorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .openmldb.api.TableMeta base_table_meta = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_base_table_meta(), deterministic, target);
  }

  // optional uint32 aggr_table_tid = 2;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->aggr_table_tid(), target);
  }

  // optional uint32 aggr_table_pid = 3;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->aggr_table_pid(), target);
  }

  // optional uint32 index_pos = 4;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->index_pos(), target);
  }

  // optional string aggr_func = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->aggr_func().data(), static_cast<int>(this->aggr_func().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.CreateAggregatorRequest.aggr_func");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->aggr_func(), target);
  }

  // optional string aggr_col = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->aggr_col().data(), static_cast<int>(this->aggr_col().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.CreateAggregatorRequest.aggr_col");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->aggr_col(), target);
  }

  // optional string order_by_col = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->order_by_col().data(), static_cast<int>(this->order_by_col().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.CreateAggregatorRequest.order_by_col");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->order_by_col(), target);
  }

  // optional string bucket_size = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bucket_size().data(), static_cast<int>(this->bucket_size().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.CreateAggregatorRequest.bucket_size");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->bucket_size(), target);
  }

  // optional string filter_col = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filter_col().data(), static_cast<int>(this->filter_col().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.CreateAggregatorRequest.filter_col");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->filter_col(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.CreateAggregatorRequest)
  return target;
}

size_t CreateAggregatorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.CreateAggregatorRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string aggr_func = 5;
    if (has_aggr_func()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->aggr_func());
    }

    // optional string aggr_col = 6;
    if (has_aggr_col()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->aggr_col());
    }

    // optional string order_by_col = 7;
    if (has_order_by_col()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->order_by_col());
    }

    // optional string bucket_size = 8;
    if (has_bucket_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bucket_size());
    }

    // optional string filter_col = 9;
    if (has_filter_col()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filter_col());
    }

    // optional .openmldb.api.TableMeta base_table_meta = 1;
    if (has_base_table_meta()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *base_table_meta_);
    }

    // optional uint32 aggr_table_tid = 2;
    if (has_aggr_table_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->aggr_table_tid());
    }

    // optional uint32 aggr_table_pid = 3;
    if (has_aggr_table_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->aggr_table_pid());
    }

  }
  // optional uint32 index_pos = 4;
  if (has_index_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index_pos());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateAggregatorRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.CreateAggregatorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateAggregatorRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateAggregatorRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.CreateAggregatorRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.CreateAggregatorRequest)
    MergeFrom(*source);
  }
}

void CreateAggregatorRequest::MergeFrom(const CreateAggregatorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.CreateAggregatorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_aggr_func();
      aggr_func_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aggr_func_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_aggr_col();
      aggr_col_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aggr_col_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_order_by_col();
      order_by_col_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_by_col_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_bucket_size();
      bucket_size_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bucket_size_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_filter_col();
      filter_col_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_col_);
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_base_table_meta()->::openmldb::api::TableMeta::MergeFrom(from.base_table_meta());
    }
    if (cached_has_bits & 0x00000040u) {
      aggr_table_tid_ = from.aggr_table_tid_;
    }
    if (cached_has_bits & 0x00000080u) {
      aggr_table_pid_ = from.aggr_table_pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_index_pos(from.index_pos());
  }
}

void CreateAggregatorRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.CreateAggregatorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateAggregatorRequest::CopyFrom(const CreateAggregatorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.CreateAggregatorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateAggregatorRequest::IsInitialized() const {
  if (has_base_table_meta()) {
    if (!this->base_table_meta_->IsInitialized()) return false;
  }
  return true;
}

void CreateAggregatorRequest::Swap(CreateAggregatorRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateAggregatorRequest::InternalSwap(CreateAggregatorRequest* other) {
  using std::swap;
  aggr_func_.Swap(&other->aggr_func_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  aggr_col_.Swap(&other->aggr_col_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  order_by_col_.Swap(&other->order_by_col_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bucket_size_.Swap(&other->bucket_size_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filter_col_.Swap(&other->filter_col_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(base_table_meta_, other->base_table_meta_);
  swap(aggr_table_tid_, other->aggr_table_tid_);
  swap(aggr_table_pid_, other->aggr_table_pid_);
  swap(index_pos_, other->index_pos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateAggregatorRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateAggregatorResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateAggregatorResponse::kCodeFieldNumber;
const int CreateAggregatorResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateAggregatorResponse::CreateAggregatorResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_CreateAggregatorResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.CreateAggregatorResponse)
}
CreateAggregatorResponse::CreateAggregatorResponse(const CreateAggregatorResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.CreateAggregatorResponse)
}

void CreateAggregatorResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

CreateAggregatorResponse::~CreateAggregatorResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.CreateAggregatorResponse)
  SharedDtor();
}

void CreateAggregatorResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateAggregatorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateAggregatorResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateAggregatorResponse& CreateAggregatorResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_CreateAggregatorResponse.base);
  return *internal_default_instance();
}


void CreateAggregatorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.CreateAggregatorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateAggregatorResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.CreateAggregatorResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.CreateAggregatorResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.CreateAggregatorResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.CreateAggregatorResponse)
  return false;
#undef DO_
}

void CreateAggregatorResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.CreateAggregatorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.CreateAggregatorResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.CreateAggregatorResponse)
}

::google::protobuf::uint8* CreateAggregatorResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.CreateAggregatorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.CreateAggregatorResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.CreateAggregatorResponse)
  return target;
}

size_t CreateAggregatorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.CreateAggregatorResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateAggregatorResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.CreateAggregatorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateAggregatorResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateAggregatorResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.CreateAggregatorResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.CreateAggregatorResponse)
    MergeFrom(*source);
  }
}

void CreateAggregatorResponse::MergeFrom(const CreateAggregatorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.CreateAggregatorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CreateAggregatorResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.CreateAggregatorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateAggregatorResponse::CopyFrom(const CreateAggregatorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.CreateAggregatorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateAggregatorResponse::IsInitialized() const {
  return true;
}

void CreateAggregatorResponse::Swap(CreateAggregatorResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateAggregatorResponse::InternalSwap(CreateAggregatorResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateAggregatorResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GAFDeployStatsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GAFDeployStatsRequest::GAFDeployStatsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_GAFDeployStatsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.GAFDeployStatsRequest)
}
GAFDeployStatsRequest::GAFDeployStatsRequest(const GAFDeployStatsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openmldb.api.GAFDeployStatsRequest)
}

void GAFDeployStatsRequest::SharedCtor() {
}

GAFDeployStatsRequest::~GAFDeployStatsRequest() {
  // @@protoc_insertion_point(destructor:openmldb.api.GAFDeployStatsRequest)
  SharedDtor();
}

void GAFDeployStatsRequest::SharedDtor() {
}

void GAFDeployStatsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GAFDeployStatsRequest::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GAFDeployStatsRequest& GAFDeployStatsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_GAFDeployStatsRequest.base);
  return *internal_default_instance();
}


void GAFDeployStatsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.GAFDeployStatsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GAFDeployStatsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.GAFDeployStatsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.GAFDeployStatsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.GAFDeployStatsRequest)
  return false;
#undef DO_
}

void GAFDeployStatsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.GAFDeployStatsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.GAFDeployStatsRequest)
}

::google::protobuf::uint8* GAFDeployStatsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.GAFDeployStatsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.GAFDeployStatsRequest)
  return target;
}

size_t GAFDeployStatsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.GAFDeployStatsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GAFDeployStatsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.GAFDeployStatsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GAFDeployStatsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GAFDeployStatsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.GAFDeployStatsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.GAFDeployStatsRequest)
    MergeFrom(*source);
  }
}

void GAFDeployStatsRequest::MergeFrom(const GAFDeployStatsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.GAFDeployStatsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GAFDeployStatsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.GAFDeployStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GAFDeployStatsRequest::CopyFrom(const GAFDeployStatsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.GAFDeployStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GAFDeployStatsRequest::IsInitialized() const {
  return true;
}

void GAFDeployStatsRequest::Swap(GAFDeployStatsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GAFDeployStatsRequest::InternalSwap(GAFDeployStatsRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GAFDeployStatsRequest::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeployStatsResponse_DeployStat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeployStatsResponse_DeployStat::kDeployNameFieldNumber;
const int DeployStatsResponse_DeployStat::kTimeFieldNumber;
const int DeployStatsResponse_DeployStat::kCountFieldNumber;
const int DeployStatsResponse_DeployStat::kTotalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeployStatsResponse_DeployStat::DeployStatsResponse_DeployStat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_DeployStatsResponse_DeployStat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.DeployStatsResponse.DeployStat)
}
DeployStatsResponse_DeployStat::DeployStatsResponse_DeployStat(const DeployStatsResponse_DeployStat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deploy_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_deploy_name()) {
    deploy_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deploy_name_);
  }
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_time()) {
    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  total_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_total()) {
    total_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.total_);
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.DeployStatsResponse.DeployStat)
}

void DeployStatsResponse_DeployStat::SharedCtor() {
  deploy_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  total_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  count_ = 0u;
}

DeployStatsResponse_DeployStat::~DeployStatsResponse_DeployStat() {
  // @@protoc_insertion_point(destructor:openmldb.api.DeployStatsResponse.DeployStat)
  SharedDtor();
}

void DeployStatsResponse_DeployStat::SharedDtor() {
  deploy_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  total_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeployStatsResponse_DeployStat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeployStatsResponse_DeployStat::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeployStatsResponse_DeployStat& DeployStatsResponse_DeployStat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_DeployStatsResponse_DeployStat.base);
  return *internal_default_instance();
}


void DeployStatsResponse_DeployStat::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.DeployStatsResponse.DeployStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      deploy_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      time_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      total_.ClearNonDefaultToEmptyNoArena();
    }
  }
  count_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeployStatsResponse_DeployStat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.DeployStatsResponse.DeployStat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string deploy_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deploy_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->deploy_name().data(), static_cast<int>(this->deploy_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.DeployStatsResponse.DeployStat.deploy_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->time().data(), static_cast<int>(this->time().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.DeployStatsResponse.DeployStat.time");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string total = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_total()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->total().data(), static_cast<int>(this->total().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.DeployStatsResponse.DeployStat.total");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.DeployStatsResponse.DeployStat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.DeployStatsResponse.DeployStat)
  return false;
#undef DO_
}

void DeployStatsResponse_DeployStat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.DeployStatsResponse.DeployStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string deploy_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->deploy_name().data(), static_cast<int>(this->deploy_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.DeployStatsResponse.DeployStat.deploy_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->deploy_name(), output);
  }

  // required string time = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), static_cast<int>(this->time().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.DeployStatsResponse.DeployStat.time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->time(), output);
  }

  // required uint32 count = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->count(), output);
  }

  // required string total = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->total().data(), static_cast<int>(this->total().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.DeployStatsResponse.DeployStat.total");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->total(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.DeployStatsResponse.DeployStat)
}

::google::protobuf::uint8* DeployStatsResponse_DeployStat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.DeployStatsResponse.DeployStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string deploy_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->deploy_name().data(), static_cast<int>(this->deploy_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.DeployStatsResponse.DeployStat.deploy_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->deploy_name(), target);
  }

  // required string time = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), static_cast<int>(this->time().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.DeployStatsResponse.DeployStat.time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->time(), target);
  }

  // required uint32 count = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->count(), target);
  }

  // required string total = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->total().data(), static_cast<int>(this->total().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.DeployStatsResponse.DeployStat.total");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->total(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.DeployStatsResponse.DeployStat)
  return target;
}

size_t DeployStatsResponse_DeployStat::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openmldb.api.DeployStatsResponse.DeployStat)
  size_t total_size = 0;

  if (has_deploy_name()) {
    // required string deploy_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deploy_name());
  }

  if (has_time()) {
    // required string time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time());
  }

  if (has_total()) {
    // required string total = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->total());
  }

  if (has_count()) {
    // required uint32 count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  return total_size;
}
size_t DeployStatsResponse_DeployStat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.DeployStatsResponse.DeployStat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string deploy_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deploy_name());

    // required string time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time());

    // required string total = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->total());

    // required uint32 count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeployStatsResponse_DeployStat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.DeployStatsResponse.DeployStat)
  GOOGLE_DCHECK_NE(&from, this);
  const DeployStatsResponse_DeployStat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeployStatsResponse_DeployStat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.DeployStatsResponse.DeployStat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.DeployStatsResponse.DeployStat)
    MergeFrom(*source);
  }
}

void DeployStatsResponse_DeployStat::MergeFrom(const DeployStatsResponse_DeployStat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.DeployStatsResponse.DeployStat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_deploy_name();
      deploy_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deploy_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_time();
      time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_total();
      total_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.total_);
    }
    if (cached_has_bits & 0x00000008u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DeployStatsResponse_DeployStat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.DeployStatsResponse.DeployStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeployStatsResponse_DeployStat::CopyFrom(const DeployStatsResponse_DeployStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.DeployStatsResponse.DeployStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeployStatsResponse_DeployStat::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void DeployStatsResponse_DeployStat::Swap(DeployStatsResponse_DeployStat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeployStatsResponse_DeployStat::InternalSwap(DeployStatsResponse_DeployStat* other) {
  using std::swap;
  deploy_name_.Swap(&other->deploy_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  time_.Swap(&other->time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  total_.Swap(&other->total_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeployStatsResponse_DeployStat::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeployStatsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeployStatsResponse::kCodeFieldNumber;
const int DeployStatsResponse::kMsgFieldNumber;
const int DeployStatsResponse::kRowsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeployStatsResponse::DeployStatsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tablet_2eproto::scc_info_DeployStatsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmldb.api.DeployStatsResponse)
}
DeployStatsResponse::DeployStatsResponse(const DeployStatsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      rows_(from.rows_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:openmldb.api.DeployStatsResponse)
}

void DeployStatsResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

DeployStatsResponse::~DeployStatsResponse() {
  // @@protoc_insertion_point(destructor:openmldb.api.DeployStatsResponse)
  SharedDtor();
}

void DeployStatsResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeployStatsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeployStatsResponse::descriptor() {
  ::protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeployStatsResponse& DeployStatsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tablet_2eproto::scc_info_DeployStatsResponse.base);
  return *internal_default_instance();
}


void DeployStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openmldb.api.DeployStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rows_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeployStatsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmldb.api.DeployStatsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "openmldb.api.DeployStatsResponse.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openmldb.api.DeployStatsResponse.DeployStat rows = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmldb.api.DeployStatsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmldb.api.DeployStatsResponse)
  return false;
#undef DO_
}

void DeployStatsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmldb.api.DeployStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.DeployStatsResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // repeated .openmldb.api.DeployStatsResponse.DeployStat rows = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rows_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->rows(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmldb.api.DeployStatsResponse)
}

::google::protobuf::uint8* DeployStatsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openmldb.api.DeployStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "openmldb.api.DeployStatsResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // repeated .openmldb.api.DeployStatsResponse.DeployStat rows = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rows_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->rows(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmldb.api.DeployStatsResponse)
  return target;
}

size_t DeployStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openmldb.api.DeployStatsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .openmldb.api.DeployStatsResponse.DeployStat rows = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->rows_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rows(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeployStatsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openmldb.api.DeployStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeployStatsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeployStatsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openmldb.api.DeployStatsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openmldb.api.DeployStatsResponse)
    MergeFrom(*source);
  }
}

void DeployStatsResponse::MergeFrom(const DeployStatsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openmldb.api.DeployStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rows_.MergeFrom(from.rows_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DeployStatsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openmldb.api.DeployStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeployStatsResponse::CopyFrom(const DeployStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openmldb.api.DeployStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeployStatsResponse::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->rows())) return false;
  return true;
}

void DeployStatsResponse::Swap(DeployStatsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeployStatsResponse::InternalSwap(DeployStatsResponse* other) {
  using std::swap;
  CastToBase(&rows_)->InternalSwap(CastToBase(&other->rows_));
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeployStatsResponse::GetMetadata() const {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tablet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

TabletServer::~TabletServer() {}

const ::google::protobuf::ServiceDescriptor* TabletServer::descriptor() {
  protobuf_tablet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tablet_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* TabletServer::GetDescriptor() {
  return descriptor();
}

void TabletServer::Put(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::PutRequest*,
                         ::openmldb::api::PutResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Put() not implemented.");
  done->Run();
}

void TabletServer::Get(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::GetRequest*,
                         ::openmldb::api::GetResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Get() not implemented.");
  done->Run();
}

void TabletServer::Scan(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::ScanRequest*,
                         ::openmldb::api::ScanResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Scan() not implemented.");
  done->Run();
}

void TabletServer::Delete(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::DeleteRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Delete() not implemented.");
  done->Run();
}

void TabletServer::Count(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::CountRequest*,
                         ::openmldb::api::CountResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Count() not implemented.");
  done->Run();
}

void TabletServer::Traverse(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::TraverseRequest*,
                         ::openmldb::api::TraverseResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Traverse() not implemented.");
  done->Run();
}

void TabletServer::Query(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::QueryRequest*,
                         ::openmldb::api::QueryResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Query() not implemented.");
  done->Run();
}

void TabletServer::SubQuery(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::QueryRequest*,
                         ::openmldb::api::QueryResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SubQuery() not implemented.");
  done->Run();
}

void TabletServer::SQLBatchRequestQuery(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::SQLBatchRequestQueryRequest*,
                         ::openmldb::api::SQLBatchRequestQueryResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SQLBatchRequestQuery() not implemented.");
  done->Run();
}

void TabletServer::SubBatchRequestQuery(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::SQLBatchRequestQueryRequest*,
                         ::openmldb::api::SQLBatchRequestQueryResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SubBatchRequestQuery() not implemented.");
  done->Run();
}

void TabletServer::CreateTable(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::CreateTableRequest*,
                         ::openmldb::api::CreateTableResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CreateTable() not implemented.");
  done->Run();
}

void TabletServer::LoadTable(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::LoadTableRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method LoadTable() not implemented.");
  done->Run();
}

void TabletServer::DropTable(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::DropTableRequest*,
                         ::openmldb::api::DropTableResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DropTable() not implemented.");
  done->Run();
}

void TabletServer::GetTableStatus(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::GetTableStatusRequest*,
                         ::openmldb::api::GetTableStatusResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetTableStatus() not implemented.");
  done->Run();
}

void TabletServer::GetTableSchema(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::GetTableSchemaRequest*,
                         ::openmldb::api::GetTableSchemaResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetTableSchema() not implemented.");
  done->Run();
}

void TabletServer::GetTableFollower(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::GetTableFollowerRequest*,
                         ::openmldb::api::GetTableFollowerResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetTableFollower() not implemented.");
  done->Run();
}

void TabletServer::UpdateTTL(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::UpdateTTLRequest*,
                         ::openmldb::api::UpdateTTLResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method UpdateTTL() not implemented.");
  done->Run();
}

void TabletServer::ExecuteGc(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::ExecuteGcRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ExecuteGc() not implemented.");
  done->Run();
}

void TabletServer::AppendEntries(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::AppendEntriesRequest*,
                         ::openmldb::api::AppendEntriesResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method AppendEntries() not implemented.");
  done->Run();
}

void TabletServer::AddReplica(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::ReplicaRequest*,
                         ::openmldb::api::AddReplicaResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method AddReplica() not implemented.");
  done->Run();
}

void TabletServer::DelReplica(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::ReplicaRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DelReplica() not implemented.");
  done->Run();
}

void TabletServer::ChangeRole(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::ChangeRoleRequest*,
                         ::openmldb::api::ChangeRoleResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ChangeRole() not implemented.");
  done->Run();
}

void TabletServer::MakeSnapshot(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::GeneralRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method MakeSnapshot() not implemented.");
  done->Run();
}

void TabletServer::PauseSnapshot(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::GeneralRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method PauseSnapshot() not implemented.");
  done->Run();
}

void TabletServer::RecoverSnapshot(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::GeneralRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RecoverSnapshot() not implemented.");
  done->Run();
}

void TabletServer::SendSnapshot(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::SendSnapshotRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SendSnapshot() not implemented.");
  done->Run();
}

void TabletServer::SendData(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::SendDataRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SendData() not implemented.");
  done->Run();
}

void TabletServer::SetExpire(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::SetExpireRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SetExpire() not implemented.");
  done->Run();
}

void TabletServer::GetTaskStatus(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::TaskStatusRequest*,
                         ::openmldb::api::TaskStatusResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetTaskStatus() not implemented.");
  done->Run();
}

void TabletServer::DeleteOPTask(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::DeleteTaskRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DeleteOPTask() not implemented.");
  done->Run();
}

void TabletServer::GetTermPair(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::GetTermPairRequest*,
                         ::openmldb::api::GetTermPairResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetTermPair() not implemented.");
  done->Run();
}

void TabletServer::GetManifest(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::GetManifestRequest*,
                         ::openmldb::api::GetManifestResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetManifest() not implemented.");
  done->Run();
}

void TabletServer::CheckFile(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::CheckFileRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CheckFile() not implemented.");
  done->Run();
}

void TabletServer::DeleteBinlog(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::GeneralRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DeleteBinlog() not implemented.");
  done->Run();
}

void TabletServer::ShowMemPool(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::HttpRequest*,
                         ::openmldb::api::HttpResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ShowMemPool() not implemented.");
  done->Run();
}

void TabletServer::GetCatalog(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::GetCatalogRequest*,
                         ::openmldb::api::GetCatalogResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetCatalog() not implemented.");
  done->Run();
}

void TabletServer::ConnectZK(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::ConnectZKRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ConnectZK() not implemented.");
  done->Run();
}

void TabletServer::DisConnectZK(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::DisConnectZKRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DisConnectZK() not implemented.");
  done->Run();
}

void TabletServer::UpdateTableMetaForAddField(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::UpdateTableMetaForAddFieldRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method UpdateTableMetaForAddField() not implemented.");
  done->Run();
}

void TabletServer::SetMode(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::SetModeRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SetMode() not implemented.");
  done->Run();
}

void TabletServer::GetAllSnapshotOffset(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::EmptyRequest*,
                         ::openmldb::api::TableSnapshotOffsetResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetAllSnapshotOffset() not implemented.");
  done->Run();
}

void TabletServer::AddIndex(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::AddIndexRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method AddIndex() not implemented.");
  done->Run();
}

void TabletServer::SendIndexData(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::SendIndexDataRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SendIndexData() not implemented.");
  done->Run();
}

void TabletServer::DeleteIndex(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::DeleteIndexRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DeleteIndex() not implemented.");
  done->Run();
}

void TabletServer::DumpIndexData(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::DumpIndexDataRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DumpIndexData() not implemented.");
  done->Run();
}

void TabletServer::LoadIndexData(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::LoadIndexDataRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method LoadIndexData() not implemented.");
  done->Run();
}

void TabletServer::ExtractIndexData(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::ExtractIndexDataRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ExtractIndexData() not implemented.");
  done->Run();
}

void TabletServer::ExtractMultiIndexData(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::ExtractMultiIndexDataRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ExtractMultiIndexData() not implemented.");
  done->Run();
}

void TabletServer::CancelOP(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::CancelOPRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CancelOP() not implemented.");
  done->Run();
}

void TabletServer::UpdateRealEndpointMap(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::UpdateRealEndpointMapRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method UpdateRealEndpointMap() not implemented.");
  done->Run();
}

void TabletServer::CreateProcedure(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::CreateProcedureRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CreateProcedure() not implemented.");
  done->Run();
}

void TabletServer::DropProcedure(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::DropProcedureRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DropProcedure() not implemented.");
  done->Run();
}

void TabletServer::Refresh(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::RefreshRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Refresh() not implemented.");
  done->Run();
}

void TabletServer::GetBulkLoadInfo(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::BulkLoadInfoRequest*,
                         ::openmldb::api::BulkLoadInfoResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetBulkLoadInfo() not implemented.");
  done->Run();
}

void TabletServer::BulkLoad(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::BulkLoadRequest*,
                         ::openmldb::api::GeneralResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method BulkLoad() not implemented.");
  done->Run();
}

void TabletServer::CreateFunction(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::CreateFunctionRequest*,
                         ::openmldb::api::CreateFunctionResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CreateFunction() not implemented.");
  done->Run();
}

void TabletServer::DropFunction(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::DropFunctionRequest*,
                         ::openmldb::api::DropFunctionResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DropFunction() not implemented.");
  done->Run();
}

void TabletServer::CreateAggregator(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::CreateAggregatorRequest*,
                         ::openmldb::api::CreateAggregatorResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CreateAggregator() not implemented.");
  done->Run();
}

void TabletServer::GetAndFlushDeployStats(::google::protobuf::RpcController* controller,
                         const ::openmldb::api::GAFDeployStatsRequest*,
                         ::openmldb::api::DeployStatsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetAndFlushDeployStats() not implemented.");
  done->Run();
}

void TabletServer::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_tablet_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      Put(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::PutRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::PutResponse*>(response),
             done);
      break;
    case 1:
      Get(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::GetRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GetResponse*>(response),
             done);
      break;
    case 2:
      Scan(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::ScanRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::ScanResponse*>(response),
             done);
      break;
    case 3:
      Delete(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::DeleteRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 4:
      Count(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::CountRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::CountResponse*>(response),
             done);
      break;
    case 5:
      Traverse(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::TraverseRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::TraverseResponse*>(response),
             done);
      break;
    case 6:
      Query(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::QueryRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::QueryResponse*>(response),
             done);
      break;
    case 7:
      SubQuery(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::QueryRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::QueryResponse*>(response),
             done);
      break;
    case 8:
      SQLBatchRequestQuery(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::SQLBatchRequestQueryRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::SQLBatchRequestQueryResponse*>(response),
             done);
      break;
    case 9:
      SubBatchRequestQuery(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::SQLBatchRequestQueryRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::SQLBatchRequestQueryResponse*>(response),
             done);
      break;
    case 10:
      CreateTable(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::CreateTableRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::CreateTableResponse*>(response),
             done);
      break;
    case 11:
      LoadTable(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::LoadTableRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 12:
      DropTable(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::DropTableRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::DropTableResponse*>(response),
             done);
      break;
    case 13:
      GetTableStatus(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::GetTableStatusRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GetTableStatusResponse*>(response),
             done);
      break;
    case 14:
      GetTableSchema(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::GetTableSchemaRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GetTableSchemaResponse*>(response),
             done);
      break;
    case 15:
      GetTableFollower(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::GetTableFollowerRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GetTableFollowerResponse*>(response),
             done);
      break;
    case 16:
      UpdateTTL(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::UpdateTTLRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::UpdateTTLResponse*>(response),
             done);
      break;
    case 17:
      ExecuteGc(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::ExecuteGcRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 18:
      AppendEntries(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::AppendEntriesRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::AppendEntriesResponse*>(response),
             done);
      break;
    case 19:
      AddReplica(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::ReplicaRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::AddReplicaResponse*>(response),
             done);
      break;
    case 20:
      DelReplica(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::ReplicaRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 21:
      ChangeRole(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::ChangeRoleRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::ChangeRoleResponse*>(response),
             done);
      break;
    case 22:
      MakeSnapshot(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::GeneralRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 23:
      PauseSnapshot(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::GeneralRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 24:
      RecoverSnapshot(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::GeneralRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 25:
      SendSnapshot(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::SendSnapshotRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 26:
      SendData(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::SendDataRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 27:
      SetExpire(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::SetExpireRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 28:
      GetTaskStatus(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::TaskStatusRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::TaskStatusResponse*>(response),
             done);
      break;
    case 29:
      DeleteOPTask(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::DeleteTaskRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 30:
      GetTermPair(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::GetTermPairRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GetTermPairResponse*>(response),
             done);
      break;
    case 31:
      GetManifest(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::GetManifestRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GetManifestResponse*>(response),
             done);
      break;
    case 32:
      CheckFile(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::CheckFileRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 33:
      DeleteBinlog(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::GeneralRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 34:
      ShowMemPool(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::HttpRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::HttpResponse*>(response),
             done);
      break;
    case 35:
      GetCatalog(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::GetCatalogRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GetCatalogResponse*>(response),
             done);
      break;
    case 36:
      ConnectZK(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::ConnectZKRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 37:
      DisConnectZK(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::DisConnectZKRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 38:
      UpdateTableMetaForAddField(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::UpdateTableMetaForAddFieldRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 39:
      SetMode(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::SetModeRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 40:
      GetAllSnapshotOffset(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::EmptyRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::TableSnapshotOffsetResponse*>(response),
             done);
      break;
    case 41:
      AddIndex(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::AddIndexRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 42:
      SendIndexData(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::SendIndexDataRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 43:
      DeleteIndex(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::DeleteIndexRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 44:
      DumpIndexData(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::DumpIndexDataRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 45:
      LoadIndexData(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::LoadIndexDataRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 46:
      ExtractIndexData(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::ExtractIndexDataRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 47:
      ExtractMultiIndexData(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::ExtractMultiIndexDataRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 48:
      CancelOP(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::CancelOPRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 49:
      UpdateRealEndpointMap(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::UpdateRealEndpointMapRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 50:
      CreateProcedure(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::CreateProcedureRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 51:
      DropProcedure(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::DropProcedureRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 52:
      Refresh(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::RefreshRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 53:
      GetBulkLoadInfo(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::BulkLoadInfoRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::BulkLoadInfoResponse*>(response),
             done);
      break;
    case 54:
      BulkLoad(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::BulkLoadRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::GeneralResponse*>(response),
             done);
      break;
    case 55:
      CreateFunction(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::CreateFunctionRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::CreateFunctionResponse*>(response),
             done);
      break;
    case 56:
      DropFunction(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::DropFunctionRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::DropFunctionResponse*>(response),
             done);
      break;
    case 57:
      CreateAggregator(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::CreateAggregatorRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::CreateAggregatorResponse*>(response),
             done);
      break;
    case 58:
      GetAndFlushDeployStats(controller,
             ::google::protobuf::down_cast<const ::openmldb::api::GAFDeployStatsRequest*>(request),
             ::google::protobuf::down_cast< ::openmldb::api::DeployStatsResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& TabletServer::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::openmldb::api::PutRequest::default_instance();
    case 1:
      return ::openmldb::api::GetRequest::default_instance();
    case 2:
      return ::openmldb::api::ScanRequest::default_instance();
    case 3:
      return ::openmldb::api::DeleteRequest::default_instance();
    case 4:
      return ::openmldb::api::CountRequest::default_instance();
    case 5:
      return ::openmldb::api::TraverseRequest::default_instance();
    case 6:
      return ::openmldb::api::QueryRequest::default_instance();
    case 7:
      return ::openmldb::api::QueryRequest::default_instance();
    case 8:
      return ::openmldb::api::SQLBatchRequestQueryRequest::default_instance();
    case 9:
      return ::openmldb::api::SQLBatchRequestQueryRequest::default_instance();
    case 10:
      return ::openmldb::api::CreateTableRequest::default_instance();
    case 11:
      return ::openmldb::api::LoadTableRequest::default_instance();
    case 12:
      return ::openmldb::api::DropTableRequest::default_instance();
    case 13:
      return ::openmldb::api::GetTableStatusRequest::default_instance();
    case 14:
      return ::openmldb::api::GetTableSchemaRequest::default_instance();
    case 15:
      return ::openmldb::api::GetTableFollowerRequest::default_instance();
    case 16:
      return ::openmldb::api::UpdateTTLRequest::default_instance();
    case 17:
      return ::openmldb::api::ExecuteGcRequest::default_instance();
    case 18:
      return ::openmldb::api::AppendEntriesRequest::default_instance();
    case 19:
      return ::openmldb::api::ReplicaRequest::default_instance();
    case 20:
      return ::openmldb::api::ReplicaRequest::default_instance();
    case 21:
      return ::openmldb::api::ChangeRoleRequest::default_instance();
    case 22:
      return ::openmldb::api::GeneralRequest::default_instance();
    case 23:
      return ::openmldb::api::GeneralRequest::default_instance();
    case 24:
      return ::openmldb::api::GeneralRequest::default_instance();
    case 25:
      return ::openmldb::api::SendSnapshotRequest::default_instance();
    case 26:
      return ::openmldb::api::SendDataRequest::default_instance();
    case 27:
      return ::openmldb::api::SetExpireRequest::default_instance();
    case 28:
      return ::openmldb::api::TaskStatusRequest::default_instance();
    case 29:
      return ::openmldb::api::DeleteTaskRequest::default_instance();
    case 30:
      return ::openmldb::api::GetTermPairRequest::default_instance();
    case 31:
      return ::openmldb::api::GetManifestRequest::default_instance();
    case 32:
      return ::openmldb::api::CheckFileRequest::default_instance();
    case 33:
      return ::openmldb::api::GeneralRequest::default_instance();
    case 34:
      return ::openmldb::api::HttpRequest::default_instance();
    case 35:
      return ::openmldb::api::GetCatalogRequest::default_instance();
    case 36:
      return ::openmldb::api::ConnectZKRequest::default_instance();
    case 37:
      return ::openmldb::api::DisConnectZKRequest::default_instance();
    case 38:
      return ::openmldb::api::UpdateTableMetaForAddFieldRequest::default_instance();
    case 39:
      return ::openmldb::api::SetModeRequest::default_instance();
    case 40:
      return ::openmldb::api::EmptyRequest::default_instance();
    case 41:
      return ::openmldb::api::AddIndexRequest::default_instance();
    case 42:
      return ::openmldb::api::SendIndexDataRequest::default_instance();
    case 43:
      return ::openmldb::api::DeleteIndexRequest::default_instance();
    case 44:
      return ::openmldb::api::DumpIndexDataRequest::default_instance();
    case 45:
      return ::openmldb::api::LoadIndexDataRequest::default_instance();
    case 46:
      return ::openmldb::api::ExtractIndexDataRequest::default_instance();
    case 47:
      return ::openmldb::api::ExtractMultiIndexDataRequest::default_instance();
    case 48:
      return ::openmldb::api::CancelOPRequest::default_instance();
    case 49:
      return ::openmldb::api::UpdateRealEndpointMapRequest::default_instance();
    case 50:
      return ::openmldb::api::CreateProcedureRequest::default_instance();
    case 51:
      return ::openmldb::api::DropProcedureRequest::default_instance();
    case 52:
      return ::openmldb::api::RefreshRequest::default_instance();
    case 53:
      return ::openmldb::api::BulkLoadInfoRequest::default_instance();
    case 54:
      return ::openmldb::api::BulkLoadRequest::default_instance();
    case 55:
      return ::openmldb::api::CreateFunctionRequest::default_instance();
    case 56:
      return ::openmldb::api::DropFunctionRequest::default_instance();
    case 57:
      return ::openmldb::api::CreateAggregatorRequest::default_instance();
    case 58:
      return ::openmldb::api::GAFDeployStatsRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& TabletServer::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::openmldb::api::PutResponse::default_instance();
    case 1:
      return ::openmldb::api::GetResponse::default_instance();
    case 2:
      return ::openmldb::api::ScanResponse::default_instance();
    case 3:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 4:
      return ::openmldb::api::CountResponse::default_instance();
    case 5:
      return ::openmldb::api::TraverseResponse::default_instance();
    case 6:
      return ::openmldb::api::QueryResponse::default_instance();
    case 7:
      return ::openmldb::api::QueryResponse::default_instance();
    case 8:
      return ::openmldb::api::SQLBatchRequestQueryResponse::default_instance();
    case 9:
      return ::openmldb::api::SQLBatchRequestQueryResponse::default_instance();
    case 10:
      return ::openmldb::api::CreateTableResponse::default_instance();
    case 11:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 12:
      return ::openmldb::api::DropTableResponse::default_instance();
    case 13:
      return ::openmldb::api::GetTableStatusResponse::default_instance();
    case 14:
      return ::openmldb::api::GetTableSchemaResponse::default_instance();
    case 15:
      return ::openmldb::api::GetTableFollowerResponse::default_instance();
    case 16:
      return ::openmldb::api::UpdateTTLResponse::default_instance();
    case 17:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 18:
      return ::openmldb::api::AppendEntriesResponse::default_instance();
    case 19:
      return ::openmldb::api::AddReplicaResponse::default_instance();
    case 20:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 21:
      return ::openmldb::api::ChangeRoleResponse::default_instance();
    case 22:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 23:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 24:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 25:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 26:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 27:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 28:
      return ::openmldb::api::TaskStatusResponse::default_instance();
    case 29:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 30:
      return ::openmldb::api::GetTermPairResponse::default_instance();
    case 31:
      return ::openmldb::api::GetManifestResponse::default_instance();
    case 32:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 33:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 34:
      return ::openmldb::api::HttpResponse::default_instance();
    case 35:
      return ::openmldb::api::GetCatalogResponse::default_instance();
    case 36:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 37:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 38:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 39:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 40:
      return ::openmldb::api::TableSnapshotOffsetResponse::default_instance();
    case 41:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 42:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 43:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 44:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 45:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 46:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 47:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 48:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 49:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 50:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 51:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 52:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 53:
      return ::openmldb::api::BulkLoadInfoResponse::default_instance();
    case 54:
      return ::openmldb::api::GeneralResponse::default_instance();
    case 55:
      return ::openmldb::api::CreateFunctionResponse::default_instance();
    case 56:
      return ::openmldb::api::DropFunctionResponse::default_instance();
    case 57:
      return ::openmldb::api::CreateAggregatorResponse::default_instance();
    case 58:
      return ::openmldb::api::DeployStatsResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

TabletServer_Stub::TabletServer_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
TabletServer_Stub::TabletServer_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
TabletServer_Stub::~TabletServer_Stub() {
  if (owns_channel_) delete channel_;
}

void TabletServer_Stub::Put(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::PutRequest* request,
                              ::openmldb::api::PutResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void TabletServer_Stub::Get(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::GetRequest* request,
                              ::openmldb::api::GetResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void TabletServer_Stub::Scan(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::ScanRequest* request,
                              ::openmldb::api::ScanResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void TabletServer_Stub::Delete(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::DeleteRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void TabletServer_Stub::Count(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::CountRequest* request,
                              ::openmldb::api::CountResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void TabletServer_Stub::Traverse(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::TraverseRequest* request,
                              ::openmldb::api::TraverseResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}
void TabletServer_Stub::Query(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::QueryRequest* request,
                              ::openmldb::api::QueryResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(6),
                       controller, request, response, done);
}
void TabletServer_Stub::SubQuery(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::QueryRequest* request,
                              ::openmldb::api::QueryResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(7),
                       controller, request, response, done);
}
void TabletServer_Stub::SQLBatchRequestQuery(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::SQLBatchRequestQueryRequest* request,
                              ::openmldb::api::SQLBatchRequestQueryResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(8),
                       controller, request, response, done);
}
void TabletServer_Stub::SubBatchRequestQuery(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::SQLBatchRequestQueryRequest* request,
                              ::openmldb::api::SQLBatchRequestQueryResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(9),
                       controller, request, response, done);
}
void TabletServer_Stub::CreateTable(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::CreateTableRequest* request,
                              ::openmldb::api::CreateTableResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(10),
                       controller, request, response, done);
}
void TabletServer_Stub::LoadTable(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::LoadTableRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(11),
                       controller, request, response, done);
}
void TabletServer_Stub::DropTable(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::DropTableRequest* request,
                              ::openmldb::api::DropTableResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(12),
                       controller, request, response, done);
}
void TabletServer_Stub::GetTableStatus(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::GetTableStatusRequest* request,
                              ::openmldb::api::GetTableStatusResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(13),
                       controller, request, response, done);
}
void TabletServer_Stub::GetTableSchema(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::GetTableSchemaRequest* request,
                              ::openmldb::api::GetTableSchemaResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(14),
                       controller, request, response, done);
}
void TabletServer_Stub::GetTableFollower(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::GetTableFollowerRequest* request,
                              ::openmldb::api::GetTableFollowerResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(15),
                       controller, request, response, done);
}
void TabletServer_Stub::UpdateTTL(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::UpdateTTLRequest* request,
                              ::openmldb::api::UpdateTTLResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(16),
                       controller, request, response, done);
}
void TabletServer_Stub::ExecuteGc(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::ExecuteGcRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(17),
                       controller, request, response, done);
}
void TabletServer_Stub::AppendEntries(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::AppendEntriesRequest* request,
                              ::openmldb::api::AppendEntriesResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(18),
                       controller, request, response, done);
}
void TabletServer_Stub::AddReplica(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::ReplicaRequest* request,
                              ::openmldb::api::AddReplicaResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(19),
                       controller, request, response, done);
}
void TabletServer_Stub::DelReplica(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::ReplicaRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(20),
                       controller, request, response, done);
}
void TabletServer_Stub::ChangeRole(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::ChangeRoleRequest* request,
                              ::openmldb::api::ChangeRoleResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(21),
                       controller, request, response, done);
}
void TabletServer_Stub::MakeSnapshot(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::GeneralRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(22),
                       controller, request, response, done);
}
void TabletServer_Stub::PauseSnapshot(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::GeneralRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(23),
                       controller, request, response, done);
}
void TabletServer_Stub::RecoverSnapshot(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::GeneralRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(24),
                       controller, request, response, done);
}
void TabletServer_Stub::SendSnapshot(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::SendSnapshotRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(25),
                       controller, request, response, done);
}
void TabletServer_Stub::SendData(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::SendDataRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(26),
                       controller, request, response, done);
}
void TabletServer_Stub::SetExpire(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::SetExpireRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(27),
                       controller, request, response, done);
}
void TabletServer_Stub::GetTaskStatus(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::TaskStatusRequest* request,
                              ::openmldb::api::TaskStatusResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(28),
                       controller, request, response, done);
}
void TabletServer_Stub::DeleteOPTask(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::DeleteTaskRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(29),
                       controller, request, response, done);
}
void TabletServer_Stub::GetTermPair(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::GetTermPairRequest* request,
                              ::openmldb::api::GetTermPairResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(30),
                       controller, request, response, done);
}
void TabletServer_Stub::GetManifest(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::GetManifestRequest* request,
                              ::openmldb::api::GetManifestResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(31),
                       controller, request, response, done);
}
void TabletServer_Stub::CheckFile(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::CheckFileRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(32),
                       controller, request, response, done);
}
void TabletServer_Stub::DeleteBinlog(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::GeneralRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(33),
                       controller, request, response, done);
}
void TabletServer_Stub::ShowMemPool(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::HttpRequest* request,
                              ::openmldb::api::HttpResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(34),
                       controller, request, response, done);
}
void TabletServer_Stub::GetCatalog(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::GetCatalogRequest* request,
                              ::openmldb::api::GetCatalogResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(35),
                       controller, request, response, done);
}
void TabletServer_Stub::ConnectZK(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::ConnectZKRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(36),
                       controller, request, response, done);
}
void TabletServer_Stub::DisConnectZK(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::DisConnectZKRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(37),
                       controller, request, response, done);
}
void TabletServer_Stub::UpdateTableMetaForAddField(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::UpdateTableMetaForAddFieldRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(38),
                       controller, request, response, done);
}
void TabletServer_Stub::SetMode(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::SetModeRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(39),
                       controller, request, response, done);
}
void TabletServer_Stub::GetAllSnapshotOffset(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::EmptyRequest* request,
                              ::openmldb::api::TableSnapshotOffsetResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(40),
                       controller, request, response, done);
}
void TabletServer_Stub::AddIndex(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::AddIndexRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(41),
                       controller, request, response, done);
}
void TabletServer_Stub::SendIndexData(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::SendIndexDataRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(42),
                       controller, request, response, done);
}
void TabletServer_Stub::DeleteIndex(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::DeleteIndexRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(43),
                       controller, request, response, done);
}
void TabletServer_Stub::DumpIndexData(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::DumpIndexDataRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(44),
                       controller, request, response, done);
}
void TabletServer_Stub::LoadIndexData(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::LoadIndexDataRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(45),
                       controller, request, response, done);
}
void TabletServer_Stub::ExtractIndexData(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::ExtractIndexDataRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(46),
                       controller, request, response, done);
}
void TabletServer_Stub::ExtractMultiIndexData(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::ExtractMultiIndexDataRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(47),
                       controller, request, response, done);
}
void TabletServer_Stub::CancelOP(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::CancelOPRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(48),
                       controller, request, response, done);
}
void TabletServer_Stub::UpdateRealEndpointMap(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::UpdateRealEndpointMapRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(49),
                       controller, request, response, done);
}
void TabletServer_Stub::CreateProcedure(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::CreateProcedureRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(50),
                       controller, request, response, done);
}
void TabletServer_Stub::DropProcedure(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::DropProcedureRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(51),
                       controller, request, response, done);
}
void TabletServer_Stub::Refresh(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::RefreshRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(52),
                       controller, request, response, done);
}
void TabletServer_Stub::GetBulkLoadInfo(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::BulkLoadInfoRequest* request,
                              ::openmldb::api::BulkLoadInfoResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(53),
                       controller, request, response, done);
}
void TabletServer_Stub::BulkLoad(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::BulkLoadRequest* request,
                              ::openmldb::api::GeneralResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(54),
                       controller, request, response, done);
}
void TabletServer_Stub::CreateFunction(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::CreateFunctionRequest* request,
                              ::openmldb::api::CreateFunctionResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(55),
                       controller, request, response, done);
}
void TabletServer_Stub::DropFunction(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::DropFunctionRequest* request,
                              ::openmldb::api::DropFunctionResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(56),
                       controller, request, response, done);
}
void TabletServer_Stub::CreateAggregator(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::CreateAggregatorRequest* request,
                              ::openmldb::api::CreateAggregatorResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(57),
                       controller, request, response, done);
}
void TabletServer_Stub::GetAndFlushDeployStats(::google::protobuf::RpcController* controller,
                              const ::openmldb::api::GAFDeployStatsRequest* request,
                              ::openmldb::api::DeployStatsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(58),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace openmldb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::TaskInfo* Arena::CreateMaybeMessage< ::openmldb::api::TaskInfo >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::TaskInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::OPInfo* Arena::CreateMaybeMessage< ::openmldb::api::OPInfo >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::OPInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::PartSnapshotOffset* Arena::CreateMaybeMessage< ::openmldb::api::PartSnapshotOffset >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::PartSnapshotOffset >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::TableSnapshotOffsetResponse_Table* Arena::CreateMaybeMessage< ::openmldb::api::TableSnapshotOffsetResponse_Table >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::TableSnapshotOffsetResponse_Table >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::TableSnapshotOffsetResponse* Arena::CreateMaybeMessage< ::openmldb::api::TableSnapshotOffsetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::TableSnapshotOffsetResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::Manifest* Arena::CreateMaybeMessage< ::openmldb::api::Manifest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::Manifest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::Dimension* Arena::CreateMaybeMessage< ::openmldb::api::Dimension >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::Dimension >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::TSDimension* Arena::CreateMaybeMessage< ::openmldb::api::TSDimension >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::TSDimension >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::PutRequest* Arena::CreateMaybeMessage< ::openmldb::api::PutRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::PutRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::PutResponse* Arena::CreateMaybeMessage< ::openmldb::api::PutResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::PutResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::DeleteRequest* Arena::CreateMaybeMessage< ::openmldb::api::DeleteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::DeleteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::ExecuteGcRequest* Arena::CreateMaybeMessage< ::openmldb::api::ExecuteGcRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::ExecuteGcRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::GeneralRequest* Arena::CreateMaybeMessage< ::openmldb::api::GeneralRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::GeneralRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::TaskStatusRequest* Arena::CreateMaybeMessage< ::openmldb::api::TaskStatusRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::TaskStatusRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::TaskStatusResponse* Arena::CreateMaybeMessage< ::openmldb::api::TaskStatusResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::TaskStatusResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::DeleteTaskRequest* Arena::CreateMaybeMessage< ::openmldb::api::DeleteTaskRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::DeleteTaskRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::GeneralResponse* Arena::CreateMaybeMessage< ::openmldb::api::GeneralResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::GeneralResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::ScanRequest* Arena::CreateMaybeMessage< ::openmldb::api::ScanRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::ScanRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::TraverseRequest* Arena::CreateMaybeMessage< ::openmldb::api::TraverseRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::TraverseRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::TraverseResponse* Arena::CreateMaybeMessage< ::openmldb::api::TraverseResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::TraverseResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::ScanResponse* Arena::CreateMaybeMessage< ::openmldb::api::ScanResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::ScanResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::ReplicaRequest* Arena::CreateMaybeMessage< ::openmldb::api::ReplicaRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::ReplicaRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::AddReplicaResponse* Arena::CreateMaybeMessage< ::openmldb::api::AddReplicaResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::AddReplicaResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::TableMeta* Arena::CreateMaybeMessage< ::openmldb::api::TableMeta >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::TableMeta >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::CreateTableRequest* Arena::CreateMaybeMessage< ::openmldb::api::CreateTableRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::CreateTableRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::UpdateTableMetaForAddFieldRequest* Arena::CreateMaybeMessage< ::openmldb::api::UpdateTableMetaForAddFieldRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::UpdateTableMetaForAddFieldRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::CreateTableResponse* Arena::CreateMaybeMessage< ::openmldb::api::CreateTableResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::CreateTableResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::LoadTableRequest* Arena::CreateMaybeMessage< ::openmldb::api::LoadTableRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::LoadTableRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::DropTableRequest* Arena::CreateMaybeMessage< ::openmldb::api::DropTableRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::DropTableRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::DropTableResponse* Arena::CreateMaybeMessage< ::openmldb::api::DropTableResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::DropTableResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::GetTableSchemaRequest* Arena::CreateMaybeMessage< ::openmldb::api::GetTableSchemaRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::GetTableSchemaRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::SetExpireRequest* Arena::CreateMaybeMessage< ::openmldb::api::SetExpireRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::SetExpireRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::GetTableSchemaResponse* Arena::CreateMaybeMessage< ::openmldb::api::GetTableSchemaResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::GetTableSchemaResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::UpdateTTLRequest* Arena::CreateMaybeMessage< ::openmldb::api::UpdateTTLRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::UpdateTTLRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::UpdateTTLResponse* Arena::CreateMaybeMessage< ::openmldb::api::UpdateTTLResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::UpdateTTLResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::LogEntry* Arena::CreateMaybeMessage< ::openmldb::api::LogEntry >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::LogEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::AppendEntriesRequest* Arena::CreateMaybeMessage< ::openmldb::api::AppendEntriesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::AppendEntriesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::AppendEntriesResponse* Arena::CreateMaybeMessage< ::openmldb::api::AppendEntriesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::AppendEntriesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::ChangeRoleRequest* Arena::CreateMaybeMessage< ::openmldb::api::ChangeRoleRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::ChangeRoleRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::SendSnapshotRequest* Arena::CreateMaybeMessage< ::openmldb::api::SendSnapshotRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::SendSnapshotRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::SendIndexDataRequest_EndpointPair* Arena::CreateMaybeMessage< ::openmldb::api::SendIndexDataRequest_EndpointPair >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::SendIndexDataRequest_EndpointPair >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::SendIndexDataRequest* Arena::CreateMaybeMessage< ::openmldb::api::SendIndexDataRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::SendIndexDataRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::SendDataRequest* Arena::CreateMaybeMessage< ::openmldb::api::SendDataRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::SendDataRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::ChangeRoleResponse* Arena::CreateMaybeMessage< ::openmldb::api::ChangeRoleResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::ChangeRoleResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::GetTableStatusRequest* Arena::CreateMaybeMessage< ::openmldb::api::GetTableStatusRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::GetTableStatusRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::TsIdxStatus* Arena::CreateMaybeMessage< ::openmldb::api::TsIdxStatus >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::TsIdxStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::TableStatus* Arena::CreateMaybeMessage< ::openmldb::api::TableStatus >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::TableStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::GetTableStatusResponse* Arena::CreateMaybeMessage< ::openmldb::api::GetTableStatusResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::GetTableStatusResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::GetRequest* Arena::CreateMaybeMessage< ::openmldb::api::GetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::GetRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::GetResponse* Arena::CreateMaybeMessage< ::openmldb::api::GetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::GetResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::CountRequest* Arena::CreateMaybeMessage< ::openmldb::api::CountRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::CountRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::CountResponse* Arena::CreateMaybeMessage< ::openmldb::api::CountResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::CountResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::GetTermPairRequest* Arena::CreateMaybeMessage< ::openmldb::api::GetTermPairRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::GetTermPairRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::GetTermPairResponse* Arena::CreateMaybeMessage< ::openmldb::api::GetTermPairResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::GetTermPairResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::GetManifestRequest* Arena::CreateMaybeMessage< ::openmldb::api::GetManifestRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::GetManifestRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::GetManifestResponse* Arena::CreateMaybeMessage< ::openmldb::api::GetManifestResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::GetManifestResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::GetTableFollowerRequest* Arena::CreateMaybeMessage< ::openmldb::api::GetTableFollowerRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::GetTableFollowerRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::FollowerInfo* Arena::CreateMaybeMessage< ::openmldb::api::FollowerInfo >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::FollowerInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::GetTableFollowerResponse* Arena::CreateMaybeMessage< ::openmldb::api::GetTableFollowerResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::GetTableFollowerResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::CheckFileRequest* Arena::CreateMaybeMessage< ::openmldb::api::CheckFileRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::CheckFileRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::AddIndexRequest* Arena::CreateMaybeMessage< ::openmldb::api::AddIndexRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::AddIndexRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::SetModeRequest* Arena::CreateMaybeMessage< ::openmldb::api::SetModeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::SetModeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::EmptyRequest* Arena::CreateMaybeMessage< ::openmldb::api::EmptyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::EmptyRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::ConnectZKRequest* Arena::CreateMaybeMessage< ::openmldb::api::ConnectZKRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::ConnectZKRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::DisConnectZKRequest* Arena::CreateMaybeMessage< ::openmldb::api::DisConnectZKRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::DisConnectZKRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::HttpRequest* Arena::CreateMaybeMessage< ::openmldb::api::HttpRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::HttpRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::HttpResponse* Arena::CreateMaybeMessage< ::openmldb::api::HttpResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::HttpResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::DeleteIndexRequest* Arena::CreateMaybeMessage< ::openmldb::api::DeleteIndexRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::DeleteIndexRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::DumpIndexDataRequest* Arena::CreateMaybeMessage< ::openmldb::api::DumpIndexDataRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::DumpIndexDataRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::LoadIndexDataRequest* Arena::CreateMaybeMessage< ::openmldb::api::LoadIndexDataRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::LoadIndexDataRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::ExtractMultiIndexDataRequest* Arena::CreateMaybeMessage< ::openmldb::api::ExtractMultiIndexDataRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::ExtractMultiIndexDataRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::ExtractIndexDataRequest* Arena::CreateMaybeMessage< ::openmldb::api::ExtractIndexDataRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::ExtractIndexDataRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::Columns* Arena::CreateMaybeMessage< ::openmldb::api::Columns >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::Columns >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::CancelOPRequest* Arena::CreateMaybeMessage< ::openmldb::api::CancelOPRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::CancelOPRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::RealEndpointPair* Arena::CreateMaybeMessage< ::openmldb::api::RealEndpointPair >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::RealEndpointPair >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::UpdateRealEndpointMapRequest* Arena::CreateMaybeMessage< ::openmldb::api::UpdateRealEndpointMapRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::UpdateRealEndpointMapRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::QueryRequest* Arena::CreateMaybeMessage< ::openmldb::api::QueryRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::QueryRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::QueryResponse* Arena::CreateMaybeMessage< ::openmldb::api::QueryResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::QueryResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::SQLBatchRequestQueryRequest* Arena::CreateMaybeMessage< ::openmldb::api::SQLBatchRequestQueryRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::SQLBatchRequestQueryRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::SQLBatchRequestQueryResponse* Arena::CreateMaybeMessage< ::openmldb::api::SQLBatchRequestQueryResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::SQLBatchRequestQueryResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::ExplainRequest* Arena::CreateMaybeMessage< ::openmldb::api::ExplainRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::ExplainRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::ExplainResponse* Arena::CreateMaybeMessage< ::openmldb::api::ExplainResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::ExplainResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::RefreshRequest* Arena::CreateMaybeMessage< ::openmldb::api::RefreshRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::RefreshRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::GetCatalogRequest* Arena::CreateMaybeMessage< ::openmldb::api::GetCatalogRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::GetCatalogRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::GetCatalogResponse* Arena::CreateMaybeMessage< ::openmldb::api::GetCatalogResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::GetCatalogResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::DataBlockInfo* Arena::CreateMaybeMessage< ::openmldb::api::DataBlockInfo >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::DataBlockInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::BinlogInfo* Arena::CreateMaybeMessage< ::openmldb::api::BinlogInfo >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::BinlogInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::Segment_KeyEntries_KeyEntry_TimeEntry* Arena::CreateMaybeMessage< ::openmldb::api::Segment_KeyEntries_KeyEntry_TimeEntry >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::Segment_KeyEntries_KeyEntry_TimeEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::Segment_KeyEntries_KeyEntry* Arena::CreateMaybeMessage< ::openmldb::api::Segment_KeyEntries_KeyEntry >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::Segment_KeyEntries_KeyEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::Segment_KeyEntries* Arena::CreateMaybeMessage< ::openmldb::api::Segment_KeyEntries >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::Segment_KeyEntries >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::Segment* Arena::CreateMaybeMessage< ::openmldb::api::Segment >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::Segment >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::BulkLoadIndex* Arena::CreateMaybeMessage< ::openmldb::api::BulkLoadIndex >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::BulkLoadIndex >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::BulkLoadRequest* Arena::CreateMaybeMessage< ::openmldb::api::BulkLoadRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::BulkLoadRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::BulkLoadInfoRequest* Arena::CreateMaybeMessage< ::openmldb::api::BulkLoadInfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::BulkLoadInfoRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt_IndexDef* Arena::CreateMaybeMessage< ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt_IndexDef >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt_IndexDef >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt* Arena::CreateMaybeMessage< ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::BulkLoadInfoResponse_InnerIndexSt >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry* Arena::CreateMaybeMessage< ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment_MapFieldEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment* Arena::CreateMaybeMessage< ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::BulkLoadInfoResponse_InnerSegments_Segment >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::BulkLoadInfoResponse_InnerSegments* Arena::CreateMaybeMessage< ::openmldb::api::BulkLoadInfoResponse_InnerSegments >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::BulkLoadInfoResponse_InnerSegments >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::BulkLoadInfoResponse* Arena::CreateMaybeMessage< ::openmldb::api::BulkLoadInfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::BulkLoadInfoResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::CreateFunctionRequest* Arena::CreateMaybeMessage< ::openmldb::api::CreateFunctionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::CreateFunctionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::CreateFunctionResponse* Arena::CreateMaybeMessage< ::openmldb::api::CreateFunctionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::CreateFunctionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::DropFunctionRequest* Arena::CreateMaybeMessage< ::openmldb::api::DropFunctionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::DropFunctionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::DropFunctionResponse* Arena::CreateMaybeMessage< ::openmldb::api::DropFunctionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::DropFunctionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::CreateAggregatorRequest* Arena::CreateMaybeMessage< ::openmldb::api::CreateAggregatorRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::CreateAggregatorRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::CreateAggregatorResponse* Arena::CreateMaybeMessage< ::openmldb::api::CreateAggregatorResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::CreateAggregatorResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::GAFDeployStatsRequest* Arena::CreateMaybeMessage< ::openmldb::api::GAFDeployStatsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::GAFDeployStatsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::DeployStatsResponse_DeployStat* Arena::CreateMaybeMessage< ::openmldb::api::DeployStatsResponse_DeployStat >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::DeployStatsResponse_DeployStat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::openmldb::api::DeployStatsResponse* Arena::CreateMaybeMessage< ::openmldb::api::DeployStatsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::openmldb::api::DeployStatsResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
