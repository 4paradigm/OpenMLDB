name: FEDB-CICD
on: [push, pull_request, workflow_dispatch]
env:
  GIT_SUBMODULE_STRATEGY: recursive
  USER_NAME: dl239
  #PASSWORD: secrets.DL_PAT
jobs:
  style_check:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/4paradigm/centos6_gcc7_fesql:0.0.1-legacy
      credentials:
        username: $USER_NAME
        password: ${{ secrets.DL_PAT }}
    steps:
      - uses: actions/checkout@v1
#        with:
#          submodules: true
      - name: update nss
        run: yum update -y nss curl libcurl
      - name: style_check
        run: source /root/.bashrc && bash tools/style_check.sh

  build:
    needs: [style_check]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/4paradigm/centos6_gcc7_fesql:0.0.1-legacy
      credentials:
        username: $USER_NAME
        password: ${{ secrets.DL_PAT }}
    steps:
      - uses: actions/checkout@v1
#        with:
#          submodules: true
      - name: update nss
        run: yum update -y nss curl libcurl
      - name: build hybridse
        run: source /root/.bashrc && bash tools/install_hybridse.sh SRC
      - name: build fedb
        run: |
          ln -sf /depends/thirdparty thirdparty
          ln -sf /depends/thirdsrc thirdsrc
          source /root/.bashrc && bash steps/simple_compile.sh
#      - uses: actions/upload-artifact@v1
#        with:
#          name: fedb
#          path: build/bin/fedb
#      - uses: actions/upload-artifact@v1
#        with:
#          name: sql_sdk_test
#          path: build/bin/sql_sdk_test
      - uses: actions/upload-artifact@v1
        with:
          name: sql_cluster_test
          path: build/bin/sql_cluster_test
#      - uses: actions/upload-artifact@v1
#        with:
#          name: libsql_jsdk.so
#          path: build/src/sdk/libsql_jsdk.so
#      - uses: actions/upload-artifact@v1
#        with:
#          name: sql_pysdk
#          path: build/sql_pysdk/dist/
#      - uses: actions/upload-artifact@v1
#        with:
#          name: python-whl
#          path: build/python/dist/

#  fesql_auto_test_level_0:
#    needs: [build]
#    runs-on: ubuntu-latest
#    container:
#      image: ghcr.io/4paradigm/centos6_gcc7_fesql:0.0.1-legacy
#      credentials:
#        username: $USER_NAME
#        password: ${{ secrets.DL_PAT }}
#    steps:
#      - uses: actions/checkout@v1
#
#      - name: update nss
#        run: yum update -y nss curl libcurl
#      - name: update submodule
#        run: |
#          ln -s /opt/rh/sclo-git25/root/usr/bin/git /usr/local/bin/git
#          git submodule init
#          git submodule update
#      - name: set_up
#        run: |
#          mkdir /rambuild
#          mkdir -p build/bin
#      - uses: actions/download-artifact@v1
#        id: download
#        with:
#          name: fedb
#          #path: build/bin
#      - name: run case
#        run: |
#          mv fedb/* build/bin/ && rmdir fedb
#          ln -sf /depends/thirdparty thirdparty
#          ln -sf /depends/thirdsrc thirdsrc
#          source /root/.bashrc && bash steps/fesql_auto_test.sh

#  cpp_ut:
#    needs: [build]
#    runs-on: ubuntu-latest
#    container:
#      image: ghcr.io/4paradigm/centos6_gcc7_fesql:0.0.1-legacy
#      credentials:
#        username: $USER_NAME
#        password: ${{ secrets.DL_PAT }}
#    steps:
#      - uses: actions/checkout@v1
#      - name: update nss
#        run: yum update -y nss curl libcurl
#      - name: update submodule
#        run: |
#          ln -s /opt/rh/sclo-git25/root/usr/bin/git /usr/local/bin/git
#          git submodule init
#          git submodule update
#      - name: exec-ut
#        run: |
#          ln -sf /depends/thirdparty thirdparty
#          ln -sf /depends/thirdsrc thirdsrc
#          source /root/.bashrc && sh tools/install_fesql.sh
#          mkdir -p build
#          source /root/.bashrc && cd build && cmake -DSQL_PYSDK_ENABLE=OFF -DSQL_JAVASDK_ENABLE=OFF .. && make -j$(nproc) && cd ../
#          source /root/.bashrc && LD_LIBRARY_PATH=/depends/thirdparty/lib:$LD_LIBRARY_PATH bash steps/ut.sh
#      - uses: actions/upload-artifact@v1
#        with:
#          name: cpp_ut-report
#          path: reports/
#
#  fesql_auto_test_level_cluster_0:
#    needs: [build]
#    runs-on: ubuntu-latest
#    container:
#      image: ghcr.io/4paradigm/centos6_gcc7_fesql:0.0.1-legacy
#      credentials:
#        username: $USER_NAME
#        password: ${{ secrets.DL_PAT }}
#    steps:
#      - uses: actions/checkout@v1
#      - name: update nss
#        run: yum update -y nss curl libcurl
#      - name: update submodule
#        run: |
#          ln -s /opt/rh/sclo-git25/root/usr/bin/git /usr/local/bin/git
#          git submodule init
#          git submodule update
#      - name: set_up
#        run: |
#          mkdir /rambuild
#          mkdir -p build/bin
#      - uses: actions/download-artifact@v1
#        with:
#          name: fedb
#      - name: run case
#        run: |
#          mv fedb/* build/bin/ && rmdir fedb
#          ln -sf /depends/thirdparty thirdparty
#          ln -sf /depends/thirdsrc thirdsrc
#          source /root/.bashrc && bash steps/fesql_auto_test_cluster.sh "0"
#      - uses: actions/upload-artifact@v1
#        with:
#          name: fesql_auto_test_level_cluster_0-report
#          path: reports/
#
#
#  fesql_sdk_cpp_sql_sdk_test_level_0:
#    needs: [build]
#    runs-on: ubuntu-latest
#    container:
#      image: ghcr.io/4paradigm/centos6_gcc7_fesql:0.0.1-legacy
#      credentials:
#        username: $USER_NAME
#        password: ${{ secrets.DL_PAT }}
#    steps:
#      - uses: actions/checkout@v1
#      - name: update nss
#        run: yum update -y nss curl libcurl
#      - name: update submodule
#        run: |
#          ln -s /opt/rh/sclo-git25/root/usr/bin/git /usr/local/bin/git
#          git submodule init
#          git submodule update
#      - name: set_up
#        run: |
#          mkdir /rambuild
##          mkdir -p build/bin
#      - uses: actions/download-artifact@v1
#        with:
#          name: sql_sdk_test
#          path: build/bin
#      - name: run case
#        run: |
#          chmod +x build/bin/sql_sdk_test
#          ln -sf /depends/thirdparty thirdparty
#          ln -sf /depends/thirdsrc thirdsrc
#          source /root/.bashrc && bash steps/fesql_c_ut.sh 0 sql_sdk_test
#      - uses: actions/upload-artifact@v1
#        with:
#          name: fesql_sdk_cpp_sql_sdk_test_level_0-report
#          path: reports/
#
  fesql_sdk_cpp_sql_cluster_test_level_0:
    needs: [build]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/4paradigm/centos6_gcc7_fesql:0.0.1-legacy
      credentials:
        username: $USER_NAME
        password: ${{ secrets.DL_PAT }}
    steps:
      - uses: actions/checkout@v1
      - name: update nss
        run: yum update -y nss curl libcurl
      - name: update submodule
        run: |
          ln -s /opt/rh/sclo-git25/root/usr/bin/git /usr/local/bin/git
          git submodule init
          git submodule update
      - name: set_up
        run: |
          mkdir /rambuild
      - uses: actions/download-artifact@v1
        with:
          name: sql_cluster_test
          path: build/bin
      - name: run case
        run: |
          chmod +x build/bin/sql_cluster_test
          ln -sf /depends/thirdparty thirdparty
          ln -sf /depends/thirdsrc thirdsrc
          source /root/.bashrc && bash steps/fesql_c_ut.sh 0 sql_cluster_test
      - uses: actions/upload-artifact@v1
        with:
          name: fesql_sdk_cpp_sql_cluster_test_level_0-report
          path: reports/
#
#  fesql_test_python:
#    needs: [build]
#    runs-on: ubuntu-latest
#    container:
#      image: ghcr.io/4paradigm/centos6_gcc7_fesql:0.0.1-legacy
#      credentials:
#        username: $USER_NAME
#        password: ${{ secrets.DL_PAT }}
#    steps:
#      - uses: actions/checkout@v1
#      - name: update nss
#        run: yum update -y nss curl libcurl
#      - name: update submodule
#        run: |
#          ln -s /opt/rh/sclo-git25/root/usr/bin/git /usr/local/bin/git
#          git submodule init
#          git submodule update
#      - name: set_up
#        run: |
#          mkdir /rambuild
#          mkdir -p build/bin
#          mkdir -p build/pythoh/dist
#      - uses: actions/download-artifact@v1
#        with:
#          name: fedb
#      - uses: actions/download-artifact@v1
#        with:
#          name: python-whl
#      - name: run case
#        run: |
#          mv fedb/* build/bin/ && rmdir fedb
#          mv python-whl/* build/python/dist/ && rmdir python-whl
#          ln -sf /depends/thirdparty thirdparty
#          ln -sf /depends/thirdsrc thirdsrc
#          source /root/.bashrc && bash steps/fesql_test_python.sh
#      - uses: actions/upload-artifact@v1
#        with:
#          name: fesql_test_python-report
#          path: src/sdk/python/sqlalchemy-test/
#
#  tablet_multi_demension:
#    needs: [build]
#    runs-on: ubuntu-latest
#    container:
#      image: ghcr.io/4paradigm/centos6_gcc7_fesql:0.0.1-legacy
#      credentials:
#        username: $USER_NAME
#        password: ${{ secrets.DL_PAT }}
#    steps:
#      - uses: actions/checkout@v1
#      - name: update nss
#        run: yum update -y nss curl libcurl
#      - name: update submodule
#        run: |
#          ln -s /opt/rh/sclo-git25/root/usr/bin/git /usr/local/bin/git
#          git submodule init
#          git submodule update
#      - name: set_up
#        run: |
#          mkdir /rambuild
#          mkdir -p build/bin
#      - uses: actions/download-artifact@v1
#        with:
#          name: fedb
#      - name: run case
#        run: |
#          mv fedb/* build/bin/ && rmdir fedb
#          ln -sf /depends/thirdparty thirdparty
#          ln -sf /depends/thirdsrc thirdsrc
#          source /root/.bashrc && bash steps/integration_test_on_ramdir.sh 1 "test" "ns_client"
#      - uses: actions/upload-artifact@v1
#        with:
#          name: tablet_multi_demension-report
#          path: /rambuild/fedb/test-output/integrationtest/test-reports
#
#  ns_multi_demension:
#    needs: [build]
#    runs-on: ubuntu-latest
#    container:
#      image: ghcr.io/4paradigm/centos6_gcc7_fesql:0.0.1-legacy
#      credentials:
#        username: $USER_NAME
#        password: ${{ secrets.DL_PAT }}
#    steps:
#      - uses: actions/checkout@v1
#      - name: update nss
#        run: yum update -y nss curl libcurl
#      - name: update submodule
#        run: |
#          ln -s /opt/rh/sclo-git25/root/usr/bin/git /usr/local/bin/git
#          git submodule init
#          git submodule update
#      - name: set_up
#        run: |
#          mkdir /rambuild
#          mkdir -p build/bin
#      - uses: actions/download-artifact@v1
#        with:
#          name: fedb
#          #path: build/bin
#      - name: run case
#        run: |
#          mv fedb/* build/bin/ && rmdir fedb
#          ln -sf /depends/thirdparty thirdparty
#          ln -sf /depends/thirdsrc thirdsrc
#          source /root/.bashrc && bash steps/integration_test_on_ramdir.sh 1 "ns_client" "disk"
#      - uses: actions/upload-artifact@v1
#        with:
#          name: ns_multi_demension-report
#          path: /rambuild/fedb/test-output/integrationtest/test-reports


  delete_artifact:
      needs: [fesql_sdk_cpp_sql_cluster_test_level_0]
      runs-on: ubuntu-latest
      if: always()
      steps:
        - uses: geekyeggo/delete-artifact@v1
          with:
            name: |
              sql_sdk_test
              fedb
              sql_cluster_test
              libsql_jsdk.so
              sql_pysdk
              python-whl
            failOnError: false