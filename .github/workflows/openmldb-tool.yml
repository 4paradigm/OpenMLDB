# OpenMLDB tool jobs
name: openmldb-tool

on:
  push:
    branches:
      - main
    paths:
      - 'release/**'
      - 'tools/**'
      - 'test/test-tool/openmldb-deploy/**'
  pull_request:
    paths:
      - 'release/**'
      - 'tools/**'
      - 'test/test-tool/openmldb-deploy/**'
  workflow_dispatch:

env:
  GIT_SUBMODULE_STRATEGY: recursive
  DEPLOY_DIR: /mnt/hdd0/openmldb_runner_work/openmldb_env
  NODE_LIST: node-1,node-2,node-3
  # ref https://github.blog/changelog/2024-03-07-github-actions-all-actions-will-run-on-node20-instead-of-node16-by-default/
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

jobs:
  openmldb-tool-test:
    runs-on: [self-hosted,seq-task]
    if: github.repository == '4paradigm/OpenMLDB'
    steps:
      - uses: actions/checkout@v2

      - name: prepare env
        run: |
          bash test/test-tool/openmldb-deploy/gen_conf.sh ${{ env.DEPLOY_DIR }} ${{ env.NODE_LIST }} > hosts
          cp -f hosts test/test-tool/openmldb-deploy/
          pip3 install requests openmldb pytest
      - name: install openmldb
        run: |
          VERSION=`git fetch --tags | git tag -l v[0-9].* | tail -n1`
          VERSION=${VERSION#v}
          bash test/test-tool/openmldb-deploy/install.sh ${VERSION}
      - name: run test
        run: |
          cp -f tools/tool.py test/test-tool/openmldb-deploy/cases/
          cp -f tools/* openmldb/tools/
          python3 -m pytest test/test-tool/openmldb-deploy/cases --junit-xml=pytest.xml
      - name: clear env
        run: |
            bash openmldb/sbin/stop-all.sh && bash openmldb/sbin/clear-all.sh
      - name: upload python test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: openmldb-tool-test-result-${{ github.sha }}
          path: |
            pytest.xml

  openmldb-tool-name:
    runs-on: [self-hosted,generic]
    if: github.repository == '4paradigm/OpenMLDB'
    env:
      ACTIONS_RUNNER_FORCE_ACTIONS_NODE_VERSION: node16
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
    container:
      image: ghcr.io/4paradigm/hybridsql:latest
    steps:
      - uses: actions/checkout@v2

      - name: prepare env
        run: |
          pip3 install requests openmldb pytest
          yum install -y rsync
      - name: install openmldb
        run: |
          git fetch --tags --force
          VERSION=$(git describe --always --tags `git rev-list --tags --max-count=1`)
          VERSION=${VERSION#v}
          bash test/test-tool/openmldb-deploy/install_with_name.sh ${VERSION}
      - name: run test
        run: |
          cp -f tools/tool.py test/test-tool/openmldb-deploy/cases/
          cp -f tools/* openmldb/tools/
          python3 -m pytest test/test-tool/openmldb-deploy/cases --junit-xml=pytest.xml
      - name: clear env
        run: |
            bash openmldb/sbin/stop-all.sh && bash openmldb/sbin/clear-all.sh
      - name: upload python test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: openmldb-tool-test-result-${{ github.sha }}
          path: |
            pytest.xml
