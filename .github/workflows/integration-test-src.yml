name: INTEGRATION-TEST-SRC

on:
#  pull_request:
#  schedule:
#    - cron:  '0 1 * * *'
  workflow_dispatch:
    inputs:
      EXEC_TEST_TYPE:
        description: 'Which tests need to be executed? The options are all, python, java, batch, cli, standalone-cli, apiserver, yarn'
        required: true
        default: 'all'
env:
  GIT_SUBMODULE_STRATEGY: recursive
  HYBRIDSE_SOURCE: local
  # ref https://github.blog/changelog/2024-03-07-github-actions-all-actions-will-run-on-node20-instead-of-node16-by-default/
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

jobs:
#  java-sdk-test-standalone-0:
#    if: ${{ github.event.inputs.EXEC_TEST_TYPE == 'all' || github.event.inputs.EXEC_TEST_TYPE == 'java' }}
#    runs-on: ubuntu-latest
#    container:
#      image: ghcr.io/4paradigm/hybridsql:0.4.1
#    env:
#      OS: linux
#    steps:
#      - uses: actions/checkout@v2
#      - name: build jsdk and package
#        run: |
#          make configure CMAKE_INSTALL_PREFIX=openmldb-linux
#          make SQL_JAVASDK_ENABLE=ON && make SQL_JAVASDK_ENABLE=ON install
#          tar -zcvf openmldb-linux.tar.gz openmldb-linux
#      - name: test
#        run: source /root/.bashrc && bash test/steps/openmldb-sdk-test-java.sh -b SRC -c test_all.xml -d standalone -l "0"
#      - name: TEST Results
#        if: always()
#        uses: EnricoMi/publish-unit-test-result-action@v1
#        with:
#          files: test/integration-test/openmldb-test-java/openmldb-sdk-test/target/surefire-reports/TEST-*.xml
#          check_name: Java SDK Test Standalone0 SRC Report
#          comment_title: Java SDK Test Standalone0 SRC Report
#
#  java-sdk-test-standalone-1:
#    if: ${{ github.event.inputs.EXEC_TEST_TYPE == 'all' || github.event.inputs.EXEC_TEST_TYPE == 'java' }}
#    runs-on: ubuntu-latest
#    container:
#      image: ghcr.io/4paradigm/hybridsql:0.4.1
#    env:
#      OS: linux
#    steps:
#      - uses: actions/checkout@v2
#      - name: build jsdk and package
#        run: |
#          make configure CMAKE_INSTALL_PREFIX=openmldb-linux
#          make SQL_JAVASDK_ENABLE=ON && make SQL_JAVASDK_ENABLE=ON install
#          tar -zcvf openmldb-linux.tar.gz openmldb-linux
#      - name: test
#        run: source /root/.bashrc && bash test/steps/openmldb-sdk-test-java.sh -b SRC -c test_all.xml -d standalone -l "1,2,3,4,5"
#      - name: TEST Results
#        if: always()
#        uses: EnricoMi/publish-unit-test-result-action@v1
#        with:
#          files: test/integration-test/openmldb-test-java/openmldb-sdk-test/target/surefire-reports/TEST-*.xml
#          check_name: Java SDK Test Standalone1 SRC Report
#          comment_title: Java SDK Test Standalone1 SRC Report

  java-sdk-cluster-memory-0:
    if: ${{ github.event.inputs.EXEC_TEST_TYPE == 'all' || github.event.inputs.EXEC_TEST_TYPE == 'java' }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/4paradigm/hybridsql:latest
    env:
      ACTIONS_RUNNER_FORCE_ACTIONS_NODE_VERSION: node16
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
      OS: linux
    steps:
      - uses: actions/checkout@v2
      - name: build jsdk and package
        run: |
          make configure CMAKE_INSTALL_PREFIX=openmldb-linux
          make SQL_JAVASDK_ENABLE=ON && make SQL_JAVASDK_ENABLE=ON install
          tar -zcvf openmldb-linux.tar.gz openmldb-linux
          echo "openmldb-pkg:"
          ls -al
      - name: test
        run: source /root/.bashrc && bash test/steps/openmldb-sdk-test-java-src.sh -c test_cluster.xml -d cluster -l "0" -s "memory"
      - name: TEST Results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: test/integration-test/openmldb-test-java/openmldb-sdk-test/target/surefire-reports/TEST-*.xml
          check_name: "SRC java-sdk-cluster-memory-0 Report"
          comment_title: "SRC java-sdk-cluster-memory-0 Report"
      - name: tar test report
        if: ${{ failure() }}
        run: tar -zcvf surefire-reports.tar.gz test/integration-test/openmldb-test-java/openmldb-sdk-test/target/surefire-reports
      - name: Send Email
        if: ${{ failure() }}
        uses: dawidd6/action-send-mail@master
        with:
          server_address: smtp.partner.outlook.cn
          server_port: 587
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: OpenMLDB Memory Test
          body: OpenMLDB Memory Test Failed
          html_body: test/integration-test/openmldb-test-java/openmldb-sdk-test/target/surefire-reports/html/overview.html
          to: ${{ secrets.MAIL_TO }}
          from: GitHub Actions
          attachments: surefire-reports.tar.gz

  java-sdk-cluster-memory-task:
    if: ${{ github.event.inputs.EXEC_TEST_TYPE == 'all' || github.event.inputs.EXEC_TEST_TYPE == 'java' }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/4paradigm/hybridsql:latest
    env:
      ACTIONS_RUNNER_FORCE_ACTIONS_NODE_VERSION: node16
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
      OS: linux
    steps:
      - uses: actions/checkout@v2
      - name: build jsdk and package
        run: |
          make configure CMAKE_INSTALL_PREFIX=openmldb-linux
          make SQL_JAVASDK_ENABLE=ON && make SQL_JAVASDK_ENABLE=ON install
          tar -zcvf openmldb-linux.tar.gz openmldb-linux
          echo "openmldb-pkg:"
          ls -al
      - name: test
        run: source /root/.bashrc && bash test/steps/openmldb-sdk-test-java-src.sh -c test_out_in_cluster.xml -d cluster -l "0" -s "memory"
      - name: TEST Results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: test/integration-test/openmldb-test-java/openmldb-sdk-test/target/surefire-reports/TEST-*.xml
          check_name: "SRC java-sdk-cluster-memory-task Report"
          comment_title: "SRC java-sdk-cluster-memory-task Report"
      - name: tar test report
        if: ${{ failure() }}
        run: tar -zcvf surefire-reports.tar.gz test/integration-test/openmldb-test-java/openmldb-sdk-test/target/surefire-reports
      - name: Send Email
        if: ${{ failure() }}
        uses: dawidd6/action-send-mail@master
        with:
          server_address: smtp.partner.outlook.cn
          server_port: 587
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: OpenMLDB Memory Task Test
          body: OpenMLDB Memory Task Test Failed
          html_body: file://test/integration-test/openmldb-test-java/openmldb-sdk-test/target/surefire-reports/html/overview.html
          to: ${{ secrets.MAIL_TO }}
          from: GitHub Actions
          attachments: surefire-reports.tar.gz

  java-sdk-cluster-memory-1:
    if: ${{ github.event.inputs.EXEC_TEST_TYPE == 'all' || github.event.inputs.EXEC_TEST_TYPE == 'java' }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/4paradigm/hybridsql:latest
    env:
      ACTIONS_RUNNER_FORCE_ACTIONS_NODE_VERSION: node16
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
      OS: linux
    steps:
      - uses: actions/checkout@v2
      - name: build jsdk and package
        run: |
          make configure CMAKE_INSTALL_PREFIX=openmldb-linux
          make SQL_JAVASDK_ENABLE=ON && make SQL_JAVASDK_ENABLE=ON install
          tar -zcvf openmldb-linux.tar.gz openmldb-linux
          echo "openmldb-pkg:"
          ls -al
      - name: test
        run: source /root/.bashrc && bash test/steps/openmldb-sdk-test-java-src.sh -c test_cluster.xml -d cluster -l "1,2,3,4,5" -s "memory"
      - name: TEST Results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: test/integration-test/openmldb-test-java/openmldb-sdk-test/target/surefire-reports/TEST-*.xml
          check_name: SRC java-sdk-cluster-memory-1 Report
          comment_title: SRC java-sdk-cluster-memory-1 Report
      - name: tar test report
        if: ${{ failure() }}
        run: tar -zcvf surefire-reports.tar.gz test/integration-test/openmldb-test-java/openmldb-sdk-test/target/surefire-reports
      - name: Send Email
        if: ${{ failure() }}
        uses: dawidd6/action-send-mail@master
        with:
          server_address: smtp.partner.outlook.cn
          server_port: 587
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: OpenMLDB Memory 1 Test
          body: OpenMLDB Memory 1 Test Failed
          to: ${{ secrets.MAIL_TO }}
          from: GitHub Actions
          attachments: surefire-reports.tar.gz

  java-sdk-cluster-ssd-0:
    if: ${{ github.event.inputs.EXEC_TEST_TYPE == 'all' || github.event.inputs.EXEC_TEST_TYPE == 'java' }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/4paradigm/hybridsql:latest
    env:
      ACTIONS_RUNNER_FORCE_ACTIONS_NODE_VERSION: node16
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
      OS: linux
    steps:
      - uses: actions/checkout@v2
      - name: build jsdk and package
        run: |
          make configure CMAKE_INSTALL_PREFIX=openmldb-linux
          make SQL_JAVASDK_ENABLE=ON && make SQL_JAVASDK_ENABLE=ON install
          tar -zcvf openmldb-linux.tar.gz openmldb-linux
          echo "openmldb-pkg:"
          ls -al
      - name: test
        run: source /root/.bashrc && bash test/steps/openmldb-sdk-test-java-src.sh -c test_cluster_disk.xml -d cluster -l "0" -s "ssd"
      - name: TEST Results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: test/integration-test/openmldb-test-java/openmldb-sdk-test/target/surefire-reports/TEST-*.xml
          check_name: "SRC java-sdk-cluster-ssd-0 Report"
          comment_title: "SRC java-sdk-cluster-ssd-0 Report"
      - name: tar test report
        if: ${{ failure() }}
        run: tar -zcvf surefire-reports.tar.gz test/integration-test/openmldb-test-java/openmldb-sdk-test/target/surefire-reports
      - name: Send Email
        if: ${{ failure() }}
        uses: dawidd6/action-send-mail@master
        with:
          server_address: smtp.partner.outlook.cn
          server_port: 587
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: OpenMLDB SSD Test
          body: OpenMLDB SSD Test Failed
          to: ${{ secrets.MAIL_TO }}
          from: GitHub Actions
          attachments: surefire-reports.tar.gz

#  java-sdk-cluster-ssd-task:
#    if: ${{ github.event.inputs.EXEC_TEST_TYPE == 'all' || github.event.inputs.EXEC_TEST_TYPE == 'java' }}
#    runs-on: ubuntu-latest
#    container:
#      image: ghcr.io/4paradigm/hybridsql:latest
#    env:
#      OS: linux
#    steps:
#      - uses: actions/checkout@v2
#      - name: build jsdk and package
#        run: |
#          make configure CMAKE_INSTALL_PREFIX=openmldb-linux
#          make SQL_JAVASDK_ENABLE=ON && make SQL_JAVASDK_ENABLE=ON install
#          tar -zcvf openmldb-linux.tar.gz openmldb-linux
#          echo "openmldb-pkg:"
#          ls -al
#      - name: test
#        run: source /root/.bashrc && bash test/steps/openmldb-sdk-test-java-src.sh -c test_out_in_cluster.xml -d cluster -l "0" -s "ssd"
#      - name: TEST Results
#        if: always()
#        uses: EnricoMi/publish-unit-test-result-action@v1
#        with:
#          files: test/integration-test/openmldb-test-java/openmldb-sdk-test/target/surefire-reports/TEST-*.xml
#          check_name: "SRC java-sdk-cluster-task-0 Report"
#          comment_title: "SRC java-sdk-cluster-task-0 Report"
#      - name: tar test report
#        if: ${{ failure() }}
#        run: tar -zcvf allure-results.tar.gz test/integration-test/openmldb-test-java/openmldb-sdk-test/target/allure-results
#      - name: Send Email
#        if: ${{ failure() }}
#        uses: dawidd6/action-send-mail@master
#        with:
#          server_address: smtp.partner.outlook.cn
#          server_port: 587
#          username: ${{ secrets.MAIL_USERNAME }}
#          password: ${{ secrets.MAIL_PASSWORD }}
#          subject: OpenMLDB SSD Task Test
#          body: OpenMLDB SSD Test Task Failed
#          to: ${{ secrets.MAIL_TO }}
#          from: GitHub Actions
#          content_type: text/plain
#          attachments: allure-results.tar.gz

  java-sdk-cluster-hdd-0:
    if: ${{ github.event.inputs.EXEC_TEST_TYPE == 'all' || github.event.inputs.EXEC_TEST_TYPE == 'java' }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/4paradigm/hybridsql:latest
    env:
      ACTIONS_RUNNER_FORCE_ACTIONS_NODE_VERSION: node16
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
      OS: linux
    steps:
      - uses: actions/checkout@v2
      - name: build jsdk and package
        run: |
          make configure CMAKE_INSTALL_PREFIX=openmldb-linux
          make SQL_JAVASDK_ENABLE=ON && make SQL_JAVASDK_ENABLE=ON install
          tar -zcvf openmldb-linux.tar.gz openmldb-linux
          echo "openmldb-pkg:"
          ls -al
      - name: test
        run: source /root/.bashrc && bash test/steps/openmldb-sdk-test-java-src.sh -c test_cluster_disk.xml -d cluster -l "0" -s "hdd"
      - name: TEST Results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: test/integration-test/openmldb-test-java/openmldb-sdk-test/target/surefire-reports/TEST-*.xml
          check_name: "SRC java-sdk-cluster-hdd-0 Report"
          comment_title: "SRC java-sdk-cluster-hdd-0 Report"
      - name: tar test report
        if: ${{ failure() }}
        run: tar -zcvf surefire-reports.tar.gz test/integration-test/openmldb-test-java/openmldb-sdk-test/target/surefire-reports
      - name: Send Email
        if: ${{ failure() }}
        uses: dawidd6/action-send-mail@master
        with:
          server_address: smtp.partner.outlook.cn
          server_port: 587
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: OpenMLDB HDD Test
          body: OpenMLDB HDD Test Failed
          to: ${{ secrets.MAIL_TO }}
          from: GitHub Actions
          attachments: surefire-reports.tar.gz

#  java-sdk-cluster-hdd-task:
#    if: ${{ github.event.inputs.EXEC_TEST_TYPE == 'all' || github.event.inputs.EXEC_TEST_TYPE == 'java' }}
#    runs-on: ubuntu-latest
#    container:
#      image: ghcr.io/4paradigm/hybridsql:latest
#    env:
#      OS: linux
#    steps:
#      - uses: actions/checkout@v2
#      - name: build jsdk and package
#        run: |
#          make configure CMAKE_INSTALL_PREFIX=openmldb-linux
#          make SQL_JAVASDK_ENABLE=ON && make SQL_JAVASDK_ENABLE=ON install
#          tar -zcvf openmldb-linux.tar.gz openmldb-linux
#          echo "openmldb-pkg:"
#          ls -al
#      - name: test
#        run: source /root/.bashrc && bash test/steps/openmldb-sdk-test-java-src.sh -c test_out_in_cluster.xml -d cluster -l "0" -s "hdd"
#      - name: TEST Results
#        if: always()
#        uses: EnricoMi/publish-unit-test-result-action@v1
#        with:
#          files: test/integration-test/openmldb-test-java/openmldb-sdk-test/target/surefire-reports/TEST-*.xml
#          check_name: "SRC java-sdk-cluster-hdd-task Report"
#          comment_title: "SRC java-sdk-cluster-hdd-task Report"
#      - name: tar test report
#        if: ${{ failure() }}
#        run: tar -zcvf allure-results.tar.gz test/integration-test/openmldb-test-java/openmldb-sdk-test/target/allure-results
#      - name: Send Email
#        if: ${{ failure() }}
#        uses: dawidd6/action-send-mail@master
#        with:
#          server_address: smtp.partner.outlook.cn
#          server_port: 587
#          username: ${{ secrets.MAIL_USERNAME }}
#          password: ${{ secrets.MAIL_PASSWORD }}
#          subject: OpenMLDB HDD Task Test
#          body: OpenMLDB HDD Task Test Failed
#          to: ${{ secrets.MAIL_TO }}
#          from: GitHub Actions
#          content_type: text/plain
#          attachments: allure-results.tar.gz

#  standalone-cli-test-0:
#    if: ${{ github.event.inputs.EXEC_TEST_TYPE == 'all' || github.event.inputs.EXEC_TEST_TYPE == 'standalone-cli' || github.event.inputs.EXEC_TEST_TYPE == 'cli' }}
#    runs-on: ubuntu-latest
#    container:
#      image: ghcr.io/4paradigm/hybridsql:0.4.1
#    env:
#      OS: linux
#    steps:
#      - uses: actions/checkout@v2
#      - name: build jsdk and package
#        run: |
#          make thirdparty
#          mkdir -p build
#          source /root/.bashrc && cd build && cmake -DSQL_PYSDK_ENABLE=OFF -DSQL_JAVASDK_ENABLE=ON -DTESTING_ENABLE=OFF .. && make -j$(nproc) sql_javasdk_package openmldb && cd ../
#      - name: test
#        run: source /root/.bashrc && bash test/steps/openmldb-sdk-test-java.sh -b SRC -c test_standalone.xml -d standalone -l "0"
#      - name: TEST Results
#        if: always()
#        uses: EnricoMi/publish-unit-test-result-action@v1
#        with:
#          files: test/integration-test/openmldb-test-java/openmldb-sdk-test/target/surefire-reports/TEST-*.xml
#          check_name: Standalone CLI0 Test SRC Report
#          comment_title: Standalone CLI0 Test SRC Report
#
#  standalone-cli-test-1:
#    if: ${{ github.event.inputs.EXEC_TEST_TYPE == 'all' || github.event.inputs.EXEC_TEST_TYPE == 'standalone-cli' || github.event.inputs.EXEC_TEST_TYPE == 'cli' }}
#    runs-on: ubuntu-latest
#    container:
#      image: ghcr.io/4paradigm/hybridsql:0.4.1
#    env:
#      OS: linux
#    steps:
#      - uses: actions/checkout@v2
#      - name: build jsdk and package
#        run: |
#          make thirdparty
#          mkdir -p build
#          source /root/.bashrc && cd build && cmake -DSQL_PYSDK_ENABLE=OFF -DSQL_JAVASDK_ENABLE=ON -DTESTING_ENABLE=OFF .. && make -j$(nproc) sql_javasdk_package openmldb && cd ../
#      - name: test
#        run: source /root/.bashrc && bash test/steps/openmldb-sdk-test-java.sh -b SRC -c test_standalone.xml -d standalone -l "1,2,3,4,5"
#      - name: TEST Results
#        if: always()
#        uses: EnricoMi/publish-unit-test-result-action@v1
#        with:
#          files: test/integration-test/openmldb-test-java/openmldb-sdk-test/target/surefire-reports/TEST-*.xml
#          check_name: Standalone CLI1 Test SRC Report
#          comment_title: Standalone CLI1 Test SRC Report

#  python-sdk-test-standalone-0:
#    if: ${{ github.event.inputs.EXEC_TEST_TYPE == 'all' || github.event.inputs.EXEC_TEST_TYPE == 'python' }}
#    runs-on: ubuntu-latest
#    container:
#      image: ghcr.io/4paradigm/hybridsql:latest
#    env:
#      OS: linux
#    steps:
#      - uses: actions/checkout@v2
#      - name: build pysdk
#        run: |
#          make thirdparty
#          mkdir -p build
#          source /root/.bashrc && cd build && cmake -DSQL_PYSDK_ENABLE=ON -DSQL_JAVASDK_ENABLE=OFF -DTESTING_ENABLE=OFF .. && make -j$(nproc) cp_python_sdk_so openmldb && cd ../
#      - name: test
#        run: source /root/.bashrc && bash test/steps/openmldb-sdk-test-python.sh -b SRC -d standalone -l "0"
#      - name: upload test results
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: python-sdk-standalone-0-src-${{ github.sha }}
#          path: |
#            python/report/allure-results

#      - name: allure-report
#        uses: simple-elf/allure-report-action@master
#        if: always()
#        id: allure-report
#        with:
#          allure_results: python/report/allure-results
#          gh_pages: gh-pages
#          allure_report: allure-report
#          allure_history: allure-history
#      - name: Deploy report to Github Pages
#        if: always()
#        uses: peaceiris/actions-gh-pages@v2
#        env:
#          PERSONAL_TOKEN: ${{ secrets.CR_PAT_ZW }}
#          PUBLISH_BRANCH: gh-pages
#          PUBLISH_DIR: allure-history

#  python-sdk-test-standalone-1:
#    if: ${{ github.event.inputs.EXEC_TEST_TYPE == 'all' || github.event.inputs.EXEC_TEST_TYPE == 'python' }}
#    runs-on: ubuntu-latest
#    container:
#      image: ghcr.io/4paradigm/hybridsql:latest
#    env:
#      OS: linux
#    steps:
#      - uses: actions/checkout@v2
#      - name: build pysdk
#        run: |
#          make thirdparty
#          mkdir -p build
#          source /root/.bashrc && cd build && cmake -DSQL_PYSDK_ENABLE=ON -DSQL_JAVASDK_ENABLE=OFF -DTESTING_ENABLE=OFF .. && make -j$(nproc) cp_python_sdk_so openmldb && cd ../
#      - name: test
#        run: source /root/.bashrc && bash test/steps/openmldb-sdk-test-python.sh -b SRC -d standalone -l "1,2,3,4,5"
#      - name: upload test results
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: python-sdk-standalone-1-src-${{ github.sha }}
#          path: |
#            python/report/allure-results

#  apiserver-test:
#    if: ${{ github.event.inputs.EXEC_TEST_TYPE == 'all' || github.event.inputs.EXEC_TEST_TYPE == 'apiserver' }}
#    runs-on: ubuntu-latest
#    container:
#      image: ghcr.io/4paradigm/hybridsql:latest
#    env:
#      OS: linux
#    steps:
#      - uses: actions/checkout@v2
#      - name: build jsdk and package
#        run: |
#          make thirdparty
#          mkdir -p build
#          source /root/.bashrc && cd build && cmake -DSQL_PYSDK_ENABLE=OFF -DSQL_JAVASDK_ENABLE=ON -DTESTING_ENABLE=OFF .. && make -j$(nproc) sql_javasdk_package openmldb && cd ../
#      - name: test
#        run: source /root/.bashrc && bash test/steps/openmldb-apiserver-test.sh -b SRC -c test_all.xml -d standalone -l "0"
#      - name: TEST Results
#        if: always()
#        uses: EnricoMi/publish-unit-test-result-action@v1
#        with:
#          files: test/integration-test/openmldb-test-java/openmldb-http-test/target/surefire-reports/TEST-*.xml
#          check_name: APIServer SRC Report
#          comment_title: APIServer SRC Report
#
#  batch-test:
#    if: ${{ github.event.inputs.EXEC_TEST_TYPE == 'all' || github.event.inputs.EXEC_TEST_TYPE == 'batch' }}
#    runs-on: ubuntu-latest
#    container:
#      image: ghcr.io/4paradigm/hybridsql:latest
#    env:
#      OS: linux
#    steps:
#      - uses: actions/checkout@v2
#      - name: build
#        run: |
#          make thirdparty
#          mkdir -p build
#          source /root/.bashrc && cd build && cmake -DSQL_PYSDK_ENABLE=OFF -DSQL_JAVASDK_ENABLE=ON -DTESTING_ENABLE=OFF .. && make -j$(nproc) sql_javasdk_package openmldb && cd ../
#      - name: test
#        run: source /root/.bashrc && bash test/steps/openmldb-batch-test.sh -b SRC
#      - name: TEST Results
#        if: always()
#        uses: EnricoMi/publish-unit-test-result-action@v1
#        with:
#          files: test/batch-test/openmldb-batch-test/target/surefire-reports/TEST-*.xml
#          check_name: Batch Test SRC Report
#          comment_title: Batch Test SRC Report

  java-sdk-yarn:
    if: ${{ github.event.inputs.EXEC_TEST_TYPE == 'all' || github.event.inputs.EXEC_TEST_TYPE == 'yarn' }}
    runs-on: self-hosted
    container:
      image: ghcr.io/4paradigm/hybridsql:latest
    env:
      ACTIONS_RUNNER_FORCE_ACTIONS_NODE_VERSION: node16
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
      OS: linux
    steps:
      - uses: actions/checkout@v2
      - name: build jsdk and package
        run: |
          make configure CMAKE_INSTALL_PREFIX=openmldb-linux
          make SQL_JAVASDK_ENABLE=ON && make SQL_JAVASDK_ENABLE=ON install
          tar -zcvf openmldb-linux.tar.gz openmldb-linux
          echo "openmldb-pkg:"
          ls -al
      - name: test
        run: source /root/.bashrc && bash test/steps/openmldb-sdk-test-java-src.sh -c test_yarn.xml -d yarn -l "0" -s "memory"
      - name: TEST Results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: test/integration-test/openmldb-test-java/openmldb-sdk-test/target/surefire-reports/TEST-*.xml
          check_name: "SRC java-sdk-cluster-memory-0 Report"
          comment_title: "SRC java-sdk-cluster-memory-0 Report"
      - name: tar test report
        if: ${{ failure() }}
        run: tar -zcvf surefire-reports.tar.gz test/integration-test/openmldb-test-java/openmldb-sdk-test/target/surefire-reports
      - name: Send Email
        if: ${{ failure() }}
        uses: dawidd6/action-send-mail@master
        with:
          server_address: smtp.partner.outlook.cn
          server_port: 587
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: OpenMLDB Memory Test
          body: OpenMLDB Memory Test Failed
          html_body: test/integration-test/openmldb-test-java/openmldb-sdk-test/target/surefire-reports/html/overview.html
          to: ${{ secrets.MAIL_TO }}
          from: GitHub Actions
          attachments: surefire-reports.tar.gz
