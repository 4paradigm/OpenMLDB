# Copyright 2021 4Paradigm
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cases:
  - id: 0
    desc: feature signature const
    mode: procedure-unsupport
    db: db1
    sql: |
      select csv(
          binary_label(true),
          binary_label(false),
          continuous(0),
          continuous(0.0),
          discrete(3),
          discrete("x", 1),
          discrete(date("2020-05-22"), 1),
          discrete(timestamp("2020-05-22"), 1),
          multiclass_label(-10),
          continuous(5.5),
          multiclass_label(10),
          multiclass_label(-10),
          regression_label(0),
          regression_label(0.0),
          regression_label(-1)) as instance;
    expect:
      columns: [ "instance:string" ]
      rows:
        - [ "1,0,0,0.000000,2681491882390849628,0,0,0,-10,5.500000,10,-10,0,0.000000,-1" ]
  - id: 1
    desc: feature signature bucket size
    mode: procedure-unsupport
    db: db1
    sql: |
      select concat("#", gcformat(
          discrete(3, -1),
          discrete(3, 0),
          discrete(3, int("null")),
          discrete(3, 1000),
          discrete(3, 1000000000000000),
          discrete(0, 5),
          discrete(1, 5),
          discrete(2, 5),
          discrete(3, 5),
          discrete(4, 5),
          discrete(-1, 5),
          discrete(-2, 5),
          discrete(-3, 5),
          discrete(-4, 5))) as instance;
    expect:
      schema: instance:string
      data: |
        # | 4:628 5:491882390849628 6:0 7:4 8:1 9:3 10:1 11:1 12:0 13:0 14:4
  - id: 2
    desc: feature signature select GCFormat no label
    mode: procedure-unsupport
    db: db1
    sql: |
      select concat("#", gcformat(
          discrete(hash64("x"), 1),
          continuous(pow(10, 30)),
          continuous(-pow(10, 1000)),
          continuous(abs(sqrt(-1))))) as instance;
    expect:
      schema: instance:string
      data: |
        # | 1:0 2:3353244675891348105:1000000000000000019884624838656.000000 3:7262150054277104024:-inf 4:3255232038643208583:nan
  - id: 3
    desc: feature signature GCFormat null
    mode: procedure-unsupport
    db: db1
    sql: |
      select concat("#", gcformat(
          regression_label(2),
          regression_label(int("null")),
          continuous(int("null")),
          discrete(int("null")),
          continuous(-1),
          continuous(hash64(3)),
          discrete(3, 100),
          discrete(int("null"), 100),
          discrete(3, int("null")),
          discrete(3),
          continuous(-1),
          discrete(3, 100),
          discrete(3, 0),
          discrete(3, -100),
          discrete(3),
          continuous(0.0),
          continuous(int("null")))) as instance;
    expect:
      schema: instance:string
      data: |
        # | 3:7262150054277104024:-1 4:3255232038643208583:2681491882390849628 5:28 8:2681491882390849628 9:-7745589761753622095:-1 10:28 13:2681491882390849628 14:398281081943027035:0.000000
  - id: 4
    desc: feature signature GCFormat no feature
    mode: procedure-unsupport
    db: db1
    sql: |
      select concat(gcformat(binary_label(false)), "#") as instance;
    expect:
      schema: instance:string
      data: |
        0 | #
  - id: 5
    desc: feature signature GCFormat nothing
    mode: procedure-unsupport
    db: db1
    sql: |
      select concat(concat("#", gcformat()), "#") as instance;
    expect:
      schema: instance:string
      data: |
        # | #
  - id: 6
    desc: feature signature CSV no label
    mode: procedure-unsupport
    db: db1
    sql: |
      select csv(
          discrete(3, -1),
          discrete(3, 0),
          discrete(3, int("null")),
          discrete(3, 1000)) as instance,
    expect:
      columns: [instance:string]
      rows:
        - [ ",,,628" ]
  - id: 7
    desc: feature signature CSV null
    mode: procedure-unsupport
    db: db1
    sql: |
      select csv(
          regression_label(2),
          regression_label(int("null")),
          continuous(int("null")),
          discrete(int("null")),
          continuous(-1),
          continuous(hash64(3)),
          discrete(3, 100),
          discrete(int("null"), 100),
          discrete(3, int("null")),
          discrete(3),
          continuous(-1),
          discrete(3, 100),
          discrete(3, 0),
          discrete(3, -100),
          discrete(3),
          continuous(0.0),
          continuous(int("null"))) as instance;
    expect:
      columns: [ "instance:string "]
      rows:
        - [ "2,,,,-1,2681491882390849628,28,,,2681491882390849628,-1,28,,,2681491882390849628,0.000000," ]
  - id: 8
    desc: feature signature CSV no feature
    mode: procedure-unsupport
    db: db1
    sql: |
      select csv(binary_label(true));
    expect:
      schema: csv(binary_label(true)):string
      data: |
        1
  - id: 9
    desc: feature signature CSV nothing
    mode: procedure-unsupport
    db: db1
    sql: |
      select csv();
    expect:
      columns: [ "csv():string" ]
      rows:
        - [ "" ]
  - id: 10
    desc: feature signature LIBSVM no label
    mode: procedure-unsupport
    db: db1
    sql: |
      select libsvm(
          discrete(3, -1),
          discrete(3, 0),
          discrete(3, int("null")),
          discrete(3, 1000)) as instance,
    expect:
      schema: instance:string
      data: |
        629:1
  - id: 11
    desc: feature signature LIBSVM null
    mode: procedure-unsupport
    db: db1
    sql: |
      select libsvm(
          regression_label(2),
          regression_label(int("null")),
          continuous(int("null")),
          discrete(int("null")),
          continuous(-1),
          continuous(hash64(3)),
          discrete(3, 100),
          discrete(int("null"), 100),
          discrete(3, int("null")),
          discrete(3),
          continuous(-1),
          discrete(3, 100),
          discrete(3, 0),
          discrete(3, -100),
          discrete(3),
          continuous(0.0),
          continuous(int("null"))) as instance;
    expect:
      schema: instance:string
      data: |
        2:-1 3:2681491882390849628 32:1 2681491882390849628:1 204:-1 233:1 2681491882390849628:1 305:0.000000
  - id: 12
    desc: feature signature LIBSVM no feature
    mode: procedure-unsupport
    db: db1
    sql: |
      select libsvm(binary_label(true));
    expect:
      schema: libsvm(binary_label(true)):string
      data: |
        1
  - id: 13
    desc: feature signature LIBSVM nothing
    mode: procedure-unsupport
    db: db1
    sql: |
      select libsvm();
    expect:
      columns: [ "libsvm():string" ]
      rows:
        - [ "" ]
  - id: 14
    desc: feature signature select one row from
    db: db1
    sql: |
      SELECT gcformat(multiclass_label(col1),
          continuous(int(col0)),
          continuous(abs(col1)),
          discrete(col6, 1)) as instance
      FROM t1;
    inputs:
      - name: t1
        schema: col0:string, col1:int32, col2:int16, col3:float, col4:double, col5:int64, col6:string
        index: index2:col2:col5
        data: |
          0, 1, 5, 1.1, 11.1, 1, 1
    expect:
      schema: instance:string
      data: |
        1 | 1:5925585971146611297:0 2:3353244675891348105:1 3:0
  - id: 15
    desc: feature signature select GCFormat from
    mode: request-unsupport
    db: db1
    sql: |
      SELECT gcformat(
          continuous(int(col0)),
          multiclass_label(col1),
          continuous(abs(col1)),
          discrete(col6, 1)) as instance
      FROM t1;
    inputs:
      - name: t1
        schema: col0:string, col1:int32, col2:int16, col3:float, col4:double, col5:int64, col6:string
        index: index2:col2:col5
        data: |
          0, 1, 5, 1.1, 11.1, 1, 1
          0, 2, 5, 2.2, 22.2, 2, 22
          1, 3, 55, 3.3, 33.3, 1, 333
          1, 4, 55, 4.4, 44.4, 2, 4444
          2, 5, 55, 5.5, 55.5, 3, aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
    expect:
      schema: instance:string
      order: instance
      data: |
        1 | 1:5925585971146611297:0 2:3353244675891348105:1 3:0
        2 | 1:5925585971146611297:0 2:3353244675891348105:2 3:0
        3 | 1:5925585971146611297:1 2:3353244675891348105:3 3:0
        4 | 1:5925585971146611297:1 2:3353244675891348105:4 3:0
        5 | 1:5925585971146611297:2 2:3353244675891348105:5 3:0
  - id: 16
    desc: feature signature select CSV from
    mode: request-unsupport
    db: db1
    sql: |
      SELECT replace(csv(
          continuous(int(col0)),
          multiclass_label(col1),
          continuous(abs(col1)),
          discrete(col6, 1)
      ), ",", ";")  as instance
      FROM t1;
    inputs:
      - name: t1
        schema: col0:string, col1:int32, col2:int16, col3:float, col4:double, col5:int64, col6:string
        index: index2:col2:col5
        data: |
          0, 1, 5, 1.1, 11.1, 1, 1
          0, 2, 5, 2.2, 22.2, 2, 22
          1, 3, 55, 3.3, 33.3, 1, 333
          1, 4, 55, 4.4, 44.4, 2, 4444
          2, 5, 55, 5.5, 55.5, 3, aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
    expect:
      schema: instance:string
      order: instance
      data: |
        0;1;1;0
        0;2;2;0
        1;3;3;0
        1;4;4;0
        2;5;5;0
  - id: 17
    desc: feature signature select LIBSVM from
    mode: request-unsupport
    db: db1
    sql: |
      SELECT libsvm(
          continuous(int(col0)),
          multiclass_label(col1),
          continuous(abs(col1)),
          discrete(col6, 1)) as instance
      FROM t1;
    inputs:
      - name: t1
        schema: col0:string, col1:int32, col2:int16, col3:float, col4:double, col5:int64, col6:string
        index: index2:col2:col5
        data: |
          0, 1, 5, 1.1, 11.1, 1, 1
          0, 2, 5, 2.2, 22.2, 2, 22
          1, 3, 55, 3.3, 33.3, 1, 333
          1, 4, 55, 4.4, 44.4, 2, 4444
          2, 5, 55, 5.5, 55.5, 3, aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
    expect:
      schema: instance:string
      order: instance
      data: |
        1 1:0 2:1 3:1
        2 1:0 2:2 3:1
        3 1:1 2:3 3:1
        4 1:1 2:4 3:1
        5 1:2 2:5 3:1
  - id: 18
    desc: feature signature select multi format from
    mode: request-unsupport
    db: db1
    sql: |
      SELECT gcformat(regression_label(col1), discrete(col1, 1)) as col1,
          csv(regression_label(col1)) as col2,
          libsvm(regression_label(col1)) as col3
      FROM t1;
    inputs:
      - name: t1
        schema: col0:string, col1:int32, col2:int16, col3:float, col4:double, col5:int64, col6:string
        index: index2:col2:col5
        data: |
          0, 1, 5, 1.1, 11.1, 1, 1
          0, 2, 5, 2.2, 22.2, 2, 22
          1, 3, 55, 3.3, 33.3, 1, 333
          1, 4, 55, 4.4, 44.4, 2, 4444
          2, 5, 55, 5.5, 55.5, 3, aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
    expect:
      columns: [ "col1:string", "col2:string", "col3:string" ]
      order: "col1"
      rows:
        - [ "1 | 1:0", "1", "1" ]
        - [ "2 | 1:0", "2", "2" ]
        - [ "3 | 1:0", "3", "3" ]
        - [ "4 | 1:0", "4", "4" ]
        - [ "5 | 1:0", "5", "5" ]
  - id: 19
    desc: feature signature select from join
    mode: request-unsupport
    db: db1
    sql: |
      SELECT replace(csv(
          multiclass_label(t1.col1),
          continuous(-abs(t1.col1)),
          discrete(t2.col6, 1)
      ), ",", ";") as instance
      FROM t1 last join t2 on t1.col1=t2.col1;
    inputs:
      - name: t1
        resource: cases/resource/simple_t1.yaml
      - name: t2
        resource: cases/resource/simple_t1.yaml
    expect:
      schema: instance:string
      order: instance
      data: |
        1;-1;0
        2;-2;0
        3;-3;0
        4;-4;0
        5;-5;0
  - id: 20
    desc: feature signature select merge sql
    mode: request-unsupport
    db: db1
    sql: |
      SELECT libsvm(
          continuous(int(col0)),
          multiclass_label(col1),
          discrete(col6),
          continuous(abs(col1)),
          discrete(col6, 100),
          discrete(col6, 100),
          discrete(col6),
          discrete(int("null"), 1000),
          discrete(col6, int("null")),
          continuous(abs(col1))) as instance
      FROM (select * from t1) as out1;
    inputs:
      - name: t1
        schema: col0:string, col1:int32, col2:int16, col3:float, col4:double, col5:int64, col6:string
        index: index2:col2:col5
        data: |
          0, 1, 5, 1.1, 11.1, 1, aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
          0, 2, 5, 2.2, 22.2, 2, 22
          1, 3, 55, 3.3, 33.3, 1, 3
          1, 4, 55, 4.4, 44.4, 2, 3
          2, 5, 55, 5.5, 55.5, 3, aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
    expect:
      schema: instance:string
      order: instance
      data: |
        1 1:0 -5326603526618982479:1 2:1 40:1 140:1 -5326603526618982479:1 1203:1
        2 1:0 5665509553878826940:1 2:2 43:1 143:1 5665509553878826940:1 1203:2
        3 1:1 -6455268178307048695:1 2:3 24:1 124:1 -6455268178307048695:1 1203:3
        4 1:1 -6455268178307048695:1 2:4 24:1 124:1 -6455268178307048695:1 1203:4
        5 1:2 -5326603526618982479:1 2:5 40:1 140:1 -5326603526618982479:1 1203:5
  - id: 21
    desc: csv example
    mode: procedure-unsupport
    db: db1
    sql: |
      select csv(
          regression_label(2),
          regression_label(2.0),
          regression_label(int("notint")),
          continuous(1),
          continuous(1.0),
          multiclass_label(-1),
          discrete(int("notint")),
          discrete(3),
          continuous(int("notint")), 
          continuous(pow(10, 30)),
          continuous(pow(10, 1000)),
          continuous(abs(sqrt(-1)))) as instance;
    expect:
      columns: [ "instance:string" ]
      rows:
        - [ "2,2.000000,,1,1.000000,-1,,2681491882390849628,,1000000000000000019884624838656.000000,inf,nan" ]
  - id: 22
    desc: gcformat example
    mode: procedure-unsupport
    db: db1
    sql: |
      select concat("#", gcformat(
          regression_label(2),
          continuous(1),
          continuous(int("notint")),
          continuous(0),
          continuous(0.0),
          discrete(3),
          regression_label(int("notint")))) as instance;
    expect:
      schema: instance:string
      data: |
        # | 1:5925585971146611297:1 3:7262150054277104024:0 4:3255232038643208583:0.000000 5:2681491882390849628
  - id: 23
    desc: hash64
    mode: procedure-unsupport
    db: db1
    sql: |
      select hash64(3) as col1, hash64(bigint(3)) as col2;
    expect:
      schema: col1:int64, col2:int64
      data: |
        2681491882390849628, 7262150054277104024
