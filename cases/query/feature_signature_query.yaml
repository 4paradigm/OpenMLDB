# Copyright 2021 4Paradigm
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cases:
  - id: 0
    desc: feature signature select const
    db: db1
    sql: |
      select
          numeric(1),
          continuous(2),
          category(3),
          discrete("x", 1),
          binary_label(true),
          numeric(5.5),
          continuous(6.6);
    expect:
      schema: instance:string
      data: |
        1| 1:0:1 2:0:2 3:2681491882390849628 4:0 5:0:5.500000 6:0:6.600000
  - id: 1
    desc: feature signature select const no label
    db: db1
    sql: |
      select
          numeric(1),
          continuous(2),
          category(3, 1),
          discrete("x", 1),
          numeric(5.5),
          continuous(numeric(true));
    expect:
      schema: instance:string
      data: |
        | 1:0:1 2:0:2 3:0 4:0 5:0:5.500000 6:0:1
  - id: 2
    desc: feature signature zero bucket size
    db: db1
    sql: |
      select
          category(3, 0),
    expect:
      schema: instance:string
      data: |
        | 1:2681491882390849628
  - id: 3
    desc: feature signature nagative bucket size
    db: db1
    sql: |
      select
          category(3, -1),
          category(3, 0),
    expect:
      schema: instance:string
      data: |
        | 1:2681491882390849628 2:2681491882390849628
  - id: 4
    desc: feature signature null
    db: db1
    sql: |
      select
          regression_label(int("notint")),
          numeric(1),
          category(int("notint")),
          category(3),
          numeric(int("notint"));
    expect:
      schema: instance:string
      data: |
        | 1:0:1 3:2681491882390849628
  - id: 5
    desc: feature signature select from
    db: db1
    sql: |
      SELECT multiclass_label(col1), numeric(int(col0)), numeric(abs(col1)), category(col6, 1)
      FROM t1;
    inputs:
      - name: t1
        schema: col0:string, col1:int32, col2:int16, col3:float, col4:double, col5:int64, col6:string
        index: index2:col2:col5
        data: |
          0, 1, 5, 1.1, 11.1, 1, 1
    expect:
      schema: instance:string
      data: |
        1| 1:0:0 2:0:1 3:0
  - id: 6
    desc: feature signature select from
    mode: request-unsupport
    db: db1
    sql: |
      SELECT multiclass_label(col1), numeric(int(col0)), numeric(abs(col1)), category(col6, 1)
      FROM t1;
    inputs:
      - name: t1
        schema: col0:string, col1:int32, col2:int16, col3:float, col4:double, col5:int64, col6:string
        index: index2:col2:col5
        data: |
          0, 1, 5, 1.1, 11.1, 1, 1
          0, 2, 5, 2.2, 22.2, 2, 22
          1, 3, 55, 3.3, 33.3, 1, 333
          1, 4, 55, 4.4, 44.4, 2, 4444
          2, 5, 55, 5.5, 55.5, 3, aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
    expect:
      schema: instance:string
      order: instance
      data: |
        1| 1:0:0 2:0:1 3:0
        2| 1:0:0 2:0:2 3:0
        3| 1:0:1 2:0:3 3:0
        4| 1:0:1 2:0:4 3:0
        5| 1:0:2 2:0:5 3:0
  - id: 7
    desc: feature signature select from join
    mode: request-unsupport
    db: db1
    sql: |
      SELECT multiclass_label(t1.col1), numeric(-abs(t1.col1)), category(t2.col6, 1)
      FROM t1 last join t2 on t1.col1=t2.col1;
    inputs:
      - name: t1
        resource: cases/resource/simple_t1.yaml
      - name: t2
        resource: cases/resource/simple_t1.yaml
    expect:
      schema: instance:string
      order: instance
      data: |
        1| 1:0:-1 2:0
        2| 1:0:-2 2:0
        3| 1:0:-3 2:0
        4| 1:0:-4 2:0
        5| 1:0:-5 2:0
  - id: 8
    desc: feature signature select const
    db: db1
    sql: |
      select variadic_concat("a", 1, 3.5) as col1;
    expect:
      schema: col1:string
      data: |
        a 1 3.500000
