# with clause test
cases:
  - id: 0
    desc: simple with clause
    sql: |
      WITH t2 as (select * from t1)
      select * from t2;
    inputs:
      - name: t1
        schema: col1:int32, std_ts:timestamp, std_date:date
        index: index2:col1:std_ts
        data: |
          1, 1590115420001, 2020-05-20
          2, 1590115421001, 2020-05-21
          3, 1590115422001, 2020-05-22
    expect:
      schema: col1:int32, std_ts:timestamp, std_date:date
      order: col1
      data: |
        1, 1590115420001, 2020-05-20
        2, 1590115421001, 2020-05-21
        3, 1590115422001, 2020-05-22
  - id: 1
    desc: |
      CTE entry shadows table name
    sql: |
      WITH t1 as (select col1 + 1 as id, std_ts from t1)
      select * from t1;
    inputs:
      - name: t1
        schema: col1:int32, std_ts:timestamp, std_date:date
        index: index2:col1:std_ts
        data: |
          1, 1590115420001, 2020-05-20
          2, 1590115421001, 2020-05-21
          3, 1590115422001, 2020-05-22
    expect:
      schema: id:int32, std_ts:timestamp
      order: id
      data: |
        2, 1590115420001
        3, 1590115421001
        4, 1590115422001

  # - id: 2
  #   desc: |
  #     local CTE shadows outer CTE
  #   sql: |
  #     WITH q1 AS (my_query)
  #     SELECT *
  #     FROM
  #       (WITH
  #         q2 AS (SELECT * FROM q1),
  #         q3 AS (SELECT * FROM q1),
  #         q1 AS (SELECT * FROM q1),
  #         q4 AS (SELECT * FROM q1)
  #       SELECT * FROM q1)
  #
  # - id: 3
  #   desc: |
  #     local CTE refers outer CTE
  #
  # - id: 4
  #   desc: |
  #     complex with query

  - id: 5
    desc: |
      with clause wrapper window (simple(last join))
    inputs:
      -
        name: t0
        columns : ["id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c1:c7"]
        rows:
          - [1,"aa",2,30,1.1,2.1,1590738990000,"2020-05-01"]
          - [2,"aa",2,30,1.1,2.1,1590738991000,"2020-05-01"]
          - [3,"bb",2,31,1.2,2.2,1590738991000,"2020-05-02"]
          - [4,"cc",2,32,1.3,2.3,1590738992000,"2020-05-03"]
      -
        name: t1
        columns: ["id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c1:c7","index2:c3:c7"]
        rows:
          - [1,"aa",20,30,1.1,2.1,1606755660000,"2020-05-01"]
          - [2,"cc",21,32,1.1,2.1,1606755780000,"2020-05-01"]
    sql: |
      with ta as(
        select
          {0}.c3 as c3l,
          {0}.id as idx,
          {0}.c1 as c1,
          {1}.c3 as c3r,
          {0}.c7 as c7
        from t0 last join t1 on t0.c1=t1.c1
      )
      select
        idx, c1, c3l, c3r,
        sum(c3l) OVER w1 as suma,
        min(c3r) OVER w1 as sumb,
      from ta
      WINDOW w1 AS (
        PARTITION BY c1 ORDER BY c7 ROWS_RANGE BETWEEN 10s PRECEDING AND CURRENT ROW);
    request_plan: |
      PROJECT(type=Aggregation)
        RENAME(name=ta)
          SIMPLE_PROJECT(sources=(t0.c3 -> c3l, t0.id -> idx, t0.c1, t1.c3 -> c3r, t0.c7))
            JOIN(type=LastJoin, condition=, left_keys=(), right_keys=(), index_keys=(t0.c1))
              REQUEST_UNION(partition_keys=(), orders=(ASC), range=(c7, 10000 PRECEDING, 0 CURRENT), index_keys=(c1))
                DATA_PROVIDER(request=t0)
                DATA_PROVIDER(type=Partition, table=t0, index=index1)
              DATA_PROVIDER(type=Partition, table=t1, index=index1)
    expect:
      order: idx
      columns:
        - idx int
        - c1 string
        - c3l int
        - c3r int
        - suma int
        - sumb int
      rows:
        - [1,"aa", 2, 20,   2, 20 ]
        - [2,"aa", 2, 20,   4, 20 ]
        - [3,"bb", 2, null, 2, NULL]
        - [4,"cc", 2, 21,   2, 21]
