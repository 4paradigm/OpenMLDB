# Copyright 2021 4Paradigm
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

debugs: []
cases:
  - id: 0
    desc: select const number
    mode: request-unsupport
    db: db1
    sql: |
      select 1 as id, 2 as col1, 3.3 as col2;
    expect:
      schema: id:int32, col1:int, col2:double
      order: id
      rows:
        - [1, 2, 3.3]
  - id: 1
    desc: select str
    mode: request-unsupport
    db: db1
    sql: |
      select 1 as id, "hello_world" as col1;
    expect:
      schema: id:int32, col1:string
      order: id
      rows:
        - [1, "hello_world"]
  - id: 2
    desc: const substr pos len
    mode: request-unsupport
    db: db1
    sql: |
      select 1 as id, substring("hello_world", 3, 6) as col1;
    expect:
      schema: id:int32, col1:string
      order: id
      rows:
        - [1, "llo_wo"]
  - id: 3
    desc: const substr pos
    mode: request-unsupport
    db: db1
    sql: |
      select 1 as id, substring("hello_world", 3) as col1;
    expect:
      schema: id:int32, col1:string
      order: id
      rows:
        - [1, "llo_world"]
  - id: 4
    desc: const concat 1
    mode: request-unsupport
    db: db1
    sql: |
      select 1 as id, concat("hello", "world", "abc") as col1;
    expect:
      schema: id:int32, col1:string
      order: id
      rows:
        - [1, "helloworldabc"]
  - id: 5
    desc: cast常量 using CAST operator
    mode: request-unsupport
    inputs:
      - columns: ["c1 int", "c2 string", "c5 bigint"]
        indexs: ["index1:c1:c5"]
        rows:
          - [1, "2020-05-22 10:43:40", 1]
    sql: |
      select CAST (10 as int) as c1, CAST (10 as bigint) as c2, CAST (10 as float) as c3, CAST (10 as double) as c4, CAST (1590115460000 as timestamp) as c5, CAST ("2020-05-20" as date) as c6, CAST (10 as string) as c7;
    expect:
      columns: ["c1 int", "c2 bigint", "c3 float", "c4 double", "c5 timestamp", "c6 date", "c7 string"]
      rows:
        - [10, 10, 10.0, 10.0, 1590115460000, 2020-05-20, "10"]
  - id: 6
    desc: cast NULL常量 using CAST operator
    mode: request-unsupport
    inputs:
      - columns: ["c1 int", "c2 string", "c5 bigint"]
        indexs: ["index1:c1:c5"]
        rows:
          - [1, "2020-05-22 10:43:40", 1]
    sql: |
      select CAST (NULL as int) as c1, CAST (NULL as bigint) as c2, CAST (NULL as float) as c3, CAST (NULL as double) as c4, CAST (NULL as timestamp) as c5, CAST (NULL as date) as c6, CAST (NULL as string) as c7;
    expect:
      columns: ["c1 int", "c2 bigint", "c3 float", "c4 double", "c5 timestamp", "c6 date", "c7 string"]
      rows:
        - [NULL, NULL, NULL, NULL, NULL, NULL, NULL]
  - id: 7
    desc: cast常量 using type() function
    mode: request-unsupport
    inputs:
      - columns: ["c1 int", "c2 string", "c5 bigint"]
        indexs: ["index1:c1:c5"]
        rows:
          - [1, "2020-05-22 10:43:40", 1]
    sql: |
      select int(10) as c1, bigint(10) as c2, float(10) as c3, double(10) as c4, timestamp(1590115460000) as c5, date("2020-05-20") as c6, string(10) as c7;
    expect:
      columns: ["c1 int", "c2 bigint", "c3 float", "c4 double", "c5 timestamp", "c6 date", "c7 string"]
      rows:
        - [10, 10, 10.0, 10.0, 1590115460000, 2020-05-20, "10"]
  - id: 8
    desc: cast NULL常量 using type(NULL) function
    mode: request-unsupport
    inputs:
      - columns: ["c1 int", "c2 string", "c5 bigint"]
        indexs: ["index1:c1:c5"]
        rows:
          - [1, "2020-05-22 10:43:40", 1]
    sql: |
      select int(NULL) as c1, bigint(NULL) as c2, float(NULL) as c3, double(NULL) as c4, timestamp(NULL) as c5, date(NULL) as c6, string(NULL) as c7;
    expect:
      columns: ["c1 int", "c2 bigint", "c3 float", "c4 double", "c5 timestamp", "c6 date", "c7 string"]
      rows:
        - [NULL, NULL, NULL, NULL, NULL, NULL, NULL]
  - id: 9
    desc: differnt const node type
    mode: request-unsupport
    sql: |
      select true c1, int16(3) c2, 13 c3, 10.0 c4, 'a string' c5, date(timestamp(1590115420000)) c6, timestamp(1590115420000) c7;
    expect:
      columns: ['c1 bool', 'c2 int16', 'c3 int', 'c4 double', 'c5 string', 'c6 date', 'c7 timestamp' ]
      rows:
        - [ true, 3, 13, 10.0, 'a string', '2020-05-22', 1590115420000 ]
