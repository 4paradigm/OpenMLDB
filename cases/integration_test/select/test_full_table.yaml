# Copyright 2021 4Paradigm
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

db: test_zw
debugs: []
version: 0.5.0
cases:
  - id: 0
    desc: 全表聚合-*
    mode: request-unsupport
    inputs:
      -
        columns: ["id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c1:c7"]
        rows:
          - [1,"aa",20,30,1.1,2.1,1000,"2020-05-01"]
          - [2,"aa",21,31,1.2,2.2,2000,"2020-05-02"]
          - [3,"aa",22,32,1.3,2.3,3000,"2020-05-03"]
          - [4,"aa",23,33,1.4,2.4,4000,"2020-05-04"]
          - [5,"aa",24,34,1.5,2.5,5000,"2020-05-05"]
          - [6,"bb",20,30,1.1,2.1,1000,"2020-05-01"]
          - [7,"bb",21,31,1.2,2.2,2000,"2020-05-02"]
          - [8,"bb",22,32,1.3,2.3,3000,"2020-05-03"]
          - [9,"bb",23,33,1.4,2.4,4000,"2020-05-04"]
          - [10,"bb",24,34,1.5,2.5,5000,"2020-05-05"]
          - [11,"cc",20,30,1.1,2.1,1000,"2020-05-01"]
          - [12,"cc",21,31,1.2,2.2,2000,"2020-05-02"]
          - [13,"cc",22,32,1.3,2.3,3000,"2020-05-03"]
          - [14,"cc",23,33,1.4,2.4,4000,"2020-05-04"]
          - [15,"cc",24,34,1.5,2.5,5000,"2020-05-05"]
    sql: select count(c4) as count,sum(c4) as sum,max(c4) as max,min(c4) as min,avg(c4) as avg from {0};
    expect:
      order: id
      columns: ["count bigint","sum bigint","max bigint","min bigint","avg double"]
      rows:
        - [15,480,34,30,32]
  - id: 1
    desc: 全表聚合-*_where-where
    mode: request-unsupport
    inputs:
      -
        columns: ["id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c1:c7"]
        rows:
          - [1,"aa",20,30,1.1,2.1,1000,"2020-05-01"]
          - [2,"aa",21,31,1.2,2.2,2000,"2020-05-02"]
          - [3,"aa",22,32,1.3,2.3,3000,"2020-05-03"]
          - [4,"aa",23,33,1.4,2.4,4000,"2020-05-04"]
          - [5,"aa",24,34,1.5,2.5,5000,"2020-05-05"]
          - [6,"bb",20,30,1.1,2.1,1000,"2020-05-01"]
          - [7,"bb",21,31,1.2,2.2,2000,"2020-05-02"]
          - [8,"bb",22,32,1.3,2.3,3000,"2020-05-03"]
          - [9,"bb",23,33,1.4,2.4,4000,"2020-05-04"]
          - [10,"bb",24,34,1.5,2.5,5000,"2020-05-05"]
          - [11,"cc",20,30,1.1,2.1,1000,"2020-05-01"]
          - [12,"cc",21,31,1.2,2.2,2000,"2020-05-02"]
          - [13,"cc",22,32,1.3,2.3,3000,"2020-05-03"]
          - [14,"cc",23,33,1.4,2.4,4000,"2020-05-04"]
          - [15,"cc",24,34,1.5,2.5,5000,"2020-05-05"]
    sql: |
      select count_where(c4,c3>20) as count,sum_where(c4,c3>20) as sum,max_where(c4,c3>20) as max,
      min_where(c4,c3>20) as min,avg_where(c4,c3>20) as avg from {0} where c1='aa' or c1='bb';
    expect:
      order: id
      columns: ["count bigint","sum bigint","max bigint","min bigint","avg double"]
      rows:
        - [8,260,34,31,32.5]
  - id: 2
    desc: 全表聚合-*_cate-group by
    mode: request-unsupport
    inputs:
      -
        columns: ["id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c1:c7"]
        rows:
          - [1,"aa",20,30,1.1,2.1,1000,"2020-05-01"]
          - [2,"aa",20,31,1.2,2.2,2000,"2020-05-02"]
          - [3,"aa",20,32,1.3,2.3,3000,"2020-05-03"]
          - [4,"aa",23,33,1.4,2.4,4000,"2020-05-04"]
          - [5,"aa",23,34,1.5,2.5,5000,"2020-05-05"]
          - [6,"bb",20,30,1.1,2.1,1000,"2020-05-01"]
          - [7,"bb",20,31,1.2,2.2,2000,"2020-05-02"]
          - [8,"bb",20,32,1.3,2.3,3000,"2020-05-03"]
          - [9,"bb",23,33,1.4,2.4,4000,"2020-05-04"]
          - [10,"bb",23,34,1.5,2.5,5000,"2020-05-05"]
          - [11,"cc",20,30,1.1,2.1,1000,"2020-05-01"]
          - [12,"cc",20,31,1.2,2.2,2000,"2020-05-02"]
          - [13,"cc",20,32,1.3,2.3,3000,"2020-05-03"]
          - [14,"cc",23,33,1.4,2.4,4000,"2020-05-04"]
          - [15,"cc",23,34,1.5,2.5,5000,"2020-05-05"]
    sql: |
      select c1,count_cate(c4,c3) as count,sum_cate(c4,c3) as sum,max_cate(c4,c3) as max,
      min_cate(c4,c3) as min,avg_cate(c4,c3) as avg from {0} group by c1;
    expect:
      order: c1
      columns: ["c1 string","count string","sum string","max string","min string","avg string"]
      rows:
        - ["aa","20:3,23:2","20:93,23:67","20:32,23:34","20:30,23:33","20:31.000000,23:33.500000"]
        - ["bb","20:3,23:2","20:93,23:67","20:32,23:34","20:30,23:33","20:31.000000,23:33.500000"]
        - ["cc","20:3,23:2","20:93,23:67","20:32,23:34","20:30,23:33","20:31.000000,23:33.500000"]
  - id: 3
    desc: 全表聚合-*_cate_where-group by having
    mode: request-unsupport
    inputs:
      -
        columns: ["id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c1:c7"]
        rows:
          - [1,"aa",20,30,1.1,2.1,1000,"2020-05-01"]
          - [2,"aa",20,31,1.2,2.2,2000,"2020-05-02"]
          - [3,"aa",20,32,1.3,2.3,3000,"2020-05-03"]
          - [4,"aa",23,33,1.4,2.4,4000,"2020-05-04"]
          - [5,"aa",23,34,1.5,2.5,5000,"2020-05-05"]
          - [6,"bb",20,30,1.1,2.1,1000,"2020-05-01"]
          - [7,"bb",20,31,1.2,2.2,2000,"2020-05-02"]
          - [8,"bb",20,32,1.3,2.3,3000,"2020-05-03"]
          - [9,"bb",23,33,1.4,2.4,4000,"2020-05-04"]
          - [10,"bb",23,34,1.5,2.5,5000,"2020-05-05"]
          - [11,"cc",20,30,1.1,2.1,1000,"2020-05-01"]
          - [12,"cc",20,31,1.2,2.2,2000,"2020-05-02"]
          - [13,"cc",20,32,1.3,2.3,3000,"2020-05-03"]
          - [14,"cc",20,33,1.4,2.4,4000,"2020-05-04"]
          - [15,"cc",23,34,1.5,2.5,5000,"2020-05-05"]
    sql: |
      select c1,
      count_cate_where(c4,c3>20,c3) as count,
      sum_cate_where(c4,c3>20,c3) as sum,
      max_cate_where(c4,c3>20,c3) as max,
      min_cate_where(c4,c3>20,c3) as min,
      avg_cate_where(c4,c3>20,c3) as avg 
      from {0} group by c1 having count_where(c4,c3>20)>1;
    expect:
      order: c1
      columns: ["c1 string","count string","sum string","max string","min string","avg string"]
      rows:
        - ["aa","23:2","23:67","23:34","23:33","23:33.500000"]
        - ["bb","23:2","23:67","23:34","23:33","23:33.500000"]
  - id: 4
    desc: 全表聚合-top_n_key_*_cate_where-group by where
    mode: request-unsupport
    inputs:
      -
        columns: ["id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c1:c7"]
        rows:
          - [1,"aa",20,30,1.1,2.1,1000,"2020-05-01"]
          - [2,"aa",21,31,1.2,2.2,2000,"2020-05-02"]
          - [3,"aa",22,32,1.3,2.3,3000,"2020-05-03"]
          - [4,"aa",23,33,1.4,2.4,4000,"2020-05-04"]
          - [5,"aa",24,34,1.5,2.5,5000,"2020-05-05"]
          - [6,"bb",20,30,1.1,2.1,1000,"2020-05-01"]
          - [7,"bb",21,31,1.2,2.2,2000,"2020-05-02"]
          - [8,"bb",22,32,1.3,2.3,3000,"2020-05-03"]
          - [9,"bb",23,33,1.4,2.4,4000,"2020-05-04"]
          - [10,"bb",23,34,1.5,2.5,5000,"2020-05-05"]
          - [11,"cc",20,30,1.1,2.1,1000,"2020-05-01"]
          - [12,"cc",21,31,1.2,2.2,2000,"2020-05-02"]
          - [13,"cc",22,32,1.3,2.3,3000,"2020-05-03"]
          - [14,"cc",23,33,1.4,2.4,4000,"2020-05-04"]
          - [15,"cc",24,34,1.5,2.5,5000,"2020-05-05"]
    sql: |
      select c1,
      top_n_key_count_cate_where(c4,c3>20,c3,2) as count,
      top_n_key_sum_cate_where(c4,c3>20,c3,2) as sum,
      top_n_key_max_cate_where(c4,c3>20,c3,2) as max,
      top_n_key_min_cate_where(c4,c3>20,c3,2) as min,
      top_n_key_avg_cate_where(c4,c3>20,c3,2) as avg 
      from {0} where id<=10 group by c1 having count_where(c3,c3=23)>1;
    expect:
      order: c1
      columns: ["c1 string","count string","sum string","max string","min string","avg string"]
      rows:
        - ["bb","23:2,22:1","23:67,22:32","23:34,22:32","23:33,22:32","23:33.500000,22:32.000000"]
  - id: 6
    desc: 全表扫描-ts重复-ts=0
    mode: request-unsupport,disk-unsupport
    inputs:
      -
        columns: ["id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date"]
        indexs: ["index1:c1:c7"]
        replicaNum: 3
        partitionNum: 8
        repeat: 2000
        rows:
          - [1,"a",20,30,1.1,2.1,1000,"2020-05-01"]
          - [2,"b",21,31,1.2,2.2,0,"2020-05-02"]
          - [3,"c",22,32,1.3,2.3,3000,"2020-05-03"]
          - [4,"d",22,32,1.3,2.3,0,"2020-05-03"]
    sql: select * from {0};
    expect:
      count: 8000



