# Copyright 2021 4Paradigm
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

db: request_bm
debugs: []
cases:
  - id: 0
    desc: BM_SimpleLastJoin2Right, 同时拼接2张副表
    mode: batch-unsupport
    inputs:
      -
        columns: ["id int", "c1 string", "c2 string", "c3 string", "c4 string", "c6 double", "c7 timestamp"]
        indexs: ["index1:c1:c7"]
      -
        columns: ["rid int", "x1 string", "x6 double", "x7 timestamp"]
        indexs: ["index1:x1:x7"]
        repeat: 100
        rows:
          - [1, "a", 1.0, 1590738990000]
          - [2, "b", 1.0, 1590738990000]
          - [3, "c", 1.0, 1590738990000]
          - [4, "a", 1.0, 1590738980000]
          - [5, "b", 1.0, 1590738980000]
          - [6, "c", 1.0, 1590738980000]
          - [7, "a", 1.0, 1590738970000]
          - [8, "b", 1.0, 1590738970000]
          - [9, "c", 1.0, 1590738970000]
      -
        columns: ["rid int", "x2 string", "x6 double", "x7 timestamp"]
        indexs: ["index2:x2:x7"]
        repeat: 100
        rows:
          - [1, "aa", 1.0, 1590738990000]
          - [2, "bb", 1.0, 1590738990000]
          - [3, "cc", 1.0, 1590738990000]
          - [4, "aa", 1.0, 1590738980000]
          - [5, "bb", 1.0, 1590738980000]
          - [6, "cc", 1.0, 1590738980000]
          - [7, "aa", 1.0, 1590738970000]
          - [8, "bb", 1.0, 1590738970000]
          - [9, "cc", 1.0, 1590738970000]

    batch_request:
      columns: [ "id int", "c1 string", "c2 string", "c3 string", "c4 string", "c6 double", "c7 timestamp" ]
      rows:
        - [1, "a", "bb", "ccc", "aaaa", 1.0, 1590738991000]
    sql: |
      SELECT {0}.id, {0}.c1, {0}.c2, {0}.c3, {0}.c4, {0}.c7, {1}.x1, {1}.x7 as t1_x7, {2}.x2, {2}.x7 as t2_x7
      FROM {0}
      last join {1} order by {1}.x7 on {0}.c1 = {1}.x1 and {0}.c7 - 10000 >= {1}.x7
      last join {2} order by {2}.x7 on {0}.c2 = {2}.x2 and {0}.c7 - 10000 >= {2}.x7;
    expect:
      success: true
      columns: ["id int", "c1 string", "c2 string", "c3 string", "c4 string", "c7 timestamp",
                "x1 string", "t1_x7 timestamp", "x2 string", "t2_x7 timestamp"]
      rows:
        - [1, "a", "bb", "ccc", "aaaa", 1590738991000, "a", 1590738980000, "bb", 1590738980000]

  - id: 1
    desc: BM_SimpleLastJoin4Right, 同时拼接4张副表
    mode: batch-unsupport
    inputs:
      -
        columns: ["id int", "c1 string", "c2 string", "c3 string", "c4 string", "c6 double", "c7 timestamp"]
        indexs: ["index1:c1:c7"]
      -
        columns: ["rid int", "x1 string", "x6 double", "x7 timestamp"]
        indexs: ["index1:x1:x7"]
        repeat: 100
        rows:
          - [1, "a", 1.0, 1590738990000]
          - [2, "b", 1.0, 1590738990000]
          - [3, "c", 1.0, 1590738990000]
          - [4, "a", 1.0, 1590738980000]
          - [5, "b", 1.0, 1590738980000]
          - [6, "c", 1.0, 1590738980000]
          - [7, "a", 1.0, 1590738970000]
          - [8, "b", 1.0, 1590738970000]
          - [9, "c", 1.0, 1590738970000]
      -
        columns: ["rid int", "x2 string", "x6 double", "x7 timestamp"]
        indexs: ["index2:x2:x7"]
        repeat: 100
        rows:
          - [1, "aa", 1.0, 1590738990000]
          - [2, "bb", 1.0, 1590738990000]
          - [3, "cc", 1.0, 1590738990000]
          - [4, "aa", 1.0, 1590738980000]
          - [5, "bb", 1.0, 1590738980000]
          - [6, "cc", 1.0, 1590738980000]
          - [7, "aa", 1.0, 1590738970000]
          - [8, "bb", 1.0, 1590738970000]
          - [9, "cc", 1.0, 1590738970000]
      -
        columns: ["rid int", "x3 string", "x6 double", "x7 timestamp"]
        indexs: ["index3:x3:x7"]
        repeat: 100
        rows:
          - [1, "aaa", 1.0, 1590738990000]
          - [2, "bbb", 1.0, 1590738990000]
          - [3, "ccc", 1.0, 1590738990000]
          - [4, "aaa", 1.0, 1590738980000]
          - [5, "bbb", 1.0, 1590738980000]
          - [6, "ccc", 1.0, 1590738980000]
          - [7, "aaa", 1.0, 1590738970000]
          - [8, "bbb", 1.0, 1590738970000]
          - [9, "ccc", 1.0, 1590738970000]
      -
        columns: ["rid int", "x4 string", "x6 double", "x7 timestamp"]
        indexs: ["index4:x4:x7"]
        repeat: 100
        rows:
          - [1, "aaaa", 1.0, 1590738990000]
          - [2, "bbbb", 1.0, 1590738990000]
          - [3, "cccc", 1.0, 1590738990000]
          - [4, "aaaa", 1.0, 1590738980000]
          - [5, "bbbb", 1.0, 1590738980000]
          - [6, "cccc", 1.0, 1590738980000]
          - [7, "aaaa", 1.0, 1590738970000]
          - [8, "bbbb", 1.0, 1590738970000]
          - [9, "cccc", 1.0, 1590738970000]

    batch_request:
      columns: [ "id int", "c1 string", "c2 string", "c3 string", "c4 string", "c6 double", "c7 timestamp" ]
      rows:
        - [1, "a", "bb", "ccc", "aaaa", 1.0, 1590738991000]
    sql: |
      SELECT {0}.id, {0}.c1, {0}.c2, {0}.c3, {0}.c4, {0}.c7, {1}.x1, {1}.x7 as t1_x7, {2}.x2, {2}.x7 as t2_x7,
      {3}.x3, {3}.x7 as t3_x7, {4}.x4, {4}.x7 as t4_x7
      FROM {0}
      last join {1} order by {1}.x7 on {0}.c1 = {1}.x1 and {0}.c7 - 10000 >= {1}.x7
      last join {2} order by {2}.x7 on {0}.c2 = {2}.x2 and {0}.c7 - 10000 >= {2}.x7
      last join {3} order by {3}.x7 on {0}.c3 = {3}.x3 and {0}.c7 - 10000 >= {3}.x7
      last join {4} order by {4}.x7 on {0}.c4 = {4}.x4 and {0}.c7 - 10000 >= {4}.x7;
    expect:
      success: true
      columns: ["id int", "c1 string", "c2 string", "c3 string", "c4 string", "c7 timestamp",
                "x1 string", "t1_x7 timestamp", "x2 string", "t2_x7 timestamp",
                "x3 string", "t3_x7 timestamp", "x4 string", "t4_x7 timestamp"]
      rows:
        - [1, "a", "bb", "ccc", "aaaa", 1590738991000, "a", 1590738980000, "bb", 1590738980000, "ccc", 1590738980000, "aaaa", 1590738980000]

  - id: 2
    desc: BM_SimpleWindowOutputLastJoinTable2, window特征输出表拼接2张副表
    mode: batch-unsupport
    inputs:
      -
        columns: ["id int", "c1 string", "c2 string", "c3 string", "c4 string", "c6 double", "c7 timestamp"]
        indexs: ["index1:c1:c7"]
        repeat: 100
        repeat_tag: window_scale
        rows:
          - [1, "a", "aa", "aaa", "aaaa", 1.0, 1590738990000]
          - [2, "b", "bb", "bbb", "bbbb", 1.0, 1590738990000]
          - [3, "c", "cc", "ccc", "cccc", 1.0, 1590738990000]
          - [4, "d", "dd", "ddd", "dddd", 1.0, 1590738990000]
      - columns: [ "rid int", "x1 string", "x2 string", "x3 string", "x4 string", "x6 double", "x7 timestamp" ]
        indexs: [ "index1:x1:x7", "index2:x2:x7", "index3:x3:x7", "index4:x4:x7" ]
        repeat: 100
        rows:
          - [ 1, "a", "aa", "aaa", "aaaa", 1.0, 1590738990000 ]
          - [ 2, "b", "bb", "bbb", "bbbb", 1.0, 1590738990000 ]
          - [ 3, "c", "cc", "ccc", "cccc", 1.0, 1590738990000 ]
          - [ 4, "a", "aa", "aaa", "aaaa", 1.0, 1590738980000 ]
          - [ 5, "b", "bb", "bbb", "bbbb", 1.0, 1590738980000 ]
          - [ 6, "c", "cc", "ccc", "cccc", 1.0, 1590738980000 ]
          - [ 7, "a", "aa", "aaa", "aaaa", 1.0, 1590738970000 ]
          - [ 8, "b", "bb", "bbb", "bbbb", 1.0, 1590738970000 ]
          - [ 9, "c", "cc", "ccc", "cccc", 1.0, 1590738970000 ]
    batch_request:
      columns: ["id int", "c1 string", "c2 string", "c3 string", "c4 string", "c6 double", "c7 timestamp"]
      rows:
        - [1, "a", "bb", "ccc", "aaaa", 1.0, 1590738991000]
    sql: |
      select id, c1, c2, c3, c4, c6, c7, cur_hour, today
      , w1_sum_c6, w1_max_c6, w1_min_c6, w1_avg_c6, w1_cnt_c6
      , t1.rid as t1_rid, t2.rid as t2_rid
          from
          (
              select id, c1, c2, c3, c4, c6, c7, hour(c7) as cur_hour, day(c7) as today
      , sum(c6) over w1 as w1_sum_c6
      , max(c6) over w1 as w1_max_c6
      , min(c6) over w1 as w1_min_c6
      , avg(c6) over w1 as w1_avg_c6
      , count(c6) over w1 as w1_cnt_c6
      from {0}
      window w1 as (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 10d PRECEDING AND CURRENT ROW)
      ) as w_out last join {1} as t1 order by t1.x7 on w_out.c1 = t1.x1 and w_out.c7 - 10000 >= t1.x7
      last join {1} as t2 order by t2.x7 on w_out.c2 = t2.x2 and w_out.c7 - 10000 >= t2.x7
      ;
    expect:
      columns: ["id int", "c1 string", "c2 string", "c3 string", "c4 string", "c6 double", "c7 timestamp",
        "cur_hour int", "today int", "w1_sum_c6 double", "w1_max_c6 double", "w1_min_c6 double", "w1_avg_c6 double",
        "w1_cnt_c6 bigint", "t1_rid int", "t2_rid int"]
      rows:
        - [1, "a", "bb", "ccc", "aaaa",1.0, 1590738991000, 15, 29, 101.0, 1.0, 1.0, 1.0, 101, 4, 5]

  - id: 3
    desc: BM_SimpleWindowOutputLastJoinTable4, window特征输出表拼接4张副表
    mode: batch-unsupport
    inputs:
      -
        columns: ["id int", "c1 string", "c2 string", "c3 string", "c4 string", "c6 double", "c7 timestamp"]
        indexs: ["index1:c1:c7"]
        repeat: 100
        repeat_tag: window_scale
        rows:
          - [1, "a", "aa", "aaa", "aaaa", 1.0, 1590738990000]
          - [2, "b", "bb", "bbb", "bbbb", 1.0, 1590738990000]
          - [3, "c", "cc", "ccc", "cccc", 1.0, 1590738990000]
          - [4, "d", "dd", "ddd", "dddd", 1.0, 1590738990000]
      - columns: [ "rid int", "x1 string", "x2 string", "x3 string", "x4 string", "x6 double", "x7 timestamp" ]
        indexs: [ "index1:x1:x7", "index2:x2:x7", "index3:x3:x7", "index4:x4:x7" ]
        repeat: 100
        rows:
          - [ 1, "a", "aa", "aaa", "aaaa", 1.0, 1590738990000 ]
          - [ 2, "b", "bb", "bbb", "bbbb", 1.0, 1590738990000 ]
          - [ 3, "c", "cc", "ccc", "cccc", 1.0, 1590738990000 ]
          - [ 4, "a", "aa", "aaa", "aaaa", 1.0, 1590738980000 ]
          - [ 5, "b", "bb", "bbb", "bbbb", 1.0, 1590738980000 ]
          - [ 6, "c", "cc", "ccc", "cccc", 1.0, 1590738980000 ]
          - [ 7, "a", "aa", "aaa", "aaaa", 1.0, 1590738970000 ]
          - [ 8, "b", "bb", "bbb", "bbbb", 1.0, 1590738970000 ]
          - [ 9, "c", "cc", "ccc", "cccc", 1.0, 1590738970000 ]
    batch_request:
      columns: ["id int", "c1 string", "c2 string", "c3 string", "c4 string", "c6 double", "c7 timestamp"]
      rows:
        - [1, "a", "bb", "ccc", "aaaa", 1.0, 1590738991000]
    sql: |
      select id, c1, c2, c3, c4, c6, c7, cur_hour, today
      , w1_sum_c6, w1_max_c6, w1_min_c6, w1_avg_c6, w1_cnt_c6
      , t1.rid as t1_rid, t2.rid as t2_rid, t3.rid as t3_rid, t4.rid as t4_rid
          from
          (
              select id, c1, c2, c3, c4, c6, c7, hour(c7) as cur_hour, day(c7) as today
      , sum(c6) over w1 as w1_sum_c6
      , max(c6) over w1 as w1_max_c6
      , min(c6) over w1 as w1_min_c6
      , avg(c6) over w1 as w1_avg_c6
      , count(c6) over w1 as w1_cnt_c6
      from {0}
      window w1 as (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 10d PRECEDING AND CURRENT ROW)
      ) as w_out last join {1} as t1 order by t1.x7 on w_out.c1 = t1.x1 and w_out.c7 - 10000 >= t1.x7
      last join {1} as t2 order by t2.x7 on w_out.c2 = t2.x2 and w_out.c7 - 10000 >= t2.x7
      last join {1} as t3 order by t3.x7 on w_out.c3 = t3.x3 and w_out.c7 - 10000 >= t3.x7
      last join {1} as t4 order by t4.x7 on w_out.c4 = t4.x4 and w_out.c7 - 10000 >= t4.x7;
      ;
    expect:
      columns: ["id int", "c1 string", "c2 string", "c3 string", "c4 string", "c6 double", "c7 timestamp",
                "cur_hour int", "today int", "w1_sum_c6 double", "w1_max_c6 double", "w1_min_c6 double", "w1_avg_c6 double",
                "w1_cnt_c6 bigint", "t1_rid int", "t2_rid int", "t3_rid int", "t4_rid int"]
      rows:
        - [1, "a", "bb", "ccc", "aaaa",1.0, 1590738991000, 15, 29, 101.0, 1.0, 1.0, 1.0, 101, 4, 5, 6, 4]

  - id: 4
    desc: BM_LastJoin4WindowOutput, 4张window特征输出表拼接
    mode: batch-unsupport
    inputs:
      -
        columns: ["id int", "c1 string", "c2 string", "c3 string", "c4 string", "c6 double", "c7 timestamp"]
        indexs: ["index1:c1:c7", "index2:c2:c7", "index3:c3:c7", "index4:c4:c7"]
        repeat: 100
        repeat_tag: window_scale
        rows:
          - [1, "a", "aa", "aaa", "aaaa", 1.0, 1590738990000]
          - [2, "b", "bb", "bbb", "bbbb", 1.0, 1590738990000]
          - [3, "c", "cc", "ccc", "cccc", 1.0, 1590738990000]
          - [4, "d", "dd", "ddd", "dddd", 1.0, 1590738990000]
    batch_request:
      columns: ["id int", "c1 string", "c2 string", "c3 string", "c4 string", "c6 double", "c7 timestamp"]
      rows:
        - [1, "a", "bb", "ccc", "dddd", 1.0, 1590738991000]
    sql: |
      select * from
      (
      select id as out1_id, c1, sum(c6) over w1 as w1_sum_c6, count(c6) over w1 as w1_cnt_c6 from {0}
      window w1 as (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 10d PRECEDING AND CURRENT ROW)
      ) as out1 last join
      (
      select id as out2_id, c2, sum(c6) over w2 as w2_sum_c6, count(c6) over w2 as w2_cnt_c6 from {0}
      window w2 as (PARTITION BY {0}.c2 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 10d PRECEDING AND CURRENT ROW)
      ) as out2 on out1_id=out2_id last join
      (
      select id as out3_id, c3, sum(c6) over w3 as w3_sum_c6, count(c6) over w3 as w3_cnt_c6 from {0}
      window w3 as (PARTITION BY {0}.c3 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 10d PRECEDING AND CURRENT ROW)
      ) as out3 on out1_id=out3_id last join
      (
      select id as out4_id, c4, sum(c6) over w4 as w4_sum_c6, count(c6) over w4 as w4_cnt_c6 from {0}
      window w4 as (PARTITION BY {0}.c4 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 10d PRECEDING AND CURRENT ROW)
      ) as out4 on out1_id=out4_id;
    expect:
      columns: ["out1_id int", "c1 string", "w1_sum_c6 double", "w1_cnt_c6 bigint",
                "out2_id int", "c2 string", "w2_sum_c6 double", "w2_cnt_c6 bigint",
                "out3_id int", "c3 string", "w3_sum_c6 double", "w3_cnt_c6 bigint",
                "out4_id int", "c4 string", "w4_sum_c6 double", "w4_cnt_c6 bigint"]
      rows:
        - [1, "a", 101.0, 101, 1, "bb", 101.0, 101, 1, "ccc", 101.0, 101, 1, "dddd", 101.0, 101]
  - id: 5
    desc: BM_LastJoin8WindowOutput, 8张window特征输出表拼接
    mode: batch-unsupport
    inputs:
      -
        columns: ["id int", "c1 string", "c2 string", "c3 string", "c4 string", "c6 double", "c7 timestamp"]
        indexs: ["index1:c1:c7", "index2:c2:c7", "index3:c3:c7", "index4:c4:c7"]
        repeat_tag: window_scale
        repeat: 100
        rows:
          - [1, "a", "aa", "aaa", "aaaa", 1.0, 1590738990000]
          - [2, "b", "bb", "bbb", "bbbb", 1.0, 1590738990000]
          - [3, "c", "cc", "ccc", "cccc", 1.0, 1590738990000]
          - [4, "d", "dd", "ddd", "dddd", 1.0, 1590738990000]
    batch_request:
      columns: ["id int", "c1 string", "c2 string", "c3 string", "c4 string", "c6 double", "c7 timestamp"]
      rows:
        - [1, "a", "bb", "ccc", "dddd", 1.0, 1590738991000]
    sql: |
      select * from
      (
      select id as out1_id, c1, sum(c6) over w1 as w1_sum_c6, count(c6) over w1 as w1_cnt_c6 from {0}
      window w1 as (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 10d PRECEDING AND CURRENT ROW)
      ) as out1 last join
      (
      select id as out2_id, c2, sum(c6) over w2 as w2_sum_c6, count(c6) over w2 as w2_cnt_c6 from {0}
      window w2 as (PARTITION BY {0}.c2 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 10d PRECEDING AND CURRENT ROW)
      ) as out2 on out1_id=out2_id last join
      (
      select id as out3_id, c3, sum(c6) over w3 as w3_sum_c6, count(c6) over w3 as w3_cnt_c6 from {0}
      window w3 as (PARTITION BY {0}.c3 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 10d PRECEDING AND CURRENT ROW)
      ) as out3 on out1_id=out3_id last join
      (
      select id as out4_id, c4, sum(c6) over w4 as w4_sum_c6, count(c6) over w4 as w4_cnt_c6 from {0}
      window w4 as (PARTITION BY {0}.c4 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 10d PRECEDING AND CURRENT ROW)
      ) as out4 on out1_id=out4_id last join
      (
      select id as out5_id, c1, sum(c6) over w5 as w5_sum_c6, count(c6) over w5 as w5_cnt_c6 from {0}
      window w5 as (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 30d PRECEDING AND CURRENT ROW)
      ) as out5 on out1_id=out5_id last join
      (
      select id as out6_id, c2, sum(c6) over w6 as w6_sum_c6, count(c6) over w6 as w6_cnt_c6 from {0}
      window w6 as (PARTITION BY {0}.c2 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 30d PRECEDING AND CURRENT ROW)
      ) as out6 on out1_id=out6_id last join
      (
      select id as out7_id, c3, sum(c6) over w7 as w7_sum_c6, count(c6) over w7 as w7_cnt_c6 from {0}
      window w7 as (PARTITION BY {0}.c3 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 30d PRECEDING AND CURRENT ROW)
      ) as out7 on out1_id=out7_id last join
      (
      select id as out8_id, c4, sum(c6) over w8 as w8_sum_c6, count(c6) over w8 as w8_cnt_c6 from {0}
      window w8 as (PARTITION BY {0}.c4 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 30d PRECEDING AND CURRENT ROW)
      ) as out8 on out1_id=out8_id
      ;
    expect:
      columns: ["out1_id int", "c1 string", "w1_sum_c6 double", "w1_cnt_c6 bigint",
                "out2_id int", "c2 string", "w2_sum_c6 double", "w2_cnt_c6 bigint",
                "out3_id int", "c3 string", "w3_sum_c6 double", "w3_cnt_c6 bigint",
                "out4_id int", "c4 string", "w4_sum_c6 double", "w4_cnt_c6 bigint",
                "out5_id int", "c1 string", "w5_sum_c6 double", "w5_cnt_c6 bigint",
                "out6_id int", "c2 string", "w6_sum_c6 double", "w6_cnt_c6 bigint",
                "out7_id int", "c3 string", "w7_sum_c6 double", "w7_cnt_c6 bigint",
                "out8_id int", "c4 string", "w8_sum_c6 double", "w8_cnt_c6 bigint",
      ]
      rows:
        - [ 1, "a", 101.0, 101, 1, "bb", 101.0, 101, 1, "ccc", 101.0, 101, 1, "dddd", 101.0, 101,
            1, "a", 101.0, 101, 1, "bb", 101.0, 101, 1, "ccc", 101.0, 101, 1, "dddd", 101.0, 101]
