# Copyright 2021 4Paradigm
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cases:
  - id: 0
    desc: DISTINCT UNION t1 t2
    sql: SELECT * FROM t1 UNION DISTINCT SELECT * FROM t2 UNION DISTINCT SELECT * FROM t3;
    expect:
      node_tree_str: |
        +-node[kQuery]: kQuerySetOperation
          +-operator: UNION DISTINCT
          +-inputs[list]:
            +-0:
            |  +-node[kQuery]: kQuerySelect
            |    +-distinct_opt: false
            |    +-where_expr: null
            |    +-group_expr_list: null
            |    +-having_expr: null
            |    +-order_expr_list: null
            |    +-limit: null
            |    +-select_list[list]:
            |    |  +-0:
            |    |    +-node[kResTarget]
            |    |      +-val:
            |    |      |  +-expr[all]
            |    |      +-name: <nil>
            |    +-tableref_list[list]:
            |    |  +-0:
            |    |    +-node[kTableRef]: kTable
            |    |      +-table: t1
            |    |      +-alias: <nil>
            |    +-window_list: []
            +-1:
            |  +-node[kQuery]: kQuerySelect
            |    +-distinct_opt: false
            |    +-where_expr: null
            |    +-group_expr_list: null
            |    +-having_expr: null
            |    +-order_expr_list: null
            |    +-limit: null
            |    +-select_list[list]:
            |    |  +-0:
            |    |    +-node[kResTarget]
            |    |      +-val:
            |    |      |  +-expr[all]
            |    |      +-name: <nil>
            |    +-tableref_list[list]:
            |    |  +-0:
            |    |    +-node[kTableRef]: kTable
            |    |      +-table: t2
            |    |      +-alias: <nil>
            |    +-window_list: []
            +-2:
              +-node[kQuery]: kQuerySelect
                +-distinct_opt: false
                +-where_expr: null
                +-group_expr_list: null
                +-having_expr: null
                +-order_expr_list: null
                +-limit: null
                +-select_list[list]:
                |  +-0:
                |    +-node[kResTarget]
                |      +-val:
                |      |  +-expr[all]
                |      +-name: <nil>
                +-tableref_list[list]:
                |  +-0:
                |    +-node[kTableRef]: kTable
                |      +-table: t3
                |      +-alias: <nil>
                +-window_list: []
  - id: 1
    desc: UNION ALL t1 t2
    sql: SELECT * FROM t1 UNION ALL SELECT * FROM t2;
    expect:
      node_tree_str: |
        +-node[kQuery]: kQuerySetOperation
          +-operator: UNION ALL
          +-inputs[list]:
            +-0:
            |  +-node[kQuery]: kQuerySelect
            |    +-distinct_opt: false
            |    +-where_expr: null
            |    +-group_expr_list: null
            |    +-having_expr: null
            |    +-order_expr_list: null
            |    +-limit: null
            |    +-select_list[list]:
            |    |  +-0:
            |    |    +-node[kResTarget]
            |    |      +-val:
            |    |      |  +-expr[all]
            |    |      +-name: <nil>
            |    +-tableref_list[list]:
            |    |  +-0:
            |    |    +-node[kTableRef]: kTable
            |    |      +-table: t1
            |    |      +-alias: <nil>
            |    +-window_list: []
            +-1:
              +-node[kQuery]: kQuerySelect
                +-distinct_opt: false
                +-where_expr: null
                +-group_expr_list: null
                +-having_expr: null
                +-order_expr_list: null
                +-limit: null
                +-select_list[list]:
                |  +-0:
                |    +-node[kResTarget]
                |      +-val:
                |      |  +-expr[all]
                |      +-name: <nil>
                +-tableref_list[list]:
                |  +-0:
                |    +-node[kTableRef]: kTable
                |      +-table: t2
                |      +-alias: <nil>
                +-window_list: []
      plan_tree_str: |
        +-[kQueryPlan]
          +-[kSetOperationPlan]
            +-operator: UNION ALL
            +-children[list]:
              +-[kQueryPlan]
                +-[kProjectPlan]
                  +-table: t1
                  +-project_list_vec[list]:
                    +-[kProjectList]
                      +-projects on table [list]:
                        +-[kProjectNode]
                          +-[0]*: *
                  +-[kTablePlan]
                    +-table: t1
              +-[kQueryPlan]
                +-[kProjectPlan]
                  +-table: t2
                  +-project_list_vec[list]:
                    +-[kProjectList]
                      +-projects on table [list]:
                        +-[kProjectNode]
                          +-[0]*: *
                  +-[kTablePlan]
                    +-table: t2
  - id: 2
    desc: UNION must follow by ALL or DISTINCT
    sql: SELECT * FROM t1 UNION select * FROM t2;
    expect:
      success: false
      msg: |
        Syntax error: Expected keyword ALL or keyword DISTINCT but got keyword SELECT [at 1:24]
        SELECT * FROM t1 UNION select * FROM t2;
                               ^
  - id: 3
    desc: UNION with exact DINSTINCT TYPE
    sql: SELECT * FROM t1 UNION ALL select * FROM t2 UNION DISTINCT SELECT * FROM t3;
    expect:
      success: false
      msg: |
        Syntax error: Different set operations cannot be used in the same query without using parentheses for grouping [at 1:45]
        SELECT * FROM t1 UNION ALL select * FROM t2 UNION DISTINCT SELECT * FROM t3;
                                                    ^
  - id: 4
    desc: for query with order by or limit, must quote with parantheses
    sql: SELECT * FROM t1 LIMIT 10 UNION ALL select * FROM t2
    expect:
      success: false
      msg: |
        Syntax error: Expected end of input but got keyword UNION [at 1:27]
        SELECT * FROM t1 LIMIT 10 UNION ALL select * FROM t2
                                  ^
  - id: 5
    sql: (SELECT * FROM t1 LIMIT 10) UNION ALL (select * FROM t2 UNION DISTINCT select * from t3)
    expect:
      node_tree_str: |
        +-node[kQuery]: kQuerySetOperation
          +-operator: UNION ALL
          +-inputs[list]:
            +-0:
            |  +-node[kQuery]: kQuerySelect
            |    +-distinct_opt: false
            |    +-where_expr: null
            |    +-group_expr_list: null
            |    +-having_expr: null
            |    +-order_expr_list: null
            |    +-limit:
            |    |  +-node[kLimit]
            |    |    +-limit_cnt: 10
            |    +-select_list[list]:
            |    |  +-0:
            |    |    +-node[kResTarget]
            |    |      +-val:
            |    |      |  +-expr[all]
            |    |      +-name: <nil>
            |    +-tableref_list[list]:
            |    |  +-0:
            |    |    +-node[kTableRef]: kTable
            |    |      +-table: t1
            |    |      +-alias: <nil>
            |    +-window_list: []
            +-1:
              +-node[kQuery]: kQuerySetOperation
                +-operator: UNION DISTINCT
                +-inputs[list]:
                  +-0:
                  |  +-node[kQuery]: kQuerySelect
                  |    +-distinct_opt: false
                  |    +-where_expr: null
                  |    +-group_expr_list: null
                  |    +-having_expr: null
                  |    +-order_expr_list: null
                  |    +-limit: null
                  |    +-select_list[list]:
                  |    |  +-0:
                  |    |    +-node[kResTarget]
                  |    |      +-val:
                  |    |      |  +-expr[all]
                  |    |      +-name: <nil>
                  |    +-tableref_list[list]:
                  |    |  +-0:
                  |    |    +-node[kTableRef]: kTable
                  |    |      +-table: t2
                  |    |      +-alias: <nil>
                  |    +-window_list: []
                  +-1:
                    +-node[kQuery]: kQuerySelect
                      +-distinct_opt: false
                      +-where_expr: null
                      +-group_expr_list: null
                      +-having_expr: null
                      +-order_expr_list: null
                      +-limit: null
                      +-select_list[list]:
                      |  +-0:
                      |    +-node[kResTarget]
                      |      +-val:
                      |      |  +-expr[all]
                      |      +-name: <nil>
                      +-tableref_list[list]:
                      |  +-0:
                      |    +-node[kTableRef]: kTable
                      |      +-table: t3
                      |      +-alias: <nil>
                      +-window_list: []
      plan_tree_str: |
        +-[kQueryPlan]
          +-[kSetOperationPlan]
            +-operator: UNION ALL
            +-children[list]:
              +-[kQueryPlan]
                +-[kLimitPlan]
                  +-limit_cnt: 10
                  +-[kProjectPlan]
                    +-table: t1
                    +-project_list_vec[list]:
                      +-[kProjectList]
                        +-projects on table [list]:
                          +-[kProjectNode]
                            +-[0]*: *
                    +-[kTablePlan]
                      +-table: t1
              +-[kQueryPlan]
                +-[kSetOperationPlan]
                  +-operator: UNION DISTINCT
                  +-children[list]:
                    +-[kQueryPlan]
                      +-[kProjectPlan]
                        +-table: t2
                        +-project_list_vec[list]:
                          +-[kProjectList]
                            +-projects on table [list]:
                              +-[kProjectNode]
                                +-[0]*: *
                        +-[kTablePlan]
                          +-table: t2
                    +-[kQueryPlan]
                      +-[kProjectPlan]
                        +-table: t3
                        +-project_list_vec[list]:
                          +-[kProjectList]
                            +-projects on table [list]:
                              +-[kProjectNode]
                                +-[0]*: *
                        +-[kTablePlan]
                          +-table: t3
  - id: 6
    desc: config option only append at end of query statement, not expression
    sql: |
      (SELECT * FROM t1 LIMIT 10 config ( c = 'c'))
      UNION SELECT * FROM t2
      config (c = 'c')
    expect:
      success: false
      msg: |
        Syntax error: Expected ")" but got keyword CONFIG [at 1:28]
        (SELECT * FROM t1 LIMIT 10 config ( c = 'c'))
                                   ^

