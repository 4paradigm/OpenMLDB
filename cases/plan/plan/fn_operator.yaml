# Copyright 2021 4Paradigm
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


cases:
  - id: bit_wise_and
    desc: bit wise and, 0x0011 & 0x0110 = 0x0010 (2)
    sql: SELECT 3 & 6;
    expect:
      node_tree_str: |
        +-node[kQuery]: kQuerySelect
          +-distinct_opt: false
          +-where_expr: null
          +-group_expr_list: null
          +-having_expr: null
          +-order_expr_list: null
          +-limit: null
          +-select_list[list]:
          |  +-0:
          |    +-node[kResTarget]
          |      +-val:
          |      |  +-expr[binary]
          |      |    +-&[list]:
          |      |      +-0:
          |      |      |  +-expr[primary]
          |      |      |    +-value: 3
          |      |      |    +-type: int32
          |      |      +-1:
          |      |        +-expr[primary]
          |      |          +-value: 6
          |      |          +-type: int32
          |      +-name: <nil>
          +-tableref_list: []
          +-window_list: []

  - id: bit_wise_or
    desc: bit wise or, 0x0011 | 0x0110 = 0x0111 (7)
    sql: SELECT 3 | 6;
    expect:
      node_tree_str: |
        +-node[kQuery]: kQuerySelect
          +-distinct_opt: false
          +-where_expr: null
          +-group_expr_list: null
          +-having_expr: null
          +-order_expr_list: null
          +-limit: null
          +-select_list[list]:
          |  +-0:
          |    +-node[kResTarget]
          |      +-val:
          |      |  +-expr[binary]
          |      |    +-|[list]:
          |      |      +-0:
          |      |      |  +-expr[primary]
          |      |      |    +-value: 3
          |      |      |    +-type: int32
          |      |      +-1:
          |      |        +-expr[primary]
          |      |          +-value: 6
          |      |          +-type: int32
          |      +-name: <nil>
          +-tableref_list: []
          +-window_list: []
  - id: bit_wise_xor
    desc: bit wise xor, 0x0011 ^ 0x0110 = 0x0101 (5)
    sql: SELECT 3 ^ 6;
    expect:
      node_tree_str: |
        +-node[kQuery]: kQuerySelect
          +-distinct_opt: false
          +-where_expr: null
          +-group_expr_list: null
          +-having_expr: null
          +-order_expr_list: null
          +-limit: null
          +-select_list[list]:
          |  +-0:
          |    +-node[kResTarget]
          |      +-val:
          |      |  +-expr[binary]
          |      |    +-^[list]:
          |      |      +-0:
          |      |      |  +-expr[primary]
          |      |      |    +-value: 3
          |      |      |    +-type: int32
          |      |      +-1:
          |      |        +-expr[primary]
          |      |          +-value: 6
          |      |          +-type: int32
          |      +-name: <nil>
          +-tableref_list: []
          +-window_list: []
  - id: bit_wise_not
    desc: bit wise not, ~0 = -1
    sql: SELECT ~0;
    expect:
      node_tree_str: |
        +-node[kQuery]: kQuerySelect
          +-distinct_opt: false
          +-where_expr: null
          +-group_expr_list: null
          +-having_expr: null
          +-order_expr_list: null
          +-limit: null
          +-select_list[list]:
          |  +-0:
          |    +-node[kResTarget]
          |      +-val:
          |      |  +-expr[unary]
          |      |    +-~[list]:
          |      |      +-0:
          |      |        +-expr[primary]
          |      |          +-value: 0
          |      |          +-type: int32
          |      +-name: <nil>
          +-tableref_list: []
          +-window_list: []
