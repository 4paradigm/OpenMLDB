# Copyright 2021 4Paradigm
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cases:
  - id: 0
    desc: 单window聚合 ROWS Between
    sql: |
      SELECT sum(col2) OVER w1 as w1_col2_sum FROM t1
      WINDOW w1 AS (PARTITION BY col1 ORDER BY col5 ROWS BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;
  - id: 1
    desc: 单window聚合 ROWS_RANGE Between
    sql: |
      SELECT sum(col2) OVER w1 as w1_col2_sum FROM t1
      WINDOW w1 AS (PARTITION BY col1 ORDER BY col5 ROWS_RANGE BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;
  - id: 2
    desc: 单行+单window聚合
    sql: |
      SELECT col1, col5, sum(col2) OVER w1 as w1_col2_sum FROM t1
      WINDOW w1 AS (PARTITION BY col1 ORDER BY col5 ROWS_RANGE BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;
  - id: 3-1
    desc: 单行+单window
    sql: |
      SELECT col2, col5, sum(col1) OVER w1 as w1_col1_sum, sum(col3) OVER w1 as w1_col3_sum,
      sum(col4) OVER w1 as w1_col4_sum, sum(col2) OVER w1 as w1_col2_sum,
      sum(col5) OVER w1 as w1_col5_sum, col1,
      col6 as col6 FROM t1
      WINDOW w1 AS (PARTITION BY t1.col2 ORDER BY t1.col5 ROWS_RANGE BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;
  - id: 3-2
    desc: 单行+单window+自定义聚合函数
    tags: ["TODO", "zetasql-unsupport"]
    sql: |
      %%fun
      def test_sum(col:list<int>):int
          result = 0
          for x in col
              result += x
          return result
      end
      %%sql
      SELECT col2, col5, test_sum(col1) OVER w1 as w1_col1_sum, sum(col3) OVER w1 as w1_col3_sum,
      sum(col4) OVER w1 as w1_col4_sum, sum(col2) OVER w1 as w1_col2_sum,
      sum(col5) OVER w1 as w1_col5_sum, col1,
      col6 as col6 FROM t1
      WINDOW w1 AS (PARTITION BY t1.col2 ORDER BY t1.col5 ROWS_RANGE BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;
  - id: 4-1
    desc: 单行+两window
    sql: |
      SELECT col2, col0, col5, sum(col1) OVER w1 as w1_col1_sum, sum(col3) OVER w1 as w1_col3_sum,
      sum(col4) OVER w2 as w2_col4_sum, sum(col2) OVER w2 as w2_col2_sum, sum(col5) OVER w2 as w2_col5_sum,
      col1, col6 as col6 FROM t1 WINDOW
      w1 AS (PARTITION BY col2 ORDER BY col5 ROWS_RANGE BETWEEN 3 PRECEDING AND CURRENT ROW),
      w2 AS (PARTITION BY col0 ORDER BY col5 ROWS_RANGE BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;
  - id: 4-2
    desc: 单行+两window, 窗口表达式在前面
    sql: |
      SELECT sum(col2) OVER w2 as w2_col2_sum, sum(col4) OVER w2 as w2_col4_sum, sum(col5) OVER w2 as w2_col5_sum,
      sum(col1) OVER w1 as w1_col1_sum, sum(col3) OVER w1 as w1_col3_sum, col0, col2, col5, col1, col6 as col6 FROM t1 WINDOW
      w1 AS (PARTITION BY col2 ORDER BY col5 ROWS_RANGE BETWEEN 3 PRECEDING AND CURRENT ROW),
      w2 AS (PARTITION BY col0 ORDER BY col5 ROWS_RANGE BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;
  - id: 4-3
    desc: 单行+两window+自定义聚合函数
    tags: ["TODO", "zetasql-unsupport"]
    sql: |
      %%fun
      def test_sum(col:list<int>):int
          result = 0
          for x in col
              result += x
          return result
      end
      %%sql
      SELECT col2, col0, col5, test_sum(col1) OVER w1 as w1_col1_sum, sum(col3) OVER w1 as w1_col3_sum,
      sum(col4) OVER w2 as w2_col4_sum, sum(col2) OVER w2 as w2_col2_sum, sum(col5) OVER w2 as w2_col5_sum,
      col1, col6 as col6 FROM t1 WINDOW
      w1 AS (PARTITION BY col2 ORDER BY col5 ROWS_RANGE BETWEEN 3 PRECEDING AND CURRENT ROW),
      w2 AS (PARTITION BY col0 ORDER BY col5 ROWS_RANGE BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;

  - id: 5-1
    desc: 单行+三个window+w1和w2命中索引
    sql: |
      SELECT col2, col0, col5, sum(col1) OVER w1 as w1_col1_sum, sum(col3) OVER w1 as w1_col3_sum,
      sum(col4) OVER w3 as w3_col4_sum, sum(col2) OVER w2 as w2_col2_sum, sum(col5) OVER w2 as w2_col5_sum,
      col1, col6 as col6 FROM t1 WINDOW
      w1 AS (PARTITION BY col2 ORDER BY col5 ROWS_RANGE BETWEEN 3 PRECEDING AND CURRENT ROW),
      w2 AS (PARTITION BY col0 ORDER BY col5 ROWS_RANGE BETWEEN 3 PRECEDING AND CURRENT ROW),
      w3 AS (PARTITION BY col1 ORDER BY col5 ROWS_RANGE BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;
  - id: 5-2
    desc: 单行+三个window+自定义聚合函数,w1和w2命中索引
    tags: ["TODO", "zetasql-unsupport"]
    sql: |
      %%fun
      def test_sum(col:list<int>):int
          result = 0
          for x in col
              result += x
          return result
      end
      %%sql
      SELECT col2, col0, col5, test_sum(col1) OVER w1 as w1_col1_sum, sum(col3) OVER w1 as w1_col3_sum,
      sum(col4) OVER w3 as w3_col4_sum, sum(col2) OVER w2 as w2_col2_sum, sum(col5) OVER w2 as w2_col5_sum,
      col1, col6 as col6 FROM t1 WINDOW
      w1 AS (PARTITION BY col2 ORDER BY col5 ROWS_RANGE BETWEEN 3 PRECEDING AND CURRENT ROW),
      w2 AS (PARTITION BY col0 ORDER BY col5 ROWS_RANGE BETWEEN 3 PRECEDING AND CURRENT ROW),
      w3 AS (PARTITION BY col1 ORDER BY col5 ROWS_RANGE BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;
  - id: 6
    desc: LAST JOIN + Window
    db: db1
    sql: |
      SELECT t1.col2, t1.col5,
      sum(t1.col1) OVER w1 as w1_col1_sum, sum(t1.col3) OVER w1 as w1_col3_sum,
      sum(t2.col4) OVER w1 as w1_t2_col4_sum, sum(t2.col2) OVER w1 as w1_t2_col2_sum,
      sum(t1.col5) OVER w1 as w1_col5_sum FROM t1 last join t2 order by t2.col5 on t1.col1=t2.col1 and t1.col5 = t2.col5
      WINDOW w1 AS (PARTITION BY t1.col2 ORDER BY t1.col5 ROWS_RANGE BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;
  - id: 7
    desc: 单行+单window with union 一张副表
    sql: |
      SELECT col1, col5, sum(col2) OVER w1 as w1_col2_sum FROM t1
      WINDOW w1 AS (UNION t2 PARTITION BY col1 ORDER BY col5 ROWS_RANGE BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;
  - id: 8
    desc: 单行+单window with union 两张副表
    sql: |
      SELECT col1, col5, sum(col2) OVER w1 as w1_col2_sum FROM t1
      WINDOW w1 AS (UNION t2, t3 PARTITION BY col1 ORDER BY col5 ROWS_RANGE BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;
  - id: 9
    desc: 单行+单window with union 两张副表, 主表不进入窗口
    sql: |
      SELECT col1, col5, sum(col2) OVER w1 as w1_col2_sum FROM t1
      WINDOW w1 AS (UNION t2,t3 PARTITION BY col1 ORDER BY col5 ROWS_RANGE BETWEEN 3 PRECEDING AND CURRENT ROW INSTANCE_NOT_IN_WINDOW) limit 10;
  - id: 10
    desc: 单行+单window with union 子查询
    sql: |
      SELECT col1, col5, sum(col2) OVER w1 as w1_col2_sum FROM t1
      WINDOW w1 AS (UNION (select c0 as col0, 0 as col1, c2 as col2, 0.0f as col3, 0.0 as col4, 99999l as col5, "NA" as col6 from tb)
      PARTITION BY col1 ORDER BY col5 ROWS_RANGE BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;
  - id: 11
    desc: 单行+单window with union 两个子查询
    sql: |
      SELECT col1, col5, sum(col2) OVER w1 as w1_col2_sum FROM t1
      WINDOW w1 AS
      (UNION (select c0 as col0, c1 as col1, c2 as col2, c3 as col3, 0.0 as col4, c5 as col5, "NA" as col6 from tb),
      (select c0 as col0, c1 as col1, c2 as col2, c3 as col3, 0.0 as col4, c5 as col5, "NA" as col6 from tc)
      PARTITION BY col1 ORDER BY col5 ROWS_RANGE BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;
  - id: 12
    desc: 单window, 30d
    sql: |
      SELECT sum(col2) OVER w1 as w1_col2_sum FROM t1
      WINDOW w1 AS (PARTITION BY col1 ORDER BY col5 ROWS_RANGE BETWEEN 30d PRECEDING AND CURRENT ROW) limit 10;
  - id: 13
    desc: window with union, 主表副表都基于子查询
    sql: |
      SELECT col2, col5, sum(col1) OVER w1 as w1_col1_sum, sum(col3) OVER w1 as w1_col3_sum,
      sum(col4) OVER w1 as w1_col4_sum, sum(col2) OVER w1 as w1_col2_sum,
      sum(col5) OVER w1 as w1_col5_sum, count(col1) OVER w1 as w1_col1_cnt, col1,
      col6 as col6 FROM (select "tc_col0" as col0, col1, col2, 0.0f as col3, 0.0 as col4, col5, col6 from t1)
      WINDOW w1 AS (UNION (select c0 as col0, c1 as col1, c2 as col2, c3 as col3, 0.0 as col4, c5 as col5, "NA_STR" as col6 from tb)
      PARTITION BY col2 ORDER BY col5 ROWS_RANGE BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;
  - id: 14
    desc: window RANGE, -1000ms 至当前时刻
    sql: |
      SELECT sum(col2) OVER w1 as w1_col2_sum FROM t1
      WINDOW w1 AS (PARTITION BY col1 ORDER BY col5 ROWS_RANGE BETWEEN 1000 PRECEDING AND CURRENT ROW) limit 10;
  - id: 15
    desc: window ROWS, 前1000条到当前条
    sql: |
      SELECT sum(col2) OVER w1 as w1_col2_sum FROM t1
      WINDOW w1 AS (PARTITION BY col1 ORDER BY col5 ROWS BETWEEN 1000 PRECEDING AND CURRENT ROW) limit 10;
  - id: 16
    desc: window ROWS_RANGE, -1000ms 到当前条
    sql: |
      SELECT sum(col2) OVER w1 as w1_col2_sum FROM t1
      WINDOW w1 AS (PARTITION BY col1 ORDER BY col5 ROWS_RANGE BETWEEN 1000 PRECEDING AND CURRENT ROW) limit 10;
  - id: 17
    desc: window RANGE, -1s至当前时刻
    sql: |
      SELECT sum(col2) OVER w1 as w1_col2_sum FROM t1
      WINDOW w1 AS (PARTITION BY col1 ORDER BY col5 ROWS_RANGE BETWEEN 1s PRECEDING AND CURRENT ROW) limit 10;
  - id: 18
    desc: window ROWS, ROWS_RANGE
    sql: |
      SELECT
      sum(col1) OVER (PARTITION BY col1 ORDER BY col5 ROWS_RANGE BETWEEN 2d PRECEDING AND CURRENT ROW) as w_col1_sum,
      sum(col2) OVER w1 as w1_col2_sum,
      sum(col3) OVER (PARTITION BY col1 ORDER BY col5 ROWS BETWEEN 1000 PRECEDING AND CURRENT ROW) as w_col3_sum
      FROM t1
      WINDOW w1 AS (PARTITION BY col1 ORDER BY col5 ROWS_RANGE BETWEEN 1d PRECEDING AND CURRENT ROW) limit 10;
  - id: 19
    desc: simple query + window ROWS, ROWS_RANGE
    sql: |
      SELECT col1, col2, col3,
      sum(col1) OVER (PARTITION BY col1 ORDER BY col5 ROWS_RANGE BETWEEN 2d PRECEDING AND CURRENT ROW) as w_col1_sum,
      sum(col2) OVER w1 as w1_col2_sum,
      sum(col3) OVER (PARTITION BY col1 ORDER BY col5 ROWS BETWEEN 1000 PRECEDING AND CURRENT ROW) as w_col3_sum
      FROM t1
      WINDOW w1 AS (PARTITION BY col1 ORDER BY col5 ROWS_RANGE BETWEEN 1d PRECEDING AND CURRENT ROW) limit 10;
  - id: 20
    desc: 表达式嵌套窗口函数
    sql: |
      select bigint(sum(col2) over w1) + 10 as f1 from t1 window
      w1 as (partition by col1 order by col5 rows between 10 preceding and current row);
  - id: 21
    desc: 函数嵌套函数窗口
    sql: |
      select bigint(sum(col2) over w1) as f1 from t1 window
      w1 as (partition by col1 order by col5 rows between 10 preceding and current row);
  - id: 22
    desc: window ROWS_RANGE with MAXSIZE
    sql: |
      SELECT
      sum(col2) OVER w1 as w1_col2_sum
      FROM t1
      WINDOW w1 AS (PARTITION BY col1 ORDER BY col5 ROWS_RANGE BETWEEN 1d PRECEDING AND CURRENT ROW MAXSIZE 5) limit 10;
  - id: 24
    desc: window ROWS and ROWS_RANGE with MAXSIZE
    sql: |
      SELECT
      sum(col2) OVER w1 as w1_col2_sum,
      sum(col2) OVER w2 as w1_col2_sum
      FROM t1 WINDOW
      w1 AS (PARTITION BY col1 ORDER BY col5 ROWS BETWEEN 10 PRECEDING AND CURRENT ROW),
      w2 AS (PARTITION BY col1 ORDER BY col5 ROWS_RANGE BETWEEN 1d PRECEDING AND CURRENT ROW MAXSIZE 20) limit 10;

  - id: 25-1
    desc: window ROWS_RANGE, -1000ms 至当前时刻 EXCLUDE CURRENT_TIME
    sql: |
      SELECT sum(col2) OVER w1 as w1_col2_sum FROM t1
      WINDOW w1 AS (PARTITION BY col1 ORDER BY col5 ROWS_RANGE BETWEEN 1000 OPEN PRECEDING AND CURRENT ROW EXCLUDE CURRENT_TIME) limit 10;
  - id: 25-2
    desc: window ROWS, 前1000条到当前条 EXCLUDE CURRENT_TIME
    sql: |
      SELECT sum(col2) OVER w1 as w1_col2_sum FROM t1
      WINDOW w1 AS (PARTITION BY col1 ORDER BY col5 ROWS BETWEEN 1000 OPEN PRECEDING AND CURRENT ROW EXCLUDE CURRENT_TIME) limit 10;
  - id: 25-3
    desc: window ROWS_RANGE, -1000ms 到当前条 EXCLUDE CURRENT_TIME
    sql: |
      SELECT sum(col2) OVER w1 as w1_col2_sum FROM t1
      WINDOW w1 AS (PARTITION BY col1 ORDER BY col5 ROWS_RANGE BETWEEN 1000 OPEN PRECEDING AND CURRENT ROW EXCLUDE CURRENT_TIME) limit 10;
  - id: 25-4
    desc: window RANGE, -1s至当前时刻 EXCLUDE CURRENT_TIME
    sql: |
      SELECT sum(col2) OVER w1 as w1_col2_sum FROM t1
      WINDOW w1 AS (PARTITION BY col1 ORDER BY col5 ROWS_RANGE BETWEEN 1s OPEN PRECEDING AND CURRENT ROW EXCLUDE CURRENT_TIME) limit 10;
  - id: 25-5
    desc: window ROWS, ROWS_RANGE EXCLUDE CURRENT_TIME
    sql: |
      SELECT
      sum(col1) OVER (PARTITION BY col1 ORDER BY col5 ROWS_RANGE BETWEEN 2d PRECEDING AND CURRENT ROW EXCLUDE CURRENT_TIME) as w_col1_sum,
      sum(col2) OVER w1 as w1_col2_sum,
      sum(col3) OVER (PARTITION BY col1 ORDER BY col5 ROWS BETWEEN 1000 PRECEDING AND CURRENT ROW EXCLUDE CURRENT_TIME) as w_col3_sum
      FROM t1
      WINDOW w1 AS (PARTITION BY col1 ORDER BY col5 ROWS_RANGE BETWEEN 1d PRECEDING AND CURRENT ROW EXCLUDE CURRENT_TIME) limit 10;
  - id: 25-6
    desc: window ROWS_RANGE with MAXSIZE EXCLUDE CURRENT_TIME
    sql: |
      SELECT
      sum(col2) OVER w1 as w1_col2_sum
      FROM t1
      WINDOW w1 AS (PARTITION BY col1 ORDER BY col5 ROWS_RANGE BETWEEN 1d OPEN PRECEDING AND CURRENT ROW MAXSIZE 5 EXCLUDE CURRENT_TIME) limit 10;
  - id: 25-7
    desc: window ROWS and ROWS_RANGE with MAXSIZE EXCLUDE CURRENT_TIME
    sql: |
      SELECT
      sum(col2) OVER w1 as w1_col2_sum,
      sum(col2) OVER w2 as w1_col2_sum
      FROM t1 WINDOW
      w1 AS (PARTITION BY col1 ORDER BY col5 ROWS BETWEEN 10 OPEN PRECEDING AND CURRENT ROW EXCLUDE CURRENT_TIME),
      w2 AS (PARTITION BY col1 ORDER BY col5 ROWS_RANGE BETWEEN 1d OPEN PRECEDING AND CURRENT ROW MAXSIZE 20 EXCLUDE CURRENT_TIME) limit 10;
