# Copyright 2021 4Paradigm
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cases:
  - id: 0
    desc: SELECT ALL
    sql: SELECT * FROM t1;
  - id: 1
    desc: SELECT列
    sql: SELECT COL1, -COL1 FROM t1;
  - id: 2
    desc: SELECT列重命名
    sql: SELECT COL1 as c1 FROM t1;
  - id: 3
    desc: SELECT列重命名2
    sql: SELECT COL1 c1 FROM t1;
  - id: 4
    desc: SELECT 表.列
    sql: SELECT t1.COL1 FROM t1;
  - id: 5
    desc: SELECT 表.列 重命名
    sql: SELECT t1.COL1 as c1 FROM t1;
  - id: 6
    desc: SELECT 表.列 重命名2
    sql: SELECT t1.COL1 c1 FROM t1;
  - id: 7
    desc: SELECT Limit
    sql: SELECT t1.COL1 c1 FROM t1 limit 10;
  - id: 8
    desc: SELECT所有列
    sql: SELECT * FROM t1;
  - id: 9
    desc: SELECT COUNT
    sql: SELECT COUNT(*) FROM t1;
    mode: physical-plan-unsupport
  - id: 10
    desc: SELECT COUNT某一列（去除null列）
    sql: SELECT COUNT(COL1) FROM t1;
    mode: physical-plan-unsupport
  - id: 11
    desc: SELECT 表达式+
    sql: SELECT COL1 + COL2 as col12 FROM t1;
  - id: 12
    desc: SELECT 算术表达式-
    sql: SELECT COL1 - COL2 as col12, COL1-1 FROM t1;
  - id: 13
    desc: SELECT 算术表达式*
    sql: SELECT COL1 * COL2 as col12 FROM t1;
  - id: 15
    desc: SELECT 算术表达式/
    sql: SELECT COL1 / COL2 as col12 FROM t1;
  - id: 16
    desc: SELECT 算术表达式%
    sql: SELECT COL1 % COL2 as col12 FROM t1;
  - id: 17
    desc: SELECT Bool表达式等于
    sql: SELECT COL1 = COL2 as col12 FROM t1;
  - id: 18
    desc: SELECT Bool表达式等于2
    sql: SELECT COL1 == COL2 as col12 FROM t1;
  - id: 19
    desc: SELECT Bool表达式小于
    sql: SELECT COL1 < COL2 as col12 FROM t1;
  - id: 20
    desc: SELECT Bool表达式大于
    sql: SELECT COL1 > COL2 as col12 FROM t1;
  - id: 21
    desc: SELECT Bool表达式小于等于
    sql: SELECT COL1 <= COL2 as col12 FROM t1;
  - id: 22
    desc: SELECT Bool表达式大于等于
    sql: SELECT COL1 >= COL2 as col12 FROM t1;
  - id: 23
    desc: SELECT Bool表达式不等于
    sql: SELECT COL1 != COL2 as col12 FROM t1;
  - id: 24-1
    desc: SELECT 逻辑关系表达式 '&&'
    tags: ["TODO", "zetasql-unsupport"]
    sql: SELECT COL1 >= COL2 && COL1 != COL2 as col12 FROM t1;
  - id: 24-2
    desc: SELECT 逻辑关系表达式 AND
    sql: SELECT COL1 >= COL2 AND COL1 != COL2 as col12 FROM t1;
  - id: 25
    desc: SELECT 逻辑关系表达式AND2
    sql: SELECT COL1 >= COL2 and COL1 != COL2 and COL1 > COL2 as col12 FROM t1;
  - id: 26-1
    desc: SELECT 逻辑关系表达式 '||'
    tags: ["TODO", "zetasql-unsupport"]
    sql: SELECT COL1 >= COL2 || COL1 != COL2 as col12 FROM t1;
  - id: 26-2
    desc: SELECT 逻辑关系表达式 OR
    sql: SELECT COL1 >= COL2 OR COL1 != COL2 as col12 FROM t1;
  - id: 27
    desc: SELECT 逻辑关系表达式OR2
    sql: SELECT COL1 >= COL2 OR COL1 != COL2 OR COL1 = COL2 as col12 FROM t1;
  - id: 28
    desc: SELECT 逻辑关系表达式非
    sql: SELECT !(COL1 >= COL2 or COL1 != COL2) as col12 FROM t1;
  - id: 29
    desc: SELECT 逻辑关系表达式非NOT
    sql: SELECT NOT(COL1 >= COL2 or COL1 != COL2) as col12 FROM t1;
  - id: 30
    desc: SELECT 逻辑关系表达式XOR
    sql: SELECT COL1 >= COL2 XOR COL1 != COL2 as col12 FROM t1;
  - id: 31
    desc: SELECT Bool表达式不等于<>
    sql: SELECT COL1 <> COL2 as col12 FROM t1;
  - id: 32
    desc: SELECT 算术表达式DIV
    sql: SELECT COL1 DIV COL2 as col12 FROM t1;
  - id: 33
    desc: SELECT 算术表达式MOD
    sql: SELECT COL1 MOD COL2 as col12 FROM t1;
  - id: 34
    desc: SELECT 常量表达式
    mode: request-unsupport
    sql: SELECT 1+2, 1.0f + 2.0f, 1L + 2L, 9999999999999L, 9999999999999;
  - id: 35
    desc: SELECT 常量函数表达式
    mode: request-unsupport
    sql: SELECT substr("hello world", 3, 6);
  - id: 36
    desc: SIMPLE CASE WHEN 表达式
    sql: |
      select col1, case col0
                        when 'aa' then 'apple'
                        when 'bb' then 'banana'
                        when 'cc' then 'cake'
                        else 'nothing'
                    end, col2 from t1;
  - id: 37
    desc: SEARCHED CASE WHEN 表达式
    sql: |
      select col1, case
                        when col0='aa' then 'apple'
                        when col0='bb' then 'banana'
                        when col0='cc' then 'cake'
                        else 'nothing'
                    end, col2 from t1;
  - id: 38
    desc: SIMPLE CASE WHEN 表达式 without ELSE
    sql: |
      select col1, case col0
                        when 'aa' then 'apple'
                        when 'bb' then 'banana'
                        when 'cc' then 'cake'
                    end, col2 from t1;
  - id: 39
    desc: SEARCHED CASE WHEN 表达式 without ELSE
    sql: |
      select col1, case
                        when col0='aa' then 'apple'
                        when col0='bb' then 'banana'
                        when col0='cc' then 'cake'
                    end, col2 from t1;
  - id: 40-1
    desc: SQL标准Cast语法-Cast(常量 as type)
    sql: |
      select cast(1 as int) as f1, cast(1 as bigint) as f2, cast(1 as float) as f3,
      cast(1 as double) as f4, cast(1 as bool) as f5, cast(1590115420000 as timestamp) as f6,
      cast(1 as string) as f7 from t1;
  - id: 40-2
    desc: SQL标准Cast语法-Cast(表达式 as type)
    sql: |
      select cast(col1 as int) as f1, cast(col1+col2 as bigint) as f2, cast(col1 as float) as f3,
      cast(col1 as double) as f4, cast(col1 as bool) as f5, cast(col5 as timestamp) as f6,
      cast(col1 as string) as f7 from t1;
  - id: 40-3
    desc: cast函数
    sql: |
      select int(1) as f1, bigint(1) as f2, float(1) as f3,
      double(1) as f4, bool(1) as f5, timestamp(1590115420000) as f6,
      string(1) as f7 from t1;
  - id: 40-4
    desc: SQL标准Cast语法-Cast(表达式 as type)
    sql: |
      select int(col1) as f1, bigint(col1+col2) as f2, float(col1) as f3,
      double(col1) as f4, bool(col1) as f5, timestamp(col1) as f6,
      string(col1) as f7 from t1;
