# Copyright 2021 4Paradigm
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cases:
- id: 0
  desc: luoji test
  mode: rtidb-batch-unsupport
  inputs:
    - columns: [
        reqId string,
        eventTime timestamp,
        f_requestId string,
        f_cId string,
        f_uId string,
        f_cSrc string,
        f_cLength double]
      indexs: [
        index1:f_requestId:eventTime,
        index2:f_uId:eventTime]
      repeat: 100
      name: flattenRequest
      rows:
        - [reqId1, 1609894067190, f_requestId1, f_cId1-1, f_uId1, f_cSrc1-1, 1.0]
        - [reqId1, 1609894067190, f_requestId1, f_cId1-1, f_uId1, f_cSrc1-1, 1.0]
        - [reqId1, 1609894067190, f_requestId1, f_cId1-2, f_uId1, f_cSrc1-2, 1.0]
        - [reqId2, 1609894067190, f_requestId2, f_cId2-1, f_uId2, f_cSrc2-1, 2.0]
        - [reqId2, 1609894067190, f_requestId2, f_cId2-2, f_uId2, f_cSrc2-2, 2.0]
        - [NULL, 1609894067190, f_requestIdNull, f_cIdNull, f_uIdNull, f_cSrcNul, 3.0]
    - columns: [
            reqId string,
            eventTime timestamp,
            ingestionTime timestamp,
            actionValue int,
        ]
      indexs: [index1:reqId:null:1:latest]
      name: action
      rows:
        - [reqId1, 1609894067191, 1609894067191, 1]
        - [NULL, 1609894067191, 1609894067191, 3]
  sql: |
    select * from
    (
    select
        reqId as reqId_1,
        `reqId` as flattenRequest_reqId_original_0,
        `eventTime` as flattenRequest_eventTime_original_1,
        `f_requestId` as flattenRequest_f_requestId_original_2,
        `f_cId` as flattenRequest_f_cId_original_3,
        `f_cSrc` as flattenRequest_f_cSrc_original_8,
        `f_uId` as flattenRequest_f_uId_original_17,
        `f_cLength` as flattenRequest_f_cLength_original_10,
        sum(`f_cLength`) over flattenRequest_f_requestId_eventTime_0s_604801s as flattenRequest_f_cLength_window_sum_32,
        distinct_count(`f_cId`) over flattenRequest_f_uId_eventTime_0_10 as flattenRequest_f_cId_window_unique_count_38,
        fz_top1_ratio(`f_cId`) over flattenRequest_f_requestId_eventTime_0_10 as flattenRequest_f_cId_window_top1_ratio_39,
        fz_top1_ratio(`f_cId`) over flattenRequest_f_requestId_eventTime_0s_604801s as flattenRequest_f_cId_window_top1_ratio_40,
        sum(`f_cLength`) over flattenRequest_f_requestId_eventTime_0s_432001s as flattenRequest_f_cLength_window_sum_41,
        case when !isnull(lag(`f_cSrc`, 0)) over flattenRequest_f_requestId_eventTime_0s_604801s then count(`f_cSrc`) over flattenRequest_f_requestId_eventTime_0s_604801s else null end as flattenRequest_f_cSrc_window_count_42,
        case when !isnull(lag(`f_cSrc`, 0)) over flattenRequest_f_uId_eventTime_0s_604801s then count(`f_cSrc`) over flattenRequest_f_uId_eventTime_0s_604801s else null end as flattenRequest_f_cSrc_window_count_43,
        fz_top1_ratio(`f_cId`) over flattenRequest_f_uId_eventTime_0_10 as flattenRequest_f_cId_window_top1_ratio_44,
        fz_top1_ratio(`f_cId`) over flattenRequest_f_uId_eventTime_0s_604801s as flattenRequest_f_cId_window_top1_ratio_45,
        fz_top1_ratio(`f_cId`) over flattenRequest_f_uId_eventTime_0s_432001s as flattenRequest_f_cId_window_top1_ratio_46,
        case when !isnull(lag(`f_cId`, 0)) over flattenRequest_f_requestId_eventTime_0s_604801s then count(`f_cId`) over flattenRequest_f_requestId_eventTime_0s_604801s else null end as flattenRequest_f_cId_window_count_47,
        case when !isnull(lag(`f_cId`, 0)) over flattenRequest_f_uId_eventTime_0s_432001s then count(`f_cId`) over flattenRequest_f_uId_eventTime_0s_432001s else null end as flattenRequest_f_cId_window_count_48,
        case when !isnull(lag(`f_cId`, 0)) over flattenRequest_f_uId_eventTime_0s_604801s then count(`f_cId`) over flattenRequest_f_uId_eventTime_0s_604801s else null end as flattenRequest_f_cId_window_count_49
    from
        `flattenRequest`
        window flattenRequest_f_requestId_eventTime_0s_604801s as (partition by `f_requestId` order by `eventTime` rows_range between 604801s preceding and 0s preceding),
        flattenRequest_f_uId_eventTime_0_10 as (partition by `f_uId` order by `eventTime` rows_range between 10 preceding and 0 preceding),
        flattenRequest_f_requestId_eventTime_0_10 as (partition by `f_requestId` order by `eventTime` rows_range between 10 preceding and 0 preceding),
        flattenRequest_f_requestId_eventTime_0s_432001s as (partition by `f_requestId` order by `eventTime` rows_range between 432001s preceding and 0s preceding),
        flattenRequest_f_uId_eventTime_0s_604801s as (partition by `f_uId` order by `eventTime` rows_range between 604801s preceding and 0s preceding),
        flattenRequest_f_uId_eventTime_0s_432001s as (partition by `f_uId` order by `eventTime` rows_range between 432001s preceding and 0s preceding))
    as out0
    last join
    (
    select
        flattenRequest.reqId as reqId_32,
        `action_reqId`.`actionValue` as action_actionValue_multi_direct_31
    from
        `flattenRequest`
        last join `action` as `action_reqId` on `flattenRequest`.`reqId` = `action_reqId`.`reqId`)
    as out1
    on out0.reqId_1 = out1.reqId_32;
  batch_request:
    columns: [
        reqId string,
        eventTime timestamp,
        f_requestId string,
        f_cId string,
        f_uId string,
        f_cSrc string,
        f_cLength double ]
    rows:
      - [reqId1, 1609894067190, f_requestId1, f_cId1, f_uId1, f_cSrc1, 1.0]
      - [reqId1, 1609894067190, f_requestId1, f_cId1, f_uId1, NULL, 1.0]
      - [reqId1, 1609894067190, f_requestId1, NULL, f_uId1, f_cSrc1, 1.0]
      - [reqId2, 1609894067190, f_requestId2, f_cId2, f_uId2, f_cSrc2, 2.0]
      - [NULL, 1609894067190, f_requestIdNull, f_cIdNull, f_uIdNull, f_cSrcNul, 3.0]
  expect:
    success: true
    schema: reqId_1:string, flattenRequest_reqId_original_0:string, flattenRequest_eventTime_original_1:timestamp, flattenRequest_f_requestId_original_2:string, flattenRequest_f_cId_original_3:string, flattenRequest_f_cSrc_original_8:string, flattenRequest_f_uId_original_17:string, flattenRequest_f_cLength_original_10:double, flattenRequest_f_cLength_window_sum_32:double, flattenRequest_f_cId_window_unique_count_38:bigint, flattenRequest_f_cId_window_top1_ratio_39:double, flattenRequest_f_cId_window_top1_ratio_40:double, flattenRequest_f_cLength_window_sum_41:double, flattenRequest_f_cSrc_window_count_42:bigint, flattenRequest_f_cSrc_window_count_43:bigint, flattenRequest_f_cId_window_top1_ratio_44:double, flattenRequest_f_cId_window_top1_ratio_45:double, flattenRequest_f_cId_window_top1_ratio_46:double, flattenRequest_f_cId_window_count_47:bigint, flattenRequest_f_cId_window_count_48:bigint, flattenRequest_f_cId_window_count_49:bigint, reqId_32:string, action_actionValue_multi_direct_31:int
    rows:
      - [ reqId1, reqId1, 1609894067190, f_requestId1, f_cId1, f_cSrc1, f_uId1, 1.000000,
          301.000000, # flattenRequest_f_cLength_window_sum_32
          3, # distinct_count f_cId1, f_cId1-1 f_cId1-2
          0.66445182724252494, # fz_top1_ratio f_cId1-1:200, f_cId1-2:100 f_cId1:1 -> 200/301
          0.66445182724252494,
          301.000000,
          301,
          301,
          0.66445182724252494,
          0.66445182724252494,
          0.66445182724252494,
          301, 301, 301, reqId1, 1 ]
      - [ reqId1, reqId1, 1609894067190, f_requestId1, f_cId1, NULL, f_uId1, 1.000000,
          301.000000,
          3,
          0.66445182724252494,
          0.66445182724252494,
          301.000000,
          NULL, # case when !isnull(lag(`f_cSrc`, 0)) ... else NULL end
          NULL, # case when !isnull(lag(`f_cSrc`, 0)) ... else NULL end
          0.66445182724252494,
          0.66445182724252494,
          0.66445182724252494,
          301, 301, 301, reqId1, 1 ]
      - [ reqId1, reqId1, 1609894067190, f_requestId1, NULL, f_cSrc1, f_uId1, 1.000000,
          301.000000, # flattenRequest_f_cLength_window_sum_32
          3, # distinct_count f_cId1, f_cId1-1 f_cId1-2
          0.66666666666666663,
          0.66666666666666663,
          301.000000,
          301,
          301,
          0.66666666666666663,
          0.66666666666666663,
          0.66666666666666663,
          NULL, NULL, NULL, # case when !isnull(lag(`f_cId`, 0)) then ... else NULL
          reqId1, 1 ]
      - [reqId2, reqId2, 1609894067190, f_requestId2, f_cId2, f_cSrc2, f_uId2, 2.000000,
         402.000000,
         3,
         0.49751243781094528, 0.49751243781094528,
         402.000000,
         201, 201,
         0.49751243781094528, 0.49751243781094528, 0.49751243781094528,
         201, 201, 201,
         reqId2, NULL]
      - [ NULL, NULL, 1609894067190, f_requestIdNull, f_cIdNull, f_cSrcNul, f_uIdNull, 3.000000,
          303.000000,
          1,
          1.000000, 1.000000,
          303.000000,
          101, 101,
          1.000000, 1.000000, 1.000000,
          101, 101, 101,
          NULL, 3 ]

- id: 1
  desc: luoji test window flattenRequest_f_requestId_eventTime_0s_604801s without ttl
  mode: rtidb-batch-unsupport
  inputs:
    - columns: [
        reqId string,
        eventTime timestamp,
        f_requestId string,
        f_cId string,
        f_uId string,
        f_cSrc string,
        f_cLength double]
      indexs: [
          index1:f_requestId:eventTime,
          index2:f_uId:eventTime]
      repeat: 100
      name: flattenRequest
      rows:
        - [reqId1, 1609894067190, f_requestId1, f_cId1-1, f_uId1, f_cSrc1-1, 1.0]
        - [reqId1, 1609894067190, f_requestId1, f_cId1-1, f_uId1, f_cSrc1-1, 1.0]
        - [reqId1, 1609894067190, f_requestId1, f_cId1-2, f_uId1, f_cSrc1-2, 1.0]
        - [reqId2, 1609894067190, f_requestId2, f_cId2-1, f_uId2, f_cSrc2-1, 2.0]
        - [reqId2, 1609894067190, f_requestId2, f_cId2-2, f_uId2, f_cSrc2-2, 2.0]
        - [NULL, 1609894067190, f_requestIdNull, f_cIdNull, f_uIdNull, f_cSrcNul, 3.0]
    - columns: [
        reqId string,
        eventTime timestamp,
        ingestionTime timestamp,
        actionValue int,
    ]
      indexs: [index1:reqId:null:1:latest]
      name: action
      rows:
        - [reqId1, 1609894067191, 1609894067191, 1]
        - [NULL, 1609894067191, 1609894067191, 3]
  sql: |
    select * from
    (
    select
        reqId as reqId_1,
        `reqId` as flattenRequest_reqId_original_0,
        `eventTime` as flattenRequest_eventTime_original_1,
        `f_requestId` as flattenRequest_f_requestId_original_2,
        `f_cId` as flattenRequest_f_cId_original_3,
        `f_cSrc` as flattenRequest_f_cSrc_original_8,
        `f_uId` as flattenRequest_f_uId_original_17,
        `f_cLength` as flattenRequest_f_cLength_original_10,
        sum(`f_cLength`) over flattenRequest_f_requestId_eventTime_0s_604801s as flattenRequest_f_cLength_window_sum_32,
        fz_top1_ratio(`f_cId`) over flattenRequest_f_requestId_eventTime_0s_604801s as flattenRequest_f_cId_window_top1_ratio_40,
        case when !isnull(lag(`f_cSrc`, 0)) over flattenRequest_f_requestId_eventTime_0s_604801s then count(`f_cSrc`) over flattenRequest_f_requestId_eventTime_0s_604801s else null end as flattenRequest_f_cSrc_window_count_42,
        case when !isnull(lag(`f_cId`, 0)) over flattenRequest_f_requestId_eventTime_0s_604801s then count(`f_cId`) over flattenRequest_f_requestId_eventTime_0s_604801s else null end as flattenRequest_f_cId_window_count_47
    from
        `flattenRequest`
        window flattenRequest_f_requestId_eventTime_0s_604801s as (partition by `f_requestId` order by `eventTime` rows_range between 604801s preceding and 0s preceding))
    as out0
    last join
    (
    select
        flattenRequest.reqId as reqId_32,
        `action_reqId`.`actionValue` as action_actionValue_multi_direct_31
    from
        `flattenRequest`
        last join `action` as `action_reqId` on `flattenRequest`.`reqId` = `action_reqId`.`reqId`)
    as out1
    on out0.reqId_1 = out1.reqId_32;
  batch_request:
    columns: [
        reqId string,
        eventTime timestamp,
        f_requestId string,
        f_cId string,
        f_uId string,
        f_cSrc string,
        f_cLength double ]
    rows:
      - [reqId1, 1609894067190, f_requestId1, f_cId1, f_uId1, f_cSrc1, 1.0]
      - [reqId1, 1609894067190, f_requestId1, f_cId1, f_uId1, NULL, 1.0]
      - [reqId1, 1609894067190, f_requestId1, NULL, f_uId1, f_cSrc1, 1.0]
      - [reqId2, 1609894067190, f_requestId2, f_cId2, f_uId2, f_cSrc2, 2.0]
      - [NULL, 1609894067190, f_requestIdNull, f_cIdNull, f_uIdNull, f_cSrcNul, 3.0]
  expect:
    success: true
    schema: reqId_1:string, flattenRequest_reqId_original_0:string, flattenRequest_eventTime_original_1:timestamp, flattenRequest_f_requestId_original_2:string, flattenRequest_f_cId_original_3:string, flattenRequest_f_cSrc_original_8:string, flattenRequest_f_uId_original_17:string, flattenRequest_f_cLength_original_10:double, flattenRequest_f_cLength_window_sum_32:double, flattenRequest_f_cId_window_top1_ratio_40:double, flattenRequest_f_cSrc_window_count_42:bigint, flattenRequest_f_cId_window_count_47:bigint, reqId_32:string, action_actionValue_multi_direct_31:int
    rows:
      - [ reqId1, reqId1, 1609894067190, f_requestId1, f_cId1, f_cSrc1, f_uId1, 1.000000, 301.000000, 0.66445182724252494, 301, 301, reqId1, 1 ]
      - [ reqId1, reqId1, 1609894067190, f_requestId1, f_cId1, NULL, f_uId1, 1.000000, 301.000000, 0.66445182724252494, NULL, 301, reqId1, 1 ]
      - [ reqId1, reqId1, 1609894067190, f_requestId1, NULL, f_cSrc1, f_uId1, 1.000000, 301.000000, 0.66666666666666663, 301, NULL, reqId1, 1 ]
      - [ reqId2, reqId2, 1609894067190, f_requestId2, f_cId2, f_cSrc2, f_uId2, 2.000000, 402.000000, 0.49751243781094528, 201, 201, reqId2, NULL ]
      - [ NULL, NULL, 1609894067190, f_requestIdNull, f_cIdNull, f_cSrcNul, f_uIdNull, 3.000000, 303.000000, 1.000000, 101, 101, NULL, 3 ]

































