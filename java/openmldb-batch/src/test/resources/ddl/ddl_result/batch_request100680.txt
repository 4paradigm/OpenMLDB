create table `previous_application`(
`ingestionTime` timestamp,
`eventTime` timestamp,
`SK_ID_PREV` string,
`SK_ID_CURR` string,
`NAME_CONTRACT_TYPE` string,
`AMT_ANNUITY` double,
`AMT_APPLICATION` double,
`AMT_CREDIT` double,
`AMT_DOWN_PAYMENT` double,
`AMT_GOODS_PRICE` double,
`WEEKDAY_APPR_PROCESS_START` string,
`HOUR_APPR_PROCESS_START` int,
`FLAG_LAST_APPL_PER_CONTRACT` string,
`NFLAG_LAST_APPL_IN_DAY` int,
`RATE_DOWN_PAYMENT` double,
`RATE_INTEREST_PRIMARY` double,
`RATE_INTEREST_PRIVILEGED` double,
`NAME_CASH_LOAN_PURPOSE` string,
`NAME_CONTRACT_STATUS` string,
`DAYS_DECISION` int,
`NAME_PAYMENT_TYPE` string,
`CODE_REJECT_REASON` string,
`NAME_TYPE_SUITE` string,
`NAME_CLIENT_TYPE` string,
`NAME_GOODS_CATEGORY` string,
`NAME_PORTFOLIO` string,
`NAME_PRODUCT_TYPE` string,
`CHANNEL_TYPE` string,
`SELLERPLACE_AREA` int,
`NAME_SELLER_INDUSTRY` string,
`CNT_PAYMENT` double,
`NAME_YIELD_GROUP` string,
`PRODUCT_COMBINATION` string,
`DAYS_FIRST_DRAWING` double,
`DAYS_FIRST_DUE` double,
`DAYS_LAST_DUE_1ST_VERSION` double,
`DAYS_LAST_DUE` double,
`DAYS_TERMINATION` double,
`NFLAG_INSURED_ON_APPROVAL` double,
index(key=(`SK_ID_CURR`), ts=`ingestionTime`, ttl=46080m, ttl_type=absolute)
) options ( replicanum=1, partitionnum=1 ) ;
create table `POS_CASH_balance`(
`ingestionTime` timestamp,
`eventTime` timestamp,
`previousTime` timestamp,
`SK_ID_CURR_1` string,
`SK_ID_PREV` string,
`SK_ID_CURR` string,
`MONTHS_BALANCE` int,
`CNT_INSTALMENT` double,
`CNT_INSTALMENT_FUTURE` double,
`NAME_CONTRACT_STATUS` string,
`SK_DPD` int,
`SK_DPD_DEF` int,
index(key=(`SK_ID_CURR`), ts=`ingestionTime`, ttl=46080m, ttl_type=absolute)
) options ( replicanum=1, partitionnum=1 ) ;
create table `installments_payments`(
`ingestionTime` timestamp,
`eventTime` timestamp,
`previousTime` timestamp,
`planTime` timestamp,
`SK_ID_CURR_1` string,
`SK_ID_PREV` string,
`SK_ID_CURR` string,
`NUM_INSTALMENT_VERSION` double,
`NUM_INSTALMENT_NUMBER` int,
`DAYS_INSTALMENT` double,
`DAYS_ENTRY_PAYMENT` double,
`AMT_INSTALMENT` double,
`AMT_PAYMENT` double,
index(key=(`SK_ID_CURR`), ts=`ingestionTime`, ttl=46080m, ttl_type=absolute)
) options ( replicanum=1, partitionnum=1 ) ;
create table `bureau_balance`(
`ingestionTime` timestamp,
`eventTime` timestamp,
`bureauTime` timestamp,
`SK_ID_CURR` string,
`SK_ID_BUREAU` int,
`MONTHS_BALANCE` int,
`STATUS` string,
index(key=(`SK_ID_CURR`), ts=`ingestionTime`, ttl=46080m, ttl_type=absolute)
) options ( replicanum=1, partitionnum=1 ) ;
create table `batch100680_flatten_request`(
`reqId` string,
`eventTime` timestamp,
`SK_ID_CURR` string,
`NAME_CONTRACT_TYPE` string,
`CODE_GENDER` string,
`FLAG_OWN_CAR` string,
`FLAG_OWN_REALTY` string,
`CNT_CHILDREN` int,
`AMT_INCOME_TOTAL` double,
`AMT_CREDIT` double,
`AMT_ANNUITY` double,
`AMT_GOODS_PRICE` double,
`NAME_TYPE_SUITE` string,
`NAME_INCOME_TYPE` string,
`NAME_EDUCATION_TYPE` string,
`NAME_FAMILY_STATUS` string,
`NAME_HOUSING_TYPE` string,
`REGION_POPULATION_RELATIVE` double,
`DAYS_BIRTH` int,
`DAYS_EMPLOYED` int,
`DAYS_REGISTRATION` double,
`DAYS_ID_PUBLISH` int,
`OWN_CAR_AGE` double,
`FLAG_MOBIL` int,
`FLAG_EMP_PHONE` int,
`FLAG_WORK_PHONE` int,
`FLAG_CONT_MOBILE` int,
`FLAG_PHONE` int,
`FLAG_EMAIL` int,
`OCCUPATION_TYPE` string,
`CNT_FAM_MEMBERS` double,
`REGION_RATING_CLIENT` int,
`REGION_RATING_CLIENT_W_CITY` int,
`WEEKDAY_APPR_PROCESS_START` string,
`HOUR_APPR_PROCESS_START` int,
`REG_REGION_NOT_LIVE_REGION` int,
`REG_REGION_NOT_WORK_REGION` int,
`LIVE_REGION_NOT_WORK_REGION` int,
`REG_CITY_NOT_LIVE_CITY` int,
`REG_CITY_NOT_WORK_CITY` int,
`LIVE_CITY_NOT_WORK_CITY` int,
`ORGANIZATION_TYPE` string,
`EXT_SOURCE_1` double,
`EXT_SOURCE_2` double,
`EXT_SOURCE_3` double,
`APARTMENTS_AVG` double,
`BASEMENTAREA_AVG` double,
`YEARS_BEGINEXPLUATATION_AVG` double,
`YEARS_BUILD_AVG` double,
`COMMONAREA_AVG` double,
`ELEVATORS_AVG` double,
`ENTRANCES_AVG` double,
`FLOORSMAX_AVG` double,
`FLOORSMIN_AVG` double,
`LANDAREA_AVG` double,
`LIVINGAPARTMENTS_AVG` double,
`LIVINGAREA_AVG` double,
`NONLIVINGAPARTMENTS_AVG` double,
`NONLIVINGAREA_AVG` double,
`APARTMENTS_MODE` double,
`BASEMENTAREA_MODE` double,
`YEARS_BEGINEXPLUATATION_MODE` double,
`YEARS_BUILD_MODE` double,
`COMMONAREA_MODE` double,
`ELEVATORS_MODE` double,
`ENTRANCES_MODE` double,
`FLOORSMAX_MODE` double,
`FLOORSMIN_MODE` double,
`LANDAREA_MODE` double,
`LIVINGAPARTMENTS_MODE` double,
`LIVINGAREA_MODE` double,
`NONLIVINGAPARTMENTS_MODE` double,
`NONLIVINGAREA_MODE` double,
`APARTMENTS_MEDI` double,
`BASEMENTAREA_MEDI` double,
`YEARS_BEGINEXPLUATATION_MEDI` double,
`YEARS_BUILD_MEDI` double,
`COMMONAREA_MEDI` double,
`ELEVATORS_MEDI` double,
`ENTRANCES_MEDI` double,
`FLOORSMAX_MEDI` double,
`FLOORSMIN_MEDI` double,
`LANDAREA_MEDI` double,
`LIVINGAPARTMENTS_MEDI` double,
`LIVINGAREA_MEDI` double,
`NONLIVINGAPARTMENTS_MEDI` double,
`NONLIVINGAREA_MEDI` double,
`FONDKAPREMONT_MODE` string,
`HOUSETYPE_MODE` string,
`TOTALAREA_MODE` double,
`WALLSMATERIAL_MODE` string,
`EMERGENCYSTATE_MODE` string,
`OBS_30_CNT_SOCIAL_CIRCLE` double,
`DEF_30_CNT_SOCIAL_CIRCLE` double,
`OBS_60_CNT_SOCIAL_CIRCLE` double,
`DEF_60_CNT_SOCIAL_CIRCLE` double,
`DAYS_LAST_PHONE_CHANGE` double,
`FLAG_DOCUMENT_2` int,
`FLAG_DOCUMENT_3` int,
`FLAG_DOCUMENT_4` int,
`FLAG_DOCUMENT_5` int,
`FLAG_DOCUMENT_6` int,
`FLAG_DOCUMENT_7` int,
`FLAG_DOCUMENT_8` int,
`FLAG_DOCUMENT_9` int,
`FLAG_DOCUMENT_10` int,
`FLAG_DOCUMENT_11` int,
`FLAG_DOCUMENT_12` int,
`FLAG_DOCUMENT_13` int,
`FLAG_DOCUMENT_14` int,
`FLAG_DOCUMENT_15` int,
`FLAG_DOCUMENT_16` int,
`FLAG_DOCUMENT_17` int,
`FLAG_DOCUMENT_18` int,
`FLAG_DOCUMENT_19` int,
`FLAG_DOCUMENT_20` int,
`FLAG_DOCUMENT_21` int,
`AMT_REQ_CREDIT_BUREAU_HOUR` double,
`AMT_REQ_CREDIT_BUREAU_DAY` double,
`AMT_REQ_CREDIT_BUREAU_WEEK` double,
`AMT_REQ_CREDIT_BUREAU_MON` double,
`AMT_REQ_CREDIT_BUREAU_QRT` double,
`AMT_REQ_CREDIT_BUREAU_YEAR` double,
index(key=(`SK_ID_CURR`), ts=`eventTime`, ttl=46080m, ttl_type=absolute)
) options ( replicanum=1, partitionnum=1 ) ;
create table `action`(
`reqId` string,
`eventTime` timestamp,
`ingestionTime` timestamp,
`actionValue` int,
index(key=(`reqId`), ttl=1, ttl_type=latest)
) options ( replicanum=1, partitionnum=1 ) ;
create table `credit_card_balance`(
`ingestionTime` timestamp,
`eventTime` timestamp,
`previousTime` timestamp,
`SK_ID_CURR_1` string,
`SK_ID_PREV` string,
`SK_ID_CURR` string,
`MONTHS_BALANCE` int,
`AMT_BALANCE` double,
`AMT_CREDIT_LIMIT_ACTUAL` int,
`AMT_DRAWINGS_ATM_CURRENT` double,
`AMT_DRAWINGS_CURRENT` double,
`AMT_DRAWINGS_OTHER_CURRENT` double,
`AMT_DRAWINGS_POS_CURRENT` double,
`AMT_INST_MIN_REGULARITY` double,
`AMT_PAYMENT_CURRENT` double,
`AMT_PAYMENT_TOTAL_CURRENT` double,
`AMT_RECEIVABLE_PRINCIPAL` double,
`AMT_RECIVABLE` double,
`AMT_TOTAL_RECEIVABLE` double,
`CNT_DRAWINGS_ATM_CURRENT` double,
`CNT_DRAWINGS_CURRENT` int,
`CNT_DRAWINGS_OTHER_CURRENT` double,
`CNT_DRAWINGS_POS_CURRENT` double,
`CNT_INSTALMENT_MATURE_CUM` double,
`NAME_CONTRACT_STATUS` string,
`SK_DPD` int,
`SK_DPD_DEF` int,
index(key=(`SK_ID_CURR`), ts=`ingestionTime`, ttl=46080m, ttl_type=absolute)
) options ( replicanum=1, partitionnum=1 ) ;
create table `bureau`(
`ingestionTime` timestamp,
`eventTime` timestamp,
`SK_ID_CURR` string,
`SK_ID_BUREAU` int,
`CREDIT_ACTIVE` string,
`CREDIT_CURRENCY` string,
`DAYS_CREDIT` int,
`CREDIT_DAY_OVERDUE` int,
`DAYS_CREDIT_ENDDATE` double,
`DAYS_ENDDATE_FACT` double,
`AMT_CREDIT_MAX_OVERDUE` double,
`CNT_CREDIT_PROLONG` int,
`AMT_CREDIT_SUM` double,
`AMT_CREDIT_SUM_DEBT` double,
`AMT_CREDIT_SUM_LIMIT` double,
`AMT_CREDIT_SUM_OVERDUE` double,
`CREDIT_TYPE` string,
`DAYS_CREDIT_UPDATE` int,
`AMT_ANNUITY` double,
index(key=(`SK_ID_CURR`), ts=`ingestionTime`, ttl=46080m, ttl_type=absolute)
) options ( replicanum=1, partitionnum=1 ) ;
